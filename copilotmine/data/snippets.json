[
{
    "id": "0",
    "source": "soSearches",
    "language": "python",
    "query": "how to call soap api with python",
    "snippets": [
        "def get_soap_client(url, namespace):\n    from suds.client import Client\n    return Client(url, namespace=namespace)\n",
        "def main():\n    import requests\n    import json\n    import sys\n    import os\n    import time\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import logging.config\n    import configparser\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.image as mimage\n    import matplotlib.animation as animation\n    import matplotlib.mlab as mlab\n    import matplotlib.font_manager as font_manager\n    import matplotlib.finance as finance\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cbook as cbook\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.image as mimage\n    import matplotlib.animation as animation\n    import matplotlib.mlab as mlab\n    import matplotlib.font_manager as font_manager\n    import matplotlib.finance as finance\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cbook as cbook\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplot\n",
        "def main():\n    import requests\n    import xml.etree.ElementTree as ET\n    import json\n    import sys\n    import os\n    import time\n    import datetime\n    import argparse\n    import csv\n    import re\n    import getpass\n    import urllib3\n    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # parse arguments\n    parser = argparse.ArgumentParser(description='Get the status of a job')\n    parser.add_argument('-u', '--username', help='username', required=True)\n    parser.add_argument('-p', '--password', help='password', required=True)\n    parser.add_argument('-j', '--jobid', help='jobid', required=True)\n    parser.add_argument('-o', '--output', help='output file', required=True)\n    args = parser.parse_args()\n\n    # get the job status\n    url = 'https://api.soap.prod.sabre.com/soap/wsdl/udp/2014-01-15'\n    headers = {'Content-Type': 'text/xml; charset=utf-8'}\n    body = '''<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n  <soap:Body>\n    <OTA_JobStatusRQ xmlns=\"http://www.opentravel.org/OTA/2003/05\" Version=\"1.0\" PrimaryLangID=\"en\" xsi:type=\"OTA_JobStatusRQ\">\n      <JobID>{}</JobID>\n    </OTA_JobStatusRQ>\n  </soap:Body>\n</soap:Envelope>'''.format(args.jobid)\n    response = requests\n",
        "def get_soap_response(url, method, params):\n    import requests\n    import json\n    import xml.etree.ElementTree as ET\n    import xml.dom.minidom as minidom\n\n    soap_body = '''\n    <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.ws.soap.sms.jsmart.com.cn/\">\n        <soapenv:Header/>\n        <soapenv:Body>\n            <ser:%s>\n                %s\n            </ser:%s>\n        </soapenv:Body>\n    </soapenv:Envelope>\n    ''' % (method, params, method)\n\n    headers = {\n        'Content-Type': 'text/xml; charset=utf-8',\n        'SOAPAction': 'http://service.ws.soap.sms.jsmart.com.cn/%s' % method\n    }\n\n    response = requests.post(url, data=soap_body, headers=headers)\n    xml_response = response.text\n    # print(xml_response)\n    root = ET.fromstring(xml_response)\n    # print(root)\n    result = root.find('{http://schemas.xmlsoap.org/soap/envelope/}Body').find('{http://service.ws.soap.sms.jsmart.com.cn/}%sResponse' % method).find('{http://service.ws.soap.sms.jsmart.com.cn/}%sResult' % method)\n    # print(result)\n    result_dict = json.loads(result.text)\n    # print(result_dict)\n    return result_dict\n",
        "def main():\n    import requests\n    import json\n    import sys\n    import os\n    import getpass\n    import argparse\n    import time\n    import datetime\n    import logging\n    import logging.handlers\n    import traceback\n    import pdb\n    import pprint\n    import re\n    import csv\n    import urllib3\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import http.client\n    import http.client as httplib\n    import http.client as httplib2\n    import http.client as httplib3\n    import http.client as httplib4\n    import http.client as httplib5\n    import http.client as httplib6\n    import http.client as httplib7\n    import http.client as httplib8\n    import http.client as httplib9\n    import http.client as httplib10\n    import http.client as httplib11\n    import http.client as httplib12\n    import http.client as httplib13\n    import http.client as httplib14\n    import http.client as httplib15\n    import http.client as httplib16\n    import http.client as httplib17\n    import http.client as httplib18\n    import http.client as httplib19\n    import http.client as httplib20\n    import http.client as httplib21\n    import http.client as httplib22\n    import http.client as httplib23\n    import http.client as httplib24\n    import http.client as httplib25\n    import http.client as httplib26\n    import http.client as httplib27\n    import http.client as httplib28\n    import http.client as httplib29\n    import http.client as httplib30\n    import http.client as httplib31\n    import http.client as httplib32\n    import http.client as httplib33\n    import http\n",
        "def main():\n    import requests\n    import json\n    import sys\n    import os\n    import getopt\n\n    # get the command line arguments\n    opts, args = getopt.getopt(sys.argv[1:], 'u:p:')\n    user = ''\n    password = ''\n    for opt, arg in opts:\n        if opt == '-u':\n            user = arg\n        elif opt == '-p':\n            password = arg\n\n    # get the url\n    url = 'http://localhost:8080/axis2/services/HelloWorldService'\n\n    # get the soap request\n    soap_request = '''\n    <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n        <soapenv:Body>\n            <ns1:sayHello xmlns:ns1=\"http://service.helloworld.com\">\n                <ns1:name>Hello World</ns1:name>\n            </ns1:sayHello>\n        </soapenv:Body>\n    </soapenv:Envelope>\n    '''\n\n    # send the request\n    response = requests.post(url, data=soap_request, auth=(user, password))\n\n    # print the response\n    print(response.text)\n"
    ],
    "results": 6
},{
    "id": "1",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert python currency usd to peso",
    "snippets": [
        "def main():\n    usd = float(input(\"Enter the amount in USD: \"))\n    peso = usd * 46.87\n    print(\"The amount in Peso is: \", peso)\n",
        "def convert_peso(usd):\n    peso = usd * 0.0089\n    return peso\n",
        "def convert_currency(usd):\n    peso = usd * 50\n    return peso\n",
        "def convert_currency(amount, rate):\n    return amount * rate\n"
    ],
    "results": 10
},{
    "id": "2",
    "source": "soSearches",
    "language": "python",
    "query": "how to install mysql client to python 3.6 using pip",
    "snippets": [
        "def main():\n    import mysql.connector\n    mydb = mysql.connector.connect(\n        host=\"localhost\",\n        user=\"root\",\n        passwd=\"root\",\n        database=\"mydatabase\"\n    )\n    mycursor = mydb.cursor()\n    mycursor.execute(\"SELECT * FROM customers\")\n    myresult = mycursor.fetchall()\n    for x in myresult:\n        print(x)\n    mydb.close()\n",
        "def main():\n    import mysql.connector\n    mydb = mysql.connector.connect(\n        host=\"localhost\",\n        user=\"root\",\n        passwd=\"\",\n        database=\"mydatabase\"\n    )\n    mycursor = mydb.cursor()\n    mycursor.execute(\"SELECT * FROM customers\")\n    myresult = mycursor.fetchall()\n    for x in myresult:\n        print(x)\n    mydb.close()\n"
    ],
    "results": 10
},{
    "id": "3",
    "source": "soSearches",
    "language": "python",
    "query": "python how to alphanumerically sort an array of data",
    "snippets": [
        "def sort_array(array):\n    array.sort()\n    return array\n",
        "def sort_array(arr):\n    # sort the array\n    arr.sort()\n    # return the array\n    return arr\n",
        "def sort_array(arr):\n    # sort the array in ascending order\n    arr.sort()\n    return arr\n",
        "def sort_array(arr):\n    arr.sort()\n    return arr\n"
    ],
    "results": 10
},{
    "id": "4",
    "source": "soSearches",
    "language": "python",
    "query": "how to avoid formattingg of the text in the slide of the ppt using python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n"
    ],
    "results": 1
},{
    "id": "5",
    "source": "soSearches",
    "language": "python",
    "query": "how to count iteration of a while loop in python",
    "snippets": [
        "def main():\n    i = 0\n    while i < 10:\n        print(i)\n        i += 1\n    print(\"Done\")\n",
        "def main():\n    i = 0\n    while i < 10:\n        print(i)\n        i += 1\n    print(\"Done!\")\n",
        "def main():\n    count = 0\n    while count < 10:\n        print(count)\n        count += 1\n    print(\"Done counting\")\n"
    ],
    "results": 10
},{
    "id": "6",
    "source": "soSearches",
    "language": "python",
    "query": "how to change text colour in python 3.7",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"\\033[1;31mHello World\\033[0m\")\n    print(\"\\033[1;32mHello World\\033[0m\")\n    print(\"\\033[1;33mHello World\\033[0m\")\n    print(\"\\033[1;34mHello World\\033[0m\")\n    print(\"\\033[1;35mHello World\\033[0m\")\n    print(\"\\033[1;36mHello World\\033[0m\")\n    print(\"\\033[1;37mHello World\\033[0m\")\n    print(\"\\033[1;38mHello World\\033[0m\")\n    print(\"\\033[1;39mHello World\\033[0m\")\n    print(\"\\033[1;40mHello World\\033[0m\")\n    print(\"\\033[1;41mHello World\\033[0m\")\n    print(\"\\033[1;42mHello World\\033[0m\")\n    print(\"\\033[1;43mHello World\\033[0m\")\n    print(\"\\033[1;44mHello World\\033[0m\")\n    print(\"\\033[1;45mHello World\\033[0m\")\n    print(\"\\033[1;46mHello World\\033[0m\")\n    print(\"\\033[1;47mHello World\\033[0m\")\n    print(\"\\033[1;48mHello World\\033[0m\")\n    print(\"\\033[1;49mHello World\\033[0m\")\n    print(\"\\033[1;50mHello World\\033[0m\")\n    print(\"\\033[1;51mHello World\\033[0m\")\n    print(\"\\033[1;52mHello World\\033[0m\")\n    print(\"\\033[1;53mHello World\\033[0m\")\n    print(\"\\033[1;54mHello World\\033[0m\")\n    print(\"\\033[1;55mHello World\\033[0m\")\n    print(\"\\033[1;56mHello World\\033\n",
        "def main():\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print(\"Hello World\")\n    print(\"\\033[1;31;40m\")\n    print(\"Hello World\")\n    print(\"\\033[0m\")\n    print\n"
    ],
    "results": 2
},{
    "id": "7",
    "source": "soSearches",
    "language": "python",
    "query": "how to say all odd numbers within a range in python",
    "snippets": [
        "def odd_numbers(start, end):\n    for i in range(start, end):\n        if i % 2 != 0:\n            print(i)\n",
        "def odd_numbers(start, end):\n    for i in range(start, end+1):\n        if i % 2 != 0:\n            print(i)\n",
        "def odd_numbers(low, high):\n    for i in range(low, high + 1):\n        if i % 2 != 0:\n            print(i)\n",
        "def odd_numbers(start, end):\n    for num in range(start, end):\n        if num % 2 != 0:\n            print(num)\n"
    ],
    "results": 10
},{
    "id": "8",
    "source": "soSearches",
    "language": "python",
    "query": "how to trace the execution in python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def fib(n):\n    a, b = 0, 1\n    while a < n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\n",
        "def add(a, b):\n    return a + b\n",
        "def trace(f):\n    def g(x):\n        print(f, x)\n        return f(x)\n    return g\n",
        "def trace(f):\n    def g(x):\n        print('calling %r with %r' % (f, x))\n        return f(x)\n    return g\n",
        "def f(x):\n    return x*x\n"
    ],
    "results": 9
},{
    "id": "9",
    "source": "soSearches",
    "language": "python",
    "query": "how to resize an image using python",
    "snippets": [
        "def resize(image, width=None, height=None, inter=cv2.INTER_AREA):\n    # initialize the dimensions of the image to be resized and\n    # grab the image size\n    dim = None\n    (h, w) = image.shape[:2]\n\n    # if both the width and height are None, then return the\n    # original image\n    if width is None and height is None:\n        return image\n\n    # check to see if the width is None\n    if width is None:\n        # calculate the ratio of the height and construct the\n        # dimensions\n        r = height / float(h)\n        dim = (int(w * r), height)\n\n    # otherwise, the height is None\n    else:\n        # calculate the ratio of the width and construct the\n        # dimensions\n        r = width / float(w)\n        dim = (width, int(h * r))\n\n    # resize the image\n    resized = cv2.resize(image, dim, interpolation=inter)\n\n    # return the resized image\n    return resized\n",
        "def resize(img, size):\n    \"\"\"\n    Resize an image to a given size.\n    \"\"\"\n    return img.resize(size, Image.ANTIALIAS)\n",
        "def resize_image(image, width=None, height=None, inter=cv2.INTER_AREA):\n    # initialize the dimensions of the image to be resized and\n    # grab the image size\n    dim = None\n    (h, w) = image.shape[:2]\n\n    # if both the width and height are None, then return the\n    # original image\n    if width is None and height is None:\n        return image\n\n    # check to see if the width is None\n    if width is None:\n        # calculate the ratio of the height and construct the\n        # dimensions\n        r = height / float(h)\n        dim = (int(w * r), height)\n\n    # otherwise, the height is None\n    else:\n        # calculate the ratio of the width and construct the\n        # dimensions\n        r = width / float(w)\n        dim = (width, int(h * r))\n\n    # resize the image\n    resized = cv2.resize(image, dim, interpolation=inter)\n\n    # return the resized image\n    return resized\n",
        "def resize(img, size):\n    \"\"\"\n    Resize an image to the given size.\n    \"\"\"\n    return img.resize(size, Image.ANTIALIAS)\n",
        "def main():\n    from PIL import Image\n    import os\n    import sys\n    import glob\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import cv2\n    import math\n    import time\n    import random\n    import shutil\n    import tensorflow as tf\n    import keras\n    import keras.backend as K\n    import keras.layers as KL\n    import keras.initializers as KI\n    import keras.engine as KE\n    import keras.models as KM\n    import keras.optimizers as KO\n    from keras.preprocessing import image\n    from keras.preprocessing.image import ImageDataGenerator\n    from keras.callbacks import EarlyStopping, ModelCheckpoint, ReduceLROnPlateau\n    from keras.utils import to_categorical\n    from keras.applications.vgg16 import VGG16\n    from keras.applications.vgg16 import preprocess_input\n    from keras.applications.vgg16 import decode_predictions\n    from keras.applications.vgg16 import VGG16\n    from keras.applications.vgg16 import VGG16, preprocess_input, decode_predictions\n    from keras.preprocessing import image\n    from keras.applications.vgg16 import VGG16\n    from keras.applications.vgg16 import preprocess_input, decode_predictions\n    from keras.applications.vgg16 import VGG16, preprocess_input, decode_predictions\n    from keras.preprocessing import image\n    from keras.applications.vgg16 import VGG16\n    from keras.applications.vgg16 import preprocess_input, decode_predictions\n    from keras.applications.vgg16 import VGG16, preprocess_input, decode_predictions\n    from keras.preprocessing import image\n    from keras.applications.vgg16 import VGG16\n    from keras.applications.vgg16 import\n",
        "def resize_image(image, size):\n    \"\"\"Resize an image to the given size.\"\"\"\n    (width, height) = image.size\n    if width > height:\n        # landscape\n        ratio = float(size) / width\n        new_height = int(height * ratio)\n        new_width = size\n    else:\n        # portrait\n        ratio = float(size) / height\n        new_height = size\n        new_width = int(width * ratio)\n    new_image = image.resize((new_width, new_height), Image.ANTIALIAS)\n    return new_image\n"
    ],
    "results": 10
},{
    "id": "10",
    "source": "soSearches",
    "language": "python",
    "query": "how to open file using sys in python script",
    "snippets": [
        "def main():\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read file\n    print(f.read())\n    # close\n",
        "def main():\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close\n",
        "def main():\n    import sys\n    print(sys.argv[0])\n    print(sys.argv[1])\n    print(sys.argv[2])\n    print(sys.argv[3])\n    print(sys.argv[4])\n    print(sys.argv[5])\n    print(sys.argv[6])\n    print(sys.argv[7])\n    print(sys.argv[8])\n    print(sys.argv[9])\n    print(sys.argv[10])\n    print(sys.argv[11])\n    print(sys.argv[12])\n    print(sys.argv[13])\n    print(sys.argv[14])\n    print(sys.argv[15])\n    print(sys.argv[16])\n    print(sys.argv[17])\n    print(sys.argv[18])\n    print(sys.argv[19])\n    print(sys.argv[20])\n    print(sys.argv[21])\n    print(sys.argv[22])\n    print(sys.argv[23])\n    print(sys.argv[24])\n    print(sys.argv[25])\n    print(sys.argv[26])\n    print(sys.argv[27])\n    print(sys.argv[28])\n    print(sys.argv[29])\n    print(sys.argv[30])\n    print(sys.argv[31])\n    print(sys.argv[32])\n    print(sys.argv[33])\n    print(sys.argv[34])\n    print(sys.argv[35])\n    print(sys.argv[36])\n    print(sys.argv[37])\n    print(sys.argv[38])\n    print(sys.argv[39])\n    print(sys.argv[40])\n    print(sys.argv[41])\n    print(sys.argv[42])\n    print(sys.argv[43])\n    print(sys.argv[\n",
        "def main():\n    # open file\n    f = open(\"test.txt\", \"w\")\n    # write to file\n    f.write(\"Hello World\")\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"a\")\n    # write to file\n    f.write(\"\\nHello World\")\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n    # read from file\n    print(f.read())\n    # close file\n    f.close()\n    # open file\n    f = open(\"test.txt\", \"r\")\n",
        "def main():\n    # open file\n    f = open('test.txt', 'r')\n    # read file\n    print(f.read())\n    # close file\n    f.close()\n",
        "def main():\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n",
        "def main():\n    # open file\n    # file_name = input(\"Enter file name: \")\n    file_name = \"test.txt\"\n    try:\n        f = open(file_name, \"r\")\n        # read file\n        # print(f.read())\n        # read line by line\n        for line in f:\n            print(line, end=\"\")\n        f.close()\n    except FileNotFoundError:\n        print(\"File not found\")\n    except PermissionError:\n        print(\"Permission denied\")\n    except Exception as e:\n        print(e)\n    finally:\n        print(\"Executing finally\")\n",
        "def main():\n    file_name = sys.argv[1]\n    f = open(file_name)\n    print(f.read())\n    f.close()\n"
    ],
    "results": 10
},{
    "id": "11",
    "source": "soSearches",
    "language": "python",
    "query": "how to dereference python variable inside quotes",
    "snippets": [
        "def main():\n    x = \"hello\"\n    print(x[1])\n    print(x[2])\n    print(x[3])\n    print(x[4])\n    print(x[5])\n    print(x[6])\n    print(x[7])\n    print(x[8])\n    print(x[9])\n    print(x[10])\n    print(x[11])\n    print(x[12])\n    print(x[13])\n    print(x[14])\n    print(x[15])\n    print(x[16])\n    print(x[17])\n    print(x[18])\n    print(x[19])\n    print(x[20])\n    print(x[21])\n    print(x[22])\n    print(x[23])\n    print(x[24])\n    print(x[25])\n    print(x[26])\n    print(x[27])\n    print(x[28])\n    print(x[29])\n    print(x[30])\n    print(x[31])\n    print(x[32])\n    print(x[33])\n    print(x[34])\n    print(x[35])\n    print(x[36])\n    print(x[37])\n    print(x[38])\n    print(x[39])\n    print(x[40])\n    print(x[41])\n    print(x[42])\n    print(x[43])\n    print(x[44])\n    print(x[45])\n    print(x[46])\n    print(x[47])\n    print(x[48])\n    print(x[49])\n    print(x[50])\n    print(x[51])\n    print(x[52])\n    print(x[53])\n    print(x[54])\n    print(x[55])\n    print(x[56])\n    print(x[57])\n    print(x[58])\n    print(x[59])\n    print(x[60])\n    print(x[61])\n",
        "def main():\n    a = 10\n    b = 20\n    c = a + b\n    print(c)\n    print(\"a =\", a)\n    print(\"b =\", b)\n    print(\"c =\", c)\n    print(\"a + b =\", a + b)\n    print(\"a - b =\", a - b)\n    print(\"a * b =\", a * b)\n    print(\"a / b =\", a / b)\n    print(\"a % b =\", a % b)\n    print(\"a ** b =\", a ** b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a ** b =\", a ** b)\n    print(\"a % b =\", a % b)\n    print(\"a // b =\", a // b)\n    print(\"a\n",
        "def main():\n    x = \"hello\"\n    print(x[1])\n    print(x[-1])\n    print(x[1:3])\n    print(x[1:])\n    print(x[:3])\n    print(x[:-1])\n    print(x[::-1])\n    print(x[::2])\n    print(x[1::2])\n    print(x[::-2])\n    print(x[-2:])\n    print(x[-2:-1])\n    print(x[-2::-1])\n    print(x[-2::2])\n    print(x[-2::-2])\n    print(x[-2:2])\n    print(x[-2:2:-1])\n    print(x[-2:2:-2])\n    print(x[-2:2:2])\n    print(x[-2:2:2:-1])\n    print(x[-2:2:2:-2])\n    print(x[-2:2:2:2])\n    print(x[-2:2:2:2:-1])\n    print(x[-2:2:2:2:-2])\n    print(x[-2:2:2:2:2])\n    print(x[-2:2:2:2:2:-1])\n    print(x[-2:2:2:2:2:-2])\n    print(x[-2:2:2:2:2:2])\n    print(x[-2:2:2:2:2:2:-1])\n    print(x[-2:2:2:2:2:2:-2])\n    print(x[-2:2:2:2:2:2:2])\n    print(x[-2:2:2:2:2:2:2:-1])\n    print(x[-2:2:2:2:2:2:2:-2])\n    print(x[-2:2:2:2:2:2:2:2])\n    print(x[\n",
        "def main():\n    x = \"Hello World\"\n    print(x[1])\n    print(x[0:5])\n    print(x[:5])\n    print(x[5:])\n    print(x[-1])\n    print(x[-2])\n    print(x[-3])\n    print(x[-4])\n    print(x[-5])\n    print(x[-6])\n    print(x[-7])\n    print(x[-8])\n    print(x[-9])\n    print(x[-10])\n    print(x[-11])\n    print(x[-12])\n    print(x[-13])\n    print(x[-14])\n    print(x[-15])\n    print(x[-16])\n    print(x[-17])\n    print(x[-18])\n    print(x[-19])\n    print(x[-20])\n    print(x[-21])\n    print(x[-22])\n    print(x[-23])\n    print(x[-24])\n    print(x[-25])\n    print(x[-26])\n    print(x[-27])\n    print(x[-28])\n    print(x[-29])\n    print(x[-30])\n    print(x[-31])\n    print(x[-32])\n    print(x[-33])\n    print(x[-34])\n    print(x[-35])\n    print(x[-36])\n    print(x[-37])\n    print(x[-38])\n    print(x[-39])\n    print(x[-40])\n    print(x[-41])\n    print(x[-42])\n    print(x[-43])\n    print(x[-44])\n    print(x[-45])\n    print(x[-46])\n    print(x[-47])\n    print(x[-48])\n    print(x[-49])\n    print(x[-50])\n    print\n",
        "def main():\n    x = \"Hello World\"\n    print(x[1])\n    print(x[0:5])\n    print(x[0:])\n    print(x[:5])\n    print(x[:])\n    print(x[-1])\n    print(x[-2])\n    print(x[-3])\n    print(x[-4])\n    print(x[-5])\n    print(x[-6])\n    print(x[-7])\n    print(x[-8])\n    print(x[-9])\n    print(x[-10])\n    print(x[-11])\n    print(x[-12])\n    print(x[-13])\n    print(x[-14])\n    print(x[-15])\n    print(x[-16])\n    print(x[-17])\n    print(x[-18])\n    print(x[-19])\n    print(x[-20])\n    print(x[-21])\n    print(x[-22])\n    print(x[-23])\n    print(x[-24])\n    print(x[-25])\n    print(x[-26])\n    print(x[-27])\n    print(x[-28])\n    print(x[-29])\n    print(x[-30])\n    print(x[-31])\n    print(x[-32])\n    print(x[-33])\n    print(x[-34])\n    print(x[-35])\n    print(x[-36])\n    print(x[-37])\n    print(x[-38])\n    print(x[-39])\n    print(x[-40])\n    print(x[-41])\n    print(x[-42])\n    print(x[-43])\n    print(x[-44])\n    print(x[-45])\n    print(x[-46])\n    print(x[-47])\n    print(x[-48])\n    print(x[-49])\n    print(\n",
        "def main():\n    a = \"hello\"\n    b = \"world\"\n    print(\"a = \", a)\n    print(\"b = \", b)\n    print(\"a + b = \", a + b)\n    print(\"a * 3 = \", a * 3)\n    print(\"a[0] = \", a[0])\n    print(\"a[1] = \", a[1])\n    print(\"a[2] = \", a[2])\n    print(\"a[3] = \", a[3])\n    print(\"a[4] = \", a[4])\n    print(\"a[5] = \", a[5])\n    print(\"a[6] = \", a[6])\n    print(\"a[7] = \", a[7])\n    print(\"a[8] = \", a[8])\n    print(\"a[9] = \", a[9])\n    print(\"a[10] = \", a[10])\n    print(\"a[11] = \", a[11])\n    print(\"a[12] = \", a[12])\n    print(\"a[13] = \", a[13])\n    print(\"a[14] = \", a[14])\n    print(\"a[15] = \", a[15])\n    print(\"a[16] = \", a[16])\n    print(\"a[17] = \", a[17])\n    print(\"a[18] = \", a[18])\n    print(\"a[19] = \", a[19])\n    print(\"a[20] = \", a[20])\n    print(\"a[21] = \", a[21])\n    print(\"a[22] = \", a[22])\n    print(\"a[23] = \", a[23])\n    print(\"a[24] = \", a[24])\n    print(\"a[25] = \", a[25])\n    print(\"a[26] = \", a[26])\n    print(\"a[27] = \", a[27])\n    print(\"a[28] = \", a[28])\n    print(\"a[29] = \", a[29])\n    print(\"a[30] = \", a[30])\n    print(\"a\n",
        "def main():\n    x = \"Hello World\"\n    print(x[1])\n    print(x[2:5])\n    print(x[-5:])\n    print(x[:-2])\n    print(x[::-1])\n    print(x[::2])\n    print(x[1::2])\n    print(x[::-2])\n    print(x[1::-2])\n    print(x[-2:])\n    print(x[-2:-5:-1])\n    print(x[-2:-5:-2])\n    print(x[-2:-5:-3])\n    print(x[-2:-5:-4])\n    print(x[-2:-5:-5])\n    print(x[-2:-5:-6])\n    print(x[-2:-5:-7])\n    print(x[-2:-5:-8])\n    print(x[-2:-5:-9])\n    print(x[-2:-5:-10])\n    print(x[-2:-5:-11])\n    print(x[-2:-5:-12])\n    print(x[-2:-5:-13])\n    print(x[-2:-5:-14])\n    print(x[-2:-5:-15])\n    print(x[-2:-5:-16])\n    print(x[-2:-5:-17])\n    print(x[-2:-5:-18])\n    print(x[-2:-5:-19])\n    print(x[-2:-5:-20])\n    print(x[-2:-5:-21])\n    print(x[-2:-5:-22])\n    print(x[-2:-5:-23])\n    print(x[-2:-5:-24])\n    print(x[-2:-5:-25])\n    print(x[-2:-5:-26])\n    print(x[-2:-5:-27])\n    print(x[-2:-5:-28])\n    print(x[-2:-5:-29])\n    print(x[-2:-5:-30])\n"
    ],
    "results": 8
},{
    "id": "12",
    "source": "soSearches",
    "language": "python",
    "query": "how to make button in python without tkinter",
    "snippets": [
        "def button_click():\n    print(\"button clicked\")\n",
        "def button_click():\n    print(\"Button clicked\")\n",
        "def click():\n    print(\"click\")\n",
        "def click():\n    print(\"clicked\")\n"
    ],
    "results": 10
},{
    "id": "13",
    "source": "soSearches",
    "language": "python",
    "query": "how to get sum of each row in 2d list in python",
    "snippets": [
        "def sum_row(matrix):\n    sum_row = []\n    for row in matrix:\n        sum_row.append(sum(row))\n    return sum_row\n",
        "def sum_of_each_row(matrix):\n    sum_list = []\n    for row in matrix:\n        sum_list.append(sum(row))\n    return sum_list\n",
        "def sum_row(lst):\n    sum_lst = []\n    for i in range(len(lst)):\n        sum_lst.append(sum(lst[i]))\n    return sum_lst\n"
    ],
    "results": 10
},{
    "id": "14",
    "source": "soSearches",
    "language": "python",
    "query": "how to split an integer in python by 2 or 3",
    "snippets": [
        "def split_integer(n):\n    if n % 2 == 0:\n        return n // 2, n % 2\n    else:\n        return n // 3, n % 3\n",
        "def split_by_2(n):\n    return n // 2, n % 2\n",
        "def split_by_2(num):\n    return num // 2, num % 2\n"
    ],
    "results": 10
},{
    "id": "15",
    "source": "soSearches",
    "language": "python",
    "query": "how to print oput the first letter form each word in a string in  python",
    "snippets": [
        "def first_letter(string):\n    for word in string.split():\n        print(word[0], end=\"\")\n    print()\n"
    ],
    "results": 10
},{
    "id": "16",
    "source": "soSearches",
    "language": "python",
    "query": "how to read another file in python",
    "snippets": [
        "def main():\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n",
        "def main():\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n",
        "def main():\n    f = open(\"test.txt\", \"r\")\n    for line in f:\n        print(line, end=\"\")\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.read())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readlines())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    for line in f:\n        print(line, end=\"\")\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readlines())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n    print(\"\\n\")\n    f = open(\"test.txt\", \"r\")\n    print(f.readline())\n    f.close()\n"
    ],
    "results": 10
},{
    "id": "17",
    "source": "soSearches",
    "language": "python",
    "query": "python how to remove files and directories",
    "snippets": [
        "def remove_files(path):\n    import os\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n    print(\"All files removed\")\n    return\n",
        "def remove_files(path):\n    import os\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n    return\n",
        "def remove_files(path):\n    import os\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n    return True\n",
        "def remove_files(path):\n    import os\n    import shutil\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n        for dir in dirs:\n            shutil.rmtree(os.path.join(root, dir))\n    print('Files and directories removed')\n    return\n",
        "def remove_files(path):\n    import os\n    import shutil\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n        for dir in dirs:\n            shutil.rmtree(os.path.join(root, dir))\n    return None\n",
        "def remove_files(path):\n    import os\n    import shutil\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n        for dir in dirs:\n            shutil.rmtree(os.path.join(root, dir))\n    print(\"Files and directories removed.\")\n    return\n",
        "def remove_files(path):\n    import os\n    import shutil\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n        for dir in dirs:\n            shutil.rmtree(os.path.join(root, dir))\n    return\n",
        "def remove_files(path):\n    import os\n    import shutil\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n        for dir in dirs:\n            shutil.rmtree(os.path.join(root, dir))\n    print(\"Files and directories removed\")\n",
        "def remove_files(path):\n    import os\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.unlink(os.path.join(root, file))\n        for dir in dirs:\n            os.rmdir(os.path.join(root, dir))\n    os.rmdir(path)\n    print(\"Removed files and directories\")\n",
        "def remove_files(path):\n    \"\"\"\n    Remove all files and directories in the given path.\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for file in files:\n            os.remove(os.path.join(root, file))\n        for dir in dirs:\n            shutil.rmtree(os.path.join(root, dir))\n"
    ],
    "results": 10
},{
    "id": "18",
    "source": "soSearches",
    "language": "python",
    "query": "how to find starting point of any action python",
    "snippets": [
        "def find_start(action):\n    for i in range(len(action)):\n        if action[i] == 'S':\n            return i\n    return -1\n",
        "def find_start(action):\n    start = 0\n    for i in range(len(action)):\n        if action[i] == 'S':\n            start = i\n            break\n    return start\n",
        "def find_start(action):\n    if action == 'L':\n        return 0\n    elif action == 'R':\n        return 1\n    elif action == 'U':\n        return 2\n    elif action == 'D':\n        return 3\n    elif action == 'S':\n        return 4\n    elif action == 'B':\n        return 5\n    elif action == 'T':\n        return 6\n    elif action == 'X':\n        return 7\n    elif action == 'Y':\n        return 8\n    elif action == 'Z':\n        return 9\n    elif action == 'A':\n        return 10\n    elif action == 'C':\n        return 11\n    elif action == 'D':\n        return 12\n    elif action == 'E':\n        return 13\n    elif action == 'F':\n        return 14\n    elif action == 'G':\n        return 15\n    elif action == 'H':\n        return 16\n    elif action == 'I':\n        return 17\n    elif action == 'J':\n        return 18\n    elif action == 'K':\n        return 19\n    elif action == 'L':\n        return 20\n    elif action == 'M':\n        return 21\n    elif action == 'N':\n        return 22\n    elif action == 'O':\n        return 23\n    elif action == 'P':\n        return 24\n    elif action == 'Q':\n        return 25\n    elif action == 'R':\n        return 26\n    elif action == 'S':\n        return 27\n    elif action == 'T':\n        return 28\n    elif action == 'U':\n        return 29\n    elif action == 'V':\n        return 30\n    elif action == 'W':\n        return 31\n    elif action == 'X':\n        return 32\n    elif action == 'Y':\n        return 33\n    elif action == 'Z':\n        return 34\n    elif action == '0':\n        return 35\n    elif action == '1':\n        return 36\n    elif action == '2':\n        return 37\n"
    ],
    "results": 10
},{
    "id": "19",
    "source": "soSearches",
    "language": "python",
    "query": "how to add loop to python",
    "snippets": [
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(10):\n        print(i, end=\" \")\n    for i in range(10):\n        print(i, end=\"\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in\n",
        "def main():\n    for i in range(10):\n        print(i)\n    print(\"Done\")\n",
        "def main():\n    for i in range(10):\n        print(i)\n    print(\"Done with loop\")\n",
        "def main():\n    for i in range(1,6):\n        print(i)\n    print(\"Goodbye!\")\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    print(\"Done\")\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    print(\"Goodbye!\")\n",
        "def main():\n    for i in range(1,6):\n        print(i)\n    print(\"Done with loop\")\n"
    ],
    "results": 7
},{
    "id": "20",
    "source": "soSearches",
    "language": "python",
    "query": "how to check if a file exist in python",
    "snippets": [
        "def check_file(file_name):\n    try:\n        with open(file_name) as f:\n            return True\n    except FileNotFoundError:\n        return False\n",
        "def check_file_exist(file_name):\n    try:\n        with open(file_name) as f:\n            return True\n    except FileNotFoundError:\n        return False\n",
        "def check_file(file_name):\n    try:\n        f = open(file_name)\n        f.close()\n        return True\n    except FileNotFoundError:\n        return False\n",
        "def check_file_exist(file_name):\n    try:\n        f = open(file_name)\n        f.close()\n        return True\n    except FileNotFoundError:\n        return False\n",
        "def check_file(filename):\n    try:\n        f = open(filename)\n        f.close()\n    except FileNotFoundError:\n        return False\n    return True\n",
        "def check_file(file_name):\n    try:\n        f = open(file_name)\n        f.close()\n    except FileNotFoundError:\n        print(\"File not found\")\n        return False\n    else:\n        print(\"File found\")\n        return True\n",
        "def main():\n    filename = 'test.txt'\n    if os.path.isfile(filename):\n        print('the file exist')\n    else:\n        print('the file does not exist')\n",
        "def main():\n    # check if a file exist\n    if os.path.isfile(\"test.txt\"):\n        print(\"test.txt is a file\")\n    else:\n        print(\"test.txt is not a file\")\n    # check if a directory exist\n    if os.path.isdir(\"test\"):\n        print(\"test is a directory\")\n    else:\n        print(\"test is not a directory\")\n    # check if a path exist\n    if os.path.exists(\"test.txt\"):\n        print(\"test.txt is a path\")\n    else:\n        print(\"test.txt is not a path\")\n    # check if a path is a file\n    if os.path.isfile(\"test.txt\"):\n        print(\"test.txt is a file\")\n    else:\n        print(\"test.txt is not a file\")\n    # check if a path is a directory\n    if os.path.isdir(\"test\"):\n        print(\"test is a directory\")\n    else:\n        print(\"test is not a directory\")\n    # check if a path is a path\n    if os.path.exists(\"test.txt\"):\n        print(\"test.txt is a path\")\n    else:\n        print(\"test.txt is not a path\")\n    # check if a path is a file\n    if os.path.isfile(\"test.txt\"):\n        print(\"test.txt is a file\")\n    else:\n        print(\"test.txt is not a file\")\n    # check if a path is a directory\n    if os.path.isdir(\"test\"):\n        print(\"test is a directory\")\n    else:\n        print(\"test is not a directory\")\n    # check if a path is a path\n    if os.path.exists(\"test.txt\"):\n        print(\"test.txt is a path\")\n    else:\n        print(\"test.txt is not a path\")\n    # check if a path is a file\n    if os.path.isfile(\"test.txt\"):\n        print(\"test.txt is a file\")\n    else:\n        print(\"test.txt is not a file\")\n"
    ],
    "results": 10
},{
    "id": "21",
    "source": "soSearches",
    "language": "python",
    "query": "how to parse .csv file in python",
    "snippets": [
        "def main():\n    with open('data.csv', 'r') as f:\n        reader = csv.reader(f)\n        for row in reader:\n            print(row)\n",
        "def main():\n    # open the file\n    f = open(\"data.csv\", \"r\")\n    # read the file\n    lines = f.readlines()\n    # close the file\n    f.close()\n    # loop through the lines\n    for line in lines:\n        # split the line into a list of words\n        words = line.split(\",\")\n        # print the words\n        print(words)\n        # print the first word\n        print(words[0])\n        # print the second word\n        print(words[1])\n        # print the third word\n        print(words[2])\n        # print the fourth word\n        print(words[3])\n        # print the fifth word\n        print(words[4])\n        # print the sixth word\n        print(words[5])\n        # print the seventh word\n        print(words[6])\n        # print the eighth word\n        print(words[7])\n        # print the ninth word\n        print(words[8])\n        # print the tenth word\n        print(words[9])\n        # print the eleventh word\n        print(words[10])\n        # print the twelfth word\n        print(words[11])\n        # print the thirteenth word\n        print(words[12])\n        # print the fourteenth word\n        print(words[13])\n        # print the fifteenth word\n        print(words[14])\n        # print the sixteenth word\n        print(words[15])\n        # print the seventeenth word\n        print(words[16])\n        # print the eighteenth word\n        print(words[17])\n        # print the nineteenth word\n        print(words[18])\n        # print the twentieth word\n        print(words[19])\n        # print the twenty-first word\n        print(words[20])\n        # print the twenty-second word\n        print(words[21])\n        # print the twenty-third word\n        print(words[22])\n        # print the twenty-fourth word\n        print(words[23])\n        # print the twenty-fifth word\n        print(words[24])\n        # print the twenty-sixth word\n",
        "def main():\n    # open the file\n    f = open(\"data.csv\", \"r\")\n    # read the file\n    lines = f.readlines()\n    # close the file\n    f.close()\n    # print the lines\n    for line in lines:\n        print(line)\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line)\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line.split(\",\")\n        print(line[0], line[1])\n    # split the lines\n    for line in lines:\n        line = line\n",
        "def main():\n    # open the file\n    f = open(\"data.csv\", \"r\")\n    # read the file\n    lines = f.readlines()\n    # close the file\n    f.close()\n    # print the lines\n    for line in lines:\n        print(line)\n    # split the lines into a list of lists\n    data = [line.strip().split(\",\") for line in lines]\n    # print the data\n    for row in data:\n        print(row)\n    # print the data in a table\n    for row in data:\n        print(\"{0:>10} {1:>10} {2:>10}\".format(row[0], row[1], row[2]))\n    # print the data in a table\n    for row in data:\n        print(\"{0:>10} {1:>10} {2:>10}\".format(row[0], row[1], row[2]))\n    # print the data in a table\n    for row in data:\n        print(\"{0:>10} {1:>10} {2:>10}\".format(row[0], row[1], row[2]))\n    # print the data in a table\n    for row in data:\n        print(\"{0:>10} {1:>10} {2:>10}\".format(row[0], row[1], row[2]))\n    # print the data in a table\n    for row in data:\n        print(\"{0:>10} {1:>10} {2:>10}\".format(row[0], row[1], row[2]))\n    # print the data in a table\n    for row in data:\n        print(\"{0:>10} {1:>10} {2:>10}\".format(row[0], row[1], row[2]))\n    # print the data in a table\n    for row in data:\n        print(\"{0:>10} {1:>10} {2:>10}\".format(row[0], row[1], row[2]))\n    # print the data\n",
        "def main():\n    # open the file\n    infile = open(\"data.csv\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # split the data into lines\n    lines = data.split(\"\\n\")\n    # split the lines into columns\n    for line in lines:\n        columns = line.split(\",\")\n        print(columns)\n    # split the columns into values\n    for column in columns:\n        values = column.split(\";\")\n        print(values)\n    # split the values into items\n    for value in values:\n        items = value.split(\" \")\n        print(items)\n    # split the items into words\n    for item in items:\n        words = item.split(\".\")\n        print(words)\n    # split the words into letters\n    for word in words:\n        letters = word.split(\"\")\n        print(letters)\n    # split the letters into characters\n    for letter in letters:\n        characters = letter.split(\"\")\n        print(characters)\n    # split the characters into characters\n    for character in characters:\n        characters = character.split(\"\")\n        print(characters)\n    # split the characters into characters\n    for character in characters:\n        characters = character.split(\"\")\n        print(characters)\n    # split the characters into characters\n    for character in characters:\n        characters = character.split(\"\")\n        print(characters)\n    # split the characters into characters\n    for character in characters:\n        characters = character.split(\"\")\n        print(characters)\n    # split the characters into characters\n    for character in characters:\n        characters = character.split(\"\")\n        print(characters)\n    # split the characters into characters\n    for character in characters:\n        characters = character.split(\"\")\n        print(characters)\n    # split the characters into characters\n    for character in characters:\n        characters = character.split(\"\")\n        print(characters)\n    # split the characters into characters\n    for character in characters:\n        characters = character.split(\"\")\n        print(\n",
        "def main():\n    # open the file\n    infile = open(\"data.csv\", \"r\")\n    # read the file\n    data = infile.read()\n    # split the file into lines\n    lines = data.split(\"\\n\")\n    # print the lines\n    for line in lines:\n        print(line)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.csv\", \"r\")\n    # read the file\n    data = infile.read()\n    # split the file into lines\n    lines = data.split(\"\\n\")\n    # print the lines\n    for line in lines:\n        print(line)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.csv\", \"r\")\n    # read the file\n    data = infile.read()\n    # split the file into lines\n    lines = data.split(\"\\n\")\n    # print the lines\n    for line in lines:\n        print(line)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.csv\", \"r\")\n    # read the file\n    data = infile.read()\n    # split the file into lines\n    lines = data.split(\"\\n\")\n    # print the lines\n    for line in lines:\n        print(line)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.csv\", \"r\")\n    # read the file\n    data = infile.read()\n    # split the file into lines\n    lines = data.split(\"\\n\")\n    # print the lines\n    for line in lines:\n        print(line)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.csv\", \"r\")\n    # read the file\n    data = infile.read()\n    # split the file into lines\n    lines = data.split(\"\\n\")\n    # print the lines\n    for line in lines:\n",
        "def main():\n    # open the file\n    f = open(\"test.csv\", \"r\")\n    # read the file\n    lines = f.readlines()\n    # close the file\n    f.close()\n    # loop through the lines\n    for line in lines:\n        # split the line into a list of words\n        words = line.split(\",\")\n        # print the words\n        print(words)\n        # print the first word\n        print(words[0])\n        # print the second word\n        print(words[1])\n        # print the third word\n        print(words[2])\n        # print the fourth word\n        print(words[3])\n        # print the fifth word\n        print(words[4])\n        # print the sixth word\n        print(words[5])\n        # print the seventh word\n        print(words[6])\n        # print the eighth word\n        print(words[7])\n        # print the ninth word\n        print(words[8])\n        # print the tenth word\n        print(words[9])\n        # print the eleventh word\n        print(words[10])\n        # print the twelfth word\n        print(words[11])\n        # print the thirteenth word\n        print(words[12])\n        # print the fourteenth word\n        print(words[13])\n        # print the fifteenth word\n        print(words[14])\n        # print the sixteenth word\n        print(words[15])\n        # print the seventeenth word\n        print(words[16])\n        # print the eighteenth word\n        print(words[17])\n        # print the nineteenth word\n        print(words[18])\n        # print the twentieth word\n        print(words[19])\n        # print the twenty-first word\n        print(words[20])\n        # print the twenty-second word\n        print(words[21])\n        # print the twenty-third word\n        print(words[22])\n        # print the twenty-fourth word\n        print(words[23])\n        # print the twenty-fifth word\n        print(words[24])\n        # print the twenty-sixth word\n"
    ],
    "results": 9
},{
    "id": "22",
    "source": "soSearches",
    "language": "python",
    "query": "python how to iterate list",
    "snippets": [
        "def main():\n    # list\n    list1 = [1, 2, 3, 4, 5]\n    for i in list1:\n        print(i)\n    # tuple\n    tuple1 = (1, 2, 3, 4, 5)\n    for i in tuple1:\n        print(i)\n    # set\n    set1 = {1, 2, 3, 4, 5}\n    for i in set1:\n        print(i)\n    # dictionary\n    dict1 = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5}\n    for i in dict1:\n        print(i)\n    # string\n    string1 = 'abcdefg'\n    for i in string1:\n        print(i)\n    # range\n    for i in range(1, 10):\n        print(i)\n    # range with step\n    for i in range(1, 10, 2):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -1):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -2):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -3):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -4):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -5):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -6):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -7):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -8):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -9):\n        print(i)\n    # range with step and reverse\n    for i in range(10, 1, -\n",
        "def main():\n    # create a list\n    mylist = [1,2,3,4,5,6,7,8,9,10]\n    # iterate the list\n    for i in mylist:\n        print(i)\n    # iterate the list with index\n    for i in range(len(mylist)):\n        print(mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(i, mylist[i])\n    # iterate the list with index and value\n    for i in range(len(mylist)):\n        print(\n",
        "def main():\n    # list\n    list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    for i in list1:\n        print(i)\n    # tuple\n    tuple1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n    for i in tuple1:\n        print(i)\n    # set\n    set1 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\n    for i in set1:\n        print(i)\n    # dictionary\n    dict1 = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10}\n    for i in dict1:\n        print(i)\n    # string\n    str1 = 'abcdefghij'\n    for i in str1:\n        print(i)\n    # range\n    for i in range(1, 11):\n        print(i)\n    # range with step\n    for i in range(1, 11, 2):\n        print(i)\n    # range with negative step\n    for i in range(10, 0, -1):\n        print(i)\n    # range with negative step and start\n    for i in range(10, -1, -1):\n        print(i)\n    # range with negative step and start and end\n    for i in range(10, -1, -2):\n        print(i)\n    # range with negative step and start and end and step\n    for i in range(10, -1, -3):\n        print(i)\n    # range with negative step and start and end and step and start\n    for i in range(10, -1, -3):\n        print(i)\n    # range with negative step and start and end and step and start and end\n    for i in range(10, -1, -3):\n        print(i)\n    # range with negative step and start and end and step and start and end and step\n",
        "def main():\n    # list of numbers\n    numbers = [1, 2, 3, 4, 5]\n    # iterate over the list\n    for number in numbers:\n        print(number)\n    # iterate over the list\n    for number in numbers:\n        print(number * 2)\n    # iterate over the list\n    for number in numbers:\n        print(number * 3)\n    # iterate over the list\n    for number in numbers:\n        print(number * 4)\n    # iterate over the list\n    for number in numbers:\n        print(number * 5)\n    # iterate over the list\n    for number in numbers:\n        print(number * 6)\n    # iterate over the list\n    for number in numbers:\n        print(number * 7)\n    # iterate over the list\n    for number in numbers:\n        print(number * 8)\n    # iterate over the list\n    for number in numbers:\n        print(number * 9)\n    # iterate over the list\n    for number in numbers:\n        print(number * 10)\n    # iterate over the list\n    for number in numbers:\n        print(number * 11)\n    # iterate over the list\n    for number in numbers:\n        print(number * 12)\n    # iterate over the list\n    for number in numbers:\n        print(number * 13)\n    # iterate over the list\n    for number in numbers:\n        print(number * 14)\n    # iterate over the list\n    for number in numbers:\n        print(number * 15)\n    # iterate over the list\n    for number in numbers:\n        print(number * 16)\n    # iterate over the list\n    for number in numbers:\n        print(number * 17)\n    # iterate over the list\n    for number in numbers:\n        print(number * 18)\n    # iterate over the list\n    for number in numbers:\n        print(number * 19)\n    # iterate over the list\n    for number in numbers:\n        print(number * 20)\n    # iterate over the list\n    for number in numbers:\n        print\n"
    ],
    "results": 4
},{
    "id": "23",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert result of python from decimal to floating numbers",
    "snippets": [
        "def main():\n    print(\"{:.2f}\".format(3.1415926))\n    print(\"{:.3f}\".format(3.1415926))\n    print(\"{:.4f}\".format(3.1415926))\n    print(\"{:.5f}\".format(3.1415926))\n    print(\"{:.6f}\".format(3.1415926))\n    print(\"{:.7f}\".format(3.1415926))\n    print(\"{:.8f}\".format(3.1415926))\n    print(\"{:.9f}\".format(3.1415926))\n    print(\"{:.10f}\".format(3.1415926))\n    print(\"{:.11f}\".format(3.1415926))\n    print(\"{:.12f}\".format(3.1415926))\n    print(\"{:.13f}\".format(3.1415926))\n    print(\"{:.14f}\".format(3.1415926))\n    print(\"{:.15f}\".format(3.1415926))\n    print(\"{:.16f}\".format(3.1415926))\n    print(\"{:.17f}\".format(3.1415926))\n    print(\"{:.18f}\".format(3.1415926))\n    print(\"{:.19f}\".format(3.1415926))\n    print(\"{:.20f}\".format(3.1415926))\n    print(\"{:.21f}\".format(3.1415926))\n    print(\"{:.22f}\".format(3.1415926))\n    print(\"{:.23f}\".format(3.1415926))\n    print(\"{:.24f}\".format(3.1415926))\n    print(\"{:.25f}\".format(3.1415926))\n    print(\"{:.26f}\".format(3.1415926))\n    print(\"{:.27f}\".format(3.1415926))\n    print\n",
        "def main():\n    x = 2.3e-5\n    print(x)\n    print(type(x))\n    x = str(x)\n    print(x)\n    print(type(x))\n    x = float(x)\n    print(x)\n    print(type(x))\n    x = complex(x)\n    print(x)\n    print(type(x))\n    x = int(x)\n    print(x)\n    print(type(x))\n    x = bool(x)\n    print(x)\n    print(type(x))\n    x = str(x)\n    print(x)\n    print(type(x))\n    x = float(x)\n    print(x)\n    print(type(x))\n    x = complex(x)\n    print(x)\n    print(type(x))\n    x = int(x)\n    print(x)\n    print(type(x))\n    x = bool(x)\n    print(x)\n    print(type(x))\n    x = str(x)\n    print(x)\n    print(type(x))\n    x = float(x)\n    print(x)\n    print(type(x))\n    x = complex(x)\n    print(x)\n    print(type(x))\n    x = int(x)\n    print(x)\n    print(type(x))\n    x = bool(x)\n    print(x)\n    print(type(x))\n    x = str(x)\n    print(x)\n    print(type(x))\n    x = float(x)\n    print(x)\n    print(type(x))\n    x = complex(x)\n    print(x)\n    print(type(x))\n    x = int(x)\n    print(x)\n    print(type(x))\n    x = bool(x)\n    print(x)\n    print(type(x))\n    x = str(x)\n    print(x)\n    print(type(x))\n    x = float(x)\n    print\n",
        "def main():\n    x = float(input(\"Enter a decimal number: \"))\n    print(\"The number is\", x)\n    print(\"The number is {:.2f}\".format(x))\n    print(\"The number is {:.3f}\".format(x))\n    print(\"The number is {:.4f}\".format(x))\n    print(\"The number is {:.5f}\".format(x))\n    print(\"The number is {:.6f}\".format(x))\n    print(\"The number is {:.7f}\".format(x))\n    print(\"The number is {:.8f}\".format(x))\n    print(\"The number is {:.9f}\".format(x))\n    print(\"The number is {:.10f}\".format(x))\n    print(\"The number is {:.11f}\".format(x))\n    print(\"The number is {:.12f}\".format(x))\n    print(\"The number is {:.13f}\".format(x))\n    print(\"The number is {:.14f}\".format(x))\n    print(\"The number is {:.15f}\".format(x))\n    print(\"The number is {:.16f}\".format(x))\n    print(\"The number is {:.17f}\".format(x))\n    print(\"The number is {:.18f}\".format(x))\n    print(\"The number is {:.19f}\".format(x))\n    print(\"The number is {:.20f}\".format(x))\n    print(\"The number is {:.21f}\".format(x))\n    print(\"The number is {:.22f}\".format(x))\n    print(\"The number is {:.23f}\".format(x))\n    print(\"The number is {:.24f}\".format(x))\n    print(\"The number is {:.25f}\".format(x))\n    print(\"The number is {:.26f}\".format(x))\n    print(\"The number is {:.27f}\".format(x))\n    print(\"The number is {:.28f}\".format(x))\n    print(\"The number is {:.29f}\n"
    ],
    "results": 3
},{
    "id": "24",
    "source": "soSearches",
    "language": "python",
    "query": "how to path the file of data  in python",
    "snippets": [
        "def main():\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile\n",
        "def main():\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile\n",
        "def main():\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"data.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile\n",
        "def main():\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.read()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readlines()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open('data.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file\n    infile\n",
        "def main():\n    # open the file for reading\n    infile = open('data.txt', 'r')\n    # read the data\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file for writing\n    outfile = open('data.txt', 'w')\n    # write the data\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open('data.txt', 'a')\n    # write the data\n    outfile.write('\\nAppended data')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('data.txt', 'r')\n    # read the data\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file for writing\n    outfile = open('data.txt', 'w')\n    # write the data\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open('data.txt', 'a')\n    # write the data\n    outfile.write('\\nAppended data')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('data.txt', 'r')\n    # read the data\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file for writing\n    outfile = open('data.txt', 'w')\n    # write the data\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open('data.txt', 'a')\n    # write the data\n    outfile.write('\\nAppended data')\n    # close the file\n    out\n"
    ],
    "results": 10
},{
    "id": "25",
    "source": "soSearches",
    "language": "python",
    "query": "how to center turtle in python",
    "snippets": [
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"lightgreen\")\n    window.title(\"Centering a turtle\")\n    # create turtle Brad - setcolor to red\n    brad = turtle.Turtle()\n    brad.color(\"red\")\n    brad.shape(\"turtle\")\n    brad.penup()\n    brad.goto(0,0)\n    brad.pendown()\n    brad.circle(100)\n    # create turtle Angie - setcolor to blue\n    angie = turtle.Turtle()\n    angie.color(\"blue\")\n    angie.shape(\"turtle\")\n    angie.penup()\n    angie.goto(0,0)\n    angie.pendown()\n    angie.circle(100)\n    # create turtle Jim - setcolor to green\n    jim = turtle.Turtle()\n    jim.color(\"green\")\n    jim.shape(\"turtle\")\n    jim.penup()\n    jim.goto(0,0)\n    jim.pendown()\n    jim.circle(100)\n    # center Brad\n    brad.penup()\n    brad.goto(0,-100)\n    brad.pendown()\n    # center Angie\n    angie.penup()\n    angie.goto(0,100)\n    angie.pendown()\n    # center Jim\n    jim.penup()\n    jim.goto(0,200)\n    jim.pendown()\n    window.exitonclick()\n"
    ],
    "results": 1
},{
    "id": "26",
    "source": "soSearches",
    "language": "python",
    "query": "python how to append to a binary file",
    "snippets": [
        "def main():\n    # open a binary file for writing\n    thefile = open(\"data.dat\", \"wb\")\n    # get the data to write\n    data = [1, 2, 3, 4, 5]\n    # write the data to the file\n    for d in data:\n        thefile.write(d.to_bytes(1, \"big\"))\n    # close the file\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"data.dat\", \"rb\")\n    # read the data\n    data = thefile.read()\n    # print the data\n    print(data)\n    # close the file\n    thefile.close()\n",
        "def main():\n    with open('binary', 'wb') as bin_file:\n        for i in range(17):\n            bin_file.write(bytes([i]))\n    with open('binary', 'ab') as bin_file:\n        bin_file.write(bytes([17]))\n    with open('binary', 'rb') as bin_file:\n        for b in bin_file:\n            print(b)\n",
        "def main():\n    with open('data.bin', 'ab') as f:\n        f.write(b'Hello World!')\n",
        "def main():\n    with open('data.txt', 'ab') as f:\n        f.write(b'Hello World!\\n')\n        f.write(b'This is a test!\\n')\n        f.write(b'This is another test!\\n')\n        f.write(b'This is the last test!\\n')\n",
        "def main():\n    with open('data.dat', 'ab') as f:\n        f.write(b'Hello World!')\n",
        "def main():\n    # open a file for writing\n    theFile = open(\"data.dat\", \"wb\")\n    # get the data to write\n    data = input(\"Enter data to write to the file: \")\n    # write the data to the file\n    theFile.write(data.encode())\n    # close the file\n    theFile.close()\n    # open the file for reading\n    theFile = open(\"data.dat\", \"rb\")\n    # read the data from the file\n    data = theFile.read()\n    # print the data\n    print(\"The data from the file is: \", data.decode())\n    # close the file\n    theFile.close()\n",
        "def main():\n    # open a binary file for writing\n    thefile = open(\"data.dat\", \"ab\")\n    # write some data to the file\n    thefile.write(b\"this is a test\")\n    # close the file\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"data.dat\", \"rb\")\n    # read the data from the file\n    data = thefile.read()\n    print(data)\n    # close the file\n    thefile.close()\n",
        "def main():\n    with open(\"data.bin\", \"ab\") as f:\n        f.write(b\"Hello World\")\n"
    ],
    "results": 8
},{
    "id": "27",
    "source": "soSearches",
    "language": "python",
    "query": "python pandas how to loop over a dataframe",
    "snippets": [
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({\"A\": [1, 2, 3], \"B\": [4, 5, 6]})\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row)\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in df.iterrows():\n        print(i, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for i, row in\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({\"A\": [1, 2, 3, 4], \"B\": [5, 6, 7, 8]})\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"A\"], row[\"B\"])\n    # loop over the dataframe\n    for\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({\"A\": [1, 2, 3, 4, 5], \"B\": [6, 7, 8, 9, 10]})\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe using a for loop\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the data\n",
        "def main():\n    df = pd.read_csv('../data/example.csv')\n    for index, row in df.iterrows():\n        print(index, row['name'], row['age'])\n    return\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({\"id\":[1,2,3,4,5,6],\"name\":[\"joe\",\"jane\",\"joe\",\"jane\",\"joe\",\"jane\"],\"age\":[20,21,22,21,20,21]})\n    # print the dataframe\n    print(df)\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row)\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"],row[\"id\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({\"id\":[1,2,3,4,5,6],\"name\":[\"joe\",\"jane\",\"joe\",\"jane\",\"joe\",\"jane\"],\"age\":[20,21,22,21,20,21]})\n    # print the dataframe\n    printn\n",
        "def mai(():\n    # create a dataframe\n    df = pd.DataFrame({\"id\":[1,2,3,4,5,6],\"name\":[\"joe\",\"jane\",\"joe\",\"jane\",\"joe\",\"jane\"],\"age\":[20,21,19,19,20,21]})\n    # loop over the dataframe\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n    for i in range(len(df)):\n        print(df.iloc[i])\n    # loop over the dataframe using a for loop\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({\"id\":[1,2,3,4,5,6],\"name\":[\"John\",\"Mary\",\"Steve\",\"John\",\"Mary\",\"Steve\"],\"age\":[20,21,22,23,24,25]})\n    # print the dataframe\n    print(df)\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({\"id\": [1, 2, 3, 4, 5, 6], \"name\": [\"John\", \"Steve\", \"Mary\", \"Jane\", \"Bob\", \"Joe\"]})\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"id\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"iddf)\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row)\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"],row[\"id\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"],row[\"id\"],row[\"name\"],row[\"age\"])\n    # loop over the dataframe\n    for index,row in df.iterrows():\n        print(index,row[\"name\n",
        "def main():\n    df = pd.read_csv('../data/titanic.csv')\n    for index, row in df.iterrows():\n        print(index, row['survived'], row['name'])\n    return\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({\"id\":[1,2,3,4,5,6],\"name\":[\"John\",\"Mary\",\"Steve\",\"John\",\"Mary\",\"Steve\"],\"age\":[20,21,22,23,24,25]})\n    # print the dataframe\n    print(df)\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row)\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row in df.iterrows():\n        print(index, row[\"name\"], row[\"age\"])\n    # loop over the dataframe\n    for index, row\n"
    ],
    "results": 10
},{
    "id": "28",
    "source": "soSearches",
    "language": "python",
    "query": "how to change dataframe cells in python",
    "snippets": [
        "def change_cell(df, col, old_value, new_value):\n    df[col] = df[col].replace(old_value, new_value)\n    return df\n",
        "def change_cell(df, col, old_value, new_value):\n    df.loc[df[col] == old_value, col] = new_value\n    return df\n",
        "def change_df_cells(df, col, old_val, new_val):\n    df.loc[df[col] == old_val, col] = new_val\n    return df\n",
        "def main():\n    df = pd.read_csv('../data/titanic.csv')\n    df.loc[df['Age'].isnull(), 'Age'] = df['Age'].mean()\n    df.to_csv('../data/titanic_filled.csv')\n    print(df)\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9]})\n    # change the value of cell A1 to 0\n    df.at[0, 'A'] = 0\n    # change the value of cell B2 to 0\n    df.iat[1, 1] = 0\n    # change the value of cell C3 to 0\n    df.loc[2, 'C'] = 0\n    # print the dataframe\n    print(df)\n",
        "def change_df_cells(df, col, old, new):\n    df.loc[df[col] == old, col] = new\n    return df\n",
        "def main():\n    df = pd.read_csv('data/df_ex.csv')\n    print(df)\n    df.loc[0, 'A'] = 'new value'\n    print(df)\n    df.loc[0, 'B'] = 'new value'\n    print(df)\n    df.loc[0, 'C'] = 'new value'\n    print(df)\n    df.loc[0, 'D'] = 'new value'\n    print(df)\n    df.loc[0, 'E'] = 'new value'\n    print(df)\n    df.loc[0, 'F'] = 'new value'\n    print(df)\n    df.loc[0, 'G'] = 'new value'\n    print(df)\n    df.loc[0, 'H'] = 'new value'\n    print(df)\n    df.loc[0, 'I'] = 'new value'\n    print(df)\n    df.loc[0, 'J'] = 'new value'\n    print(df)\n    df.loc[0, 'K'] = 'new value'\n    print(df)\n    df.loc[0, 'L'] = 'new value'\n    print(df)\n    df.loc[0, 'M'] = 'new value'\n    print(df)\n    df.loc[0, 'N'] = 'new value'\n    print(df)\n    df.loc[0, 'O'] = 'new value'\n    print(df)\n    df.loc[0, 'P'] = 'new value'\n    print(df)\n    df.loc[0, 'Q'] = 'new value'\n    print(df)\n    df.loc[0, 'R'] = 'new value'\n    print(df)\n    df.loc[0, 'S'] = 'new value'\n    print(df)\n    df.loc[0, 'T'] = 'new value'\n    print(df)\n    df.loc[0, 'U'] = 'new value'\n    print(df)\n    df.loc[0, 'V\n",
        "def main():\n    df = pd.read_csv('data/df_ex.csv')\n    print(df)\n    df.loc[0, 'A'] = 'A1'\n    df.loc[1, 'A'] = 'A2'\n    df.loc[2, 'A'] = 'A3'\n    df.loc[3, 'A'] = 'A4'\n    df.loc[4, 'A'] = 'A5'\n    df.loc[5, 'A'] = 'A6'\n    df.loc[6, 'A'] = 'A7'\n    df.loc[7, 'A'] = 'A8'\n    df.loc[8, 'A'] = 'A9'\n    df.loc[9, 'A'] = 'A10'\n    df.loc[0, 'B'] = 'B1'\n    df.loc[1, 'B'] = 'B2'\n    df.loc[2, 'B'] = 'B3'\n    df.loc[3, 'B'] = 'B4'\n    df.loc[4, 'B'] = 'B5'\n    df.loc[5, 'B'] = 'B6'\n    df.loc[6, 'B'] = 'B7'\n    df.loc[7, 'B'] = 'B8'\n    df.loc[8, 'B'] = 'B9'\n    df.loc[9, 'B'] = 'B10'\n    df.to_csv('data/df_ex.csv', index=False)\n    print(df)\n",
        "def main():\n    df = pd.read_csv('../data/df_example.csv')\n    df.loc[0, 'A'] = 'new value'\n    print(df)\n"
    ],
    "results": 10
},{
    "id": "29",
    "source": "soSearches",
    "language": "python",
    "query": "how to restrict input cursor to fixed  length in python",
    "snippets": [
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 10:\n                raise Exception(\"String is too long\")\n            print(\"String is ok\")\n        except Exception as e:\n            print(e)\n            print(\"Please try again\")\n        else:\n            break\n",
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 10:\n                raise Exception(\"String is too long\")\n            print(\"String is ok\")\n        except Exception as e:\n            print(e)\n            print(\"String is not ok\")\n        finally:\n            print(\"End of program\")\n            break\n",
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 5:\n                raise Exception(\"String is too long\")\n            print(\"You entered:\", s)\n        except Exception as e:\n            print(e)\n            print(\"Please try again\")\n        else:\n            break\n",
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 5:\n                raise ValueError\n            print(\"You entered: \", s)\n        except ValueError:\n            print(\"Invalid input\")\n        else:\n            break\n",
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 5:\n                raise Exception(\"String is too long\")\n            print(\"String is ok\")\n        except Exception as e:\n            print(e)\n            print(\"Please try again\")\n        finally:\n            print(\"End of try/except/finally\")\n",
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 5:\n                raise ValueError(\"String is too long\")\n            print(\"You entered: \", s)\n        except ValueError as e:\n            print(e)\n            print(\"Please try again\")\n        except KeyboardInterrupt:\n            print(\"\\nBye\")\n            break\n        except Exception as e:\n            print(\"Unknown error: \", e)\n            break\n",
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 10:\n                raise ValueError(\"String is too long\")\n            print(\"You entered:\", s)\n        except ValueError as e:\n            print(e)\n            print(\"Please try again\")\n        except EOFError:\n            break\n        except KeyboardInterrupt:\n            print(\"\\nBye\")\n            break\n        finally:\n            print(\"\\n\")\n",
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 3:\n                print(\"String is too long\")\n            else:\n                print(\"String is OK\")\n        except EOFError:\n            break\n",
        "def main():\n    while True:\n        try:\n            s = input(\"Enter a string: \")\n            if len(s) > 5:\n                raise ValueError(\"String too long\")\n            print(\"String is: \", s)\n        except ValueError as e:\n            print(\"Error: \", e)\n        except EOFError:\n            break\n        finally:\n            print(\"Done\")\n"
    ],
    "results": 10
},{
    "id": "30",
    "source": "soSearches",
    "language": "python",
    "query": "how to find how many keys are there in python dictionary",
    "snippets": [],
    "results": 0
},{
    "id": "31",
    "source": "soSearches",
    "language": "python",
    "query": "how to change file permission python",
    "snippets": [
        "def main():\n    import os\n    import sys\n    import getpass\n    import stat\n    import shutil\n    import time\n    import datetime\n    import argparse\n    import subprocess\n    import re\n    import glob\n    import platform\n    import json\n    import csv\n    import math\n    import random\n    import string\n    import itertools\n    import collections\n    import operator\n    import functools\n    import pickle\n    import copy\n    import inspect\n    import traceback\n    import pdb\n    import cProfile\n    import pstats\n    import resource\n    import pdb\n    import pydoc\n    import pydoc_data\n    import pydoc_data.topics\n    import pydoc_data.index\n    import pydoc_data.pyindex\n    import pydoc_data.html\n    import pydoc_data.reference\n    import pydoc_data.topics.index\n    import pydoc_data.topics.index.index\n    import pydoc_data.topics.index.index.index\n    import pydoc_data.topics.index.index.index.index\n    import pydoc_data.topics.index.index.index.index.index\n    import pydoc_data.topics.index.index.index.index.index.index\n    import pydoc_data.topics.index.index.index.index.index.index.index\n    import pydoc_data.topics.index.index.index.index.index.index.index.index\n    import pydoc_data.topics.index.index.index.index.index.index.index.index.index\n    import pydoc_data.topics.index.index.index.index.index.index.index.index.index.index\n    import pydoc_data.topics.index.index.index.index.index.index.index.index.index.index.index\n    import pydoc_data.topics.index.index.index.index.index.index.index.index.index.index.index.index\n    import pydoc_\n",
        "def main():\n    import os\n    import sys\n    import getpass\n    import stat\n    import time\n    import datetime\n    import argparse\n    import subprocess\n    import shutil\n    import glob\n    import re\n    import platform\n    import fileinput\n    import tempfile\n    import zipfile\n    import tarfile\n    import hashlib\n    import json\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import http.client\n    import http.server\n    import socketserver\n    import http.client\n    import http.server\n    import socketserver\n    import ftplib\n    import ssl\n    import smtplib\n    import base64\n    import imaplib\n    import email\n    import email.mime.text\n    import email.mime.multipart\n    import email.mime.base\n    import email.mime.image\n    import email.mime.application\n    import email.encoders\n    import email.header\n    import email.utils\n    import email.charset\n    import email.generator\n    import email.message\n    import email.iterators\n    import email.mime.audio\n    import email.mime.text\n    import email.mime.video\n    import email.mime.application\n    import email.mime.audio\n    import email.mime.image\n    import email.mime.text\n    import email.mime.video\n    import email.mime.application\n    import email.mime.audio\n    import email.mime.image\n    import email.mime.text\n    import email.mime.video\n    import email.mime.application\n    import email.mime.audio\n    import email.mime.image\n    import email.mime.text\n    import email.mime.video\n    import email.mime.application\n    import email.mime.audio\n    import email.mime.image\n    import email.mime.text\n    import email.mime.video\n    import email.mime.application\n    import email\n",
        "def main():\n    import os\n    import sys\n    import getopt\n    import stat\n    import shutil\n\n    # get the command line options\n    try:\n        opts, args = getopt.getopt(sys.argv[1:], \"h:f:d:\", [\"help\", \"file=\", \"dir=\"])\n    except getopt.GetoptError as err:\n        print(err)\n        usage()\n        sys.exit(2)\n\n    # check the command line options\n    for o, a in opts:\n        if o in (\"-h\", \"--help\"):\n            usage()\n            sys.exit()\n        elif o in (\"-f\", \"--file\"):\n            file = a\n        elif o in (\"-d\", \"--dir\"):\n            dir = a\n        else:\n            assert False, \"unhandled option\"\n\n    # check if the file or directory exists\n    if not os.path.exists(file):\n        print(\"file or directory does not exist\")\n        sys.exit()\n\n    # check if the file or directory is a file or directory\n    if os.path.isfile(file):\n        print(\"file\")\n        # get the file permission\n        permission = os.stat(file).st_mode\n        # change the permission\n        os.chmod(file, permission | stat.S_IWRITE)\n    elif os.path.isdir(file):\n        print(\"directory\")\n        # get the directory permission\n        permission = os.stat(file).st_mode\n        # change the permission\n        os.chmod(file, permission | stat.S_IWRITE)\n        # change the permission of all the files in the directory\n        for root, dirs, files in os.walk(file):\n            for f in files:\n                os.chmod(os.path.join(root, f), permission | stat.S_IWRITE)\n    else:\n        print(\"file or directory is not a file or directory\")\n        sys.exit()\n",
        "def main():\n    import os\n    import sys\n    import getopt\n    import stat\n    import shutil\n    import time\n    import datetime\n    import subprocess\n    import re\n    import glob\n    import csv\n    import math\n    import platform\n    import tempfile\n    import traceback\n    import multiprocessing\n    import ctypes\n    import ctypes.util\n    import ctypes.wintypes\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPSECURITY_ATTRIBUTES\n    import ctypes.wintypes.SECURITY_ATTRIBUTES\n    import ctypes.wintypes.DWORD\n    import ctypes.wintypes.BOOL\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPSECURITY_ATTRIBUTES\n    import ctypes.wintypes.SECURITY_ATTRIBUTES\n    import ctypes.wintypes.DWORD\n    import ctypes.wintypes.BOOL\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPSECURITY_ATTRIBUTES\n    import ctypes.wintypes.SECURITY_ATTRIBUTES\n    import ctypes.wintypes.DWORD\n    import ctypes.wintypes.BOOL\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPSECURITY_ATTRIBUTES\n    import ctypes.wintypes.SECURITY_ATTRIBUTES\n    import ctypes.wintypes.\n"
    ],
    "results": 4
},{
    "id": "32",
    "source": "soSearches",
    "language": "python",
    "query": "how to pass in a for loop python",
    "snippets": [
        "def main():\n    for i in range(10):\n        print(i)\n    print(\"Done with loop\")\n",
        "def main():\n    for i in range(10):\n        print(i)\n    print(\"Done\")\n",
        "def main():\n    for i in range(10):\n        print(i)\n    print(\"done\")\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    print(\"Goodbye!\")\n",
        "def main():\n    for i in range(1,11):\n        print(i)\n    print(\"Done!\")\n"
    ],
    "results": 6
},{
    "id": "33",
    "source": "soSearches",
    "language": "python",
    "query": "how to put a moving gif image in canvas using class in python 3.5",
    "snippets": [
        "def main():\n    root = Tk()\n    root.title(\"Moving Image\")\n    c = Canvas(root, width=300, height=300)\n    c.pack()\n    gif = PhotoImage(file=\"images/ball.gif\")\n    c.create_image(150, 150, image=gif)\n    root.mainloop()\n",
        "def main():\n    root = Tk()\n    root.title(\"GIF\")\n    root.geometry(\"400x400\")\n    c = Canvas(root, width=400, height=400)\n    c.pack()\n    gif = PhotoImage(file=\"gif.gif\")\n    c.create_image(200, 200, image=gif)\n    root.mainloop()\n",
        "def main():\n    root = Tk()\n    root.title(\"Moving Image\")\n    root.geometry(\"400x400\")\n    c = Canvas(root, width=400, height=400)\n    c.pack()\n    gif = PhotoImage(file=\"gif.gif\")\n    c.create_image(200, 200, image=gif)\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    from PIL import Image, ImageTk\n    import time\n    root = Tk()\n    root.title(\"GIF\")\n    root.geometry(\"400x400\")\n    canvas = Canvas(root, width=400, height=400)\n    canvas.pack()\n    gif1 = ImageTk.PhotoImage(file=\"gif1.gif\")\n    canvas.create_image(200, 200, image=gif1)\n    root.mainloop()\n    time.sleep(5)\n    root.destroy()\n",
        "def main():\n    root = Tk()\n    root.title(\"Moving Image\")\n    root.geometry(\"400x400\")\n    c = Canvas(root, bg=\"white\", height=400, width=400)\n    c.pack()\n    c.create_image(200, 200, image=PhotoImage(file=\"gif.gif\"))\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    from PIL import Image, ImageTk\n    import time\n    root = Tk()\n    root.title(\"Moving Image\")\n    root.geometry(\"400x400\")\n    canvas = Canvas(root, width=400, height=400)\n    canvas.pack()\n    image = Image.open(\"/home/pi/Desktop/python/python_tkinter/images/gif.gif\")\n    photo = ImageTk.PhotoImage(image)\n    canvas.create_image(200, 200, image=photo)\n    while True:\n        canvas.move(1, 0, 1)\n        root.update()\n        time.sleep(0.05)\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    from PIL import Image, ImageTk\n    import time\n    root = Tk()\n    root.title(\"Moving Image\")\n    root.geometry(\"500x500\")\n    canvas = Canvas(root, width=500, height=500)\n    canvas.pack()\n    image = Image.open(\"/home/pi/Desktop/python/python_tkinter/images/gif.gif\")\n    photo = ImageTk.PhotoImage(image)\n    canvas.create_image(0, 0, image=photo, anchor=NW)\n    root.update()\n    while True:\n        canvas.move(1, 1, 0)\n        root.update()\n        time.sleep(0.05)\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Gif\")\n    root.geometry(\"400x400\")\n    canvas = tk.Canvas(root, width=400, height=400)\n    canvas.pack()\n    gif = tk.PhotoImage(file=\"gif.gif\")\n    canvas.create_image(200, 200, image=gif)\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    from PIL import Image, ImageTk\n    import time\n    root = Tk()\n    root.title(\"Gif Image\")\n    root.geometry(\"400x400\")\n    root.resizable(0,0)\n    c = Canvas(root, width=400, height=400)\n    c.pack()\n    gif1 = ImageTk.PhotoImage(Image.open(\"gif1.gif\"))\n    c.create_image(200, 200, image=gif1)\n    root.mainloop()\n    while True:\n        time.sleep(0.1)\n        c.delete(\"all\")\n        gif1 = ImageTk.PhotoImage(Image.open(\"gif1.gif\"))\n        c.create_image(200, 200, image=gif1)\n        root.update()\n",
        "def main():\n    root = Tk()\n    root.title(\"Moving Image\")\n    root.geometry(\"640x480\")\n    c = Canvas(root, width=640, height=480)\n    c.pack()\n    img = PhotoImage(file=\"../images/gif.gif\")\n    c.create_image(0, 0, image=img, anchor=NW)\n    root.mainloop()\n"
    ],
    "results": 10
},{
    "id": "34",
    "source": "soSearches",
    "language": "python",
    "query": "how to install skylearn in python",
    "snippets": [
        "def main():\n    print(\"hello world\")\n",
        "def main():\n    print(\"Hello World\")\n"
    ],
    "results": 9
},{
    "id": "35",
    "source": "soSearches",
    "language": "python",
    "query": "python how to print binary string without b",
    "snippets": [
        "def binary_string(n):\n    if n == 0:\n        return ''\n    else:\n        return str(n % 2) + binary_string(n // 2)\n",
        "def main():\n    print(bin(10))\n    print(bin(10).replace('0b', ''))\n    print(bin(10).replace('0b', '').replace('1', '#'))\n    print(bin(10).replace('0b', '').replace('1', '#').replace('0', ' '))\n    print(bin(10).replace('0b', '').replace('1', '#').replace('0', ' ').replace('#', '1'))\n    print(bin(10).replace('0b', '').replace('1', '#').replace('0', ' ').replace('#', '1').replace('1', '0'))\n    print(bin(10).replace('0b', '').replace('1', '#').replace('0', ' ').replace('#', '1').replace('1', '0').replace('0', '1'))\n    print(bin(10).replace('0b', '').replace('1', '#').replace('0', ' ').replace('#', '1').replace('1', '0').replace('0', '1').replace('1', '2'))\n    print(bin(10).replace('0b', '').replace('1', '#').replace('0', ' ').replace('#', '1').replace('1', '0').replace('0', '1').replace('1', '2').replace('2', '3'))\n    print(bin(10).replace('0b', '').replace('1', '#').replace('0', ' ').replace('#', '1').replace('1', '0').replace('0', '1').replace('1', '2').replace('2', '3').replace('3', '4'))\n    print(bin(10).replace('0b', '').replace('1', '#').replace('0', ' ').replace('#', '1').replace('1', '0').replace('0', '1').replace('1', '2').replace('2', '3').replace('3', '4').replace('4', '5'))\n    print(bin(10).replace('0b', '').replace\n",
        "def binary_string(num):\n    if num == 0:\n        return '0'\n    else:\n        return binary_string(num//2) + str(num%2)\n",
        "def binary_string(n):\n    return bin(n)[2:]\n"
    ],
    "results": 10
},{
    "id": "36",
    "source": "soSearches",
    "language": "python",
    "query": "how to import cv2 in python 3.6 on windows",
    "snippets": [
        "def main():\n    import cv2\n    print(cv2.__version__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.__doc__)\n    print(cv2.__all__)\n    print(cv2.__file__)\n    print(cv2.\n",
        "def main():\n    import cv2\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.animation as animation\n    import time\n    import os\n    import sys\n    import math\n    import random\n    import pickle\n    import argparse\n    import itertools\n    import collections\n    import re\n    import string\n    import warnings\n    import subprocess\n    import multiprocessing\n    import threading\n    import queue\n    import concurrent.futures\n    import functools\n    import collections.abc\n    import types\n    import inspect\n    import traceback\n    import pickle\n    import ctypes\n    import ctypes.util\n    import ctypes.wintypes\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.LPARAM\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LRESULT\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LPARAM\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LRESULT\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LPARAM\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LRESULT\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LPARAM\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LRESULT\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LPARAM\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LRESULT\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LPARAM\n    import ctypes.wintypes\n",
        "def main():\n    import cv2\n    img = cv2.imread('../../../../images/lena.jpg')\n    cv2.imshow('lena', img)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    import cv2\n    img = cv2.imread('../../../../images/lena.jpg')\n    cv2.imshow('image', img)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    import cv2\n    print(cv2.__version__)\n    return 0\n"
    ],
    "results": 7
},{
    "id": "37",
    "source": "soSearches",
    "language": "python",
    "query": "how to say and in python",
    "snippets": [
        "def say(word):\n    print(word)\n    return word\n",
        "def say(what):\n    print(what)\n    return what\n",
        "def say(word):\n    print(word)\n",
        "def say(word):\n    print(word)\n    return\n",
        "def say_hello():\n    print(\"Hello World\")\n    return\n"
    ],
    "results": 6
},{
    "id": "38",
    "source": "soSearches",
    "language": "python",
    "query": "how to iterate over a list in python",
    "snippets": [
        "def main():\n    # create a list of items\n    items = [1, 2, 3, 4, 5, 6]\n    # iterate over the list\n    for item in items:\n        print(item)\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    #\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # iterate over the list\n    for i in my_list:\n        print(i)\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(len(my_list)):\n        print(my_list[i])\n    # iterate over the list using a for loop\n    for i in range(\n",
        "def main():\n    # create a list of items\n    items = [1, 2, 3, 4, 5, 6]\n    # iterate over the list\n    for item in items:\n        print(item)\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i])\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)):\n        print(items[i], end=' ')\n    # iterate over the list using a for loop\n    for i in range(len(items)\n",
        "def main():\n    # create a list of items\n    items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # iterate over the list\n    for item in items:\n        print(item)\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print(items[item])\n    # iterate over the list using a for loop\n    for item in range(len(items)):\n        print\n",
        "def main():\n    # create a list of items\n    list1 = [\"apple\", \"banana\", \"cherry\"]\n    # iterate through the list\n    for x in list1:\n        print(x)\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    # iterate through the list using indices\n    for x in range(len(list1)):\n        print(list1[x])\n    #\n",
        "def main():\n    # create a list of items\n    list_of_items = [\"apple\", \"banana\", \"orange\", \"coconut\", \"strawberry\", \"lime\", \"grapefruit\"]\n    # iterate over the list\n    for item in list_of_items:\n        print(item)\n    # iterate over the list using a for loop\n    for i in range(len(list_of_items)):\n        print(list_of_items[i])\n    # iterate over the list using a for loop and index\n    for i in range(len(list_of_items)):\n        print(list_of_items[i], \"is at index\", i)\n    # iterate over the list using a for loop and index\n    for i in range(len(list_of_items)):\n        print(list_of_items[i], \"is at index\", i)\n    # iterate over the list using a for loop and index\n    for i in range(len(list_of_items)):\n        print(list_of_items[i], \"is at index\", i)\n    # iterate over the list using a for loop and index\n    for i in range(len(list_of_items)):\n        print(list_of_items[i], \"is at index\", i)\n    # iterate over the list using a for loop and index\n    for i in range(len(list_of_items)):\n        print(list_of_items[i], \"is at index\", i)\n    # iterate over the list using a for loop and index\n    for i in range(len(list_of_items)):\n        print(list_of_items[i], \"is at index\", i)\n    # iterate over the list using a for loop and index\n    for i in range(len(list_of_items)):\n        print(list_of_items[i], \"is at index\", i)\n    # iterate over the list using a for loop and index\n    for i in range(len(list_of_items)):\n        print(list_of_items[i], \"is at\n"
    ],
    "results": 6
},{
    "id": "39",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert dictionary to set in python",
    "snippets": [
        "def main():\n    d = {'a': 1, 'b': 2, 'c': 3}\n    s = set(d)\n    print(s)\n    print(type(s))\n    print(type(d))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d['b']))\n    print(type(d['c']))\n    print(type(d['a']))\n    print(type(d\n",
        "def main():\n    d = {'a': 1, 'b': 2, 'c': 3}\n    s = set(d)\n    print(s)\n    print(type(s))\n    print(type(d))\n    print(type(d.keys()))\n    print(type(d.values()))\n    print(type(d.items()))\n    print(type(d.items()[0]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n    print(type(d.items()[0][1]))\n    print(type(d.items()[0][0]))\n",
        "def main():\n    d = {'a': 1, 'b': 2, 'c': 3}\n    s = set(d)\n    print(s)\n",
        "def convert_dict_to_set(dictionary):\n    return set(dictionary.values())\n",
        "def dict_to_set(d):\n    return set(d.keys())\n"
    ],
    "results": 5
},{
    "id": "40",
    "source": "soSearches",
    "language": "python",
    "query": "how to draw check in python",
    "snippets": [
        "def draw_check(n):\n    for i in range(n):\n        for j in range(n):\n            if i == j or i + j == n - 1:\n                print(\"*\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print()\n",
        "def draw_check(n):\n    for i in range(n):\n        print(' ' * (n - i - 1) + '*' * (i + 1))\n    for i in range(n - 1, -1, -1):\n        print(' ' * (n - i - 1) + '*' * (i + 1))\n",
        "def draw_check(n):\n    for i in range(n):\n        print(' ' * (n - i - 1) + '*' * (i + 1))\n    for i in range(n - 1):\n        print(' ' * (i + 1) + '*' * (n - i - 1))\n",
        "def draw_check(n):\n    for i in range(n):\n        print(' ' * (n - i - 1) + '*' * (i + 1))\n    for i in range(n - 1):\n        print(' ' * (i + 1) + '*' * (n - i - 1))\n    print(' ' * (n - 1) + '*')\n    for i in range(n - 1):\n        print(' ' * (n - i - 2) + '*' * (i + 2))\n    print(' ' * (n - 1) + '*')\n    for i in range(n - 1):\n        print(' ' * (i + 1) + '*' * (n - i - 1))\n    for i in range(n):\n        print(' ' * (n - i - 1) + '*' * (i + 1))\n    print(' ' * (n - 1) + '*')\n    for i in range(n - 1):\n        print(' ' * (n - i - 2) + '*' * (i + 2))\n    print(' ' * (n - 1) + '*')\n    for i in range(n - 1):\n        print(' ' * (i + 1) + '*' * (n - i - 1))\n    for i in range(n):\n        print(' ' * (n - i - 1) + '*' * (i + 1))\n    print(' ' * (n - 1) + '*')\n    for i in range(n - 1):\n        print(' ' * (n - i - 2) + '*' * (i + 2))\n    print(' ' * (n - 1) + '*')\n    for i in range(n - 1):\n        print(' ' * (i + 1) + '*' * (n - i - 1))\n    for i in range(n):\n        print(' ' * (n - i - 1) + '*' * (i + 1))\n    print(' ' * (n - 1) + '*')\n    for i in range(n - 1):\n        print(' ' * (n - i -\n",
        "def draw_check(n):\n    for i in range(n):\n        for j in range(n):\n            if i == 0 or i == n-1 or j == 0 or j == n-1:\n                print(\"*\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print()\n",
        "def draw_check(n):\n    for i in range(n):\n        for j in range(n):\n            if i == j or i + j == n - 1:\n                print('*', end='')\n            else:\n                print(' ', end='')\n        print()\n",
        "def draw_check(n):\n    for i in range(n):\n        for j in range(n):\n            if i == j or i == n - j - 1:\n                print(\"*\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print()\n"
    ],
    "results": 9
},{
    "id": "41",
    "source": "soSearches",
    "language": "python",
    "query": "how to refer to the next letter in a string in python",
    "snippets": [
        "def next_letter(letter):\n    return chr(ord(letter) + 1)\n",
        "def main():\n    s = \"abcdefg\"\n    print(s[1])\n    print(s[2])\n    print(s[3])\n    print(s[4])\n    print(s[5])\n    print(s[6])\n    print(s[7])\n    print(s[8])\n    print(s[9])\n    print(s[10])\n    print(s[11])\n    print(s[12])\n    print(s[13])\n    print(s[14])\n    print(s[15])\n    print(s[16])\n    print(s[17])\n    print(s[18])\n    print(s[19])\n    print(s[20])\n    print(s[21])\n    print(s[22])\n    print(s[23])\n    print(s[24])\n    print(s[25])\n    print(s[26])\n    print(s[27])\n    print(s[28])\n    print(s[29])\n    print(s[30])\n    print(s[31])\n    print(s[32])\n    print(s[33])\n    print(s[34])\n    print(s[35])\n    print(s[36])\n    print(s[37])\n    print(s[38])\n    print(s[39])\n    print(s[40])\n    print(s[41])\n    print(s[42])\n    print(s[43])\n    print(s[44])\n    print(s[45])\n    print(s[46])\n    print(s[47])\n    print(s[48])\n    print(s[49])\n    print(s[50])\n    print(s[51])\n    print(s[52])\n    print(s[53])\n    print(s[54])\n    print(s[55])\n    print(s[56])\n    print(s[57])\n    print(s[58])\n    print(s[59])\n    print(s[60])\n    print(s[61])\n"
    ],
    "results": 10
},{
    "id": "42",
    "source": "soSearches",
    "language": "python",
    "query": "how to install aws cli in windows [python]",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n",
        "def install_aws_cli():\n    import os\n    import subprocess\n    import sys\n    import time\n    import win32com.client as win32\n    import win32con\n    import win32gui\n    import win32process\n    import win32event\n    import win32api\n    import winerror\n    import ctypes\n    import ctypes.wintypes\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.LPARAM\n    import ctypes.wintypes.WPARAM\n    import ctypes.wintypes.LRESULT\n    import ctypes.wintypes.UINT\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.HINSTANCE\n    import ctypes.wintypes.HWND\n",
        "def main():\n    print(\"hello world\")\n"
    ],
    "results": 8
},{
    "id": "43",
    "source": "soSearches",
    "language": "python",
    "query": "how to read and write 'dbf' files in python",
    "snippets": [
        "def main():\n    import dbf\n    import os\n    import sys\n    import csv\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import datetime as dt\n    import time\n    import calendar\n    import random\n    import scipy.stats as stats\n    import statsmodels.api as sm\n    import statsmodels.formula.api as smf\n    import statsmodels.stats.api as sms\n    import statsmodels.tools.tools as smt\n    import statsmodels.tools.eval_measures as sme\n    import xgboost as xgb\n    import lightgbm as lgb\n    import catboost as cb\n    import shap\n    import plotly.graph_objects as go\n    import plotly.express as px\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.subplots as psp\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.subplots as psp\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.subplots as psp\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.subplots as psp\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.\n",
        "def main():\n    import dbf\n    import os\n    import sys\n    import csv\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime\n    import time\n    import glob\n    import shutil\n    import re\n    import subprocess\n    import csv\n    import os\n    import sys\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime\n    import time\n    import glob\n    import shutil\n    import re\n    import subprocess\n    import csv\n    import os\n    import sys\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime\n    import time\n    import glob\n    import shutil\n    import re\n    import subprocess\n    import csv\n    import os\n    import sys\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime\n    import time\n    import glob\n    import shutil\n    import re\n    import subprocess\n    import csv\n    import os\n    import sys\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime\n    import time\n    import glob\n    import shutil\n    import re\n    import subprocess\n    import csv\n    import os\n    import sys\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime\n    import time\n    import glob\n    import shutil\n    import re\n    import subprocess\n    import csv\n    import os\n    import sys\n    import pandas as pd\n    import\n",
        "def main():\n    import dbf\n    import os\n    import sys\n    import csv\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import datetime as dt\n    import time\n    import calendar\n    import re\n    import math\n    import random\n    import string\n    import warnings\n    import logging\n    import logging.handlers\n    import itertools\n    import scipy\n    import scipy.stats\n    import scipy.special\n    import scipy.weave\n    import scipy.fftpack\n    import scipy.integrate\n    import scipy.optimize\n    import scipy.cluster\n    import scipy.spatial\n    import scipy.cluster.hierarchy\n    import scipy.sparse\n    import scipy.sparse.linalg\n    import scipy.sparse.csgraph\n    import scipy.sparse.linalg.eigen\n    import scipy.sparse.linalg.ds\n    import scipy.sparse.linalg.eigen.lg\n    import scipy.sparse.linalg.eigen.lg.lg\n    import scipy.sparse.linalg.eigen.lg.lg.lg\n    import scipy.sparse.linalg.eigen.lg.lg.lg.lg\n    import scipy.sparse.linalg.eigen.lg.lg.lg.lg.lg\n    import scipy.sparse.linalg.eigen.lg.lg.lg.lg.lg.lg\n    import scipy.sparse.linalg.eigen.lg.lg.lg.lg.lg.lg.lg\n    import scipy.sparse.linalg.eigen.lg.lg.lg.lg.lg.lg.lg.l\n",
        "def main():\n    import dbfread\n    import dbfwrite\n    import os\n    import sys\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime as dt\n    import time\n    import csv\n    import glob\n    import re\n    import itertools\n    import collections\n    import statistics\n    import scipy.stats as stats\n    import scipy.optimize as optimize\n    import scipy.integrate as integrate\n    import scipy.special as special\n    import scipy.weave as weave\n    import scipy.fftpack as fftpack\n    import scipy.signal as signal\n    import scipy.ndimage as ndimage\n    import scipy.cluster as cluster\n    import scipy.spatial as spatial\n    import scipy.cluster.hierarchy as hierarchy\n    import scipy.interpolate as interpolate\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import\n",
        "def main():\n    import dbfread\n    import dbfwrite\n    import os\n    import sys\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime as dt\n    import time\n    import calendar\n    import csv\n    import re\n    import glob\n    import shutil\n    import subprocess\n    import multiprocessing\n    import itertools\n    import collections\n    import operator\n    import functools\n    import random\n    import string\n    import math\n    import scipy\n    import scipy.stats\n    import scipy.optimize\n    import scipy.weave\n    import scipy.interpolate\n    import scipy.signal\n    import scipy.fftpack\n    import scipy.ndimage\n    import scipy.cluster\n    import scipy.spatial\n    import scipy.cluster.hierarchy\n    import scipy.cluster.vq\n    import scipy.linalg\n    import scipy.fftpack\n    import scipy.ndimage\n    import scipy.interpolate\n    import scipy.signal\n    import scipy.weave\n    import scipy.fftpack\n    import scipy.cluster\n    import scipy.spatial\n    import scipy.cluster.vq\n    import scipy.cluster.hierarchy\n    import scipy.linalg\n    import scipy.fftpack\n    import scipy.ndimage\n    import scipy.interpolate\n    import scipy.signal\n    import scipy.weave\n    import scipy.fftpack\n    import scipy.cluster\n    import scipy.spatial\n    import scipy.cluster.vq\n    import scipy.cluster.hierarchy\n    import scipy.linalg\n    import scipy.fftpack\n    import scipy.nd\n",
        "def main():\n    import dbf\n    import os\n    import sys\n    import time\n    import datetime\n    import csv\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.gridspec as gridspec\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.gridspec as gridspec\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.gridspec as gridspec\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib\n",
        "def read_dbf(filename):\n    import dbf\n    with open(filename, 'rb') as f:\n        reader = dbf.Reader(f)\n        for record in reader:\n            print(record)\n",
        "def main():\n    import dbfread\n    import dbfwrite\n    import os\n    import sys\n    import shutil\n    import glob\n    import re\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import scipy.stats as stats\n    import statsmodels.api as sm\n    import statsmodels.formula.api as smf\n    import statsmodels.stats.api as sms\n    import statsmodels.stats.multicomp as multicomp\n    import xgboost as xgb\n    import lightgbm as lgb\n    import catboost as ctb\n    import shap\n    import plotly.graph_objects as go\n    import plotly.express as px\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n"
    ],
    "results": 8
},{
    "id": "44",
    "source": "soSearches",
    "language": "python",
    "query": "how to get a user with google api using python",
    "snippets": [
        "def get_user(email):\n    from googleapiclient.discovery import build\n    from google_auth_oauthlib.flow import InstalledAppFlow\n",
        "def get_user_info(user_id):\n    url = 'https://www.googleapis.com/oauth2/v1/userinfo'\n    params = {'access_token': user_id}\n    r = requests.get(url, params=params)\n    return r.json()\n",
        "def get_user_info(user_id):\n    # get user info\n    url = 'https://www.googleapis.com/oauth2/v1/userinfo'\n    params = {'access_token': user_id}\n    response = requests.get(url, params=params)\n    return response.json()\n",
        "def get_user_info(user_id):\n    # get user info\n    url = 'https://www.googleapis.com/oauth2/v1/userinfo'\n    params = {'access_token': user_id}\n    r = requests.get(url, params=params)\n    return r.json()\n",
        "def get_user(email):\n    import httplib2\n    import os\n    import sys\n    import json\n    from apiclient import discovery\n    from oauth2client import client\n    from oauth2client import file\n    from oauth2client import tools\n    from apiclient.http import BatchHttpRequest\n    from apiclient.http import HttpRequest\n    from apiclient.http import HttpResponse\n    from apiclient.http import MediaFileUpload\n    from apiclient.http import MediaIoBaseDownload\n    from apiclient.http import MediaUpload\n    from apiclient.http import Request\n    from apiclient.http import BatchHttpRequest\n    from apiclient.http import HttpRequest\n    from apiclient.http import HttpResponse\n    from apiclient.http import MediaFileUpload\n    from apiclient.http import MediaIoBaseDownload\n    from apiclient.http import MediaUpload\n    from apiclient.http import Request\n    from apiclient.http import BatchHttpRequest\n    from apiclient.http import HttpRequest\n    from apiclient.http import HttpResponse\n    from apiclient.http import MediaFileUpload\n    from apiclient.http import MediaIoBaseDownload\n    from apiclient.http import MediaUpload\n    from apiclient.http import Request\n    from apiclient.http import BatchHttpRequest\n    from apiclient.http import HttpRequest\n    from apiclient.http import HttpResponse\n    from apiclient.http import MediaFileUpload\n    from apiclient.http import MediaIoBaseDownload\n    from apiclient.http import MediaUpload\n    from apiclient.http import Request\n    from apiclient.http import BatchHttpRequest\n    from apiclient.http import HttpRequest\n    from apiclient.http import HttpResponse\n    from apiclient.http import MediaFileUpload\n    from apiclient.http import MediaIoBaseDownload\n    from apicl\n",
        "def get_user_info(user_id):\n    # get user info\n    user_info = {\n        'id': user_id,\n        'name': 'John Doe',\n        'email': '\n",
        "def get_user(email):\n    # get user from google api\n    user = get_user_from_google(email)\n    # get user from database\n    user = get_user_from_database(user)\n    # return user\n    return user\n"
    ],
    "results": 10
},{
    "id": "45",
    "source": "soSearches",
    "language": "python",
    "query": "how to draw smiley with circle on turtle python 3",
    "snippets": [
        "def draw_circle(t, size):\n    t.circle(size)\n",
        "def main():\n    import turtle\n    turtle.setup(800, 600)\n    turtle.penup()\n    turtle.goto(-200, 0)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(0, -100)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(200, 0)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(0, 100)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(-100, 0)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(100, 0)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(0, -50)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(0, 50)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(-50, 0)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(50, 0)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(0, -25)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(0, 25)\n    turtle.pendown()\n    turtle.circle(40, steps=3)\n    turtle.penup()\n    turtle.goto(-25, 0)\n    turtle.pendown()\n    turtle.circle(40, steps=3\n"
    ],
    "results": 10
},{
    "id": "46",
    "source": "soSearches",
    "language": "python",
    "query": "how to find min date from all groups from groupby columns in python",
    "snippets": [
        "def min_date(df, group_cols):\n    return df.groupby(group_cols)['date'].min()\n",
        "def min_date(df, group_cols):\n    return df.groupby(group_cols).date.min()\n",
        "def min_date(df, group_cols):\n    return df.groupby(group_cols).date.min().reset_index()\n",
        "def get_min_date(df, group_cols):\n    return df.groupby(group_cols).agg({'date': 'min'}).reset_index()\n",
        "def get_min_date(df, group_by_cols):\n    return df.groupby(group_by_cols).agg({'date': 'min'}).reset_index()\n",
        "def min_date(df):\n    return df.groupby(['group1', 'group2']).date.min()\n",
        "def min_date(df, col):\n    return df.groupby(col).groups.keys()[0]\n"
    ],
    "results": 10
},{
    "id": "47",
    "source": "soSearches",
    "language": "python",
    "query": "how to set spyder as default program/app to open (.py) python file?",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n"
    ],
    "results": 10
},{
    "id": "48",
    "source": "soSearches",
    "language": "python",
    "query": "[python] how to use of",
    "snippets": [
        "def of(x, y):\n    return x + y\n",
        "def f1(a, b):\n    return a + b\n"
    ],
    "results": 2
},{
    "id": "49",
    "source": "soSearches",
    "language": "python",
    "query": "how to display a picture on the screen using python",
    "snippets": [
        "def main():\n    from PIL import Image\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Display an image')\n    img = Image.open('/home/pi/Desktop/python/python_learning/python_learning/images/python.png')\n    img = img.convert()\n    img_rect = img.get_rect()\n    img_rect.center = screen.get_rect().center\n    screen.blit(img, img_rect)\n    pygame.display.flip()\n    running = True\n    while running:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n    pygame.quit()\n",
        "def main():\n    from PIL import Image\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Display an image')\n    # load the image into memory\n    image = Image.open('/home/pi/Pictures/panda.jpg')\n    # convert the image into a format that can be displayed on the screen\n    image = image.convert()\n    # create a rectangle that will hold the image\n    rect = image.get_rect()\n    # draw the image onto the screen\n    screen.blit(image, rect)\n    # update the display\n    pygame.display.flip()\n    # wait for the user to quit\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                return\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # display the file\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # display the file\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # display the file\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # display the file\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # display the file\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # display the file\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # display the file\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # display the file\n    print(data)\n    # open the file\n    infile\n",
        "def main():\n    # open the file\n    pic = open(\"pic.txt\", \"r\")\n    # read the file\n    data = pic.read()\n    # close the file\n    pic.close()\n    # display the picture\n    print(data)\n",
        "def main():\n    from PIL import Image\n    import pygame\n    import sys\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Display an image')\n    try:\n        # load the image into memory\n        image = Image.open(sys.argv[1])\n    except IndexError:\n        # if no filename is given, use the default\n        image = Image.open('python-logo.png')\n    # convert the image into a format that pygame can display\n    image = image.convert()\n    # create a rectangle that will hold the image\n    rect = image.get_rect()\n    # draw the image onto the screen\n    screen.blit(image, rect)\n    # update the display\n    pygame.display.flip()\n    # wait for the user to quit\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n",
        "def main():\n    from PIL import Image\n    import pygame\n    import sys\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Display an image')\n    try:\n        img = Image.open(sys.argv[1])\n    except IndexError:\n        img = Image.open('python-logo.png')\n    img = img.convert()\n    screen.blit(img, (0, 0))\n    pygame.display.flip()\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n        pygame.display.update()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption(\"My Game\")\n    clock = pygame.time.Clock()\n    background = pygame.Surface(screen.get_size())\n    background.fill((0, 0, 0))\n    background = background.convert()\n    screen.blit(background, (0, 0))\n    pygame.display.flip()\n    clock.tick(60)\n    running = True\n    while running:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n        pygame.display.flip()\n        clock.tick(60)\n    pygame.quit()\n",
        "def main():\n    from PIL import Image\n    img = Image.open(\"/home/pi/Pictures/pig.jpg\")\n    img.show()\n    img.close()\n"
    ],
    "results": 9
},{
    "id": "50",
    "source": "soSearches",
    "language": "python",
    "query": "how to find a substring in a string in python",
    "snippets": [
        "def find_substring(string, substring):\n    if substring in string:\n        return True\n    else:\n        return False\n",
        "def find_substring(string, substring):\n    if string.find(substring) == -1:\n        return False\n    else:\n        return True\n",
        "def find_substring(string, substring):\n    \"\"\"\n    Finds a substring in a string\n    \"\"\"\n    if substring in string:\n        return True\n    else:\n        return False\n",
        "def find_substring(string, substring):\n    \"\"\"\n    Finds the substring in the string and returns the index of the first character.\n    \"\"\"\n    if substring in string:\n        return string.index(substring)\n    else:\n        return -1\n"
    ],
    "results": 10
},{
    "id": "51",
    "source": "soSearches",
    "language": "python",
    "query": "how to ask user to input age on python",
    "snippets": [
        "def main():\n    age = int(input(\"How old are you? \"))\n    if age >= 18:\n        print(\"You are old enough to vote!\")\n        print(\"Please put an X in the box.\")\n    else:\n        print(\"Please come back in {0} years.\".format(18 - age))\n",
        "def main():\n    age = int(input(\"How old are you? \"))\n    if age >= 18:\n        print(\"You are old enough to vote!\")\n        print(\"Please put an X in the box.\")\n    else:\n        print(\"Please wait until you are old enough to vote.\")\n        print(\"Please put an O in the box.\")\n",
        "def main():\n    age = int(input(\"How old are you? \"))\n    if age >= 18:\n        print(\"You are old enough to vote!\")\n        print(\"Please put an X in the box.\")\n    else:\n        print(\"Please wait until you are old enough to vote!\")\n        print(\"Please put an O in the box.\")\n",
        "def main():\n    age = int(input(\"How old are you? \"))\n    print(\"You are {} years old.\".format(age))\n    if age >= 18:\n        print(\"You are old enough to vote!\")\n    else:\n        print(\"You are not old enough to vote!\")\n    print(\"Have a nice day!\")\n",
        "def main():\n    age = int(input(\"Enter your age: \"))\n    if age < 18:\n        print(\"You are not allowed to vote\")\n    else:\n        print(\"You are allowed to vote\")\n",
        "def age_input():\n    age = int(input(\"How old are you? \"))\n    return age\n",
        "def main():\n    age = int(input(\"Enter your age: \"))\n    print(\"Your age is\", age)\n    if age >= 18:\n        print(\"You are old enough to vote\")\n    else:\n        print(\"You are not old enough to vote\")\n    print(\"Have a nice day!\")\n"
    ],
    "results": 9
},{
    "id": "52",
    "source": "soSearches",
    "language": "python",
    "query": "how to remove value in list using index using python",
    "snippets": [
        "def remove_value(lst, val):\n    while val in lst:\n        lst.remove(val)\n    return lst\n",
        "def remove_value(list, value):\n    list.remove(value)\n    return list\n",
        "def remove_value_using_index(list_of_values, value_to_remove):\n    list_of_values.pop(list_of_values.index(value_to_remove))\n    return list_of_values\n",
        "def remove_value(my_list, value):\n    for i in range(len(my_list)):\n        if my_list[i] == value:\n            my_list.pop(i)\n            return my_list\n    return my_list\n",
        "def remove_value(list, value):\n    while list.count(value) > 0:\n        list.remove(value)\n    return list\n"
    ],
    "results": 10
},{
    "id": "53",
    "source": "soSearches",
    "language": "python",
    "query": "how to use pi on python",
    "snippets": [
        "def pi(n):\n    sum = 0\n    for i in range(n):\n        x = (i - 0.5) / n\n        sum += 4.0 / (1 + x * x)\n    return sum\n",
        "def pi(n):\n    return (4 * (1 - (1/3) + (1/5) - (1/7) + (1/9) - (1/11) + (1/13) - (1/15)))**n\n",
        "def pi_calc(n):\n    pi = 0\n    for i in range(n):\n        pi += (1 / (2 * i + 1)) * (-1) ** i\n    return pi\n",
        "def pi(n):\n    return (4 * (1 - (1/3) + (1/5) - (1/7) + (1/9) - (1/11) + (1/13) - (1/15)))\n",
        "def pi(n):\n    sum = 0\n    for i in range(n):\n        sum += 1 / (2 * i + 1) * (-1) ** i\n    return sum * 4\n",
        "def pi(n):\n    pi = 0\n    k = 0\n    while k < n:\n        pi += (-1)**k / (2*k + 1)\n        k += 1\n    return pi\n",
        "def pi_approx(n):\n    pi = 0\n    for i in range(n):\n        pi += 1/pow(16, i) * (4/(8*i+1) - 2/(8*i+4) - 1/(8*i+5) - 1/(8*i+6))\n    return pi\n",
        "def pi_calculator(n):\n    pi = 0\n    for i in range(n):\n        pi += (1/pow(16,i))*(4/(8*i+1)-2/(8*i+4)-1/(8*i+5)-1/(8*i+6))\n    return pi\n",
        "def pi(n):\n    return (4 * (1 - (1 / (2 * n + 1)) + (1 / (4 * n * n + 4 * n + 1)) - (1 / (6 * n * n * n + 6 * n * n + 3 * n + 1))))\n",
        "def pi(n):\n    return (4 * (1 - 1/n) / (1 + 2/n + 2/n**2 + 2/n**3 + 2/n**4 + 2/n**5 + 2/n**6 + 2/n**7 + 2/n**8 + 2/n**9 + 2/n**10 + 2/n**11 + 2/n**12 + 2/n**13 + 2/n**14 + 2/n**15 + 2/n**16 + 2/n**17 + 2/n**18 + 2/n**19 + 2/n**20 + 2/n**21 + 2/n**22 + 2/n**23 + 2/n**24 + 2/n**25 + 2/n**26 + 2/n**27 + 2/n**28 + 2/n**29 + 2/n**30 + 2/n**31 + 2/n**32 + 2/n**33 + 2/n**34 + 2/n**35 + 2/n**36 + 2/n**37 + 2/n**38 + 2/n**39 + 2/n**40 + 2/n**41 + 2/n**42 + 2/n**43 + 2/n**44 + 2/n**45 + 2/n**46 + 2/n**47 + 2/n**48 + 2/n**49 + 2/n**50 + 2/n**51 + 2/n**52 + 2/n**53 + 2/n**54 + 2/n**55 + 2/n**56 + 2/n**57 + 2/n**58 + 2/n**59 + 2/n**60 + 2/n**61 + 2/n**62 + 2/n**63 + 2/n**64 + 2/n**65 + 2/n**66 + 2/n**67 + 2/n**68 + 2/n**69 + 2/n**70 + 2/n**71 + 2/n**72 + 2/n**73 + 2/n**74 + 2/n**75 + 2/n**76 + 2/n**77 + 2/n**78 + 2/n**79 + 2/n**80 +\n"
    ],
    "results": 10
},{
    "id": "54",
    "source": "soSearches",
    "language": "python",
    "query": "how to add sound to game in windows in python 3",
    "snippets": [
        "def play_sound(sound_file):\n    import pygame\n    pygame.init()\n    pygame.mixer.music.load(sound_file)\n    pygame.mixer.music.play()\n    input(\"Press Enter to stop the music...\")\n    pygame.mixer.music.stop()\n    pygame.quit()\n    return\n",
        "def play_sound(sound_file):\n    import pygame\n    pygame.init()\n    pygame.mixer.music.load(sound_file)\n    pygame.mixer.music.play()\n    pygame.event.wait()\n    pygame.quit()\n    return\n",
        "def main():\n    import pygame\n    pygame.init()\n    pygame.mixer.init()\n    pygame.mixer.music.load(\"sound.mp3\")\n    pygame.mixer.music.play()\n    pygame.event.wait()\n    pygame.quit()\n",
        "def main():\n    import pygame\n    pygame.init()\n    pygame.mixer.init()\n    pygame.mixer.music.load(\"music.mp3\")\n    pygame.mixer.music.play()\n    pygame.event.wait()\n    pygame.quit()\n",
        "def main():\n    import pygame\n    pygame.init()\n    pygame.mixer.init()\n    pygame.mixer.music.load(\"music.mp3\")\n    pygame.mixer.music.play()\n    pygame.event.wait()\n",
        "def main():\n    import pygame\n    import time\n    pygame.init()\n    pygame.mixer.init()\n    pygame.mixer.music.load(\"music.mp3\")\n    pygame.mixer.music.play()\n    time.sleep(10)\n    pygame.mixer.music.stop()\n    pygame.quit()\n    return 0\n"
    ],
    "results": 10
},{
    "id": "55",
    "source": "soSearches",
    "language": "python",
    "query": "how to automate facebook login in chrome using python",
    "snippets": [
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from\n",
        "def main():\n    # open the chrome browser\n    browser = webdriver.Chrome()\n    # go to the facebook login page\n    browser.get('https://www.facebook.com/')\n    # find the email and password fields\n    email_field = browser.find_element_by_id('email')\n    password_field = browser.find_element_by_id('pass')\n    # enter the email and password\n    email_field.send_keys('email')\n    password_field.send_keys('password')\n    # click the login button\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # close the browser\n    browser.close()\n",
        "def main():\n    # open chrome\n    browser = webdriver.Chrome()\n    # go to facebook\n    browser.get('https://www.facebook.com/')\n    # find the email and password fields\n    email_field = browser.find_element_by_id('email')\n    password_field = browser.find_element_by_id('pass')\n    # enter the email and password\n    email_field.send_keys('email')\n    password_field.send_keys('password')\n    # click the login button\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # close the browser\n    browser.close()\n",
        "def main():\n    # open chrome\n    browser = webdriver.Chrome()\n    # open facebook\n    browser.get('https://www.facebook.com/')\n    # find the email and password fields\n    email = browser.find_element_by_id('email')\n    password = browser.find_element_by_id('pass')\n    # enter the email and password\n    email.send_keys('email')\n    password.send_keys('password')\n    # click the login button\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # wait for the page to load\n    time.sleep(5)\n    # close the browser\n    browser.close()\n",
        "def main():\n    # open chrome\n    browser = webdriver.Chrome()\n    # open facebook\n    browser.get('https://www.facebook.com/')\n    # find the email and password fields\n    email_field = browser.find_element_by_id('email')\n    password_field = browser.find_element_by_id('pass')\n    # enter email and password\n    email_field.send_keys('email')\n    password_field.send_keys('password')\n    # click login\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # close browser\n    browser.close()\n",
        "def main():\n    # open chrome browser\n    browser = webdriver.Chrome()\n    # go to facebook login page\n    browser.get('https://www.facebook.com/')\n    # find the email and password fields\n    email_field = browser.find_element_by_id('email')\n    password_field = browser.find_element_by_id('pass')\n    # enter email and password\n    email_field.send_keys('email')\n    password_field.send_keys('password')\n    # click login button\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # close browser\n    browser.close()\n    # open chrome browser\n    browser = webdriver.Chrome()\n    # go to facebook login page\n    browser.get('https://www.facebook.com/')\n    # find the email and password fields\n    email_field = browser.find_element_by_id('email')\n    password_field = browser.find_element_by_id('pass')\n    # enter email and password\n    email_field.send_keys('email')\n    password_field.send_keys('password')\n    # click login button\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # close browser\n    browser.close()\n    # open chrome browser\n    browser = webdriver.Chrome()\n    # go to facebook login page\n    browser.get('https://www.facebook.com/')\n    # find the email and password fields\n    email_field = browser.find_element_by_id('email')\n    password_field = browser.find_element_by_id('pass')\n    # enter email and password\n    email_field.send_keys('email')\n    password_field.send_keys('password')\n    # click login button\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # close browser\n    browser.close()\n    # open chrome browser\n    browser = webdriver.Chrome()\n    # go\n",
        "def main():\n    # open chrome\n    browser = webdriver.Chrome()\n    # open facebook\n    browser.get('https://www.facebook.com/')\n    # find email and password fields\n    email = browser.find_element_by_id('email')\n    password = browser.find_element_by_id('pass')\n    # enter email and password\n    email.send_keys('email')\n    password.send_keys('password')\n    # click login\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # wait for page to load\n    time.sleep(5)\n    # close browser\n    browser.close()\n",
        "def main():\n    # open chrome browser\n    browser = webdriver.Chrome()\n    # open facebook login page\n    browser.get('https://www.facebook.com/')\n    # find username and password field and fill them with values\n    username = browser.find_element_by_id('email')\n    username.send_keys('username')\n    password = browser.find_element_by_id('pass')\n    password.send_keys('password')\n    # find login button and click it\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # wait for page to load\n    time.sleep(5)\n    # find the logout button and click it\n    logout_button = browser.find_element_by_id('userNavigationLabel')\n    logout_button.click()\n    # wait for page to load\n    time.sleep(5)\n    # find the logout button and click it\n    logout_button = browser.find_element_by_id('js_1')\n    logout_button.click()\n    # wait for page to load\n    time.sleep(5)\n    # close the browser\n    browser.close()\n",
        "def main():\n    # open chrome browser\n    browser = webdriver.Chrome()\n    # open facebook login page\n    browser.get('https://www.facebook.com/')\n    # find username and password field\n    username = browser.find_element_by_id('email')\n    password = browser.find_element_by_id('pass')\n    # enter username and password\n    username.send_keys('username')\n    password.send_keys('password')\n    # click login button\n    login_button = browser.find_element_by_id('loginbutton')\n    login_button.click()\n    # wait for page to load\n    time.sleep(5)\n    # close browser\n    browser.close()\n",
        "def main():\n    # open chrome\n    driver = webdriver.Chrome()\n    # open facebook\n    driver.get(\"https://www.facebook.com\")\n    # find email field\n    email_field = driver.find_element_by_id(\"email\")\n    # enter email\n    email_field.send_keys(\"\n"
    ],
    "results": 10
},{
    "id": "56",
    "source": "soSearches",
    "language": "python",
    "query": "how to add to empty canvas jes/python",
    "snippets": [
        "def main():\n    from tkinter import *\n    root = Tk()\n    canvas = Canvas(root, width=200, height=200)\n    canvas.pack()\n    canvas.create_rectangle(50, 50, 150, 150, fill=\"blue\")\n    canvas.create_rectangle(100, 100, 150, 150, fill=\"red\")\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    canvas = Canvas(root, width=200, height=200)\n    canvas.pack()\n    canvas.create_rectangle(50, 50, 150, 150, fill=\"red\")\n    canvas.create_rectangle(100, 100, 150, 150, fill=\"blue\")\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    canvas = Canvas(root, width=200, height=200)\n    canvas.pack()\n    canvas.create_rectangle(50, 50, 150, 150, fill=\"blue\")\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    canvas = Canvas(root, width=200, height=200)\n    canvas.pack()\n    canvas.create_rectangle(50, 50, 150, 150, fill=\"green\")\n    canvas.create_rectangle(100, 100, 150, 150, fill=\"red\")\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    canvas = Canvas(root, width=200, height=200)\n    canvas.pack()\n    canvas.create_rectangle(50, 50, 150, 150, fill=\"red\")\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    canvas = Canvas(root, width=200, height=200)\n    canvas.pack()\n    canvas.create_rectangle(50, 50, 150, 150, fill='blue')\n    canvas.create_rectangle(100, 100, 150, 150, fill='red')\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    canvas = Canvas(root, width=300, height=300)\n    canvas.pack()\n    canvas.create_rectangle(10, 10, 200, 200, fill=\"red\")\n    canvas.create_rectangle(10, 10, 200, 200, fill=\"blue\")\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    canvas = Canvas(root, width=200, height=200)\n    canvas.pack()\n    canvas.create_line(0, 0, 200, 200)\n    canvas.create_line(0, 200, 200, 0, fill=\"red\", dash=(4, 4))\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    root.title(\"Hello World\")\n    cv = Canvas(root, width=200, height=200)\n    cv.pack()\n    cv.create_line(0, 0, 200, 200)\n    cv.create_line(0, 200, 200, 0, fill=\"red\", dash=(4, 4))\n    cv.create_rectangle(50, 25, 150, 75, fill=\"blue\")\n    root.mainloop()\n"
    ],
    "results": 9
},{
    "id": "57",
    "source": "soSearches",
    "language": "python",
    "query": "how to check the string as all alphabets in python",
    "snippets": [
        "def check_alphabet(string):\n    for i in string:\n        if i.isalpha() == False:\n            return False\n    return True\n",
        "def is_alphabet(string):\n    for char in string:\n        if not char.isalpha():\n            return False\n    return True\n",
        "def check_string(string):\n    for i in string:\n        if i.isalpha() == False:\n            return False\n    return True\n",
        "def is_all_alphabet(string):\n    for char in string:\n        if not char.isalpha():\n            return False\n    return True\n",
        "def is_all_alphabets(string):\n    for char in string:\n        if char.isalpha() == False:\n            return False\n    return True\n",
        "def check_alphabets(string):\n    return string.isalpha()\n"
    ],
    "results": 10
},{
    "id": "58",
    "source": "soSearches",
    "language": "python",
    "query": "how to find a leap year using python",
    "snippets": [
        "def is_leap_year(year):\n    if year % 4 == 0:\n        if year % 100 == 0:\n            if year % 400 == 0:\n                return True\n            else:\n                return False\n        else:\n            return True\n    else:\n        return False\n",
        "def is_leap(year):\n    leap = False\n    if year % 4 == 0:\n        if year % 100 == 0:\n            if year % 400 == 0:\n                leap = True\n        else:\n            leap = True\n    return leap\n",
        "def is_leap(year):\n    leap = False\n    if year % 4 == 0 and year % 100 != 0:\n        leap = True\n    elif year % 400 == 0:\n        leap = True\n    return leap\n",
        "def is_leap_year(year):\n    if year % 4 != 0:\n        return False\n    elif year % 100 != 0:\n        return True\n    elif year % 400 != 0:\n        return False\n    else:\n        return True\n"
    ],
    "results": 10
},{
    "id": "59",
    "source": "soSearches",
    "language": "python",
    "query": "python how to inherit from two class",
    "snippets": [
        "def main():\n    # create a class\n    class Person:\n        def __init__(self, name, age):\n            self.name = name\n            self.age = age\n\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name)\n\n    # create a class\n    class Student(Person):\n        def __init__(self, name, age, major):\n            super().__init__(name, age)\n            self.major = major\n\n        def myfunc(self):\n            super().myfunc()\n            print(\"My major is \" + self.major)\n\n    # create a class\n    class Traveler(Student):\n        def __init__(self, name, age, major, location):\n            super().__init__(name, age, major)\n            self.location = location\n\n        def myfunc(self):\n            super().myfunc()\n            print(\"I am from \" + self.location)\n\n    # create a class\n    class Traveler(Student):\n        def __init__(self, name, age, major, location):\n            super().__init__(name, age, major)\n            self.location = location\n\n        def myfunc(self):\n            super().myfunc()\n            print(\"I am from \" + self.location)\n\n    # create a class\n    class Traveler(Student):\n        def __init__(self, name, age, major, location):\n            super().__init__(name, age, major)\n            self.location = location\n\n        def myfunc(self):\n            super().myfunc()\n            print(\"I am from \" + self.location)\n\n    # create a class\n    class Traveler(Student):\n        def __init__(self, name, age, major, location):\n            super().__init__(name, age, major)\n            self.location = location\n\n        def myfunc(self):\n            super().myfunc()\n            print(\"I am from \" + self.location)\n\n    # create a class\n    class Traveler(Student):\n        def __init__(self, name, age, major, location):\n            super().__init__(name, age\n",
        "def main():\n    # create a class\n    class Person:\n        def __init__(self, name, age):\n            self.name = name\n            self.age = age\n\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name)\n\n    # create a class\n    class Student(Person):\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am a student\")\n\n    # create a class\n    class Teacher(Person):\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am a teacher\")\n\n    # create an object of Person class\n    p1 = Person(\"John\", 36)\n    p1.myfunc()\n\n    # create an object of Student class\n    s1 = Student(\"Jane\", 25)\n    s1.myfunc()\n\n    # create an object of Teacher class\n    t1 = Teacher(\"Jim\", 56)\n    t1.myfunc()\n",
        "def main():\n    class A:\n        def __init__(self):\n            self.a = 1\n    class B(A):\n        def __init__(self):\n            self.b = 2\n    class C(B):\n        def __init__(self):\n            self.c = 3\n    c = C()\n    print(c.a, c.b, c.c)\n",
        "def main():\n    # create a class\n    class Person:\n        def __init__(self, name, age):\n            self.name = name\n            self.age = age\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name)\n\n    # create a class\n    class Student(Person):\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am a student\")\n\n    # create a class\n    class Teacher(Person):\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am a teacher\")\n\n    # create an object of Person class\n    p = Person(\"John\", \"35\")\n    p.myfunc()\n\n    # create an object of Student class\n    s = Student(\"Jane\", \"30\")\n    s.myfunc()\n\n    # create an object of Teacher class\n    t = Teacher(\"Jim\", \"40\")\n    t.myfunc()\n",
        "def main():\n    # create a class named Person\n    class Person:\n        def __init__(self, name, age):\n            self.name = name\n            self.age = age\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name)\n\n    # create a class named Student that inherits from Person\n    class Student(Person):\n        def __init__(self, name, age, major):\n            super().__init__(name, age)\n            self.major = major\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am a student\")\n\n    # create a class named Employee that inherits from Person\n    class Employee(Person):\n        def __init__(self, name, age, salary):\n            super().__init__(name, age)\n            self.salary = salary\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am an employee\")\n\n    # create a class named UniversityStudent that inherits from Student and Employee\n    class UniversityStudent(Student, Employee):\n        def __init__(self, name, age, major, salary):\n            super().__init__(name, age, major)\n            self.salary = salary\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am a university student\")\n\n    # create a class named Professor that inherits from Employee\n    class Professor(Employee):\n        def __init__(self, name, age, salary, department):\n            super().__init__(name, age, salary)\n            self.department = department\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am a professor\")\n\n    # create a class named Admin that inherits from Person\n    class Admin(Person):\n        def __init__(self, name, age, salary):\n            super().__init__(name, age)\n            self.salary = salary\n        def myfunc(self):\n            print(\"Hello my name is \" + self.name + \" and I am an admin\")\n",
        "def main():\n    # create a class\n    class Animal:\n        def __init__(self, name):\n            self.name = name\n        def speak(self):\n            print(\"Animal\")\n    # create a class\n    class Dog(Animal):\n        def speak(self):\n            print(\"Dog\")\n    # create a class\n    class Cat(Animal):\n        def speak(self):\n            print(\"Cat\")\n    # create an object of class Dog\n    d = Dog(\"Dog\")\n    # create an object of class Cat\n    c = Cat(\"Cat\")\n    # call the speak method of class Dog\n    d.speak()\n    # call the speak method of class Cat\n    c.speak()\n",
        "def main():\n    print(\"This is the main function\")\n    c = Child()\n    c.print_child()\n    c.print_parent()\n    c.print_parent_parent()\n    c.print_parent_parent_parent()\n    c.print_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent()\n    c.print_parent_parent_parent_parent_parent_parent_parent_parent_parent\n",
        "def main():\n    # create a class\n    class Animal:\n        def __init__(self, name):\n            self.name = name\n        def speak(self):\n            print(\"Animal says:\")\n        def __str__(self):\n            return self.name\n    # create a class\n    class Dog(Animal):\n        def speak(self):\n            print(\"Dog says:\")\n            super().speak()\n            print(\"Woof!\")\n    # create a class\n    class Cat(Animal):\n        def speak(self):\n            print(\"Cat says:\")\n            super().speak()\n            print(\"Meow!\")\n    # create a class\n    class Human(Animal):\n        def speak(self):\n            print(\"Human says:\")\n            super().speak()\n            print(\"Hello!\")\n    # create a class\n    class Pig(Animal):\n        def speak(self):\n            print(\"Pig says:\")\n            super().speak()\n            print(\"Oink!\")\n    # create a class\n    class Cow(Animal):\n        def speak(self):\n            print(\"Cow says:\")\n            super().speak()\n            print(\"Moo!\")\n    # create a class\n    class Bird(Animal):\n        def speak(self):\n            print(\"Bird says:\")\n            super().speak()\n            print(\"Tweet!\")\n    # create a class\n    class Fish(Animal):\n        def speak(self):\n            print(\"Fish says:\")\n            super().speak()\n            print(\"Glub glub!\")\n    # create a class\n    class Snake(Animal):\n        def speak(self):\n            print(\"Snake says:\")\n            super().speak()\n            print(\"Hiss!\")\n    # create a class\n    class Horse(Animal):\n        def speak(self):\n            print(\"Horse says:\")\n            super().speak()\n            print(\"Neigh!\")\n    # create a class\n    class Monkey(Animal):\n        def speak(self):\n            print(\"Monkey says:\")\n            super().speak()\n            print(\"Ooh ooh!\")\n    # create a class\n    class Bat(Animal):\n",
        "def main():\n    # create a class named Dog\n    class Dog:\n        # define a class method\n        def __init__(self, name):\n            self.name = name\n        def speak(self):\n            return self.name + ' says Woof!'\n    # create a class named Cat\n    class Cat:\n        # define a class method\n        def __init__(self, name):\n            self.name = name\n        def speak(self):\n            return self.name + ' says Meow!'\n    # create a class named Human\n    class Human:\n        # define a class method\n        def __init__(self, name):\n            self.name = name\n        def speak(self):\n            return self.name + ' says Hi!'\n    # create a class named Animal\n    class Animal:\n        # define a class method\n        def __init__(self, name):\n            self.name = name\n        def speak(self):\n            return self.name + ' says ???'\n    # create a class named Dog\n    class Dog(Animal, Dog):\n        # define a class method\n        def speak(self):\n            return self.name + ' says Woof!'\n    # create a class named Cat\n    class Cat(Animal, Cat):\n        # define a class method\n        def speak(self):\n            return self.name + ' says Meow!'\n    # create a class named Human\n    class Human(Animal, Human):\n        # define a class method\n        def speak(self):\n            return self.name + ' says Hi!'\n    # create a class named Animal\n    class Animal(Animal):\n        # define a class method\n        def speak(self):\n            return self.name + ' says ???'\n    # create a class named Dog\n    class Dog(Animal, Dog):\n        # define a class method\n        def speak(self):\n            return self.name + ' says Woof!'\n    # create a class named Cat\n    class Cat(Animal, Cat):\n        # define a class method\n        def speak(self):\n            return self.name + ' says Meow!'\n    # create a class named Human\n    class Human(Animal, Human):\n        #\n"
    ],
    "results": 10
},{
    "id": "60",
    "source": "soSearches",
    "language": "python",
    "query": "how to add two complex numbers in python3",
    "snippets": [
        "def add(a, b):\n    return a.real + b.real, a.imag + b.imag\n",
        "def add(a, b):\n    return a + b\n"
    ],
    "results": 10
},{
    "id": "61",
    "source": "soSearches",
    "language": "python",
    "query": "how to increment a variable in while loop in python 2.7",
    "snippets": [
        "def main():\n    i = 0\n    while i < 10:\n        i += 1\n        print(i)\n    print(\"Done\")\n",
        "def main():\n    i = 0\n    while i < 10:\n        i += 1\n        print(i)\n    print(\"Done!\")\n",
        "def main():\n    i = 0\n    while i < 10:\n        i += 1\n        print(i)\n    print(\"Done with loop\")\n"
    ],
    "results": 10
},{
    "id": "62",
    "source": "soSearches",
    "language": "python",
    "query": "how to remove float nan in python",
    "snippets": [
        "def remove_nan(arr):\n    return [x for x in arr if x != 'nan']\n"
    ],
    "results": 10
},{
    "id": "63",
    "source": "soSearches",
    "language": "python",
    "query": "how to get standard deviation of numbers in matrix python",
    "snippets": [
        "def std(matrix):\n    mean = sum(matrix) / len(matrix)\n    return (sum([(x - mean) ** 2 for x in matrix]) / len(matrix)) ** 0.5\n",
        "def std_dev(matrix):\n    mean = sum(matrix) / len(matrix)\n    return (sum([(x - mean)**2 for x in matrix]) / len(matrix))**0.5\n",
        "def stdev(matrix):\n    mean = sum(matrix) / len(matrix)\n    return sum([(x - mean) ** 2 for x in matrix]) / len(matrix)\n",
        "def stdev(matrix):\n    mean = sum(matrix) / len(matrix)\n    return sqrt(sum([(x - mean) ** 2 for x in matrix]) / len(matrix))\n",
        "def stdev(matrix):\n    mean = sum(matrix)/len(matrix)\n    sum_of_squares = 0\n    for i in matrix:\n        sum_of_squares += (i - mean)**2\n    return (sum_of_squares/len(matrix))**0.5\n",
        "def std(matrix):\n    mean = sum(matrix) / len(matrix)\n    sum_of_squares = 0\n    for i in matrix:\n        sum_of_squares += (i - mean) ** 2\n    return (sum_of_squares / len(matrix)) ** 0.5\n"
    ],
    "results": 10
},{
    "id": "64",
    "source": "soSearches",
    "language": "python",
    "query": "how to check if an data already present in a text file using python",
    "snippets": [
        "def check_data(data, filename):\n    with open(filename, 'r') as f:\n        for line in f:\n            if data in line:\n                return True\n    return False\n",
        "def check_if_present(data, filename):\n    with open(filename, 'r') as f:\n        for line in f:\n            if data in line:\n                return True\n    return False\n",
        "def check_if_present(data, file_name):\n    with open(file_name, 'r') as f:\n        for line in f:\n            if data in line:\n                return True\n    return False\n",
        "def check_if_data_present(data, file_name):\n    with open(file_name, 'r') as f:\n        for line in f:\n            if data in line:\n                return True\n    return False\n",
        "def check_data(data,filename):\n    with open(filename) as f:\n        for line in f:\n            if data in line:\n                return True\n    return False\n"
    ],
    "results": 10
},{
    "id": "65",
    "source": "soSearches",
    "language": "python",
    "query": "how to delete a character from a string in python",
    "snippets": [
        "def delete_char(string, char):\n    return string.replace(char, '')\n",
        "def main():\n    string = input(\"Enter a string: \")\n    char = input(\"Enter a character to delete: \")\n    print(string.replace(char, \"\"))\n",
        "def delete_char(string, index):\n    return string[:index] + string[index+1:]\n"
    ],
    "results": 9
},{
    "id": "66",
    "source": "soSearches",
    "language": "python",
    "query": "how to write a list to a new file python",
    "snippets": [
        "def main():\n    # open a file for writing\n    outfile = open('myfile.txt', 'w')\n    # create a list\n    mylist = ['spam', 'eggs', 'toast']\n    # write the list to the file\n    outfile.writelines(mylist)\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file into a list\n    readlist = infile.readlines()\n    # print the list\n    print(readlist)\n    # close the file\n    infile.close()\n",
        "def main():\n    # open a file for writing\n    outfile = open('myfile.txt', 'w')\n    # write some lines of data to the file\n    outfile.write('This is the first line.\\n')\n    outfile.write('This is the second line.\\n')\n    outfile.write('This is the third line.\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n",
        "def main():\n    # open a file for writing\n    outfile = open('myfile.txt', 'w')\n    # create a list\n    mylist = ['spam', 'eggs', 'toast']\n    # write the list to the file\n    outfile.write(str(mylist))\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file\n    print(infile.read())\n    # close the file\n    infile.close()\n",
        "def main():\n    # open a file for writing\n    outfile = open('myfile.txt', 'w')\n    # create a list\n    mylist = ['spam', 'eggs', 'toast']\n    # write the list to the file\n    for item in mylist:\n        outfile.write(item + '\\n')\n    # close the file\n    outfile.close()\n",
        "def main():\n    # open a file for writing\n    outfile = open('myfile.txt', 'w')\n    # write some lines of data to the file\n    outfile.write('This is the first line.\\n')\n    outfile.write('This is the second line.\\n')\n    outfile.write('This is the third line.\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n    # open the file for appending\n    outfile = open('myfile.txt', 'a')\n    # write some lines of data to the file\n    outfile.write('This is the fourth line.\\n')\n    outfile.write('This is the fifth line.\\n')\n    outfile.write('This is the sixth line.\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.readline())\n    print(infile.readline())\n    print(infile.readline())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.readline())\n    print(infile.readline())\n    print(infile.readline())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.readline())\n    print(infile.readline())\n",
        "def main():\n    # open a file for writing\n    outfile = open(\"myfile.txt\", \"w\")\n    # write some lines of data to the file\n    outfile.write(\"Line 1\\n\")\n    outfile.write(\"Line 2\\n\")\n    outfile.write(\"Line 3\\n\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n",
        "def main():\n    # open a file for writing\n    outfile = open('myfile.txt', 'w')\n    # write some lines of data to the file\n    outfile.write('This is line #1\\n')\n    outfile.write('This is line #2\\n')\n    outfile.write('This is line #3\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n    # open the file for appending\n    outfile = open('myfile.txt', 'a')\n    # write some lines of data to the file\n    outfile.write('This is line #4\\n')\n    outfile.write('This is line #5\\n')\n    outfile.write('This is line #6\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n",
        "def main():\n    # open the file for writing\n    outfile = open('myfile.txt', 'w')\n    # create a list\n    mylist = ['spam', 'eggs', 'toast']\n    # write the list to the file\n    outfile.write(str(mylist))\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file\n    print(infile.read())\n    # close the file\n    infile.close()\n",
        "def main():\n    # open a file for writing\n    outfile = open(\"myfile.txt\", \"w\")\n    # write some lines of data to the file\n    outfile.write(\"This is the first line.\\n\")\n    outfile.write(\"This is the second line.\\n\")\n    outfile.write(\"This is the third line.\\n\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n",
        "def main():\n    # open the file for writing\n    f = open(\"myfile.txt\", \"w\")\n    # create a list of items\n    items = [\"first item\", \"second item\", \"third item\"]\n    # iterate through the list\n    for item in items:\n        # write the item to the file\n        f.write(item + \"\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"myfile.txt\", \"r\")\n    # read the contents of the file\n    print(f.read())\n    # close the file\n    f.close()\n"
    ],
    "results": 10
},{
    "id": "67",
    "source": "soSearches",
    "language": "python",
    "query": "how to count the same string in a column in dictionary python",
    "snippets": [
        "def count_same_string(column):\n    d = {}\n    for i in column:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return d\n",
        "def count_same_string(column):\n    \"\"\"\n    Count the same string in a column in dictionary python\n    \"\"\"\n    d = {}\n    for i in column:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return d\n",
        "def count_same_string(column):\n    \"\"\"\n    Count the same string in a column in dictionary python\n    \"\"\"\n    dic = {}\n    for i in column:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    return dic\n",
        "def count_same_string(column):\n    \"\"\"\n    count the same string in a column in dictionary python\n    \"\"\"\n    dic = {}\n    for i in column:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    return dic\n",
        "def main():\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n    # close the file\n    infile.close()\n    # split the file into a list\n    words = words.split()\n    # create a dictionary\n    d = {}\n    # loop through the list\n    for word in words:\n        # if the word is in the dictionary\n        if word in d:\n            # increment the value\n            d[word] += 1\n        # if the word is not in the dictionary\n        else:\n            # add the word to the dictionary\n            d[word] = 1\n    # print the dictionary\n    print(d)\n    # loop through the dictionary\n    for key in d:\n        # if the value is greater than 1\n        if d[key] > 1:\n            # print the key and value\n            print(key, d[key])\n",
        "def main():\n    # open the file\n    f = open(\"words.txt\", \"r\")\n    # read the file\n    words = f.read()\n    # close the file\n    f.close()\n    # split the words into a list\n    words = words.split()\n    # create a dictionary\n    d = {}\n    # loop through the words\n    for word in words:\n        # if the word is in the dictionary\n        if word in d:\n            # add 1 to the value\n            d[word] += 1\n        # if the word is not in the dictionary\n        else:\n            # add the word to the dictionary with a value of 1\n            d[word] = 1\n    # print the dictionary\n    print(d)\n    # print the number of words in the dictionary\n    print(len(d))\n    # print the number of unique words in the dictionary\n    print(len(d.keys()))\n    # print the number of times the word 'python' appears in the dictionary\n    print(d['python'])\n    # print the number of times the word 'java' appears in the dictionary\n    print(d['java'])\n    # print the number of times the word 'c' appears in the dictionary\n    print(d['c'])\n    # print the number of times the word 'c++' appears in the dictionary\n    print(d['c++'])\n    # print the number of times the word 'c#' appears in the dictionary\n    print(d['c#'])\n    # print the number of times the word 'c%' appears in the dictionary\n    print(d['c%'])\n    # print the number of times the word 'c$' appears in the dictionary\n    print(d['c$'])\n    # print the number of times the word 'c&' appears in the dictionary\n    print(d['c&'])\n    # print the number of times the word 'c*' appears in the dictionary\n    print(d['c*'])\n    # print the number of times the word 'c!' appears in the dictionary\n    print(d['c!'])\n    # print the number of times the word 'c@'\n",
        "def count_same_string_in_column(column):\n    \"\"\"\n    count the same string in a column in dictionary python\n    \"\"\"\n    dic = {}\n    for i in column:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    return dic\n",
        "def count_same_string(column):\n    \"\"\"\n    Count the same string in a column in dictionary python\n    \"\"\"\n    column = column.lower()\n    column = column.replace(' ', '')\n    column = column.replace('\\n', '')\n    column = column.replace('\\t', '')\n    column = column.replace('\\r', '')\n    column = column.replace('\\0', '')\n    column = column.replace('\\x0b', '')\n    column = column.replace('\\x0c', '')\n    column = column.replace('\\x0d', '')\n    column = column.replace('\\x1c', '')\n    column = column.replace('\\x1d', '')\n    column = column.replace('\\x1e', '')\n    column = column.replace('\\x1f', '')\n    column = column.replace('\\x7f', '')\n    column = column.replace('\\x80', '')\n    column = column.replace('\\x81', '')\n    column = column.replace('\\x82', '')\n    column = column.replace('\\x83', '')\n    column = column.replace('\\x84', '')\n    column = column.replace('\\x85', '')\n    column = column.replace('\\x86', '')\n    column = column.replace('\\x87', '')\n    column = column.replace('\\x88', '')\n    column = column.replace('\\x89', '')\n    column = column.replace('\\x8a', '')\n    column = column.replace('\\x8b', '')\n    column = column.replace('\\x8c', '')\n    column = column.replace('\\x8d', '')\n    column = column.replace('\\x8e', '')\n    column = column.replace('\\x8f', '')\n    column = column.replace('\\x90', '')\n    column = column.replace('\\x91', '')\n    column = column.replace('\\x92', '')\n    column = column.replace('\\x\n"
    ],
    "results": 10
},{
    "id": "68",
    "source": "soSearches",
    "language": "python",
    "query": "how to print \\br in python",
    "snippets": [
        "def main():\n    print(\"\\b\")\n    print(\"\\b\\b\")\n    print(\"\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\")\n    print(\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\n"
    ],
    "results": 6
},{
    "id": "69",
    "source": "soSearches",
    "language": "python",
    "query": "how to fill nan values in dataframe in python",
    "snippets": [
        "def fill_nan(df):\n    df.fillna(method='ffill', inplace=True)\n    df.fillna(method='bfill', inplace=True)\n    return df\n",
        "def fill_nan(df, col_name):\n    df[col_name] = df[col_name].fillna(df[col_name].mean())\n    return df\n",
        "def fill_nan(df):\n    df.fillna(df.mean(), inplace=True)\n    return df\n",
        "def fill_nan(df, col_name):\n    df[col_name].fillna(df[col_name].mean(), inplace=True)\n    return df\n"
    ],
    "results": 10
},{
    "id": "70",
    "source": "soSearches",
    "language": "python",
    "query": "how to input a atrix in python",
    "snippets": [
        "def main():\n    print(\"This program adds two matrices\")\n    print(\"Enter the size of the first matrix:\")\n    rows1 = int(input(\"rows: \"))\n    cols1 = int(input(\"cols: \"))\n    print(\"Enter the size of the second matrix:\")\n    rows2 = int(input(\"rows: \"))\n    cols2 = int(input(\"cols: \"))\n    if cols1 != rows2:\n        print(\"Columns of the first matrix must match rows of the second\")\n        return\n    print(\"Enter the first matrix row by row:\")\n    matrix1 = []\n    for i in range(rows1):\n        matrix1.append([])\n        for j in range(cols1):\n            matrix1[i].append(int(input(\"[\" + str(i) + \"][\" + str(j) + \"]: \")))\n    print(\"Enter the second matrix row by row:\")\n    matrix2 = []\n    for i in range(rows2):\n        matrix2.append([])\n        for j in range(cols2):\n            matrix2[i].append(int(input(\"[\" + str(i) + \"][\" + str(j) + \"]: \")))\n    print(\"The first matrix is:\")\n    for i in range(rows1):\n        for j in range(cols1):\n            print(\"{0:>4}\".format(matrix1[i][j]), end=\"\")\n        print()\n    print(\"The second matrix is:\")\n    for i in range(rows2):\n        for j in range(cols2):\n            print(\"{0:>4}\".format(matrix2[i][j]), end=\"\")\n        print()\n    print(\"The sum of the matrices is:\")\n    matrixsum = [[0 for i in range(cols1)] for j in range(rows1)]\n    for i in range(rows1):\n        for j in range(cols1):\n            matrixsum[i][j] = matrix1[i][j] + matrix2[i][j]\n    for i in range(rows1\n",
        "def main():\n    print(\"This program adds two matrices\")\n    print(\"Enter the size of the first matrix:\")\n    rows1 = int(input(\"Enter number of rows: \"))\n    cols1 = int(input(\"Enter number of columns: \"))\n    print(\"Enter the size of the second matrix:\")\n    rows2 = int(input(\"Enter number of rows: \"))\n    cols2 = int(input(\"Enter number of columns: \"))\n    if cols1 != rows2:\n        print(\"Matrices are not addable\")\n    else:\n        print(\"Enter the first matrix:\")\n        matrix1 = []\n        for i in range(rows1):\n            matrix1.append([])\n            for j in range(cols1):\n                matrix1[i].append(int(input(\"Enter an integer: \")))\n        print(\"Enter the second matrix:\")\n        matrix2 = []\n        for i in range(rows2):\n            matrix2.append([])\n            for j in range(cols2):\n                matrix2[i].append(int(input(\"Enter an integer: \")))\n        matrix3 = []\n        for i in range(rows1):\n            matrix3.append([])\n            for j in range(cols2):\n                matrix3[i].append(0)\n        for i in range(rows1):\n            for j in range(cols2):\n                for k in range(cols1):\n                    matrix3[i][j] += matrix1[i][k] * matrix2[k][j]\n        print(\"The sum of the matrices is:\")\n        for i in range(rows1):\n            for j in range(cols2):\n                print(matrix3[i][j], end=\" \")\n            print()\n",
        "def main():\n    print(\"This program adds two matrices\")\n    rows1 = int(input(\"Enter the number of rows for the first matrix: \"))\n    columns1 = int(input(\"Enter the number of columns for the first matrix: \"))\n    matrix1 = []\n    for i in range(rows1):\n        matrix1.append([])\n        for j in range(columns1):\n            matrix1[i].append(int(input(\"Enter an element for the first matrix: \")))\n    rows2 = int(input(\"Enter the number of rows for the second matrix: \"))\n    columns2 = int(input(\"Enter the number of columns for the second matrix: \"))\n    matrix2 = []\n    for i in range(rows2):\n        matrix2.append([])\n        for j in range(columns2):\n            matrix2[i].append(int(input(\"Enter an element for the second matrix: \")))\n    if columns1 != rows2:\n        print(\"The number of columns in the first matrix must match the number of rows in the second matrix\")\n    else:\n        matrix3 = []\n        for i in range(rows1):\n            matrix3.append([])\n            for j in range(columns2):\n                matrix3[i].append(0)\n                for k in range(columns1):\n                    matrix3[i][j] += matrix1[i][k] * matrix2[k][j]\n        print(\"The resulting matrix is: \")\n        for i in range(rows1):\n            for j in range(columns2):\n                print(matrix3[i][j], end=\" \")\n            print()\n",
        "def main():\n    print(\"This program adds two matrices.\")\n    rows1 = int(input(\"Enter number of rows for first matrix: \"))\n    columns1 = int(input(\"Enter number of columns for first matrix: \"))\n    rows2 = int(input(\"Enter number of rows for second matrix: \"))\n    columns2 = int(input(\"Enter number of columns for second matrix: \"))\n    if columns1 != rows2:\n        print(\"Matrices do not have the same size.\")\n        return\n    matrix1 = []\n    matrix2 = []\n    for i in range(rows1):\n        matrix1.append([])\n        for j in range(columns1):\n            matrix1[i].append(int(input(\"Enter element for row \" + str(i+1) + \" and column \" + str(j+1) + \": \")))\n    for i in range(rows2):\n        matrix2.append([])\n        for j in range(columns2):\n            matrix2[i].append(int(input(\"Enter element for row \" + str(i+1) + \" and column \" + str(j+1) + \": \")))\n    print(\"The first matrix is:\")\n    for i in range(rows1):\n        for j in range(columns1):\n            print(matrix1[i][j], end=\" \")\n        print()\n    print(\"The second matrix is:\")\n    for i in range(rows2):\n        for j in range(columns2):\n            print(matrix2[i][j], end=\" \")\n        print()\n    matrix3 = []\n    for i in range(rows1):\n        matrix3.append([])\n        for j in range(columns2):\n            matrix3[i].append(0)\n    for i in range(rows1):\n        for j in range(columns2):\n            for k in range(columns1):\n                matrix3[i][j] += matrix1[i][k] * matrix2[k][j]\n    print(\"The result is:\")\n    for i in range(rows1):\n        for j in range(\n",
        "def main():\n    print(\"This program finds the sum of the elements in a matrix.\")\n    rows = int(input(\"How many rows does the matrix have? \"))\n    columns = int(input(\"How many columns does the matrix have? \"))\n    matrix = []\n    for i in range(rows):\n        matrix.append([])\n        for j in range(columns):\n            matrix[i].append(int(input(\"Enter an integer for element [\" + str(i) + \"][\" + str(j) + \"]: \")))\n    print(\"The matrix is:\")\n    for i in range(rows):\n        for j in range(columns):\n            print(\"{:>3}\".format(matrix[i][j]), end=\"\")\n        print()\n    sum = 0\n    for i in range(rows):\n        for j in range(columns):\n            sum += matrix[i][j]\n    print(\"The sum of the matrix is \" + str(sum))\n",
        "def main():\n    print(\"This program adds two matrices together.\")\n    print(\"Enter the number of rows and columns for the first matrix:\")\n    rows1 = int(input(\"Enter the number of rows: \"))\n    cols1 = int(input(\"Enter the number of columns: \"))\n    print(\"Enter the number of rows and columns for the second matrix:\")\n    rows2 = int(input(\"Enter the number of rows: \"))\n    cols2 = int(input(\"Enter the number of columns: \"))\n    if cols1 != rows2:\n        print(\"The number of columns in the first matrix must match the number of rows in the second matrix.\")\n        return\n    print(\"Enter the first matrix row by row:\")\n    matrix1 = []\n    for i in range(rows1):\n        matrix1.append([])\n        for j in range(cols1):\n            matrix1[i].append(float(input(\"Enter element (\" + str(i + 1) + \",\" + str(j + 1) + \"): \")))\n    print(\"Enter the second matrix row by row:\")\n    matrix2 = []\n    for i in range(rows2):\n        matrix2.append([])\n        for j in range(cols2):\n            matrix2[i].append(float(input(\"Enter element (\" + str(i + 1) + \",\" + str(j + 1) + \"): \")))\n    print(\"The first matrix is:\")\n    for i in range(rows1):\n        for j in range(cols1):\n            print(\"{0:.2f}\".format(matrix1[i][j]), end=\" \")\n        print()\n    print(\"The second matrix is:\")\n    for i in range(rows2):\n        for j in range(cols2):\n            print(\"{0:.2f}\".format(matrix2[i][j]), end=\" \")\n        print()\n    print(\"The sum of the two matrices is:\")\n    matrix3 = []\n    for i in range(rows1):\n        matrix3.append([])\n        for j in range(cols2):\n",
        "def main():\n    print(\"This program adds two matrices\")\n    print(\"Enter the order of the matrices\")\n    order = int(input())\n    print(\"Enter the first matrix row by row\")\n    matrix1 = []\n    for i in range(order):\n        matrix1.append(input().split())\n    print(\"Enter the second matrix row by row\")\n    matrix2 = []\n    for i in range(order):\n        matrix2.append(input().split())\n    print(\"The sum of the matrices is:\")\n    for i in range(order):\n        for j in range(order):\n            print(int(matrix1[i][j]) + int(matrix2[i][j]), end=\" \")\n        print()\n",
        "def main():\n    # get the matrix from the user\n    matrix = get_matrix()\n    # print the matrix\n    print_matrix(matrix)\n    # get the sum of the matrix\n    sum = get_sum(matrix)\n    # print the sum\n    print(\"The sum of the matrix is:\", sum)\n    # get the average of the matrix\n    average = get_average(matrix)\n    # print the average\n    print(\"The average of the matrix is:\", average)\n    # get the minimum of the matrix\n    minimum = get_minimum(matrix)\n    # print the minimum\n    print(\"The minimum of the matrix is:\", minimum)\n    # get the maximum of the matrix\n    maximum = get_maximum(matrix)\n    # print the maximum\n    print(\"The maximum of the matrix is:\", maximum)\n    # get the product of the matrix\n    product = get_product(matrix)\n    # print the product\n    print(\"The product of the matrix is:\", product)\n    # get the transpose of the matrix\n    transpose = get_transpose(matrix)\n    # print the transpose\n    print(\"The transpose of the matrix is:\")\n    print_matrix(transpose)\n    # get the determinant of the matrix\n    determinant = get_determinant(matrix)\n    # print the determinant\n    print(\"The determinant of the matrix is:\", determinant)\n    # get the inverse of the matrix\n    inverse = get_inverse(matrix)\n    # print the inverse\n    print(\"The inverse of the matrix is:\")\n    print_matrix(inverse)\n    # get the eigenvalues of the matrix\n    eigenvalues = get_eigenvalues(matrix)\n    # print the eigenvalues\n    print(\"The eigenvalues of the matrix are:\", eigenvalues)\n    # get the eigenvectors of the matrix\n    eigenvectors = get_eigenvectors(matrix)\n    # print the eigenvectors\n    print(\"The eigenvectors of the matrix are:\")\n    print_matrix(eigen\n",
        "def main():\n    print(\"This program finds the sum of the numbers in the matrix\")\n    print(\"Enter the number of rows and columns in the matrix\")\n    rows = int(input(\"Enter the number of rows: \"))\n    columns = int(input(\"Enter the number of columns: \"))\n    print(\"Enter the elements in the matrix\")\n    matrix = []\n    for i in range(rows):\n        matrix.append([])\n        for j in range(columns):\n            matrix[i].append(int(input(\"Enter element [{0}][{1}]: \".format(i, j))))\n    print(\"The matrix is:\")\n    for i in range(rows):\n        for j in range(columns):\n            print(\"{0:5d}\".format(matrix[i][j]), end=\"\")\n        print()\n    sum = 0\n    for i in range(rows):\n        for j in range(columns):\n            sum += matrix[i][j]\n    print(\"The sum of the elements in the matrix is {0}\".format(sum))\n",
        "def main():\n    # create a matrix\n    matrix = []\n    # create a list of rows\n    rows = int(input(\"Enter the number of rows: \"))\n    # create a list of columns\n    columns = int(input(\"Enter the number of columns: \"))\n    # create a list of elements\n    elements = int(input(\"Enter the number of elements: \"))\n    # create a list of elements\n    for i in range(rows):\n        matrix.append([])\n        for j in range(columns):\n            matrix[i].append(0)\n    # create a list of elements\n    for i in range(elements):\n        # get the row\n        row = int(input(\"Enter the row: \"))\n        # get the column\n        column = int(input(\"Enter the column: \"))\n        # get the element\n        element = int(input(\"Enter the element: \"))\n        # set the element\n        matrix[row][column] = element\n    # print the matrix\n    print(\"The matrix is:\")\n    for i in range(rows):\n        for j in range(columns):\n            print(\"{0:>3}\".format(matrix[i][j]), end=\"\")\n        print()\n    # get the row\n    row = int(input(\"Enter the row: \"))\n    # get the column\n    column = int(input(\"Enter the column: \"))\n    # get the element\n    element = matrix[row][column]\n    # print the element\n    print(\"The element is:\", element)\n    # get the row\n    row = int(input(\"Enter the row: \"))\n    # get the column\n    column = int(input(\"Enter the column: \"))\n    # get the element\n    element = matrix[row][column]\n    # print the element\n    print(\"The element is:\", element)\n    # get the row\n    row = int(input(\"Enter the row: \"))\n    # get the column\n    column = int(input(\"Enter the column: \"))\n    # get the element\n    element = matrix[row][column]\n    # print the element\n    print(\"The element is\n"
    ],
    "results": 10
},{
    "id": "71",
    "source": "soSearches",
    "language": "python",
    "query": "how to unit-test code that uses python-multiprocessing",
    "snippets": [
        "def test_multiprocessing():\n    import multiprocessing\n    import time\n    import random\n    import string\n    import os\n    import sys\n    import traceback\n    import logging\n    import logging.handlers\n    import multiprocessing\n    import\n",
        "def test_multiprocessing():\n    import multiprocessing\n    import time\n    import os\n    import sys\n    import random\n    import string\n    import logging\n    import logging.handlers\n    import unittest\n    import tempfile\n    import shutil\n    import subprocess\n    import traceback\n    import signal\n    import threading\n    import queue\n    import collections\n    import itertools\n    import functools\n    import operator\n    import math\n    import cmath\n    import fractions\n    import decimal\n    import array\n    import numpy\n    import scipy\n    import matplotlib\n    import pandas\n    import sympy\n    import ipython\n    import ipython.parallel\n    import ipython.parallel.controller\n    import ipython.parallel.engine\n    import ipython.parallel.error\n    import ipython.parallel.util\n    import ipython.parallel.view\n    import ipython.parallel.asyncresult\n    import ipython.parallel.interactive\n    import ipython.parallel.controllerlauncher\n    import ipython.parallel.enginelauncher\n    import ipython.parallel.viewlauncher\n    import ipython.parallel.futurescheduler\n    import ipython.parallel.futureschedulerlauncher\n    import ipython.parallel.futureschedulerprocess\n    import ipython.parallel.futureschedulerthread\n    import ipython.parallel.futureschedulerworker\n    import ipython.parallel.futureschedulerworkerprocess\n    import ipython.parallel.futureschedulerworkerthread\n    import ipython.parallel.futureschedulerworkerprocessthread\n    import ipython.parallel.futureschedulerworkerprocessthreadprocess\n    import ipython.parallel.futureschedulerworkerprocessthreadthread\n    import ipython.parallel.futureschedulerworkerprocessthreadthreadprocess\n    import ipython.parallel.futureschedulerworkerprocessthreadthreadthreadprocess\n    import ipython.parallel.futureschedulerworkerprocessthreadthreadthreadthreadprocess\n    import\n",
        "def test_multiprocessing():\n    import multiprocessing\n    import time\n    import os\n    import sys\n    import random\n    import string\n    import logging\n    import logging.handlers\n    import traceback\n    import unittest\n    import tempfile\n    import shutil\n    import subprocess\n    import threading\n    import queue\n    import multiprocessing\n    import multiprocessing.pool\n    import multiprocessing.managers\n    import multiprocessing.connection\n    import multiprocessing.dummy\n    import multiprocessing.queues\n    import multiprocessing.synchronize\n    import multiprocessing.util\n    import multiprocessing.event\n    import multiprocessing.queues\n    import multiprocessing.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes\n    import multiprocessing.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedctypes.sharedct\n",
        "def test_multiprocessing():\n    import multiprocessing\n    import time\n    def worker(x):\n        print('worker:', x)\n        time.sleep(1)\n        return x * 2\n    pool = multiprocessing.Pool(processes=2)\n    result = pool.map(worker, range(10))\n    print(result)\n    pool.close()\n    pool.join()\n    assert result == [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n    print('test_multiprocessing passed')\n",
        "def test_multiprocessing():\n    import multiprocessing\n    import time\n    import random\n    import string\n    import logging\n    import logging.handlers\n    import sys\n    import os\n    import traceback\n    import signal\n    import subprocess\n    import tempfile\n    import shutil\n    import unittest\n    import unittest.mock\n    import queue\n    import threading\n    import multiprocessing\n    import multiprocessing.pool\n    import\n",
        "def f(x):\n    return x*x\n"
    ],
    "results": 7
},{
    "id": "72",
    "source": "soSearches",
    "language": "python",
    "query": "how to return value from python as string",
    "snippets": [
        "def get_string():\n    return \"Hello World\"\n",
        "def add(a, b):\n    return str(a + b)\n"
    ],
    "results": 10
},{
    "id": "73",
    "source": "soSearches",
    "language": "python",
    "query": "how to check if a string is a number in python",
    "snippets": [
        "def is_number(s):\n    try:\n        float(s)\n        return True\n    except ValueError:\n        return False\n"
    ],
    "results": 10
},{
    "id": "74",
    "source": "soSearches",
    "language": "python",
    "query": "how to change the image when click on selected radio button option python",
    "snippets": [
        "def main():\n    from tkinter import *\n    root = Tk()\n    root.title(\"Radio Button\")\n    root.geometry(\"300x200\")\n    var = StringVar()\n    var.set(\"1\")\n    def show():\n        print(var.get())\n    r1 = Radiobutton(root, text=\"Option 1\", variable=var, value=\"1\", command=show)\n    r1.pack()\n    r2 = Radiobutton(root, text=\"Option 2\", variable=var, value=\"2\", command=show)\n    r2.pack()\n    r3 = Radiobutton(root, text=\"Option 3\", variable=var, value=\"3\", command=show)\n    r3.pack()\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    root.title(\"Radio Button Demo\")\n    root.geometry(\"300x200\")\n    var = StringVar()\n    var.set(\"1\")\n    l = Label(root, text=\"Choose a number:\")\n    l.pack()\n    r1 = Radiobutton(root, text=\"1\", variable=var, value=\"1\")\n    r1.pack()\n    r2 = Radiobutton(root, text=\"2\", variable=var, value=\"2\")\n    r2.pack()\n    r3 = Radiobutton(root, text=\"3\", variable=var, value=\"3\")\n    r3.pack()\n    r4 = Radiobutton(root, text=\"4\", variable=var, value=\"4\")\n    r4.pack()\n    r5 = Radiobutton(root, text=\"5\", variable=var, value=\"5\")\n    r5.pack()\n    def show():\n        print(var.get())\n        if var.get() == \"1\":\n            img = PhotoImage(file=\"1.gif\")\n            l1.configure(image=img)\n            l1.image = img\n        elif var.get() == \"2\":\n            img = PhotoImage(file=\"2.gif\")\n            l1.configure(image=img)\n            l1.image = img\n        elif var.get() == \"3\":\n            img = PhotoImage(file=\"3.gif\")\n            l1.configure(image=img)\n            l1.image = img\n        elif var.get() == \"4\":\n            img = PhotoImage(file=\"4.gif\")\n            l1.configure(image=img)\n            l1.image = img\n        elif var.get() == \"5\":\n            img = PhotoImage(file=\"5.gif\")\n            l1.configure(image=img)\n            l1.image = img\n    b = Button(root, text=\"Show\", command=show)\n    b.pack()\n    l1 = Label(root, text=\"\n",
        "def main():\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Radio Button\")\n    root.geometry(\"300x200\")\n    root.configure(background='#f0f0f0')\n    # create a frame for the radio buttons\n    frame = tk.Frame(root)\n    frame.pack()\n    # create a dictionary of all the possible choices\n    choices = {\n        \"Pizza\": \"pizza.png\",\n        \"Burger\": \"burger.png\",\n        \"Hot Dog\": \"hotdog.png\",\n        \"Sandwich\": \"sandwich.png\",\n        \"Salad\": \"salad.png\",\n        \"Fries\": \"fries.png\"\n    }\n    # create a variable to hold the choice\n    pizza = tk.StringVar()\n    # set the default choice\n    pizza.set(\"Pizza\")\n    # create the radio buttons\n    for text, value in choices.items():\n        tk.Radiobutton(frame, text=text, variable=pizza, value=value).pack(anchor=tk.W)\n    # create a button to update the image\n    def update():\n        # get the value of the selected radio button\n        choice = pizza.get()\n        # update the image\n        my_image.configure(image=tk.PhotoImage(file=choice))\n    # create a button to update the image\n    my_button = tk.Button(frame, text=\"Update\", command=update)\n    my_button.pack()\n    # create a label to display the image\n    my_image = tk.Label(frame, image=tk.PhotoImage(file=\"pizza.png\"))\n    my_image.pack()\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Radio Button\")\n    root.geometry(\"400x400\")\n    var = tk.StringVar()\n    var.set(\"1\")\n    def show_selected():\n        print(var.get())\n    r1 = tk.Radiobutton(root, text=\"Option 1\", variable=var, value=\"1\", command=show_selected)\n    r1.pack()\n    r2 = tk.Radiobutton(root, text=\"Option 2\", variable=var, value=\"2\", command=show_selected)\n    r2.pack()\n    r3 = tk.Radiobutton(root, text=\"Option 3\", variable=var, value=\"3\", command=show_selected)\n    r3.pack()\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Radio Button\")\n    root.geometry(\"300x200\")\n    # create a frame\n    frame = tk.Frame(root)\n    frame.pack()\n    # create a radio button\n    radio_var = tk.IntVar()\n    radio_var.set(1)\n    # create a radio button\n    radio_button1 = tk.Radiobutton(frame, text=\"Option 1\", variable=radio_var, value=1)\n    radio_button1.pack(side=\"left\")\n    # create a radio button\n    radio_button2 = tk.Radiobutton(frame, text=\"Option 2\", variable=radio_var, value=2)\n    radio_button2.pack(side=\"left\")\n    # create a radio button\n    radio_button3 = tk.Radiobutton(frame, text=\"Option 3\", variable=radio_var, value=3)\n    radio_button3.pack(side=\"left\")\n    # create a button\n    button = tk.Button(frame, text=\"Click me\", command=lambda: print(radio_var.get()))\n    button.pack(side=\"left\")\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Image\")\n    root.geometry(\"400x400\")\n    root.configure(background='#f0f0f0')\n    # create a frame for the radio buttons\n    frame = tk.Frame(root)\n    frame.pack()\n    # create a list of images\n    images = [tk.PhotoImage(file=\"image1.png\"), tk.PhotoImage(file=\"image2.png\"), tk.PhotoImage(file=\"image3.png\")]\n    # create a variable to hold the currently selected image\n    current_image = tk.IntVar()\n    # set the current image to the first image in the list\n    current_image.set(0)\n    # create a function to be called when a radio button is selected\n    def show_image():\n        # get the index of the selected radio button\n        index = current_image.get()\n        # get the image associated with the index\n        image = images[index]\n        # set the image to the label\n        label.configure(image=image)\n    # create a radio button for each image\n    for index in range(len(images)):\n        tk.Radiobutton(frame, text=index, variable=current_image, value=index, command=show_image).pack(side=\"left\")\n    # create a label to show the image\n    label = tk.Label(root, text=\"Click a button\")\n    label.pack()\n    # start the event loop\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    from tkinter import ttk\n    from tkinter import filedialog\n    from tkinter import messagebox\n    from PIL import Image, ImageTk\n    import os\n    import sys\n    import shutil\n    import time\n    import datetime\n    import subprocess\n    import threading\n    import multiprocessing\n    import queue\n    import cv2\n    import numpy as np\n    import matplotlib\n    matplotlib.use(\"TkAgg\")\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.figure import Figure\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2Tk\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n    from matplotlib\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    root.title(\"Radio Button\")\n    root.geometry(\"300x200\")\n    root.configure(background=\"lightgreen\")\n\n    def change_image():\n        if r1.get() == 1:\n            img = PhotoImage(file=\"images/1.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r2.get() == 1:\n            img = PhotoImage(file=\"images/2.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r3.get() == 1:\n            img = PhotoImage(file=\"images/3.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r4.get() == 1:\n            img = PhotoImage(file=\"images/4.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r5.get() == 1:\n            img = PhotoImage(file=\"images/5.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r6.get() == 1:\n            img = PhotoImage(file=\"images/6.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r7.get() == 1:\n            img = PhotoImage(file=\"images/7.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r8.get() == 1:\n            img = PhotoImage(file=\"images/8.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r9.get() == 1:\n            img = PhotoImage(file=\"images/9.png\")\n            label.configure(image=img)\n            label.image = img\n        elif r10.get() == 1:\n            img = PhotoImage(file=\"images/10.png\")\n            label.configure(image=img)\n",
        "def main():\n    from tkinter import *\n    root = Tk()\n    root.title(\"Radio Button\")\n    root.geometry(\"300x200\")\n    root.configure(background=\"lightblue\")\n    root.resizable(False, False)\n    root.iconbitmap(\"icon.ico\")\n    root.wm_iconbitmap(\"icon.ico\")\n    root.wm_protocol(\"WM_DELETE_WINDOW\", lambda: None)\n\n    # create a frame\n    frame = Frame(root, bg=\"lightblue\")\n    frame.pack(fill=BOTH, expand=True)\n\n    # create a radio button\n    radio_var = StringVar()\n    radio_var.set(\"1\")\n    radio_button1 = Radiobutton(frame, text=\"Option 1\", value=\"1\", variable=radio_var, bg=\"lightblue\")\n    radio_button1.pack(anchor=W)\n    radio_button2 = Radiobutton(frame, text=\"Option 2\", value=\"2\", variable=radio_var, bg=\"lightblue\")\n    radio_button2.pack(anchor=W)\n    radio_button3 = Radiobutton(frame, text=\"Option 3\", value=\"3\", variable=radio_var, bg=\"lightblue\")\n    radio_button3.pack(anchor=W)\n\n    # create a button\n    button = Button(frame, text=\"Click Me\", command=lambda: print(radio_var.get()))\n    button.pack(anchor=W)\n\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    from tkinter import ttk\n    from tkinter import filedialog\n    from tkinter import messagebox\n    import cv2\n    import numpy as np\n    import os\n    import PIL.Image, PIL.ImageTk\n    import time\n    import threading\n    import sys\n    import datetime\n    import tkinter.font as tkFont\n    import tkinter.filedialog as tkFileDialog\n    import tkinter.messagebox as tkMessageBox\n    import tkinter.simpledialog as tkSimpleDialog\n    import tkinter.colorchooser as tkColorChooser\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tk\n"
    ],
    "results": 10
},{
    "id": "75",
    "source": "soSearches",
    "language": "python",
    "query": "how to delete elements in a list python",
    "snippets": [
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # print the list\n    print(my_list)\n    # delete the first element in the list\n    del my_list[0]\n    # print the list\n    print(my_list)\n    # delete the last element in the list\n    del my_list[-1]\n    # print the list\n    print(my_list)\n    # delete the element at index 3\n    del my_list[3]\n    # print the list\n    print(my_list)\n    # delete the element at index 4\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element at index 5\n    del my_list[5]\n    # print the list\n    print(my_list)\n    # delete the element at index 6\n    del my_list[6]\n    # print the list\n    print(my_list)\n    # delete the element at index 7\n    del my_list[7]\n    # print the list\n    print(my_list)\n    # delete the element at index 8\n    del my_list[8]\n    # print the list\n    print(my_list)\n    # delete the element at index 9\n    del my_list[9]\n    # print the list\n    print(my_list)\n    # delete the element at index 10\n    del my_list[10]\n    # print the list\n    print(my_list)\n    # delete the element at index 11\n    del my_list[11]\n    # print the list\n    print(my_list)\n    # delete the element at index 12\n    del my_list[12]\n    # print the list\n    print(my_list)\n    # delete the element at index 13\n    del my_list[13]\n    # print the list\n    print(my_list)\n    # delete the element at index 14\n    del my_list[14]\n    # print the list\n    print(my_list\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # print the list\n    print(my_list)\n    # delete the last element in the list\n    del my_list[-1]\n    # print the list\n    print(my_list)\n    # delete the first element in the list\n    del my_list[0]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element in the middle of the list\n    del my_list[4]\n    # print the list\n    print(my_\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # print the list\n    print(my_list)\n    # delete the first element\n    del my_list[0]\n    # print the list\n    print(my_list)\n    # delete the last element\n    del my_list[-1]\n    # print the list\n    print(my_list)\n    # delete the element at index 3\n    del my_list[3]\n    # print the list\n    print(my_list)\n    # delete the element at index 4\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element at index 5\n    del my_list[5]\n    # print the list\n    print(my_list)\n    # delete the element at index 6\n    del my_list[6]\n    # print the list\n    print(my_list)\n    # delete the element at index 7\n    del my_list[7]\n    # print the list\n    print(my_list)\n    # delete the element at index 8\n    del my_list[8]\n    # print the list\n    print(my_list)\n    # delete the element at index 9\n    del my_list[9]\n    # print the list\n    print(my_list)\n    # delete the element at index 10\n    del my_list[10]\n    # print the list\n    print(my_list)\n    # delete the element at index 11\n    del my_list[11]\n    # print the list\n    print(my_list)\n    # delete the element at index 12\n    del my_list[12]\n    # print the list\n    print(my_list)\n    # delete the element at index 13\n    del my_list[13]\n    # print the list\n    print(my_list)\n    # delete the element at index 14\n    del my_list[14]\n    # print the list\n    print(my_list)\n    # delete the\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # print the list\n    print(my_list)\n    # delete the last element in the list\n    del my_list[-1]\n    # print the list\n    print(my_list)\n    # delete the first element in the list\n    del my_list[0]\n    # print the list\n    print(my_list)\n    # delete the element at index 3\n    del my_list[3]\n    # print the list\n    print(my_list)\n    # delete the element at index 4\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element at index 5\n    del my_list[5]\n    # print the list\n    print(my_list)\n    # delete the element at index 6\n    del my_list[6]\n    # print the list\n    print(my_list)\n    # delete the element at index 7\n    del my_list[7]\n    # print the list\n    print(my_list)\n    # delete the element at index 8\n    del my_list[8]\n    # print the list\n    print(my_list)\n    # delete the element at index 9\n    del my_list[9]\n    # print the list\n    print(my_list)\n    # delete the element at index 10\n    del my_list[10]\n    # print the list\n    print(my_list)\n    # delete the element at index 11\n    del my_list[11]\n    # print the list\n    print(my_list)\n    # delete the element at index 12\n    del my_list[12]\n    # print the list\n    print(my_list)\n    # delete the element at index 13\n    del my_list[13]\n    # print the list\n    print(my_list)\n    # delete the element at index 14\n    del my_list[14]\n    # print the list\n    print(my_list\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # delete the first element\n    del my_list[0]\n    # print the list\n    print(my_list)\n    # delete the last element\n    del my_list[-1]\n    # print the list\n    print(my_list)\n    # delete the third element\n    del my_list[2]\n    # print the list\n    print(my_list)\n    # delete the element at index 4\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element at index 6\n    del my_list[6]\n    # print the list\n    print(my_list)\n    # delete the element at index 8\n    del my_list[8]\n    # print the list\n    print(my_list)\n    # delete the element at index 10\n    del my_list[10]\n    # print the list\n    print(my_list)\n    # delete the element at index 12\n    del my_list[12]\n    # print the list\n    print(my_list)\n    # delete the element at index 14\n    del my_list[14]\n    # print the list\n    print(my_list)\n    # delete the element at index 16\n    del my_list[16]\n    # print the list\n    print(my_list)\n    # delete the element at index 18\n    del my_list[18]\n    # print the list\n    print(my_list)\n    # delete the element at index 20\n    del my_list[20]\n    # print the list\n    print(my_list)\n    # delete the element at index 22\n    del my_list[22]\n    # print the list\n    print(my_list)\n    # delete the element at index 24\n    del my_list[24]\n    # print the list\n    print(my_list)\n    # delete the element at index 26\n    del my_list[26]\n    #\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # delete the first element\n    del my_list[0]\n    # print the list\n    print(my_list)\n    # delete the last element\n    del my_list[-1]\n    # print the list\n    print(my_list)\n    # delete the element at index 3\n    del my_list[3]\n    # print the list\n    print(my_list)\n    # delete the element at index 4\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element at index 5\n    del my_list[5]\n    # print the list\n    print(my_list)\n    # delete the element at index 6\n    del my_list[6]\n    # print the list\n    print(my_list)\n    # delete the element at index 7\n    del my_list[7]\n    # print the list\n    print(my_list)\n    # delete the element at index 8\n    del my_list[8]\n    # print the list\n    print(my_list)\n    # delete the element at index 9\n    del my_list[9]\n    # print the list\n    print(my_list)\n    # delete the element at index 10\n    del my_list[10]\n    # print the list\n    print(my_list)\n    # delete the element at index 11\n    del my_list[11]\n    # print the list\n    print(my_list)\n    # delete the element at index 12\n    del my_list[12]\n    # print the list\n    print(my_list)\n    # delete the element at index 13\n    del my_list[13]\n    # print the list\n    print(my_list)\n    # delete the element at index 14\n    del my_list[14]\n    # print the list\n    print(my_list)\n    # delete the element at index 15\n    del my_list[15]\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # delete the first element\n    del my_list[0]\n    # delete the last element\n    del my_list[-1]\n    # delete the element at index 3\n    del my_list[3]\n    # delete the element at index 4\n    del my_list[4]\n    # print the list\n    print(my_list)\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # delete the first element\n    del my_list[0]\n    # print the list\n    print(my_list)\n    # delete the last element\n    del my_list[-1]\n    # print the list\n    print(my_list)\n    # delete the element at index 2\n    del my_list[2]\n    # print the list\n    print(my_list)\n    # delete the element at index 3\n    del my_list[3]\n    # print the list\n    print(my_list)\n    # delete the element at index 4\n    del my_list[4]\n    # print the list\n    print(my_list)\n    # delete the element at index 5\n    del my_list[5]\n    # print the list\n    print(my_list)\n    # delete the element at index 6\n    del my_list[6]\n    # print the list\n    print(my_list)\n    # delete the element at index 7\n    del my_list[7]\n    # print the list\n    print(my_list)\n    # delete the element at index 8\n    del my_list[8]\n    # print the list\n    print(my_list)\n    # delete the element at index 9\n    del my_list[9]\n    # print the list\n    print(my_list)\n    # delete the element at index 10\n    del my_list[10]\n    # print the list\n    print(my_list)\n    # delete the element at index 11\n    del my_list[11]\n    # print the list\n    print(my_list)\n    # delete the element at index 12\n    del my_list[12]\n    # print the list\n    print(my_list)\n    # delete the element at index 13\n    del my_list[13]\n    # print the list\n    print(my_list)\n    # delete the element at index 14\n    del my_list[14]\n    # print the list\n    print(my\n",
        "def delete_elements(list, position, num_elements):\n    if position < 0 or position >= len(list):\n        return list\n    if num_elements > len(list) - position:\n        num_elements = len(list) - position\n    return list[:position] + list[position + num_elements:]\n"
    ],
    "results": 10
},{
    "id": "76",
    "source": "soSearches",
    "language": "python",
    "query": "how to sort dictionary elements by keys in python",
    "snippets": [
        "def sort_dict_by_key(d):\n    return sorted(d.items(), key=lambda x: x[0])\n",
        "def sort_dict(d):\n    return sorted(d.items(), key=lambda x: x[0])\n"
    ],
    "results": 10
},{
    "id": "77",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert days to years in python",
    "snippets": [
        "def days_to_years(days):\n    years = days / 365\n    return years\n"
    ],
    "results": 10
},{
    "id": "78",
    "source": "soSearches",
    "language": "python",
    "query": "how to load data from excel file to python",
    "snippets": [
        "def load_data(file_name):\n    import pandas as pd\n    data = pd.read_excel(file_name)\n    return data\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import os\n    import sys\n    import time\n    import datetime\n    import calendar\n    import math\n    import scipy\n    import scipy.stats\n    import scipy.optimize\n    import scipy.integrate\n    import scipy.special\n    import scipy.weave\n    import scipy.fftpack\n    import bisect\n    import copy\n    import functools\n    import subprocess\n    import multiprocessing\n    import ctypes\n    import random\n    import string\n    import json\n    import re\n    import xml.etree.ElementTree as ET\n    import requests\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import csv\n    import html\n    import http\n    import zipfile\n    import gzip\n    import pickle\n    import lzma\n    import zlib\n    import binascii\n    import struct\n    import socket\n    import select\n    import string\n    import collections\n    import itertools\n    import heapq\n    import operator\n    import functools\n    import math\n    import time\n    import datetime\n    import calendar\n    import math\n    import scipy\n    import scipy.stats\n    import scipy.optimize\n    import scipy.integrate\n    import scipy.special\n    import scipy.weave\n    import scipy.fftpack\n    import bisect\n    import copy\n    import functools\n    import subprocess\n    import multiprocessing\n    import ctypes\n    import random\n    import string\n    import json\n    import re\n    import xml.etree.ElementTree as ET\n    import requests\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import os\n    import sys\n    import math\n    import scipy.stats as stats\n    import scipy.optimize as optimize\n    import scipy.integrate as integrate\n    import scipy.constants as consts\n    import scipy.ndimage as ndimage\n    import scipy.signal as signal\n    import scipy.weave as weave\n    import scipy.fftpack as fftpack\n    import scipy.interpolate as interpolate\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.fourier as fourier\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.interpolation as interpolation\n    import sc\n",
        "def main():\n    import pandas as pd\n    # read data from excel file\n    df = pd.read_excel('data.xlsx')\n    # print(df)\n    # print(df.head())\n    # print(df.tail())\n    # print(df.info())\n    # print(df.describe())\n    # print(df.columns)\n    # print(df.index)\n    # print(df.values)\n    # print(df.dtypes)\n    # print(df.shape)\n    # print(df.T)\n    # print(df.sort_index(axis=1, ascending=False))\n    # print(df.sort_values(by='B', ascending=False))\n    # print(df.sort_values(by=['A', 'B'], ascending=False))\n    # print(df.sort_values(by=['A', 'B'], ascending=[False, True]))\n    # print(df.sort_values(by=['A', 'B'], ascending=[False, False]))\n    # print(df.sort_values(by=['A', 'B'], ascending=[True, True]))\n    # print(df.sort_values(by=['A', 'B'], ascending=[True, False]))\n    # print(df.sort_values(by=['A', 'B'], ascending=[True, True], axis=1))\n    # print(df.sort_values(by=['A', 'B'], ascending=[True, False], axis=1))\n    # print(df.sort_values(by=['A', 'B'], ascending=[True, True], axis=0))\n    # print(df.sort_values(by=['A', 'B'], ascending=[True, False], axis=0))\n    # print(df.sort_values(by=['A', 'B'], ascending=[True, True], axis=1))\n    # print(df.sort_values(by=['A', 'B'], ascending=[True, False], axis=1))\n    # print(df.sort_values(by=\n",
        "def main():\n    import xlrd\n    import xlwt\n    import xlutils\n    import xlutils.copy\n    import os\n    import sys\n    import time\n    import datetime\n    import calendar\n    import re\n    import math\n    import numpy as np\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.font_manager as font_manager\n    import matplotlib.finance as finance\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.mlab as mlab\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.axis as maxis\n    import matplotlib.artist as martist\n    import matplotlib.text as mtext\n    import matplotlib.figure as mfigure\n    import matplotlib.animation as animation\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n"
    ],
    "results": 8
},{
    "id": "79",
    "source": "soSearches",
    "language": "python",
    "query": "for in loop how to get different response python",
    "snippets": [
        "def get_response(prompt):\n    response = input(prompt)\n    return response\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,3):\n        print(i)\n    for i in range(1,10,4):\n        print(i)\n    for i in range(1,10,5):\n        print(i)\n    for i in range(1,10,6):\n        print(i)\n    for i in range(1,10,7):\n        print(i)\n    for i in range(1,10,8):\n        print(i)\n    for i in range(1,10,9):\n        print(i)\n    for i in range(1,10,10):\n        print(i)\n    for i in range(1,10,11):\n        print(i)\n    for i in range(1,10,12):\n        print(i)\n    for i in range(1,10,13):\n        print(i)\n    for i in range(1,10,14):\n        print(i)\n    for i in range(1,10,15):\n        print(i)\n    for i in range(1,10,16):\n        print(i)\n    for i in range(1,10,17):\n        print(i)\n    for i in range(1,10,18):\n        print(i)\n    for i in range(1,10,19):\n        print(i)\n    for i in range(1,10,20):\n        print(i)\n    for i in range(1,10,21):\n        print(i)\n    for i in range(1,10,22):\n        print(i)\n    for i in range(1,10,23):\n        print(i)\n    for i in range(1,10,24):\n        print(i)\n    for i in\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(10,0,-3):\n        print(i)\n    for i in range(10,0,-4):\n        print(i)\n    for i in range(10,0,-5):\n        print(i)\n    for i in range(10,0,-6):\n        print(i)\n    for i in range(10,0,-7):\n        print(i)\n    for i in range(10,0,-8):\n        print(i)\n    for i in range(10,0,-9):\n        print(i)\n    for i in range(10,0,-10):\n        print(i)\n    for i in range(10,0,-11):\n        print(i)\n    for i in range(10,0,-12):\n        print(i)\n    for i in range(10,0,-13):\n        print(i)\n    for i in range(10,0,-14):\n        print(i)\n    for i in range(10,0,-15):\n        print(i)\n    for i in range(10,0,-16):\n        print(i)\n    for i in range(10,0,-17):\n        print(i)\n    for i in range(10,0,-18):\n        print(i)\n    for i in range(10,0,-19):\n        print(i)\n    for i in range(10,0,-20):\n        print(i)\n    for i in range(10,0,-21):\n        print(i)\n    for i in range(10,0,-22):\n        print(i)\n    for i in range(10,0,-23):\n        print(i)\n    for i in range(10,0,-24):\n        print(i)\n    for i in\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    for i in range(1,10):\n        print(i*i)\n    for i in range(1,10):\n        print(i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,10):\n        print(i*i*i*i*i*i*i*i*i\n",
        "def main():\n    for i in range(1,6):\n        print(i)\n    for i in range(1,6):\n        print(i,end=\" \")\n    for i in range(1,6):\n        print(i,end=\"\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\")\n    for i in range(1,6):\n        print(i,end=\"\\n\")\n    for i in range(1,6):\n        print(i,end=\"\\t\n"
    ],
    "results": 10
},{
    "id": "80",
    "source": "soSearches",
    "language": "python",
    "query": "how to print a random list in python",
    "snippets": [
        "def random_list(n):\n    import random\n    l = []\n    for i in range(n):\n        l.append(random.randint(0, 100))\n    return l\n",
        "def random_list(n):\n    import random\n    return [random.randint(0, 100) for i in range(n)]\n"
    ],
    "results": 10
},{
    "id": "81",
    "source": "soSearches",
    "language": "python",
    "query": "[python] how to fill a subplot",
    "snippets": [
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n    plt.subplot(2, 1, 1)\n    plt.plot(x, y)\n    plt.subplot(2, 1, 2)\n    plt.plot(x, y)\n    plt.fill_between(x, y, 0, color='blue')\n    plt.show()\n",
        "def f(t):\n    return np.exp(-t) * np.cos(2*np.pi*t)\n",
        "def fill_subplot(ax, x, y, color='blue', alpha=0.5):\n    ax.fill_between(x, y, color=color, alpha=alpha)\n    ax.set_xlim(x.min(), x.max())\n    ax.set_ylim(y.min(), y.max())\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.set_title('fill_subplot')\n    ax.grid(True)\n    return ax\n",
        "def f(x):\n    return x**2\n",
        "def f(x):\n    return x*x\n"
    ],
    "results": 10
},{
    "id": "82",
    "source": "soSearches",
    "language": "python",
    "query": "in python how to select data from dictionary to display in gui",
    "snippets": [
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # get the value of the key 'name'\n    name = my_dict['name']\n    # get the value of the key 'age'\n    age = my_dict['age']\n    # get the value of the key 'city'\n    city = my_dict['city']\n    # print the values\n    print('Name: ' + name)\n    print('Age: ' + age)\n    print('City: ' + city)\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # get the value of the key 'name'\n    print(my_dict['name'])\n    # get the value of the key 'age'\n    print(my_dict['age'])\n    # get the value of the key 'city'\n    print(my_dict['city'])\n    # get the value of the key 'country'\n    print(my_dict['country'])\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # get the value of the key 'name'\n    print(my_dict['name'])\n    # get the value of the key 'age'\n    print(my_dict['age'])\n    # get the value of the key 'city'\n    print(my_dict['city'])\n    # get the value of the key 'country'\n    print(my_dict['country'])\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_dict.get('country', 'Not found'))\n    # get the value of the key 'country'\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    print(my_\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # create a list of keys\n    my_list = list(my_dict.keys())\n    # create a list of values\n    my_list2 = list(my_dict.values())\n    # create a list of items\n    my_list3 = list(my_dict.items())\n    # display the list of keys\n    print(my_list)\n    # display the list of values\n    print(my_list2)\n    # display the list of items\n    print(my_list3)\n    # display the dictionary\n    print(my_dict)\n    # display the dictionary using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the dictionary using a for loop\n    for key in my_dict:\n        print(key, my_dict[key])\n    # display the dictionary using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the dictionary using a for loop\n    for key in my_dict:\n        print(key, my_dict[key])\n    # display the dictionary using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the dictionary using a for loop\n    for key in my_dict:\n        print(key, my_dict[key])\n    # display the dictionary using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the dictionary using a for loop\n    for key in my_dict:\n        print(key, my_dict[key])\n    # display the dictionary using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the dictionary using a for loop\n    for key in my_dict:\n        print(key, my_dict[key])\n    # display the dictionary using a for loop\n    for key, value in my_dict.items\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # create a list of keys\n    my_list = ['name', 'age', 'city']\n    # create a list of values\n    my_list_values = ['John', '27', 'New York']\n    # create a list of keys and values\n    my_list_keys_values = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_2 = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_3 = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_4 = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_5 = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_6 = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_7 = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_8 = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_9 = [('name', 'John'), ('age', '27'), ('city', 'New York')]\n    # create a list of keys and values\n    my_list_keys_values_10 = [('name', 'John'), ('\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # create a list of keys\n    keys = list(my_dict.keys())\n    # create a list of values\n    values = list(my_dict.values())\n    # create a list of items\n    items = list(my_dict.items())\n    # display the keys\n    print('Keys:', keys)\n    # display the values\n    print('Values:', values)\n    # display the items\n    print('Items:', items)\n    # display the items\n    print('Items:', items[0][0], items[0][1])\n    # display the items\n    print('Items:', items[1][0], items[1][1])\n    # display the items\n    print('Items:', items[2][0], items[2][1])\n    # display the items\n    print('Items:', items[3][0], items[3][1])\n    # display the items\n    print('Items:', items[4][0], items[4][1])\n    # display the items\n    print('Items:', items[5][0], items[5][1])\n    # display the items\n    print('Items:', items[6][0], items[6][1])\n    # display the items\n    print('Items:', items[7][0], items[7][1])\n    # display the items\n    print('Items:', items[8][0], items[8][1])\n    # display the items\n    print('Items:', items[9][0], items[9][1])\n    # display the items\n    print('Items:', items[10][0], items[10][1])\n    # display the items\n    print('Items:', items[11][0], items[11][1])\n    # display the items\n    print('Items:', items[12][0], items[12][1])\n    # display the items\n    print('Items:', items[13][0], items[13][1])\n    # display the items\n    print\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # create a list of keys\n    keys = list(my_dict.keys())\n    # create a list of values\n    values = list(my_dict.values())\n    # create a list of items\n    items = list(my_dict.items())\n    # display the keys\n    print('Keys:', keys)\n    # display the values\n    print('Values:', values)\n    # display the items\n    print('Items:', items)\n    # display the values using a for loop\n    for value in values:\n        print(value)\n    # display the items using a for loop\n    for item in items:\n        print(item)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # display the items using a for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    #\n"
    ],
    "results": 7
},{
    "id": "83",
    "source": "soSearches",
    "language": "python",
    "query": "how to put a background with python",
    "snippets": [
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.patches as patches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patheffects as path_effects\n    import matplotlib.text as text\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patheffects as path_effects\n    import matplotlib.text as text\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patheffects as path_effects\n    import matplotlib.text as text\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patheffects as path_effects\n",
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.collections as collections\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.animation as animation\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.axis as maxis\n    import matplotlib.axes as maxes\n    import matplotlib.figure as mfigure\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.finance as mfinance\n    import matplotlib.cbook as cbook\n    import matplotlib.mlab as mlab\n    import matplotlib.artist as martist\n    import matplotlib.transforms as mtransforms\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.axis as maxis\n    import matplotlib.axes as maxes\n    import matplotlib.figure as mfigure\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.finance as mfinance\n    import matplotlib.cbook as cbook\n    import matplotlib.mlab as mlab\n    import matplotlib.artist as martist\n    import matplotlib.transforms as mtransforms\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.text as mtext\n    import matplot\n",
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.patches as patches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patheffects as path_effects\n    import matplotlib.text as text\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as mlindgets\n",
        "eef main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.imas as mpimg\n    import matplotlib.cm as cm\n    import matplolib.colors a colors\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.patheffects as path_effects\n    import matplotlib.text as text\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as lines\n    import matplotlib.transforms as transforms\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.backends.backend_agg as plt_agg\n    import matplotlib.backends.backend_tkagg as plt_tkagg\n    import matplotlib.backends.backend_webagg as plt_webagg\n    import matplotlib.backends.backend_ps as plt_ps\n    import matplotlib.backends.backend_svg as plt_svg\n    import matplotlib.backends.backend_pgf as plt_pgf\n    import matplotlib.backends.backend_template as plt_template\n    import matplotlib.backends.backend_qt4agg as plt_qt4agg\n    import matplotlib.backends.backend_qt5agg as plt_qt5agg\n    import matplotlib.backends.backend_gtk3agg as plt_gtk3agg\n    import matplotlib.backends.backend_gtkagg as plt_gtkagg\n    import matplotlib.backends.backend_cairo as plt_cairo\n    import matplotlib.backends.backend_emf as plt_emf\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.back\n",
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.animation as animation\n    import matplotlib.collections as collections\n    import matplotlib.ticker as ticker\n    import matplotlib.legend as legend\n    import matplotlib.markers as markers\n    import matplotlib.text as text\n    import matplotlib.figure as figure\n    import matplotlib.ticker as ticker\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_gtkagg as gtkagg\n    import matplotlib.backends.backend_wxagg as wxagg\n    import matplotlib.backends.backend_macosx_agg as macosx_agg\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_gdk as gdk\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_qt4 as qt4\n    import matplotlib.backends.back\n",
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.animation as animation\n    import time\n    import sys\n    import os\n    import random\n    import math\n    import cv2\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.interpolation as interpolation\n    import scipy.ndimage.filters as filters\n    import scipy.ndimage.morphology as morphology\n    import scipy.ndimage.measurements as measurements\n    import scipy.ndimage.interpolation as interpolation\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patheffects as path_effects\n    import matplotlib.text as text\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patheffects as path_effects\n    import matplotlib.text as text\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patheffects as path_effects\n",
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.collections as collections\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.animation as animation\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.axis as maxis\n    import matplotlib.axes as maxes\n    import matplotlib.figure as mfigure\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.finance as mfinance\n    import matplotlib.cbook as cbook\n    import matplotlib.mlab as mlab\n    import matplotlib.artist as martist\n    import matplotlib.transforms as mtransforms\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.axis as maxis\n    import matplotlib.axes as maxes\n    import matplotlib.figure as mfigure\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.finance as mfinance\n    import matplotlib.cbook as cbook\n    import matplotlib.mlab as mlab\n    import matplotlib.artist as martist\n    import matplotlib.transforms as mtransforms\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.text as mtext\n    import matplot\n",
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.widgets as widgets\n",
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.patheffects as path_effects\n    import matplotlib.text as text\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as lines\n    import matplotlib.transforms as transforms\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.backends.backend_agg as plt_agg\n    import matplotlib.backends.backend_tkagg as plt_tkagg\n    import matplotlib.backends.backend_webagg as plt_webagg\n    import matplotlib.backends.backend_ps as plt_ps\n    import matplotlib.backends.backend_svg as plt_svg\n    import matplotlib.backends.backend_pgf as plt_pgf\n    import matplotlib.backends.backend_template as plt_template\n    import matplotlib.backends.backend_qt4agg as plt_qt4agg\n    import matplotlib.backends.backend_qt5agg as plt_qt5agg\n    import matplotlib.backends.backend_gtk3agg as plt_gtk3agg\n    import matplotlib.backends.backend_gtkagg as plt_gtkagg\n    import matplotlib.backends.backend_cairo as plt_cairo\n    import matplotlib.backends.backend_emf as plt_emf\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.back\n",
        "def main():\n    from PIL import Image\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.animation as animation\n    import matplotlib.collections as collections\n    import matplotlib.ticker as ticker\n    import matplotlib.legend as legend\n    import matplotlib.markers as markers\n    import matplotlib.text as text\n    import matplotlib.figure as figure\n    import matplotlib.ticker as ticker\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_gtkagg as gtkagg\n    import matplotlib.backends.backend_wxagg as wxagg\n    import matplotlib.backends.backend_macosx_agg as macosx_agg\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_gdk as gdk\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_qt4 as qt4\n    import matplotlib.backends.back\n"
    ],
    "results": 6
},{
    "id": "84",
    "source": "soSearches",
    "language": "python",
    "query": "how to install python3 on google cloud platform",
    "snippets": [
        "def main():\n    print(\"Hello, world!\")\n",
        "def main():\n    print(\"Hello, World!\")\n",
        "def main():\n    print(\"hello world\")\n"
    ],
    "results": 10
},{
    "id": "85",
    "source": "soSearches",
    "language": "python",
    "query": "how to change window color python",
    "snippets": [
        "def main():\n    import sys\n    from PyQt5.QtWidgets import QApplication, QWidget\n    from PyQt5.QtGui import QColorDialog\n    from PyQt5.QtCore import Qt\n\n    app = QApplication(sys.argv)\n    w = QWidget()\n    w.setWindowTitle('Color')\n    w.resize(250, 150)\n    w.move(300, 300)\n    w.setWindowFlags(Qt.WindowStaysOnTopHint)\n    w.show()\n    w.setStyleSheet('background-color: rgb(255, 0, 0);')\n    w.setWindowOpacity(0.5)\n    w.setAttribute(Qt.WA_TranslucentBackground)\n    w.setAttribute(Qt.WA_NoSystemBackground)\n    w.setAttribute(Qt.WA_TransparentForMouseEvents)\n    w.set\n",
        "def main():\n    import sys\n    import pygame\n    from pygame.locals import *\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Window Color')\n    while True:\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                sys.exit()\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n",
        "def main():\n    import sys\n    import pygame\n    from pygame.locals import *\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption(\"Window Color\")\n    while True:\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                sys.exit()\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((0, 0, 0))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((0, 0, 0))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((0, 0, 0))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((0, 0, 0))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((0, 0, 0))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((0, 0, 0))\n        pygame.display.update()\n        pygame.time.delay(100)\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n",
        "def main():\n    import sys\n    import tkinter as tk\n    from tkinter import colorchooser\n    root = tk.Tk()\n    root.title(\"Color Chooser\")\n    root.geometry(\"300x200\")\n    root.configure(background='#ff0000')\n    def get_color():\n        color = colorchooser.askcolor(color='#ff0000')\n        root.configure(background=color[1])\n    btn = tk.Button(root, text=\"Choose Color\", command=get_color)\n    btn.pack()\n    root.mainloop()\n",
        "def main():\n    import sys\n    import ctypes\n    ctypes.windll.kernel32.SetConsoleTitleW(sys.argv[0])\n    ctypes.windll.kernel32.SetConsoleTextAttribute(\n        ctypes.windll.kernel32.GetStdHandle(-11),\n        0x0007\n    )\n    print(\"\"\"\n    _________\n    \\         \\\n     \\         \\\n      \\         \\\n       \\         \\\n        \\         \\\n         \\         \\\n          \\         \\\n           \\         \\\n            \\         \\\n             \\         \\\n              \\         \\\n               \\         \\\n                \\         \\\n                 \\         \\\n                  \\         \\\n                   \\         \\\n                    \\         \\\n                     \\         \\\n                      \\         \\\n                       \\         \\\n                        \\         \\\n                         \\         \\\n                          \\         \\\n                           \\         \\\n                            \\         \\\n                             \\         \\\n                              \\         \\\n                               \\         \\\n                                \\         \\\n                                 \\         \\\n                                  \\         \\\n                                   \\         \\\n                                    \\         \\\n                                     \\         \\\n                                      \\         \\\n                                       \\         \\\n                                        \\         \\\n                                         \\         \\\n                                          \\         \\\n                                           \\         \\\n                                            \\         \\\n                                             \\         \\\n                                              \\         \\\n                                               \\         \\\n                                                \\         \\\n                                                 \\         \\\n                                                  \\         \\\n                                                   \\         \\\n                                                    \\         \\\n                                                     \\         \\\n                                                      \\         \\\n                                                       \\         \\\n                                                        \\         \\\n                                                         \\         \\\n                                                          \\         \\\n                                                           \\         \\\n                                                            \\         \\\n                                                             \\         \\\n                                                              \\         \\\n                                                               \\         \\\n                                                                \\         \\\n                                                                 \\         \\\n                                                                  \\         \\\n                                                                   \\         \\\n                                                                    \\         \\\n                                                                     \\\n",
        "def main():\n    import sys\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Window Color\")\n    root.geometry(\"300x300\")\n    root.configure(background=\"blue\")\n    root.mainloop()\n    sys.exit(0)\n",
        "def main():\n    import sys\n    import os\n    import subprocess\n    import time\n    import re\n    import tkinter as tk\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.messagebox as tkMessageBox\n    import tkinter.filedialog as tkFileDialog\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.colorchooser as tkColorChooser\n    import tkinter.simpledialog as tkSimpleDialog\n    import tkinter.tix as tix\n    import tkinter.ttk as ttk\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.messagebox as tkMessageBox\n    import tkinter.filedialog as tkFileDialog\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.colorchooser as tkColorChooser\n    import tkinter.simpledialog as tkSimpleDialog\n    import tkinter.tix as tix\n    import tkinter.ttk as ttk\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.messagebox as tkMessageBox\n    import tkinter.filedialog as tkFileDialog\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.colorchooser as tkColorChooser\n    import tkinter.simpledialog as tkSimpleDialog\n    import tkinter.tix as tix\n    import tkinter.ttk as ttk\n    import tkinter.font as tkFont\n    import tkinter.ttk as ttk\n    import tkinter.messagebox as tkMessageBox\n    import tkinter.filedialog as tkFileDialog\n    import tkinter.scrolledtext as tkScrolledText\n    import tkinter.colorchooser as tkColorChooser\n    import\n",
        "def main():\n    import sys\n    import os\n    import ctypes\n    from ctypes import wintypes\n    from ctypes import windll\n    from ctypes import c_int\n    from ctypes import c_char_p\n    from ctypes import c_void_p\n    from ctypes import c_uint\n    from ctypes import c_ulong\n    from ctypes import c_ulonglong\n    from ctypes import c_long\n    from ctypes import c_longlong\n    from ctypes import c_double\n    from ctypes import c_float\n    from ctypes import c_bool\n    from ctypes import c_wchar_p\n    from ctypes import c_wchar\n    from ctypes import c_char\n    from ctypes import c_byte\n    from ctypes import c_ubyte\n    from ctypes import c_ushort\n    from ctypes import c_short\n    from ctypes import c_uint32\n    from ctypes import c_int32\n    from ctypes import c_uint64\n    from ctypes import c_int64\n    from ctypes import c_uint16\n    from ctypes import c_int16\n    from ctypes import c_uint8\n    from ctypes import c_int8\n    from ctypes import c_void_p\n    from ctypes import c_ulonglong\n    from ctypes import c_longlong\n    from ctypes import c_ulong\n    from ctypes import c_long\n    from ctypes import c_bool\n    from ctypes import c_wchar_p\n    from ctypes import c_wchar\n    from ctypes import c_char\n    from ctypes import c_byte\n    from ctypes import c_ubyte\n    from ctypes import c_ushort\n    from ctypes import c_short\n    from ctypes import c_uint32\n    from ctypes import c_int32\n    from ctypes import c_uint64\n    from ctypes import c_int64\n    from ctypes import c_uint16\n    from ctypes import c_int16\n    from ctypes import c_uint8\n    from ctypes import c_int8\n",
        "def main():\n    import sys\n    import os\n    import subprocess\n    import time\n    import datetime\n    import argparse\n    import re\n    import shutil\n    import glob\n    import json\n    import csv\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.image as mpimg\n    import matplotlib.mlab as mlab\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.transforms as mtransforms\n    import matplotlib.axis as maxis\n    import matplotlib.spines as mspines\n    import matplotlib.artist as martist\n    import matplotlib.text as mtext\n    import matplotlib.font_manager as mfontManager\n    import matplotlib.ticker as ticker\n    import matplotlib.backends.backend_agg as mbackend_agg\n    import matplotlib.backends.backend_pdf as mbackend_pdf\n    import matplotlib.backends.backend_ps as mbackend_ps\n    import matplotlib.backends.backend_svg as mbackend_svg\n    import matplotlib.backends.backend_qt5agg as mbackend_qt5agg\n    import matplotlib.backends.backend_qt4agg as mbackend_qt4agg\n    import matplotlib.backends.backend_tkagg as mbackend_tkagg\n    import matplotlib.backends.backend_webagg as mbackend_webagg\n    import matplotlib.backends.backend_cairo as mbackend_cairo\n    import matplotlib.backends.backend_agg as mbackend_agg\n    import matplotlib.backends.backend_cocoaagg as mbackend_cocoaagg\n    import matplotlib.backends.back\n"
    ],
    "results": 9
},{
    "id": "86",
    "source": "soSearches",
    "language": "python",
    "query": "how to pass argument from aws lambda using python docopt from s3",
    "snippets": [
        "def main(event, context):\n    print(event)\n    print(context)\n    print(event['queryStringParameters'])\n    print(event['queryStringParameters']['name'])\n    return {\n        'statusCode': 200,\n        'body': 'Hello from Lambda!'\n    }\n",
        "def main(event, context):\n    print(event)\n    print(context)\n    print(event['queryStringParameters'])\n    print(event['queryStringParameters']['name'])\n    print(event['queryStringParameters']['age'])\n    return {\n        'statusCode': 200,\n        'body': 'Hello from Lambda!'\n    }\n",
        "def main(event, context):\n    print(event)\n    print(context)\n    print(event['queryStringParameters'])\n    print(event['queryStringParameters']['name'])\n    return {\n        'statusCode': 200,\n        'body': 'Hello from Lambda'\n    }\n",
        "def main(event, context):\n    print(event)\n    print(context)\n    print(event['queryStringParameters'])\n    print(event['queryStringParameters']['name'])\n    print(event['queryStringParameters']['age'])\n    print(event['queryStringParameters']['email'])\n    print(event['queryStringParameters']['phone'])\n    print(event['queryStringParameters']['address'])\n    print(event['queryStringParameters']['city'])\n    print(event['queryStringParameters']['state'])\n    print(event['queryStringParameters']['zip'])\n    print(event['queryStringParameters']['country'])\n    print(event['queryStringParameters']['password'])\n    print(event['queryStringParameters']['confirm_password'])\n    print(event['queryStringParameters']['security_question'])\n    print(event['queryStringParameters']['security_answer'])\n    print(event['queryStringParameters']['security_question_2'])\n    print(event['queryStringParameters']['security_answer_2'])\n    print(event['queryStringParameters']['security_question_3'])\n    print(event['queryStringParameters']['security_answer_3'])\n    print(event['queryStringParameters']['security_question_4'])\n    print(event['queryStringParameters']['security_answer_4'])\n    print(event['queryStringParameters']['security_question_5'])\n    print(event['queryStringParameters']['security_answer_5'])\n    print(event['queryStringParameters']['security_question_6'])\n    print(event['queryStringParameters']['security_answer_6'])\n    print(event['queryStringParameters']['security_question_7'])\n    print(event['queryStringParameters']['security_answer_7'])\n    print(event['queryStringParameters']['security_question_8'])\n    print(event['queryStringParameters']['security_answer_8'])\n",
        "def lambda_handler(event, context):\n    print(event)\n    print(context)\n    print(event['queryStringParameters'])\n    print(event['queryStringParameters']['name'])\n    return {\n        'statusCode': 200,\n        'body': 'Hello ' + event['queryStringParameters']['name']\n    }\n",
        "def lambda_handler(event, context):\n    print(event)\n    print(context)\n    return {\n        'statusCode': 200,\n        'body': 'Hello from Lambda!'\n    }\n",
        "def lambda_handler(event, context):\n    print(event)\n    print(context)\n    return event\n",
        "def lambda_handler(event, context):\n    print(event)\n    print(context)\n    return 'Hello World!'\n"
    ],
    "results": 10
},{
    "id": "87",
    "source": "soSearches",
    "language": "python",
    "query": "how to find second maximum in python",
    "snippets": [
        "def second_max(arr):\n    max1 = max2 = -1\n    for i in arr:\n        if i > max1:\n            max2 = max1\n            max1 = i\n        elif i > max2 and i != max1:\n            max2 = i\n    return max2\n",
        "def second_max(numbers):\n    max1 = max(numbers)\n    numbers.remove(max1)\n    max2 = max(numbers)\n    return max2\n",
        "def second_max(numbers):\n    max_num = max(numbers)\n    numbers.remove(max_num)\n    max_num2 = max(numbers)\n    return max_num2\n",
        "def second_max(numbers):\n    max_num = numbers[0]\n    second_max_num = numbers[0]\n    for num in numbers:\n        if num > max_num:\n            second_max_num = max_num\n            max_num = num\n        elif num > second_max_num:\n            second_max_num = num\n    return second_max_num\n",
        "def second_max(list):\n    list.sort()\n    return list[-2]\n",
        "def find_second_max(arr):\n    max_val = max(arr)\n    arr.remove(max_val)\n    max_val2 = max(arr)\n    return max_val2\n"
    ],
    "results": 10
},{
    "id": "88",
    "source": "soSearches",
    "language": "python",
    "query": "how to copy over multiple excel sheets to another workbook in python",
    "snippets": [
        "def copy_excel_sheets(src_wb, dst_wb, src_sheet_names, dst_sheet_names):\n    for src_sheet_name, dst_sheet_name in zip(src_sheet_names, dst_sheet_names):\n        src_sheet = src_wb.get_sheet_by_name(src_sheet_name)\n        dst_sheet = dst_wb.get_sheet_by_name(dst_sheet_name)\n        for row in range(1, src_sheet.max_row + 1):\n            for col in range(1, src_sheet.max_column + 1):\n                dst_sheet.cell(row=row, column=col).value = src_sheet.cell(row=row, column=col).value\n    return dst_wb\n",
        "def copy_excel_sheets(source_file, destination_file, sheet_names):\n    # open the source file\n    source_wb = openpyxl.load_workbook(source_file)\n    # open the destination file\n    destination_wb = openpyxl.load_workbook(destination_file)\n    # loop through the source sheets\n    for sheet_name in sheet_names:\n        # get the source sheet\n        source_sheet = source_wb[sheet_name]\n        # get the destination sheet\n        destination_sheet = destination_wb[sheet_name]\n        # copy the source sheet to the destination sheet\n        for row in source_sheet.rows:\n            for cell in row:\n                destination_sheet[cell.coordinate].value = cell.value\n    # save the destination file\n    destination_wb.save(destination_file)\n    # close the source file\n    source_wb.close()\n    # close the destination file\n    destination_wb.close()\n    # return the destination file\n    return destination_file\n",
        "def copy_excel_sheets(source_file, destination_file, sheet_names):\n    # open the source file\n    source_wb = openpyxl.load_workbook(source_file)\n    # open the destination file\n    destination_wb = openpyxl.load_workbook(destination_file)\n    # loop through the sheets in the source file\n    for sheet_name in sheet_names:\n        # get the sheet from the source workbook\n        source_sheet = source_wb[sheet_name]\n        # get the sheet from the destination workbook\n        destination_sheet = destination_wb[sheet_name]\n        # copy the sheet from the source to the destination\n        for row in source_sheet.rows:\n            for cell in row:\n                destination_sheet[cell.coordinate].value = cell.value\n    # save the destination workbook\n    destination_wb.save(destination_file)\n    # close the source workbook\n    source_wb.close()\n    # close the destination workbook\n    destination_wb.close()\n    # return the destination workbook\n    return destination_wb\n",
        "def copy_excel_sheets(src_file, dst_file, sheet_names):\n    src_wb = load_workbook(src_file)\n    dst_wb = load_workbook(dst_file)\n    for sheet_name in sheet_names:\n        src_sheet = src_wb[sheet_name]\n        dst_sheet = dst_wb.copy_worksheet(src_sheet)\n        dst_sheet.title = sheet_name\n    dst_wb.save(dst_file)\n    return dst_wb\n",
        "def copy_excel_sheets(workbook_src, workbook_dest, sheet_names):\n    for sheet_name in sheet_names:\n        worksheet_src = workbook_src.sheet_by_name(sheet_name)\n        worksheet_dest = workbook_dest.add_sheet(sheet_name)\n        for row_index in range(worksheet_src.nrows):\n            for col_index in range(worksheet_src.ncols):\n                worksheet_dest.write(row_index, col_index, worksheet_src.cell_value(row_index, col_index))\n    workbook_dest.save(workbook_dest.filename)\n    return workbook_dest\n",
        "def copy_excel_sheets(src_file, dst_file, sheet_names):\n    # open the source file\n    src_wb = openpyxl.load_workbook(src_file)\n    # open the destination file\n    dst_wb = openpyxl.load_workbook(dst_file)\n    # get the source and destination sheets\n    src_sheet = src_wb.active\n    dst_sheet = dst_wb.active\n    # copy the sheets\n    for sheet_name in sheet_names:\n        src_sheet = src_wb[sheet_name]\n        dst_sheet = dst_wb.copy_worksheet(src_sheet)\n        dst_sheet.title = sheet_name\n    # save the destination file\n    dst_wb.save(dst_file)\n    return dst_wb\n",
        "def copy_sheets(wb1, wb2):\n    for sheet in wb1.sheetnames:\n        wb2.copy_sheet(wb1[sheet])\n    return wb2\n",
        "def copy_sheets(workbook_from, workbook_to):\n    for sheet in workbook_from.sheetnames:\n        workbook_to.copy_sheet(workbook_from[sheet])\n    return workbook_to\n",
        "def copy_excel_sheets(src_file, dst_file, sheet_names):\n    \"\"\"\n    Copy excel sheets from src_file to dst_file.\n    \"\"\"\n    import openpyxl\n    src_wb = openpyxl.load_workbook(src_file)\n    dst_wb = openpyxl.load_workbook(dst_file)\n    for sheet_name in sheet_names:\n        src_sheet = src_wb[sheet_name]\n        dst_sheet = dst_wb.copy_worksheet(src_sheet)\n        dst_sheet.title = sheet_name\n    dst_wb.save(dst_file)\n    return dst_wb\n"
    ],
    "results": 10
},{
    "id": "89",
    "source": "soSearches",
    "language": "python",
    "query": "how to sort items in an array in python",
    "snippets": [
        "def sort_array(array):\n    array.sort()\n    return array\n",
        "def sort_array(numbers):\n    numbers.sort()\n    return numbers\n",
        "def main():\n    # create a list of items\n    items = [6,20,8,19,56,23,87,41,49,53]\n    # sort the list\n    items.sort()\n    # display the list\n    print(items)\n    # sort the list in reverse\n    items.sort(reverse=True)\n    # display the list\n    print(items)\n    # sort the list in alphabetical order\n    items.sort(key=str.lower)\n    # display the list\n    print(items)\n    # sort the list in reverse alphabetical order\n    items.sort(key=str.lower, reverse=True)\n    # display the list\n    print(items)\n    # sort the list in numerical order\n    items.sort(key=int)\n    # display the list\n    print(items)\n    # sort the list in reverse numerical order\n    items.sort(key=int, reverse=True)\n    # display the list\n    print(items)\n    # sort the list in numerical order\n    items.sort(key=len)\n    # display the list\n    print(items)\n    # sort the list in reverse numerical order\n    items.sort(key=len, reverse=True)\n    # display the list\n    print(items)\n    # sort the list in numerical order\n    items.sort(key=lambda x: x % 10)\n    # display the list\n    print(items)\n    # sort the list in reverse numerical order\n    items.sort(key=lambda x: x % 10, reverse=True)\n    # display the list\n    print(items)\n    # sort the list in numerical order\n    items.sort(key=lambda x: x // 10)\n    # display the list\n    print(items)\n    # sort the list in reverse numerical order\n    items.sort(key=lambda x: x // 10, reverse=True)\n    # display the list\n    print(items)\n    # sort the list in numerical order\n    items.sort(key=lambda x: x // 10 % 10)\n    # display the list\n    print(items)\n    # sort the list in reverse numerical order\n",
        "def sort_array(arr):\n    arr.sort()\n    return arr\n"
    ],
    "results": 10
},{
    "id": "90",
    "source": "soSearches",
    "language": "python",
    "query": "how to use newline python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello\\nWorld\")\n    print(\"Hello\\tWorld\")\n    print(\"Hello\\bWorld\")\n    print(\"Hello\\fWorld\")\n    print(\"Hello\\rWorld\")\n    print(\"Hello\\vWorld\")\n    print(\"Hello\\aWorld\")\n    print(\"Hello\\NWorld\")\n    print(\"Hello\\_World\")\n    print(\"Hello\\`World\")\n    print(\"Hello\\~World\")\n    print(\"Hello\\|World\")\n    print(\"Hello\\*World\")\n    print(\"Hello\\^World\")\n    print(\"Hello\\&World\")\n    print(\"Hello\\(World\")\n    print(\"Hello\\)World\")\n    print(\"Hello\\[World\")\n    print(\"Hello\\]World\")\n    print(\"Hello\\{World\")\n    print(\"Hello\\}World\")\n    print(\"Hello\\<World\")\n    print(\"Hello\\>World\")\n    print(\"Hello\\?World\")\n    print(\"Hello\\!World\")\n    print(\"Hello\\$World\")\n    print(\"Hello\\%World\")\n    print(\"Hello\\#World\")\n    print(\"Hello\\@World\")\n    print(\"Hello\\=World\")\n    print(\"Hello\\+World\")\n    print(\"Hello\\-World\")\n    print(\"Hello\\_World\")\n    print(\"Hello\\`World\")\n    print(\"Hello\\~World\")\n    print(\"Hello\\|World\")\n    print(\"Hello\\*World\")\n    print(\"Hello\\^World\")\n    print(\"Hello\\&World\")\n    print(\"Hello\\(World\")\n    print(\"Hello\\)World\")\n    print(\"Hello\\[World\")\n    print(\"Hello\\]World\")\n    print(\"Hello\\{World\")\n    print(\"Hello\\}World\")\n    print(\"Hello\\<World\")\n    print(\"Hello\\>World\")\n    print(\"Hello\\?World\")\n    print(\"Hello\\!World\")\n    print(\"Hello\\$World\")\n    print(\"Hello\\%World\")\n    print(\"Hello\\#World\")\n    print(\"Hello\\@World\")\n    print(\"Hello\\=World\")\n    print(\"Hello\\+\n",
        "def main():\n    print(\"Hello World\")\n    print(\"Hello\\nWorld\")\n    print(\"Hello\\tWorld\")\n    print(\"Hello\\bWorld\")\n    print(\"Hello\\fWorld\")\n    print(\"Hello\\rWorld\")\n    print(\"Hello\\vWorld\")\n    print(\"Hello\\aWorld\")\n    print(\"Hello\\n\\nWorld\")\n    print(\"Hello\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWorld\")\n    print(\"Hello\\n\\n\\n\n",
        "def main():\n    print(\"Hello World\")\n    print(\"Hello World\\n\")\n    print(\"Hello World\\n\\n\")\n    print(\"Hello World\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\n",
        "def main():\n    # print(\"Hello World\")\n    # print(\"Hello World\\n\")\n    # print(\"Hello World\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    #\n",
        "def main():\n    print(\"This is a newline test\")\n    print(\"This is a newline test\", end=\"\")\n    print(\"This is a newline test\", end=\"\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    print(\"This is a newline test\", end=\"\\n\\n\\n\\n\\\n"
    ],
    "results": 6
},{
    "id": "91",
    "source": "soSearches",
    "language": "python",
    "query": "python how to combine an array of strings into one string",
    "snippets": [
        "def combine_strings(strings):\n    return ''.join(strings)\n",
        "def combine_strings(strings):\n    combined_string = \"\"\n    for string in strings:\n        combined_string += string\n    return combined_string\n",
        "def combine_strings(string_array):\n    combined_string = \"\"\n    for string in string_array:\n        combined_string += string\n    return combined_string\n"
    ],
    "results": 10
},{
    "id": "92",
    "source": "soSearches",
    "language": "python",
    "query": "how to compare two arrays in python",
    "snippets": [
        "def compare_arrays(arr1, arr2):\n    if len(arr1) != len(arr2):\n        return False\n    for i in range(len(arr1)):\n        if arr1[i] != arr2[i]:\n            return False\n    return True\n",
        "def compare_arrays(arr1, arr2):\n    if arr1 == arr2:\n        print(\"The arrays are equal\")\n    else:\n        print(\"The arrays are not equal\")\n",
        "def compare_arrays(array1, array2):\n    if array1 == array2:\n        print(\"The arrays are equal\")\n    else:\n        print(\"The arrays are not equal\")\n",
        "def compare_arrays(array1, array2):\n    if array1 == array2:\n        return True\n    else:\n        return False\n",
        "def compare_arrays(arr1, arr2):\n    if arr1 == arr2:\n        return True\n    else:\n        return False\n",
        "def compare(a, b):\n    if a == b:\n        return \"Equal\"\n    elif a > b:\n        return \"Greater\"\n    else:\n        return \"Less\"\n",
        "def compare(a, b):\n    if a == b:\n        return True\n    else:\n        return False\n"
    ],
    "results": 10
},{
    "id": "93",
    "source": "soSearches",
    "language": "python",
    "query": "how to find the date in python",
    "snippets": [
        "def main():\n    import datetime\n    now = datetime.datetime.now()\n    print(now)\n    print(now.year)\n    print(now.month)\n    print(now.day)\n    print(now.hour)\n    print(now.minute)\n    print(now.second)\n    print(now.microsecond)\n    print(now.weekday())\n    print(now.isoweekday())\n    print(now.timetuple())\n    print(now.time())\n    print(now.date())\n    print(now.utctimetuple())\n    print(now.utcoffset())\n    print(now.tzinfo())\n    print(now.replace(year=2020))\n    print(now.replace(month=5))\n    print(now.replace(day=1))\n    print(now.replace(hour=12))\n    print(now.replace(minute=30))\n    print(now.replace(second=0))\n    print(now.replace(microsecond=0))\n    print(now.replace(tzinfo=None))\n    print(now.replace(tzinfo=datetime.timezone.utc))\n    print(now.replace(tzinfo=datetime.timezone.utc).astimezone(datetime.timezone.local))\n    print(now.replace(tzinfo=datetime.timezone.local).astimezone(datetime.timezone.utc))\n    print(now.replace(tzinfo=datetime.timezone.local).astimezone(datetime.timezone.utc).astimezone(datetime.timezone.local))\n    print(now.replace(tzinfo=datetime.timezone.local).astimezone(datetime.timezone.utc).astimezone(datetime.timezone.local).astimezone(datetime.timezone.utc))\n    print(now.replace(tzinfo=datetime.timezone.local).astimezone(datetime.timezone.utc).astimezone(datetime.timezone.local).astimezone(datetime.timezone.utc).\n",
        "def main():\n    import datetime\n    now = datetime.datetime.now()\n    print(now)\n    print(now.year)\n    print(now.month)\n    print(now.day)\n    print(now.hour)\n    print(now.minute)\n    print(now.second)\n    print(now.microsecond)\n    print(now.weekday())\n    print(now.isoweekday())\n    print(now.timetuple())\n    print(now.ctime())\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    print(now.strftime(\"%A, %B, %d, %Y\"))\n    print(now.strftime(\"%a, %b, %d, %Y\"))\n    print(now.strftime(\"%c\"))\n    print(now.strftime(\"%x\"))\n    print(now.strftime(\"%X\"))\n    print(now.strftime(\"%I:%M:%S %p\"))\n    print(now.strftime(\"%H:%M:%S\"))\n    print(now.strftime(\"%H:%M\"))\n    print(now.strftime(\"%I:%M %p\"))\n    print(now.strftime(\"%I:%M\"))\n    print(now.strftime(\"%H:%M:%S %Z\"))\n    print(now.strftime(\"%H:%M:%S %z\"))\n    print(now.strftime(\"%H:%M:%S %Z %z\"))\n    print(now.strftime(\"%H:%M:%S %z %Z\"))\n    print(now.strftime(\"%H:%M:%S %z %Z %Y\"))\n    print(now.strftime(\"%H:%M:%S %z %Z %y\"))\n    print(now.strftime(\"%H:%M:%S %z %Z %y %A, %B, %d, %Y\"))\n    print(now.strftime(\"%H:%M:%S %z %Z %\n",
        "def main():\n    import datetime\n    now = datetime.datetime.now()\n    print(now)\n    print(now.year)\n    print(now.month)\n    print(now.day)\n    print(now.hour)\n    print(now.minute)\n    print(now.second)\n    print(now.microsecond)\n    print(now.weekday())\n    print(now.isoweekday())\n    print(now.timetuple())\n    print(now.timetuple().tm_yday)\n    print(now.isocalendar())\n    print(now.isoformat())\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\"))\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\").split(\".\"))\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\").split(\".\")[0])\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\").split(\".\")[1])\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\").split(\".\")[1][0:3])\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\").split(\".\")[1][0:3])\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\").split(\".\")[1][0:3])\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\").split(\".\")[1][0:3])\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\").split(\".\")[1][0:3])\n",
        "def main():\n    import datetime\n    now = datetime.datetime.now()\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    print(now.strftime(\"%Y-%m-%d\"))\n    print(now.strftime(\"%H:%M:%S\"))\n    print(now.strftime(\"%H:%M\"))\n    print(now.strftime(\"%Y\"))\n    print(now.strftime(\"%m\"))\n    print(now.strftime(\"%d\"))\n    print(now.strftime(\"%H\"))\n    print(now.strftime(\"%M\"))\n    print(now.strftime(\"%S\"))\n    print(now.strftime(\"%a\"))\n    print(now.strftime(\"%A\"))\n    print(now.strftime(\"%b\"))\n    print(now.strftime(\"%B\"))\n    print(now.strftime(\"%c\"))\n    print(now.strftime(\"%x\"))\n    print(now.strftime(\"%X\"))\n    print(now.strftime(\"%Z\"))\n    print(now.strftime(\"%z\"))\n    print(now.strftime(\"%j\"))\n    print(now.strftime(\"%U\"))\n    print(now.strftime(\"%W\"))\n    print(now.strftime(\"%c\"))\n    print(now.strftime(\"%w\"))\n    print(now.strftime(\"%d\"))\n    print(now.strftime(\"%H\"))\n    print(now.strftime(\"%I\"))\n    print(now.strftime(\"%M\"))\n    print(now.strftime(\"%S\"))\n    print(now.strftime(\"%p\"))\n    print(now.strftime(\"%f\"))\n    print(now.strftime(\"%z\"))\n    print(now.strftime(\"%Z\"))\n    print(now.strftime(\"%j\"))\n    print(now.strftime(\"%U\"))\n    print(now.strftime(\"%W\"))\n    print(now.strftime(\"%V\"))\n    print(now.str\n",
        "def main():\n    import datetime\n    now = datetime.datetime.now()\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    print(now.strftime(\"%Y-%m-%d\"))\n    print(now.strftime(\"%H:%M:%S\"))\n    print(now.strftime(\"%H:%M\"))\n    print(now.strftime(\"%Y\"))\n    print(now.strftime(\"%m\"))\n    print(now.strftime(\"%d\"))\n    print(now.strftime(\"%H\"))\n    print(now.strftime(\"%M\"))\n    print(now.strftime(\"%S\"))\n    print(now.strftime(\"%a\"))\n    print(now.strftime(\"%A\"))\n    print(now.strftime(\"%b\"))\n    print(now.strftime(\"%B\"))\n    print(now.strftime(\"%c\"))\n    print(now.strftime(\"%x\"))\n    print(now.strftime(\"%X\"))\n    print(now.strftime(\"%I\"))\n    print(now.strftime(\"%p\"))\n    print(now.strftime(\"%Z\"))\n    print(now.strftime(\"%j\"))\n    print(now.strftime(\"%U\"))\n    print(now.strftime(\"%W\"))\n    print(now.strftime(\"%V\"))\n    print(now.strftime(\"%w\"))\n    print(now.strftime(\"%d\"))\n    print(now.strftime(\"%H\"))\n    print(now.strftime(\"%M\"))\n    print(now.strftime(\"%S\"))\n    print(now.strftime(\"%f\"))\n    print(now.strftime(\"%z\"))\n    print(now.strftime(\"%Z\"))\n    print(now.strftime(\"%j\"))\n    print(now.strftime(\"%U\"))\n    print(now.strftime(\"%W\"))\n    print(now.strftime(\"%V\"))\n    print(now.strftime(\"%w\"))\n    print(now.str\n",
        "def main():\n    print(\"Today is: \", datetime.date.today())\n    print(\"Today is: \", datetime.date.today().strftime(\"%d/%m/%Y\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d-%m-%Y\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A %H:%M:%S\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A %H:%M:%S %Z\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A %H:%M:%S %Z %z\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A %H:%M:%S %Z %z %Y\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A %H:%M:%S %Z %z %Y %H:%M:%S\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A %H:%M:%S %Z %z %Y %H:%M:%S %z\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A %H:%M:%S %Z %z %Y %H:%M:%S %z %Y\"))\n    print(\"Today is: \", datetime.date.today().strftime(\"%d %B %Y %A %H:%M:%S %Z %z %Y %H:%M:%S %z %Y %H:%M:%S\"))\n    print(\"Today is: \", datetime\n",
        "def main():\n    print(\"This program finds the date of the day\")\n    print()\n    print(\"Please enter the year\")\n    year = int(input())\n    print(\"Please enter the month\")\n    month = int(input())\n    print(\"Please enter the day\")\n    day = int(input())\n    print(\"The date is:\", year, \"-\", month, \"-\", day)\n    print()\n    print(\"The date is:\", year, \".\", month, \".\", day)\n    print()\n    print(\"The date is:\", year, \":\", month, \":\", day)\n    print()\n    print(\"The date is:\", year, \":\", month, \":\", day, \":\", \"00\")\n    print()\n    print(\"The date is:\", year, \":\", month, \":\", day, \":\", \"00\", \":\", \"00\")\n    print()\n    print(\"The date is:\", year, \":\", month, \":\", day, \":\", \"00\", \":\", \"00\", \":\", \"00\")\n    print()\n    print(\"The date is:\", year, \":\", month, \":\", day, \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\")\n    print()\n    print(\"The date is:\", year, \":\", month, \":\", day, \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\")\n    print()\n    print(\"The date is:\", year, \":\", month, \":\", day, \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\")\n    print()\n    print(\"The date is:\", year, \":\", month, \":\", day, \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\", \":\", \"00\")\n    print()\n    print(\"The date is:\", year, \":\", month\n",
        "def main():\n    print(\"This program finds the date of the next day.\")\n    print(\"Please enter the date in the form mm/dd/yyyy:\")\n    date = input(\"Enter the date: \")\n    month, day, year = date.split(\"/\")\n    month = int(month)\n    day = int(day)\n    year = int(year)\n    day += 1\n    if day > 30:\n        day = 1\n        month += 1\n    if month > 12:\n        month = 1\n        year += 1\n    print(\"The next date is:\", month, \"/\", day, \"/\", year)\n"
    ],
    "results": 8
},{
    "id": "94",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert series to dataframe in python",
    "snippets": [
        "def main():\n    import pandas as pd\n    import numpy as np\n    # create a series\n    s = pd.Series([1,3,5,np.nan,6,8])\n    print(s)\n    # create a dataframe\n    dates = pd.date_range('20130101', periods=6)\n    print(dates)\n    df = pd.DataFrame(np.random.randn(6,4), index=dates, columns=list('ABCD'))\n    print(df)\n    print(df.dtypes)\n    print(df.index)\n    print(df.columns)\n    print(df.values)\n    print(df.describe())\n    print(df.T)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_values(by='B'))\n    print(df.sort_values(by=['A','B'], ascending=[False, True]))\n    print(df.loc[dates[0]])\n    print(df.loc[:,['A','B']])\n    print(df.loc[dates[0],['A','B']])\n    print(df.loc[dates[0],'A'])\n    print(df.loc[dates[0]:dates[1],'A'])\n    print(df.loc[dates[0]:dates[1],['A','B']])\n    print(df.loc[dates[0]:dates[1],['A','B']].loc[dates[1]])\n    print(df.loc[dates[0]:dates[1],['A','B']].loc[dates[1],'A'])\n    print(df.iloc[3])\n    print(df.iloc[3:5,1:3])\n    print(df.iloc[[1,2,4],[1,3]])\n    print(df.iloc[1:3,:])\n    print(df.iloc[:,1:3])\n    print(df.iloc[1,1])\n    print(df.il\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    # create a series\n    s = pd.Series(np.random.randn(10).cumsum(), index=np.arange(0, 100, 10))\n    # create a dataframe\n    df = pd.DataFrame(np.random.randn(10, 4), index=np.arange(0, 100, 10), columns=list('ABCD'))\n    print(s)\n    print(df)\n    # convert series to dataframe\n    df = s.to_frame()\n    print(df)\n    # convert dataframe to series\n    s = df.to_series()\n    print(s)\n    # convert dataframe to series\n    s = df.to_numpy()\n    print(s)\n    # convert dataframe to series\n    s = df.to_csv()\n    print(s)\n    # convert dataframe to series\n    s = df.to_json()\n    print(s)\n    # convert dataframe to series\n    s = df.to_excel()\n    print(s)\n    # convert dataframe to series\n    s = df.to_html()\n    print(s)\n    # convert dataframe to series\n    s = df.to_dict()\n    print(s)\n    # convert dataframe to series\n    s = df.to_latex()\n    print(s)\n    # convert dataframe to series\n    s = df.to_clipboard()\n    print(s)\n    # convert dataframe to series\n    s = df.to_pickle()\n    print(s)\n    # convert dataframe to series\n    s = df.to_sql()\n    print(s)\n    # convert dataframe to series\n    s = df.to_stata()\n    print(s)\n    # convert dataframe to series\n    s = df.to_feather()\n    print(s)\n    # convert dataframe to series\n    s = df.to_html()\n    print(s)\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    s = pd.Series([1, 3, 5, np.nan, 6, 8])\n    print(s)\n    print(type(s))\n    print(s.dtype)\n    dates = pd.date_range('20130101', periods=6)\n    print(dates)\n    print(type(dates))\n    print(dates.dtype)\n    df = pd.DataFrame(np.random.randn(6, 4), index=dates, columns=list('ABCD'))\n    print(df)\n    print(type(df))\n    print(df.dtypes)\n    print(df.head())\n    print(df.tail(3))\n    print(df.index)\n    print(df.columns)\n    print(df.values)\n    print(df.describe())\n    print(df.T)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_values(by='B'))\n    print(df.sort_values(by=['A', 'B'], ascending=[False, True]))\n    print(df.loc[dates[0]])\n    print(df.loc[:, ['A', 'B']])\n    print(df.loc['20130102', ['A', 'B']])\n    print(df.loc['20130102', 'A'])\n    print(df.loc[dates[0]:dates[2], ['A', 'B']])\n    print(df.loc['20130102', 'A':'C'])\n    print(df.loc[:, 'A':'C'])\n    print(df.loc[dates[0]:dates[2], 'A':'C'])\n    print(df.loc[:, 'A':'C'])\n    print(df.loc['20130102', 'A':'C'])\n    print(df.loc[dates[0]:dates[2], 'A':'C'])\n    print(df.loc[:, 'A':'\n",
        "def main():\n    # create a series\n    series = pd.Series([1, 2, 3, 4, 5])\n    # convert series to dataframe\n    dataframe = pd.DataFrame(series)\n    # print dataframe\n    print(dataframe)\n    # create a series\n    series = pd.Series([1, 2, 3, 4, 5], index=['a', 'b', 'c', 'd', 'e'])\n    # convert series to dataframe\n    dataframe = pd.DataFrame(series)\n    # print dataframe\n    print(dataframe)\n    # create a series\n    series = pd.Series([1, 2, 3, 4, 5], index=['a', 'b', 'c', 'd', 'e'], name='series')\n    # convert series to dataframe\n    dataframe = pd.DataFrame(series)\n    # print dataframe\n    print(dataframe)\n    # create a series\n    series = pd.Series([1, 2, 3, 4, 5], index=['a', 'b', 'c', 'd', 'e'], name='series')\n    # convert series to dataframe\n    dataframe = pd.DataFrame(series, columns=['series'])\n    # print dataframe\n    print(dataframe)\n    # create a series\n    series = pd.Series([1, 2, 3, 4, 5], index=['a', 'b', 'c', 'd', 'e'], name='series')\n    # convert series to dataframe\n    dataframe = pd.DataFrame(series, columns=['series'], index=['a', 'b', 'c', 'd', 'e'])\n    # print dataframe\n    print(dataframe)\n    # create a series\n    series = pd.Series([1, 2, 3, 4, 5], index=['a', 'b', 'c', 'd', 'e'], name='series')\n    # convert series to dataframe\n    dataframe = pd.DataFrame(series, columns=['series'], index=['a', 'b', '\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    # create a series\n    s = pd.Series([1,2,3,4,5])\n    print(s)\n    # create a dataframe\n    df = pd.DataFrame(np.random.randn(5,4),columns=['a','b','c','d'])\n    print(df)\n    # convert series to dataframe\n    s = pd.Series([1,2,3,4,5])\n    df = pd.DataFrame(s)\n    print(df)\n    # convert series to dataframe with index\n    s = pd.Series([1,2,3,4,5],index=['a','b','c','d','e'])\n    df = pd.DataFrame(s)\n    print(df)\n    # convert series to dataframe with index and columns\n    s = pd.Series([1,2,3,4,5],index=['a','b','c','d','e'],columns=['f','g','h','i','j'])\n    df = pd.DataFrame(s)\n    print(df)\n    # convert series to dataframe with index and columns\n    s = pd.Series([1,2,3,4,5],index=['a','b','c','d','e'],columns=['f','g','h','i','j'])\n    df = pd.DataFrame(s,index=['a','b','c','d','e'],columns=['f','g','h','i','j'])\n    print(df)\n    # convert series to dataframe with index and columns\n    s = pd.Series([1,2,3,4,5],index=['a','b','c','d','e'],columns=['f','g','h','i','j'])\n    df = pd.DataFrame(s,index=['a','b','c','d','e'],columns=['f','g','h','i','j'])\n    print(df)\n    # convert series to\n",
        "def main():\n    # create a series\n    s = pd.Series([1, 2, 3, 4, 5])\n    print(s)\n    # convert series to dataframe\n    df = pd.DataFrame(s)\n    print(df)\n    # convert series to dataframe with index\n    df = pd.DataFrame(s, index=['a', 'b', 'c', 'd', 'e'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(s, index=['a', 'b', 'c', 'd', 'e'], columns=['x'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(s, index=['a', 'b', 'c', 'd', 'e'], columns=['x', 'y'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(s, index=['a', 'b', 'c', 'd', 'e'], columns=['x', 'y', 'z'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(s, index=['a', 'b', 'c', 'd', 'e'], columns=['x', 'y', 'z'], dtype=float)\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(s, index=['a', 'b', 'c', 'd', 'e'], columns=['x', 'y', 'z'], dtype=float, index_label='index')\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(s, index=['a', 'b', 'c', 'd', 'e'], columns=['x', 'y', 'z'], dtype=float, index_label='index',\n                       columns_label='columns')\n    print(df)\n    # convert series to data\n",
        "def main():\n    # create a series\n    series = pd.Series(np.random.randn(5), index=['a', 'b', 'c', 'd', 'e'])\n    print(series)\n    # convert series to dataframe\n    df = pd.DataFrame(series)\n    print(df)\n    # convert series to dataframe with index\n    df = pd.DataFrame(series, index=['a', 'b', 'c', 'd', 'e'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(series, index=['a', 'b', 'c', 'd', 'e'], columns=['col1'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(series, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(series, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(series, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(series, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(series, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(series, index=['\n",
        "def main():\n    # create a series\n    series = pd.Series(['a', 'b', 'c', 'd'])\n    print(series)\n    # create a dataframe\n    dataframe = pd.DataFrame(series)\n    print(dataframe)\n    # create a dataframe with index\n    dataframe = pd.DataFrame(series, index=['a', 'b', 'c', 'd'])\n    print(dataframe)\n    # create a dataframe with columns\n    dataframe = pd.DataFrame(series, columns=['a', 'b', 'c', 'd'])\n    print(dataframe)\n    # create a dataframe with index and columns\n    dataframe = pd.DataFrame(series, index=['a', 'b', 'c', 'd'], columns=['a', 'b', 'c', 'd'])\n    print(dataframe)\n    # create a dataframe with index and columns\n    dataframe = pd.DataFrame(series, index=['a', 'b', 'c', 'd'], columns=['a', 'b', 'c', 'd'])\n    print(dataframe)\n    # create a dataframe with index and columns\n    dataframe = pd.DataFrame(series, index=['a', 'b', 'c', 'd'], columns=['a', 'b', 'c', 'd'])\n    print(dataframe)\n    # create a dataframe with index and columns\n    dataframe = pd.DataFrame(series, index=['a', 'b', 'c', 'd'], columns=['a', 'b', 'c', 'd'])\n    print(dataframe)\n    # create a dataframe with index and columns\n    dataframe = pd.DataFrame(series, index=['a', 'b', 'c', 'd'], columns=['a', 'b', 'c', 'd'])\n    print(dataframe)\n    # create a dataframe with index and columns\n    dataframe = pd.DataFrame(series, index=['a', 'b', 'c', 'd'], columns=['a\n",
        "def main():\n    # create a series\n    ser = pd.Series([1, 2, 3, 4, 5])\n    print(ser)\n    # convert series to dataframe\n    df = pd.DataFrame(ser)\n    print(df)\n    # convert series to dataframe with index\n    df = pd.DataFrame(ser, index=['a', 'b', 'c', 'd', 'e'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(ser, index=['a', 'b', 'c', 'd', 'e'], columns=['col1'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(ser, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'])\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(ser, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'], dtype=float)\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(ser, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'], dtype=float, copy=False)\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(ser, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'], dtype=float, copy=False)\n    print(df)\n    # convert series to dataframe with index and column\n    df = pd.DataFrame(ser, index=['a', 'b', 'c', 'd', 'e'], columns=['col1', 'col2'], dtype=float, copy=False)\n    print(df)\n    # convert series to dataframe with index and column\n"
    ],
    "results": 9
},{
    "id": "95",
    "source": "soSearches",
    "language": "python",
    "query": "how to close the chatbox in python",
    "snippets": [
        "def main():\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Chatbox\")\n    root.geometry(\"300x300\")\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Chat Box\")\n    root.geometry(\"300x300\")\n    root.mainloop()\n    root.destroy()\n",
        "def main():\n    import pyautogui\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.type('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!')\n    pyautogui.press('enter')\n",
        "def main():\n    import pyautogui\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='right')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click(button='left')\n    pyautogui.moveTo(100, 100, duration=0.25)\n    pyautogui.click\n",
        "def main():\n    import pyautogui\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(100, 100)\n    pyautogui.click()\n    pyautogui.typewrite('Hello world!\\n')\n    pyautogui.moveTo(\n"
    ],
    "results": 6
},{
    "id": "96",
    "source": "soSearches",
    "language": "python",
    "query": "python how to enable adobe flash in firefox selenium webdriver",
    "snippets": [
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n",
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    from selenium.webdriver.common.\n",
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.common.proxy import ProxyType\n    from selenium.webdriver.common.proxy import Proxy\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.common.proxy import ProxyType\n    from selenium.webdriver.common.proxy import Proxy\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.common.proxy import ProxyType\n    from selenium.webdriver.common.proxy import Proxy\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common\n",
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.keys import Keys\n    from selenium\n",
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium\n",
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n\n    # create a new firefox session\n    firefox_capabilities = DesiredCapabilities.FIREFOX\n    firefox_capabilities['marionette'] = True\n    firefox_capabilities['proxy'] = {'proxyType': ProxyType.MANUAL}\n    firefox_capabilities['proxy']['httpProxy'] = 'localhost:8080'\n    firefox_capabilities['proxy']['sslProxy'] = 'localhost:8080'\n    firefox_capabilities['proxy']['ftpProxy'] = 'localhost:8080'\n    firefox_capabilities['proxy']['socksProxy'] = 'localhost:8080'\n    firefox_capabilities['proxy']['noProxy'] = ''\n    firefox_capabilities['acceptInsecureCerts'] = True\n    firefox_capabilities['acceptSslCerts'] = True\n    firefox_capabilities['moz:firefoxOptions'] = {'prefs': {'dom.ipc.plugins.enabled.libflashplayer.so': 'false'}}\n    firefox_capabilities['moz:firefoxOptions'] = {'prefs': {'dom.ipc.plugins.enabled.libflashplayer.so': 'true'}}\n    firefox_capabilities['moz:firefoxOptions'] = {'prefs': {'dom.ipc.plugins.enabled.libflashplayer.so': 'false'}}\n    firefox_capabilities['moz:firefoxOptions'] = {'prefs': {'dom.ipc.plugins.enabled.libflashplayer.\n",
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.firefox.options import Options\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.\n"
    ],
    "results": 8
},{
    "id": "97",
    "source": "soSearches",
    "language": "python",
    "query": "how to skip to the next iteration in a for loop python",
    "snippets": [
        "def main():\n    for i in range(10):\n        if i == 5:\n            continue\n        print(i)\n    print(\"Done with loop\")\n",
        "def main():\n    for i in range(1,10):\n        if i == 5:\n            continue\n        print(i)\n    print(\"Done with loop\")\n",
        "def main():\n    for i in range(10):\n        if i == 5:\n            continue\n        print(i)\n    print(\"Done with loop\")\n    # skip to the next iteration in the loop\n    for i in range(10):\n        if i == 5:\n            break\n        print(i)\n    print(\"Done with loop\")\n    # skip to the next iteration in the loop\n    for i in range(10):\n        if i == 5:\n            break\n        print(i)\n        continue\n    print(\"Done with loop\")\n    # skip to the next iteration in the loop\n    for i in range(10):\n        if i == 5:\n            break\n        print(i)\n        continue\n        print(\"This will not print\")\n    print(\"Done with loop\")\n    # skip to the next iteration in the loop\n    for i in range(10):\n        if i == 5:\n            break\n        print(i)\n        continue\n        print(\"This will not print\")\n        print(\"This will not print\")\n    print(\"Done with loop\")\n    # skip to the next iteration in the loop\n    for i in range(10):\n        if i == 5:\n            break\n        print(i)\n        continue\n        print(\"This will not print\")\n        print(\"This will not print\")\n        print(\"This will not print\")\n    print(\"Done with loop\")\n    # skip to the next iteration in the loop\n    for i in range(10):\n        if i == 5:\n            break\n        print(i)\n        continue\n        print(\"This will not print\")\n        print(\"This will not print\")\n        print(\"This will not print\")\n        print(\"This will not print\")\n    print(\"Done with loop\")\n    # skip to the next iteration in the loop\n    for i in range(10):\n        if i == 5:\n            break\n        print(i)\n        continue\n        print(\"This will not print\")\n        print(\"This will not print\")\n        print(\"This will not print\")\n        print(\"This will not print\")\n        print(\"This will not print\")\n    print(\"Done with loop\")\n    #\n"
    ],
    "results": 10
},{
    "id": "98",
    "source": "soSearches",
    "language": "python",
    "query": "how to deal with extra \\\"\\\\\" in data file in python",
    "snippets": [
        "def main():\n    with open('data.txt', 'r') as f:\n        for line in f:\n            print(line.strip())\n",
        "def main():\n    with open('data.txt', 'r') as f:\n        for line in f:\n            print(line.rstrip())\n",
        "def main():\n    with open('data.txt', 'r') as f:\n        data = f.read()\n    print(data)\n    print(data.replace('\\\\', ''))\n    print(data.replace('\\\\', '').replace('\"', ''))\n    print(data.replace('\\\\', '').replace('\"', '').split(','))\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[0])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[1])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[2])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[3])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[4])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[5])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[6])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[7])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[8])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[9])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[10])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[11])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[12])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[13])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[14])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[15])\n    print(data.replace('\\\\', '').replace('\"', '').split(',')[16])\n    print(data.replace('\n"
    ],
    "results": 10
},{
    "id": "99",
    "source": "soSearches",
    "language": "python",
    "query": "how to get the current time of a remote system in python",
    "snippets": [
        "def get_time(host):\n    import paramiko\n    ssh = paramiko.SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(host, username='root', password='password')\n    stdin, stdout, stderr = ssh.exec_command('date')\n    return stdout.read()\n",
        "def get_current_time(hostname):\n    import paramiko\n    ssh = paramiko.SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(hostname, username='root')\n    stdin, stdout, stderr = ssh.exec_command('date')\n    return stdout.read().decode('utf-8')\n",
        "def get_current_time(hostname):\n    import paramiko\n    import time\n    ssh = paramiko.SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(hostname, username='root')\n    stdin, stdout, stderr = ssh.exec_command('date')\n    print(stdout.read())\n    ssh.close()\n    return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())\n",
        "def get_current_time(hostname):\n    import paramiko\n    import time\n    ssh = paramiko.SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(hostname, username='root', password='root')\n    stdin, stdout, stderr = ssh.exec_command('date')\n    print(stdout.read())\n    ssh.close()\n    return time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime())\n",
        "def get_time(host):\n    import socket\n    import time\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect((host, 22))\n    s.send(b'GET / HTTP/1.0\\r\\n\\r\\n')\n    data = s.recv(1024)\n    print(data.decode('ascii'))\n    s.close()\n    return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())\n",
        "def get_time(host):\n    import socket\n    import time\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect((host, 22))\n    s.send(b'ntpdate -q -u pool.ntp.org\\r\\n')\n    data = s.recv(1024)\n    s.close()\n    return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(float(data.split()[-1])))\n",
        "def get_time(host):\n    import socket\n    import time\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect((host, 22))\n    s.send(b'ntpdate -q -u pool.ntp.org\\n')\n    data = s.recv(1024)\n    s.close()\n    return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(float(data.decode().split('\\n')[-2].split()[-1])))\n",
        "def get_time(hostname):\n    import socket\n    import time\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect((hostname, 22))\n    s.send(b'TIME\\n')\n    data = s.recv(1024)\n    s.close()\n    return data.decode('ascii')\n",
        "def get_current_time(hostname):\n    import socket\n    import time\n    try:\n        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        s.connect((hostname, 22))\n        s.send(b'\\x03')\n        data = s.recv(1024)\n        s.close()\n        return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))\n    except:\n        return 'Unable to connect to host'\n",
        "def get_time(host):\n    import socket\n    import time\n    try:\n        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        s.connect((host, 22))\n        s.send(b'\\x50\\x4b\\x03\\x04\\x0a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00')\n        data = s.recv(1024)\n        s.close()\n        return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.mktime(time.strptime(data[:19].decode('utf-8'), '%Y-%m-%d %H:%M:%S'))))\n    except:\n        return 'unknown'\n"
    ],
    "results": 10
},{
    "id": "100",
    "source": "soSearches",
    "language": "python",
    "query": "how to recurse a string in python",
    "snippets": [
        "def recurse(string):\n    if len(string) == 0:\n        return string\n    else:\n        return string[0] + recurse(string[1:])\n",
        "def recurse(string):\n    if len(string) == 0:\n        return\n    else:\n        print(string[0])\n        recurse(string[1:])\n",
        "def recurse(string, n):\n    if n == 0:\n        return string\n    else:\n        return recurse(string, n-1) + string\n",
        "def recurse(string, count):\n    if count == 0:\n        return string\n    else:\n        return recurse(string + string, count - 1)\n"
    ],
    "results": 10
},{
    "id": "101",
    "source": "soSearches",
    "language": "python",
    "query": "how to allow the user to indicate mathematical operations in python code",
    "snippets": [
        "def main():\n    print(\"This program allows you to perform basic math operations.\")\n    print(\"Please enter your first number:\")\n    num1 = int(input())\n    print(\"Please enter your second number:\")\n    num2 = int(input())\n    print(\"Please enter the operation you want to perform:\")\n    print(\"\"\"\n    + for addition\n    - for subtraction\n    * for multiplication\n    / for division\n    \"\"\")\n    op = input()\n    if op == \"+\":\n        print(\"{} + {} = {}\".format(num1, num2, num1 + num2))\n    elif op == \"-\":\n        print(\"{} - {} = {}\".format(num1, num2, num1 - num2))\n    elif op == \"*\":\n        print(\"{} * {} = {}\".format(num1, num2, num1 * num2))\n    elif op == \"/\":\n        print(\"{} / {} = {}\".format(num1, num2, num1 / num2))\n    else:\n        print(\"You have not entered a valid operator.\")\n",
        "def main():\n    print(\"This program adds two numbers together.\")\n    print(\"Please enter the first number:\")\n    num1 = int(input())\n    print(\"Please enter the second number:\")\n    num2 = int(input())\n    print(\"The two numbers added together are:\")\n    print(num1 + num2)\n    print(\"The two numbers multiplied together are:\")\n    print(num1 * num2)\n    print(\"The two numbers divided together are:\")\n    print(num1 / num2)\n    print(\"The two numbers subtracted together are:\")\n    print(num1 - num2)\n    print(\"The two numbers moduloed together are:\")\n    print(num1 % num2)\n    print(\"The two numbers raised to the power of each other are:\")\n    print(num1 ** num2)\n    print(\"The two numbers divided and then multiplied together are:\")\n    print(num1 // num2)\n    print(\"The two numbers divided and then subtracted together are:\")\n    print(num1 % num2)\n    print(\"The two numbers raised to the power of each other are:\")\n    print(num1 ** num2)\n    print(\"The two numbers divided and then multiplied together are:\")\n    print(num1 // num2)\n    print(\"The two numbers divided and then subtracted together are:\")\n    print(num1 % num2)\n    print(\"The two numbers raised to the power of each other are:\")\n    print(num1 ** num2)\n    print(\"The two numbers divided and then multiplied together are:\")\n    print(num1 // num2)\n    print(\"The two numbers divided and then subtracted together are:\")\n    print(num1 % num2)\n    print(\"The two numbers raised to the power of each other are:\")\n    print(num1 ** num2)\n    print(\"The two numbers divided and then multiplied together are:\")\n    print(num1 // num2)\n    print(\"The two numbers divided and then subtracted together are:\")\n    print(num1 % num2)\n    print(\"The two numbers raised to the power of each other are:\")\n    print(\n",
        "def main():\n    print(\"This program adds two numbers together.\")\n    print(\"Please enter the first number:\")\n    num1 = int(input())\n    print(\"Please enter the second number:\")\n    num2 = int(input())\n    print(\"The sum of the two numbers is:\", num1 + num2)\n    print(\"The product of the two numbers is:\", num1 * num2)\n    print(\"The difference of the two numbers is:\", num1 - num2)\n    print(\"The quotient of the two numbers is:\", num1 / num2)\n    print(\"The remainder of the two numbers is:\", num1 % num2)\n    print(\"The power of the two numbers is:\", num1 ** num2)\n    print(\"The square root of the first number is:\", num1 ** 0.5)\n    print(\"The square root of the second number is:\", num2 ** 0.5)\n    print(\"The cube root of the first number is:\", num1 ** (1/3))\n    print(\"The cube root of the second number is:\", num2 ** (1/3))\n    print(\"The fourth root of the first number is:\", num1 ** (1/4))\n    print(\"The fourth root of the second number is:\", num2 ** (1/4))\n    print(\"The fifth root of the first number is:\", num1 ** (1/5))\n    print(\"The fifth root of the second number is:\", num2 ** (1/5))\n    print(\"The sixth root of the first number is:\", num1 ** (1/6))\n    print(\"The sixth root of the second number is:\", num2 ** (1/6))\n    print(\"The seventh root of the first number is:\", num1 ** (1/7))\n    print(\"The seventh root of the second number is:\", num2 ** (1/7))\n    print(\"The eighth root of the first number is:\", num1 ** (1/8))\n    print(\"The eighth root of the second number is:\", num2 ** (1/8))\n    print(\"The ninth root of the first number is:\", num1 ** (1/9))\n    print\n",
        "def add(a, b):\n    return a + b\n",
        "def main():\n    print(\"This program allows the user to enter two numbers and an operator.\")\n    print(\"It will then perform the operation on the two numbers.\")\n    print()\n\n    x = int(input(\"Enter a number: \"))\n    y = int(input(\"Enter another number: \"))\n    z = input(\"Enter an operator: \")\n\n    if z == \"+\":\n        print(x, \"+\", y, \"=\", x + y)\n    elif z == \"-\":\n        print(x, \"-\", y, \"=\", x - y)\n    elif z == \"*\":\n        print(x, \"*\", y, \"=\", x * y)\n    elif z == \"/\":\n        print(x, \"/\", y, \"=\", x / y)\n    elif z == \"%\":\n        print(x, \"%\", y, \"=\", x % y)\n    else:\n        print(\"Invalid operator\")\n",
        "def main():\n    print(\"This program allows the user to enter a mathematical expression\")\n    print(\"and it will evaluate the expression and return the result\")\n    print(\"Please enter the expression:\")\n    # get the expression from the user\n    expression = input()\n    # evaluate the expression\n    result = eval(expression)\n    # display the result\n    print(\"The result is:\", result)\n",
        "def main():\n    print(\"This program allows the user to enter a number and a mathematical operation.\")\n    print(\"The result of the operation is displayed.\")\n    print()\n    print(\"Please enter your first number:\")\n    num1 = int(input())\n    print(\"Please enter your second number:\")\n    num2 = int(input())\n    print(\"Please enter your operation:\")\n    op = input()\n    if op == \"+\":\n        print(num1 + num2)\n    elif op == \"-\":\n        print(num1 - num2)\n    elif op == \"*\":\n        print(num1 * num2)\n    elif op == \"/\":\n        print(num1 / num2)\n    else:\n        print(\"Unknown operator\")\n"
    ],
    "results": 8
},{
    "id": "102",
    "source": "soSearches",
    "language": "python",
    "query": "how to make top trumps in python",
    "snippets": [
        "def main():\n    # create a list of cards\n    cards = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 'A']\n    # create a list of suits\n    suits = ['S', 'H', 'D', 'C']\n    # create a list of cards\n    deck = []\n    # create a list of cards\n    for i in range(len(cards)):\n        for j in range(len(suits)):\n            deck.append(cards[i] + suits[j])\n    # shuffle the deck\n    import random\n    random.shuffle(deck)\n    # create a list of players\n    players = []\n    # create a list of players\n    for i in range(4):\n        players.append([])\n    # deal the cards\n    for i in range(len(deck)):\n        players[i % 4].append(deck[i])\n    # print the cards\n    for i in range(len(players)):\n        print('Player ' + str(i + 1) + ': ' + str(players[i]))\n    # print the cards\n    for i in range(len(players)):\n        print('Player ' + str(i + 1) + ': ' + str(players[i]))\n    # print the cards\n    for i in range(len(players)):\n        print('Player ' + str(i + 1) + ': ' + str(players[i]))\n    # print the cards\n    for i in range(len(players)):\n        print('Player ' + str(i + 1) + ': ' + str(players[i]))\n    # print the cards\n    for i in range(len(players)):\n        print('Player ' + str(i + 1) + ': ' + str(players[i]))\n    # print the cards\n    for i in range(len(players)):\n        print('Player ' + str(i + 1) + ': ' + str(players[i]))\n    # print the cards\n    for i in range(len(players)):\n        print('Player '\n",
        "def main():\n    # create a deck of cards\n    deck = create_deck()\n    # shuffle the deck\n    shuffle_deck(deck)\n    # deal the cards\n    player_hand, dealer_hand = deal_cards(deck)\n    # show the cards\n    show_cards(player_hand, dealer_hand)\n    # get the player's choice\n    player_choice = get_player_choice()\n    # get the dealer's choice\n    dealer_choice = get_dealer_choice()\n    # get the winner\n    winner = get_winner(player_choice, dealer_choice)\n    # show the winner\n    show_winner(winner)\n    # show the cards\n    show_cards(player_hand, dealer_hand)\n    # show the score\n    show_score(player_hand, dealer_hand)\n    # ask the player if they want to play again\n    play_again = get_play_again()\n    # if the player wants to play again, start the game again\n    if play_again:\n        main()\n    else:\n        print(\"Thanks for playing!\")\n",
        "def main():\n    # create a deck of cards\n    deck = create_deck()\n    # shuffle the deck\n    shuffle_deck(deck)\n    # deal the cards\n    player_hand, dealer_hand = deal_cards(deck)\n    # show the cards\n    show_cards(player_hand, dealer_hand)\n    # ask the player if they want to play\n    play = input(\"Do you want to play? (y/n) \")\n    # if they want to play, play the game\n    if play == \"y\":\n        play_game(deck, player_hand, dealer_hand)\n    # if they don't want to play, exit the program\n    else:\n        print(\"Thanks for playing!\")\n        exit()\n",
        "def main():\n    # create a deck of cards\n    deck = create_deck()\n    # shuffle the deck\n    shuffle_deck(deck)\n    # deal the cards\n    player_hand, dealer_hand = deal_cards(deck)\n    # show the cards\n    show_cards(player_hand, dealer_hand)\n    # ask the player if they want to hit or stay\n    player_hit = hit_or_stay()\n    # if the player hits, deal another card\n    if player_hit:\n        player_hand.append(deal_card(deck))\n        show_cards(player_hand, dealer_hand)\n    # if the player stays, the dealer hits\n    else:\n        dealer_hand.append(deal_card(deck))\n        show_cards(player_hand, dealer_hand)\n    # if the dealer hits, deal another card\n    if dealer_hand[0].value < 17:\n        dealer_hand.append(deal_card(deck))\n        show_cards(player_hand, dealer_hand)\n    # determine the winner\n    winner = determine_winner(player_hand, dealer_hand)\n    # display the winner\n    display_winner(winner)\n    # display the score\n    display_score(player_hand, dealer_hand)\n    # ask if the player wants to play again\n    play_again = play_again()\n    # if the player wants to play again, restart the game\n    if play_again:\n        main()\n    # if the player does not want to play again, exit the game\n    else:\n        exit()\n",
        "def main():\n    # get the user input\n    user_input = input(\"Enter a card: \")\n    # split the user input into a list\n    user_input_list = user_input.split()\n    # get the first element of the list\n    user_input_list_first_element = user_input_list[0]\n    # get the second element of the list\n    user_input_list_second_element = user_input_list[1]\n    # get the third element of the list\n    user_input_list_third_element = user_input_list[2]\n    # get the fourth element of the list\n    user_input_list_fourth_element = user_input_list[3]\n    # get the fifth element of the list\n    user_input_list_fifth_element = user_input_list[4]\n    # get the sixth element of the list\n    user_input_list_sixth_element = user_input_list[5]\n    # get the seventh element of the list\n    user_input_list_seventh_element = user_input_list[6]\n    # get the eighth element of the list\n    user_input_list_eighth_element = user_input_list[7]\n    # get the ninth element of the list\n    user_input_list_ninth_element = user_input_list[8]\n    # get the tenth element of the list\n    user_input_list_tenth_element = user_input_list[9]\n    # get the eleventh element of the list\n    user_input_list_eleventh_element = user_input_list[10]\n    # get the twelfth element of the list\n    user_input_list_twelfth_element = user_input_list[11]\n    # get the thirteenth element of the list\n    user_input_list_thirteenth_element = user_input_list[12]\n    # get the fourteenth element of the list\n    user_input_list_fourteenth_element = user_input_list[13]\n    # get the fifteenth element of the list\n    user_input_\n",
        "def main():\n    # get the number of cards in the deck\n    num_cards = int(input(\"How many cards are in the deck? \"))\n    # get the number of cards in the hand\n    num_hand = int(input(\"How many cards are in your hand? \"))\n    # get the number of cards in the discard pile\n    num_discard = int(input(\"How many cards are in the discard pile? \"))\n    # get the number of cards in the draw pile\n    num_draw = int(input(\"How many cards are in the draw pile? \"))\n    # get the number of cards in the trash pile\n    num_trash = int(input(\"How many cards are in the trash pile? \"))\n    # get the number of cards in the player's hand\n    num_player = int(input(\"How many cards are in your hand? \"))\n    # get the number of cards in the opponent's hand\n    num_opponent = int(input(\"How many cards are in your opponent's hand? \"))\n    # get the number of cards in the player's hand\n    num_player_deck = int(input(\"How many cards are in your deck? \"))\n    # get the number of cards in the opponent's hand\n    num_opponent_deck = int(input(\"How many cards are in your opponent's deck? \"))\n    # get the number of cards in the player's hand\n    num_player_discard = int(input(\"How many cards are in your discard pile? \"))\n    # get the number of cards in the opponent's hand\n    num_opponent_discard = int(input(\"How many cards are in your opponent's discard pile? \"))\n    # get the number of cards in the player's hand\n    num_player_draw = int(input(\"How many cards are in your draw pile? \"))\n    # get the number of cards in the opponent's hand\n    num_opponent_draw = int(input(\"How many cards are in your opponent's draw pile? \"))\n    # get the number of cards in the player's hand\n    num_player_trash = int(input(\"How many cards are in your trash pile? \"))\n    #\n",
        "def main():\n    # get the user's choice\n    choice = get_choice()\n    # get the computer's choice\n    computer_choice = get_computer_choice()\n    # get the winner\n    winner = get_winner(choice, computer_choice)\n    # display the winner\n    display_winner(winner)\n    # display the choices\n    display_choices(choice, computer_choice)\n    # display the score\n    display_score()\n    # ask if the user wants to play again\n    play_again = play_again()\n    # if the user wants to play again, call the main function\n    if play_again:\n        main()\n    # if the user doesn't want to play again, exit the program\n    else:\n        exit()\n",
        "def main():\n    # get the number of cards in the deck\n    n = int(input(\"How many cards in the deck? \"))\n    # get the number of cards in the hand\n    m = int(input(\"How many cards in the hand? \"))\n    # get the number of cards in the discard pile\n    k = int(input(\"How many cards in the discard pile? \"))\n    # get the number of cards in the draw pile\n    l = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the discard pile\n    o = int(input(\"How many cards in the discard pile? \"))\n    # get the number of cards in the draw pile\n    p = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the discard pile\n    q = int(input(\"How many cards in the discard pile? \"))\n    # get the number of cards in the draw pile\n    r = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the discard pile\n    s = int(input(\"How many cards in the discard pile? \"))\n    # get the number of cards in the draw pile\n    t = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the discard pile\n    u = int(input(\"How many cards in the discard pile? \"))\n    # get the number of cards in the draw pile\n    v = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the discard pile\n    w = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the draw pile\n    x = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the discard pile\n    y = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the draw pile\n    z = int(input(\"How many cards in the draw pile? \"))\n    # get the number of cards in the discard pile\n    aa = int(input(\"\n",
        "def top_trumps(hand1, hand2):\n    \"\"\"\n    takes two hands and returns the winner\n    \"\"\"\n    # get the values of the hands\n    hand1_value = hand1[0]\n    hand2_value = hand2[0]\n    # get the suits of the hands\n    hand1_suit = hand1[1]\n    hand2_suit = hand2[1]\n    # if the values are the same, return the suit\n    if hand1_value == hand2_value:\n        if hand1_suit > hand2_suit:\n            return hand1\n        else:\n            return hand2\n    # if the values are different, return the value\n    else:\n        if hand1_value > hand2_value:\n            return hand1\n        else:\n            return hand2\n"
    ],
    "results": 9
},{
    "id": "103",
    "source": "soSearches",
    "language": "python",
    "query": "how to calculation sum in  loop in python",
    "snippets": [
        "def sum_loop(n):\n    sum = 0\n    for i in range(n):\n        sum += i\n    return sum\n",
        "def sum_loop(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n",
        "def sum_in_loop(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n",
        "def sum(n):\n    sum = 0\n    for i in range(n):\n        sum += i\n    return sum\n"
    ],
    "results": 10
},{
    "id": "104",
    "source": "soSearches",
    "language": "python",
    "query": "how to count string values python",
    "snippets": [
        "def count_string(string):\n    count = 0\n    for i in string:\n        if i == 'a':\n            count += 1\n    return count\n",
        "def main():\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n    # close the file\n    infile.close()\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\"), \"lines.\")\n    # count the words\n    print(\"The file contains\", words.count(\" \"), \"words.\")\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\") + 1, \"characters.\")\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\") + 1 - words.count(\" \"), \"words.\")\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\") + 1 - words.count(\" \") - words.count(\"\\n\"), \"characters.\")\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\") + 1 - words.count(\" \") - words.count(\"\\n\") - words.count(\" \"), \"words.\")\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\") + 1 - words.count(\" \") - words.count(\"\\n\") - words.count(\" \") - words.count(\"\\n\"), \"characters.\")\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\") + 1 - words.count(\" \") - words.count(\"\\n\") - words.count(\" \") - words.count(\"\\n\") - words.count(\" \"), \"words.\")\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\") + 1 - words.count(\" \") - words.count(\"\\n\") - words.count(\" \") - words.count(\"\\n\") - words.count(\" \") - words.count(\"\\n\"), \"characters.\")\n    # count the words\n    print(\"The file contains\", words.count(\"\\n\") + 1 - words.count(\" \") - words.count(\"\\n\") - words.count(\" \") - words.count(\"\\n\") - words.count(\" \"\n",
        "def main():\n    # create a list of strings\n    my_list = ['hello', 'world', 'how', 'are', 'you']\n    # create a dictionary\n    my_dict = {}\n    # loop through the list\n    for i in my_list:\n        # if the key is in the dictionary, increment the value\n        if i in my_dict:\n            my_dict[i] += 1\n        # if the key is not in the dictionary, add it and set the value to 1\n        else:\n            my_dict[i] = 1\n    # print the dictionary\n    print(my_dict)\n    # print the number of times each string appears in the list\n    for i in my_dict:\n        print(i, my_dict[i])\n",
        "def main():\n    # create a list of strings\n    my_list = [\"hello\", \"world\", \"how\", \"are\", \"you\"]\n    # create a dictionary\n    my_dict = {}\n    # loop through the list\n    for item in my_list:\n        # if the item is in the dictionary\n        if item in my_dict:\n            # increment the value\n            my_dict[item] += 1\n        # if the item is not in the dictionary\n        else:\n            # add the item to the dictionary\n            my_dict[item] = 1\n    # print the dictionary\n    print(my_dict)\n    # print the number of times each item occurs in the list\n    for item in my_dict:\n        print(item + \" occurs \" + str(my_dict[item]) + \" times\")\n",
        "def count_string(s):\n    count = 0\n    for i in s:\n        if i == 'a':\n            count += 1\n    return count\n",
        "def main():\n    # get the string from the user\n    string = input(\"Enter a string: \")\n    # count the number of times the letter 'a' appears in the string\n    count = string.count('a')\n    # print the number of times the letter 'a' appears in the string\n    print(\"The letter 'a' appears\", count, \"times in the string.\")\n",
        "def main():\n    # create a list of strings\n    string_list = ['hello', 'world', 'how', 'are', 'you']\n    # create a dictionary to store the counts\n    string_count = {}\n    # loop through the list\n    for string in string_list:\n        # if the string is in the dictionary\n        if string in string_count:\n            # increment the count\n            string_count[string] += 1\n        # if the string is not in the dictionary\n        else:\n            # add the string to the dictionary with a count of 1\n            string_count[string] = 1\n    # print the dictionary\n    print(string_count)\n",
        "def count_string(string):\n    return len(string)\n"
    ],
    "results": 10
},{
    "id": "105",
    "source": "soSearches",
    "language": "python",
    "query": "how to create queue in python",
    "snippets": [
        "def main():\n    q = Queue()\n    q.enqueue(1)\n    q.enqueue(2)\n    q.enqueue(3)\n    print(q.dequeue())\n    print(q.dequeue())\n    print(q.dequeue())\n    print(q.dequeue())\n    print(q.dequeue())\n",
        "def main():\n    q = Queue()\n    q.enqueue(1)\n    q.enqueue(2)\n    q.enqueue(3)\n    q.enqueue(4)\n    q.enqueue(5)\n    q.enqueue(6)\n    q.enqueue(7)\n    q.enqueue(8)\n    q.enqueue(9)\n    q.enqueue(10)\n    q.enqueue(11)\n    q.enqueue(12)\n    q.enqueue(13)\n    q.enqueue(14)\n    q.enqueue(15)\n    q.enqueue(16)\n    q.enqueue(17)\n    q.enqueue(18)\n    q.enqueue(19)\n    q.enqueue(20)\n    q.enqueue(21)\n    q.enqueue(22)\n    q.enqueue(23)\n    q.enqueue(24)\n    q.enqueue(25)\n    q.enqueue(26)\n    q.enqueue(27)\n    q.enqueue(28)\n    q.enqueue(29)\n    q.enqueue(30)\n    q.enqueue(31)\n    q.enqueue(32)\n    q.enqueue(33)\n    q.enqueue(34)\n    q.enqueue(35)\n    q.enqueue(36)\n    q.enqueue(37)\n    q.enqueue(38)\n    q.enqueue(39)\n    q.enqueue(40)\n    q.enqueue(41)\n    q.enqueue(42)\n    q.enqueue(43)\n    q.enqueue(44)\n    q.enqueue(45)\n    q.enqueue(46)\n    q.enqueue(47)\n    q.enqueue(48)\n    q.enqueue(49)\n    q.enqueue(50)\n    q.enqueue(51)\n    q.enqueue(52)\n    q.enqueue(53)\n    q.enqueue(54)\n    q.\n",
        "def main():\n    queue = [1,2,3,4,5]\n    print(queue)\n    queue.append(6)\n    print(queue)\n    queue.pop(0)\n    print(queue)\n    queue.insert(0,7)\n    print(queue)\n    queue.remove(7)\n    print(queue)\n    queue.reverse()\n    print(queue)\n    queue.sort()\n    print(queue)\n    queue.clear()\n    print(queue)\n    queue.append(1)\n    print(queue)\n    queue.append(2)\n    print(queue)\n    queue.append(3)\n    print(queue)\n    queue.append(4)\n    print(queue)\n    queue.append(5)\n    print(queue)\n    queue.append(6)\n    print(queue)\n    queue.append(7)\n    print(queue)\n    queue.append(8)\n    print(queue)\n    queue.append(9)\n    print(queue)\n    queue.append(10)\n    print(queue)\n    queue.append(11)\n    print(queue)\n    queue.append(12)\n    print(queue)\n    queue.append(13)\n    print(queue)\n    queue.append(14)\n    print(queue)\n    queue.append(15)\n    print(queue)\n    queue.append(16)\n    print(queue)\n    queue.append(17)\n    print(queue)\n    queue.append(18)\n    print(queue)\n    queue.append(19)\n    print(queue)\n    queue.append(20)\n    print(queue)\n    queue.append(21)\n    print(queue)\n    queue.append(22)\n    print(queue)\n    queue.append(23)\n    print(queue)\n    queue.append(24)\n    print(queue)\n    queue.append(25)\n    print(queue)\n    queue.append(26)\n    print(queue)\n    queue.append(27)\n    print(queue)\n    queue.\n"
    ],
    "results": 5
},{
    "id": "106",
    "source": "soSearches",
    "language": "python",
    "query": "python how to get url",
    "snippets": [
        "def get_url(url):\n    import requests\n    r = requests.get(url)\n    return r.text\n",
        "def get_url(url):\n    import urllib.request\n    with urllib.request.urlopen(url) as response:\n        return response.read()\n"
    ],
    "results": 10
},{
    "id": "107",
    "source": "soSearches",
    "language": "python",
    "query": "how to calculate area in python",
    "snippets": [
        "def area(radius):\n    return 3.14 * radius ** 2\n",
        "def area(radius):\n    return 3.14 * radius * radius\n",
        "def area(length, width):\n    return length * width\n"
    ],
    "results": 10
},{
    "id": "108",
    "source": "soSearches",
    "language": "python",
    "query": "how to implement elu in python",
    "snippets": [
        "def elu(x):\n    return np.where(x > 0, x, np.exp(x) - 1)\n",
        "def elu(x, alpha=1.0):\n    return np.where(x > 0, x, alpha * (np.exp(x) - 1))\n",
        "def elu(Z):\n    return np.where(Z > 0, Z, Z * (np.exp(Z) - 1))\n"
    ],
    "results": 10
},{
    "id": "109",
    "source": "soSearches",
    "language": "python",
    "query": "how to get python pandas help menu",
    "snippets": [
        "def main():\n    import pandas as pd\n    print(pd.__doc__)\n    print(pd.DataFrame.__doc__)\n    print(pd.Series.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.to_csv.__doc__)\n    print(pd.DataFrame.to_html.__doc__)\n    print(pd.DataFrame.to_json.__doc__)\n    print(pd.DataFrame.to_excel.__doc__)\n    print(pd.DataFrame.to_sql.__doc__)\n    print(pd.DataFrame.read_csv.__doc__)\n    print(pd.DataFrame.read_excel.__doc__)\n    print(pd.DataFrame.read_json.__doc__)\n    print(pd.DataFrame.read_sql.__doc__)\n    print(pd.DataFrame.read_table.__doc__)\n    print(pd.DataFrame.load.__doc__)\n    print(pd.DataFrame.dump.__doc__)\n    print(pd.DataFrame.to_pickle.__doc__)\n    print(pd.DataFrame.from_pickle.__doc__)\n    print(pd.DataFrame.to_clipboard.__doc__)\n    print(pd.DataFrame.from_clipboard.__doc__)\n    print(pd.DataFrame.to_latex.__doc__)\n    print(pd.DataFrame.from_latex.__doc__)\n    print(pd.DataFrame.to_dict.__doc__)\n    print(pd.DataFrame.from_dict.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_records.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_records.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.\n",
        "def main():\n    import pandas as pd\n    print(pd.__doc__)\n    print(pd.DataFrame.__doc__)\n    print(pd.Series.__doc__)\n    print(pd.DataFrame.from_dict.__doc__)\n    print(pd.DataFrame.from_records.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_excel.__doc__)\n    print(pd.DataFrame.from_sql.__doc__)\n    print(pd.DataFrame.to_csv.__doc__)\n    print(pd.DataFrame.to_excel.__doc__)\n    print(pd.DataFrame.to_sql.__doc__)\n    print(pd.DataFrame.to_json.__doc__)\n    print(pd.DataFrame.to_html.__doc__)\n    print(pd.DataFrame.to_dict.__doc__)\n    print(pd.DataFrame.to_latex.__doc__)\n    print(pd.DataFrame.to_clipboard.__doc__)\n    print(pd.DataFrame.to_json.__doc__)\n    print(pd.DataFrame.to_stata.__doc__)\n    print(pd.DataFrame.to_pickle.__doc__)\n    print(pd.DataFrame.to_msgpack.__doc__)\n    print(pd.DataFrame.to_sql.__doc__)\n    print(pd.DataFrame.to_hdf.__doc__)\n    print(pd.DataFrame.to_xls.__doc__)\n    print(pd.DataFrame.to_xlsx.__doc__)\n    print(pd.DataFrame.to_csv.__doc__)\n    print(pd.DataFrame.to_numpy.__doc__)\n    print(pd.DataFrame.to_html.__doc__)\n    print(pd.DataFrame.to_latex.__doc\n",
        "def main():\n    import pandas as pd\n    print(pd.__doc__)\n    print(pd.DataFrame.__doc__)\n    print(pd.Series.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_dict.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_records.__doc__)\n    print(pd.DataFrame.from_sql.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_csv.__doc__)\n    print(pd.DataFrame.from_items.__doc__)\n    print(pd.DataFrame.from_\n",
        "def main():\n    import pandas as pd\n    print(pd.__doc__)\n    print(pd.DataFrame.__doc__)\n    print(pd.DataFrame.head.__doc__)\n    print(pd.DataFrame.tail.__doc__)\n    print(pd.DataFrame.info.__doc__)\n    print(pd.DataFrame.describe.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n    print(pd.DataFrame.apply.__doc__)\n    print(pd.DataFrame.applymap.__doc__)\n",
        "def main():\n    import pandas as pd\n    print(pd.__doc__)\n    return\n"
    ],
    "results": 5
},{
    "id": "110",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert object into integer in python",
    "snippets": [
        "def main():\n    x = int(1.99)\n    print(x)\n    y = int(2.99)\n    print(y)\n    z = int(3.99)\n    print(z)\n    a = int(4.99)\n    print(a)\n    b = int(5.99)\n    print(b)\n    c = int(6.99)\n    print(c)\n    d = int(7.99)\n    print(d)\n    e = int(8.99)\n    print(e)\n    f = int(9.99)\n    print(f)\n    g = int(10.99)\n    print(g)\n    h = int(11.99)\n    print(h)\n    i = int(12.99)\n    print(i)\n    j = int(13.99)\n    print(j)\n    k = int(14.99)\n    print(k)\n    l = int(15.99)\n    print(l)\n    m = int(16.99)\n    print(m)\n    n = int(17.99)\n    print(n)\n    o = int(18.99)\n    print(o)\n    p = int(19.99)\n    print(p)\n    q = int(20.99)\n    print(q)\n    r = int(21.99)\n    print(r)\n    s = int(22.99)\n    print(s)\n    t = int(23.99)\n    print(t)\n    u = int(24.99)\n    print(u)\n    v = int(25.99)\n    print(v)\n    w = int(26.99)\n    print(w)\n    x = int(27.99)\n    print(x)\n    y = int(28.99)\n    print(y)\n    z = int(29.99)\n    print(z)\n    a = int(30.99)\n    print(a)\n    b = int(31.99)\n    print(b)\n",
        "def main():\n    x = int(1.99)\n    print(x)\n    y = int(2.99)\n    print(y)\n    z = int(3.99)\n    print(z)\n    w = int(4.99)\n    print(w)\n    a = int(5.99)\n    print(a)\n    b = int(6.99)\n    print(b)\n    c = int(7.99)\n    print(c)\n    d = int(8.99)\n    print(d)\n    e = int(9.99)\n    print(e)\n    f = int(10.99)\n    print(f)\n    g = int(11.99)\n    print(g)\n    h = int(12.99)\n    print(h)\n    i = int(13.99)\n    print(i)\n    j = int(14.99)\n    print(j)\n    k = int(15.99)\n    print(k)\n    l = int(16.99)\n    print(l)\n    m = int(17.99)\n    print(m)\n    n = int(18.99)\n    print(n)\n    o = int(19.99)\n    print(o)\n    p = int(20.99)\n    print(p)\n    q = int(21.99)\n    print(q)\n    r = int(22.99)\n    print(r)\n    s = int(23.99)\n    print(s)\n    t = int(24.99)\n    print(t)\n    u = int(25.99)\n    print(u)\n    v = int(26.99)\n    print(v)\n    w = int(27.99)\n    print(w)\n    x = int(28.99)\n    print(x)\n    y = int(29.99)\n    print(y)\n    z = int(30.99)\n    print(z)\n    a = int(31.99)\n    print(a)\n",
        "def main():\n    x = int(1.9)\n    print(x)\n    y = int(2.9)\n    print(y)\n    z = int(-2.9)\n    print(z)\n    a = int(-1.9)\n    print(a)\n    b = int(0.9)\n    print(b)\n    c = int(0.0)\n    print(c)\n    d = int(-0.0)\n    print(d)\n    e = int(0.1)\n    print(e)\n    f = int(-0.1)\n    print(f)\n    g = int(0.9)\n    print(g)\n    h = int(-0.9)\n    print(h)\n    i = int(0.99)\n    print(i)\n    j = int(-0.99)\n    print(j)\n    k = int(0.999)\n    print(k)\n    l = int(-0.999)\n    print(l)\n    m = int(0.9999)\n    print(m)\n    n = int(-0.9999)\n    print(n)\n    o = int(0.99999)\n    print(o)\n    p = int(-0.99999)\n    print(p)\n    q = int(0.999999)\n    print(q)\n    r = int(-0.999999)\n    print(r)\n    s = int(0.9999999)\n    print(s)\n    t = int(-0.9999999)\n    print(t)\n    u = int(0.99999999)\n    print(u)\n    v = int(-0.99999999)\n    print(v)\n    w = int(0.999999999)\n    print(w)\n    x = int(-0.999999999)\n    print(x)\n    y = int(0.9999999999)\n    print(y)\n    z = int(-0.9999999999)\n    print(z)\n    a = int(0.99999999999)\n    print(a\n",
        "def convert_to_int(obj):\n    try:\n        return int(obj)\n    except ValueError:\n        return None\n",
        "def main():\n    x = int(1)\n    print(x)\n    y = int(2.8)\n    print(y)\n    z = int(\"3\")\n    print(z)\n    a = int(True)\n    print(a)\n    b = int(False)\n    print(b)\n    c = int(None)\n    print(c)\n    d = int([1, 2, 3])\n    print(d)\n    e = int((1, 2, 3))\n    print(e)\n    f = int({1, 2, 3})\n    print(f)\n    g = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(g)\n    h = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(h)\n    i = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(i)\n    j = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(j)\n    k = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(k)\n    l = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(l)\n    m = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(m)\n    n = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(n)\n    o = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(o)\n    p = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(p)\n    q = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(q)\n    r = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(r)\n    s = int({\"a\": 1, \"b\": 2, \"c\": 3})\n    print(s)\n    t = int(\n",
        "def main():\n    a = '123'\n    b = int(a)\n    print(b)\n    print(type(b))\n    c = '123.45'\n    d = float(c)\n    print(d)\n    print(type(d))\n    e = '123.45'\n    f = complex(e)\n    print(f)\n    print(type(f))\n    g = '123.45'\n    h = eval(g)\n    print(h)\n    print(type(h))\n    i = '123.45'\n    j = eval(i)\n    print(j)\n    print(type(j))\n    k = '123.45'\n    l = eval(k)\n    print(l)\n    print(type(l))\n    m = '123.45'\n    n = eval(m)\n    print(n)\n    print(type(n))\n    o = '123.45'\n    p = eval(o)\n    print(p)\n    print(type(p))\n    q = '123.45'\n    r = eval(q)\n    print(r)\n    print(type(r))\n    s = '123.45'\n    t = eval(s)\n    print(t)\n    print(type(t))\n    u = '123.45'\n    v = eval(u)\n    print(v)\n    print(type(v))\n    w = '123.45'\n    x = eval(w)\n    print(x)\n    print(type(x))\n    y = '123.45'\n    z = eval(y)\n    print(z)\n    print(type(z))\n    aa = '123.45'\n    bb = eval(aa)\n    print(bb)\n    print(type(bb))\n    cc = '123.45'\n    dd = eval(cc)\n    print(dd)\n    print(type(dd))\n    ee = '123.45'\n    ff = eval(ee)\n    print(ff)\n    print(type(ff))\n"
    ],
    "results": 8
},{
    "id": "111",
    "source": "soSearches",
    "language": "python",
    "query": "how to make variable increment colorbars python",
    "snippets": [
        "def main():\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n",
        "def main():\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.text as text\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.text as text\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.text as text\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.\n",
        "def main():\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.text as text\n    import matplotlib.animation as animation\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.text as text\n    import matplotlib.animation as animation\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.text as text\n    import matplotlib.animation as animation\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib\n",
        "def main():\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.backends.backend_agg as plt_agg\n    import matplotlib.backends.backend_svg as plt_svg\n    import matplotlib.backends.backend_ps as plt_ps\n    import matplotlib.backends.backend_tkagg as plt_tkagg\n    import matplotlib.backends.backend_webagg as plt_webagg\n    import matplotlib.backends.backend_qt4agg as plt_qt4agg\n    import matplotlib.backends.backend_qt5agg as plt_qt5agg\n    import matplotlib.backends.backend_gtk3agg as plt_gtk3agg\n    import matplotlib.backends.backend_gtk3cairo as plt_gtk3cairo\n    import matplotlib.backends.backend_qt4cairo as plt_qt4cairo\n    import matplotlib.backends.backend_qt5cairo as plt_qt5cairo\n    import matplotlib.backends.backend_cairo as plt_cairo\n    import matplotlib.backends.backend_pgf as plt_pgf\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.backends.backend_ps as plt_ps\n    import matplotlib.backends.backend_svg as plt_svg\n    import matplotlib.\n",
        "def main():\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.animation as animation\n    import matplotlib.patches as mpatches\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.font_manager as font_manager\n    import matplotlib.rcsetup as rcsetup\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg_core as webagg_core\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_gdk as gdk\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_gtk3agg as gtk3agg\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import sys\n    import os\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.path as mpath\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.axes as axes\n    import matplotlib.axis as maxis\n    import matplotlib.figure as mfigure\n    import matplotlib.animation as animation\n    import matplotlib.style as style\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_pgf as pgf\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_emf as emf\n    import matplotlib.backends.backend_ps_fonts as ps_fonts\n    import matplotlib.backends.backend_pdf_ps as pdf_ps\n    import matplotlib.backends.backend_svg_ps as svg_ps\n    import matplotlib.backends.backend_qt4_compat as qt4_compat\n    import matplotlib.backends.backend_qt\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import sys\n    import os\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.path as mpath\n    import matplotlib.image as mpimg\n    import matplotlib.animation as animation\n    import matplotlib.colors as mcolors\n    import matplotlib.cm as cm\n    import matplotlib.cbook as cbook\n    import matplotlib.ticker as ticker\n    import matplotlib.mlab as mlab\n    import matplotlib.style as style\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.backends.backend_agg as plt_agg\n    import matplotlib.backends.backend_svg as plt_svg\n    import matplotlib.backends.backend_ps as plt_ps\n    import matplotlib.backends.backend_gtk3agg as plt_gtk3agg\n    import matplotlib.backends.backend_gtk3cairo as plt_gtk3cairo\n    import matplotlib.backends.backend_qt4agg as plt_qt4agg\n    import matplotlib.backends.backend_qt4cairo as plt_qt4cairo\n    import matplotlib.backends.backend_tkagg as plt_tkagg\n    import matplotlib.backends.backend_webagg as plt_webagg\n    import matplotlib.backends.backend_cairo as plt_cairo\n    import matplotlib.backends.backend_qt5agg as plt_qt5agg\n    import matplotlib.backends.backend\n"
    ],
    "results": 7
},{
    "id": "112",
    "source": "soSearches",
    "language": "python",
    "query": "how to generate even numbers in python",
    "snippets": [
        "def even_numbers(n):\n    for i in range(n):\n        if i % 2 == 0:\n            yield i\n",
        "def even_numbers():\n    for i in range(1, 100):\n        if i % 2 == 0:\n            yield i\n",
        "def even_numbers():\n    for i in range(0, 100):\n        if i % 2 == 0:\n            yield i\n",
        "def even_numbers():\n    for i in range(1, 10):\n        if i % 2 == 0:\n            yield i\n"
    ],
    "results": 10
},{
    "id": "113",
    "source": "soSearches",
    "language": "python",
    "query": "how to round to 1 decimal python",
    "snippets": [
        "def round_to_1(num):\n    return round(num, 1)\n",
        "def round_to_1(x):\n    return round(x, 1)\n"
    ],
    "results": 10
},{
    "id": "114",
    "source": "soSearches",
    "language": "python",
    "query": "python how to remove useless numbers",
    "snippets": [
        "def remove_useless_numbers(numbers):\n    return [number for number in numbers if number > 0]\n",
        "def remove_useless_numbers(numbers):\n    for i in range(len(numbers)):\n        if numbers[i] == 0:\n            numbers.pop(i)\n    return numbers\n",
        "def remove_useless_numbers(numbers):\n    \"\"\"\n    Remove useless numbers from a list of numbers.\n    \"\"\"\n    return [number for number in numbers if number > 0]\n",
        "def remove_useless_numbers(numbers):\n    # your code here\n    return [number for number in numbers if number % 2 == 0]\n",
        "def remove_useless_numbers(numbers):\n    return [number for number in numbers if number % 2 == 0]\n",
        "def remove_useless_numbers(numbers):\n    \"\"\"\n    Remove useless numbers from a list of numbers.\n    \"\"\"\n    # your code here\n    return [number for number in numbers if number % 2 == 0]\n"
    ],
    "results": 10
},{
    "id": "115",
    "source": "soSearches",
    "language": "python",
    "query": "how to calculate date of birth python",
    "snippets": [
        "def calculate_date_of_birth(year, month, day):\n    \"\"\"\n    Calculate the date of birth\n    :param year: year of birth\n    :param month: month of birth\n    :param day: day of birth\n    :return: date of birth\n    \"\"\"\n    date_of_birth = datetime.date(year, month, day)\n    return date_of_birth\n",
        "def main():\n    print(\"This program calculates your age in days.\")\n    print()\n    print(\"Please enter your birth year:\")\n    year = int(input())\n    print(\"Please enter your birth month:\")\n    month = int(input())\n    print(\"Please enter your birth day:\")\n    day = int(input())\n    print(\"Please enter your current year:\")\n    current_year = int(input())\n    print(\"Please enter your current month:\")\n    current_month = int(input())\n    print(\"Please enter your current day:\")\n    current_day = int(input())\n    print()\n    print(\"Your birth date is:\", year, \"/\", month, \"/\", day)\n    print(\"Your current date is:\", current_year, \"/\", current_month, \"/\", current_day)\n    print()\n    print(\"Your age in days is:\", calculate_age(year, month, day, current_year, current_month, current_day))\n    print()\n    print(\"Thank you for using this program.\")\n    print()\n    print(\"Please press enter to exit.\")\n    input()\n    return\n",
        "def calculate_age(birth_year):\n    current_year = 2019\n    age = current_year - birth_year\n    return age\n",
        "def calculate_age(birth_year, birth_month, birth_day):\n    today_year = int(input(\"Enter year: \"))\n    today_month = int(input(\"Enter month: \"))\n    today_day = int(input(\"Enter day: \"))\n    age = today_year - birth_year\n    if today_month < birth_month:\n        age -= 1\n    elif today_month == birth_month and today_day < birth_day:\n        age -= 1\n    return age\n",
        "def main():\n    print(\"This program calculates your age in days.\")\n    print()\n    print(\"Please enter your birth date in the following format:\")\n    print(\"DD/MM/YYYY\")\n    print()\n    birth_date = input(\"Birth date (DD/MM/YYYY): \")\n    birth_date = birth_date.split(\"/\")\n    birth_date = [int(x) for x in birth_date]\n    print()\n    print(\"Please enter the current date in the following format:\")\n    print(\"DD/MM/YYYY\")\n    print()\n    current_date = input(\"Current date (DD/MM/YYYY): \")\n    current_date = current_date.split(\"/\")\n    current_date = [int(x) for x in current_date]\n    print()\n    days_in_year = 365\n    days_in_month = 30\n    days_in_day = 1\n    days_in_year = days_in_year * (current_date[2] - birth_date[2])\n    days_in_month = days_in_month * (current_date[1] - birth_date[1])\n    days_in_day = days_in_day * (current_date[0] - birth_date[0])\n    print(\"Your age in days is:\", days_in_year + days_in_month + days_in_day)\n    print()\n    print(\"Thank you for using this program.\")\n    print()\n    print(\"Please press enter to exit.\")\n    input()\n",
        "def calculate_age(year):\n    return 2020 - year\n",
        "def get_age(year):\n    return 2020 - year\n",
        "def calc_age(year):\n    return 2020 - year\n"
    ],
    "results": 10
},{
    "id": "116",
    "source": "soSearches",
    "language": "python",
    "query": "how to give path in python",
    "snippets": [
        "def main():\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__caller__)\n    print(__doc__)\n    print(__callee__)\n    print(__loader__)\n    print(__builtins__)\n    print(__spec__)\n    print(__annotations__)\n    print(__debug__)\n    print(__future__)\n    print(__loader__)\n    print(__name__)\n    print(__package__)\n    print(__caller__)\n    print(__doc__)\n    print(__callee__)\n    print(__loader__)\n    print(__builtins__)\n    print(__spec__)\n    print(__annotations__)\n    print(__debug__)\n    print(__future__)\n    print(__loader__)\n    print(__name__)\n    print(__package__)\n    print(__caller__)\n    print(__doc__)\n    print(__callee__)\n    print(__loader__)\n    print(__builtins__)\n    print(__spec__)\n    print(__annotations__)\n    print(__debug__)\n    print(__future__)\n    print(__loader__)\n    print(__name__)\n    print(__package__)\n    print(__caller__)\n    print(__doc__)\n    print(__callee__)\n    print(__loader__)\n    print(__builtins__)\n    print(__spec__)\n    print(__annotations__)\n    print(__debug__)\n    print(__future__)\n    print(__loader__)\n    print(__name__)\n    print(__package__)\n    print(__caller__)\n    print(__doc__)\n    print(__callee__)\n    print(__loader__)\n    print(__builtins__)\n    print(__spec__)\n    print(__annotations__)\n    print\n",
        "def main():\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__calling__)\n",
        "def main():\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__doc__)\n    print(__builtins__)\n    print(__loader__)\n    print(__spec__)\n    print(__cached__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__cwd__)\n    print(__doc__)\n    print(__builtins__)\n    print(__loader__)\n    print(__spec__)\n    print(__cached__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__cwd__)\n    print(__doc__)\n    print(__builtins__)\n    print(__loader__)\n    print(__spec__)\n    print(__cached__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__cwd__)\n    print(__doc__)\n    print(__builtins__)\n    print(__loader__)\n    print(__spec__)\n    print(__cached__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__cwd__)\n    print(__doc__)\n    print(__builtins__)\n    print(__loader__)\n    print(__spec__)\n    print(__cached__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__cwd__)\n    print(\n",
        "def main():\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__compiled__)\n    print(__loader__)\n    print(__spec__)\n    print(__cached__)\n    print(__builtins__)\n    print(__file__)\n    print(__caller__)\n    print(__loader__)\n    print(__package__)\n    print(__spec__)\n    print(__cached__)\n    print(__builtins__)\n    print(__file__)\n    print(__caller__)\n    print(__loader__)\n    print(__package__)\n    print(__spec__)\n    print(__cached__)\n    print(__builtins__)\n    print(__file__)\n    print(__caller__)\n    print(__loader__)\n    print(__package__)\n    print(__spec__)\n    print(__cached__)\n    print(__builtins__)\n    print(__file__)\n    print(__caller__)\n    print(__loader__)\n    print(__package__)\n    print(__spec__)\n    print(__cached__)\n    print(__builtins__)\n    print(__file__)\n    print(__caller__)\n    print(__loader__)\n    print(__package__)\n    print(__spec__)\n    print(__cached__)\n    print(__builtins__)\n    print(__file__)\n    print(__caller__)\n    print(__loader__)\n    print(__package__)\n    print(__spec__)\n    print(__cached__)\n    print(__builtins__)\n    print(__file__)\n    print(__caller__)\n    print(__loader__)\n    print(__package__)\n    print(__spec__)\n    print(__cached__)\n    print(__builtins__)\n    print(__file__)\n",
        "def main():\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__caller__)\n    print(__loader__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader_lock__)\n    print(__spec__)\n    print(__builtins__)\n    print(__debug__)\n    print(__annotations__)\n    print(__closure__)\n    print(__globals__)\n    print(__dict__)\n    print(__class__)\n    print(__bases__)\n    print(__mro__)\n    print(__subclasses__)\n    print(__init__)\n    print(__new__)\n    print(__getattr__)\n    print(__setattr__)\n    print(__delattr__)\n    print(__dir__)\n    print(__getattribute__)\n    print(__setattribute__)\n    print(__delattribute__)\n    print(__get__)\n    print(__set__)\n    print(__delete__)\n    print(__call__)\n    print(__init__)\n    print(__new__)\n    print(__getattribute__)\n    print(__setattribute__)\n    print(__delattribute__)\n    print(__get__)\n    print(__set__)\n    print(__delete__)\n    print(__call__)\n    print(__init__)\n    print(__new__)\n    print(__getattribute__)\n    print(__setattribute__)\n    print(__delattribute__)\n    print(__get__)\n    print(__set__)\n    print(__delete__)\n    print(__call__)\n    print(__init__)\n    print(__new__)\n    print(__getattribute__)\n    print(__setattribute__)\n    print(__delattribute__)\n    print(__get__)\n    print(__set__)\n    print(__delete__)\n    print(__call\n",
        "def main():\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cwd__)\n",
        "def main():\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__collector__)\n    print(__loader__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__.load_module('__main__'))\n    print(__loader__.load_module('__main__').__file__)\n    print(__loader__.load_module('__main__').__name__)\n    print(__loader__.load_module('__main__').__package__)\n    print(__loader__.load_module('__main__').__collector__)\n    print(__loader__.load_module('__main__').__loader__)\n    print(__loader__.load_module('__main__').__builtins__)\n    print(__loader__.load_module('__main__').__doc__)\n    print(__loader__.load_module('__main__').__cached__)\n    print(__loader__.load_module('__main__').__loader__.load_module('__main__'))\n    print(__loader__.load_module('__main__').__loader__.load_module('__main__').__file__)\n    print(__loader__.load_module('__main__').__loader__.load_module('__main__').__name__)\n    print(__loader__.load_module('__main__').__loader__.load_module('__main__').__package__)\n    print(__loader__.load_module('__main__').__loader__.load_module('__main__').__collector__)\n    print(__loader__.load_module('__main__').__loader__.load_module('__main__').__loader__)\n    print(__loader__.load_module('__main__').__loader__.load_module('__main__').__builtins__)\n    print(__loader__.load_module('__main__').__loader\n",
        "def main():\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__code_name__)\n    print(__code_path__)\n    print(__code_file__)\n    print(__code_dir__)\n    print(__code_full_path__)\n    print(__code_full_file__)\n    print(__code_full_dir__)\n    print(__code_full_name__)\n    print(__code_full_name_no_ext__)\n    print(__code_full_name_no_ext_no_path__)\n    print(__code_full_name_no_ext_no_path_no_name__)\n    print(__code_full_name_no_ext_no_path_no_name_no_ext__)\n    print(__code_full_name_no_ext_no_path_no_name_no_ext_no_path__)\n    print(__code_full_name_no_ext_no_path_no_name_no_ext_no_path_no_name__)\n    print(__code_full_name_no_ext_no_path_no_name_no_ext_no_path_no_name_no_ext__)\n    print(__code_full_name_no_ext_no_path_no_name_no_ext_no_path_no_name_no_ext_no_path__)\n    print(__code_full_name_no_ext_no_path_no_name_no_ext_no_path_no_name_no_ext_no_path_no_name__)\n    print(__code_full_name_no_ext_no_path_no_name_no_ext_no_path_no_name_no_ext_no_path_no_name_no_ext__)\n    print(__code_full_name_no_ext_no_path_no_name_no_ext_no_path_no_name\n",
        "def main():\n    # print(__file__)\n    print(__file__)\n    print(__name__)\n    print(__package__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__annotations__)\n    print(__builtins__)\n    print(__doc__)\n    print(__\n"
    ],
    "results": 9
},{
    "id": "117",
    "source": "soSearches",
    "language": "python",
    "query": "python how to resize images",
    "snippets": [
        "def resize_image(image, size):\n    \"\"\"\n    Resize an image to the given size.\n    \"\"\"\n    return image.resize(size, Image.ANTIALIAS)\n",
        "def resize(image, width=None, height=None, inter=cv2.INTER_AREA):\n    # initialize the dimensions of the image to be resized and\n    # grab the image size\n    dim = None\n    (h, w) = image.shape[:2]\n\n    # if both the width and height are None, then return the\n    # original image\n    if width is None and height is None:\n        return image\n\n    # check to see if the width is None\n    if width is None:\n        # calculate the ratio of the height and construct the\n        # dimensions\n        r = height / float(h)\n        dim = (int(w * r), height)\n\n    # otherwise, the height is None\n    else:\n        # calculate the ratio of the width and construct the\n        # dimensions\n        r = width / float(w)\n        dim = (width, int(h * r))\n\n    # resize the image\n    resized = cv2.resize(image, dim, interpolation=inter)\n\n    # return the resized image\n    return resized\n"
    ],
    "results": 10
},{
    "id": "118",
    "source": "soSearches",
    "language": "python",
    "query": "how to follow a random path in python",
    "snippets": [
        "def random_path(maze, start, end):\n    # create a list of visited nodes\n    visited = []\n    # create a list of nodes to visit\n    to_visit = [start]\n    # while there are nodes to visit\n    while to_visit:\n        # get a random node\n        node = to_visit.pop(0)\n        # if the node is the end node\n        if node == end:\n            # return the path\n            return visited\n        # if the node is not visited\n        if node not in visited:\n            # add the node to the visited list\n            visited.append(node)\n            # get the neighbors of the node\n            neighbors = maze.get_neighbors(node)\n            # for each neighbor\n            for neighbor in neighbors:\n                # if the neighbor is not visited\n                if neighbor not in visited:\n                    # add the neighbor to the to_visit list\n                    to_visit.append(neighbor)\n    # if there are no nodes to visit\n    return None\n",
        "def random_path(maze, start, end):\n    # create a list of visited nodes\n    visited = []\n    # create a list of nodes to visit\n    to_visit = [start]\n    # while there are nodes to visit\n    while to_visit:\n        # get a random node from the list\n        current = to_visit.pop(0)\n        # if the current node is the end node\n        if current == end:\n            # return the path\n            return visited\n        # if the current node is not in the visited list\n        if current not in visited:\n            # add it to the visited list\n            visited.append(current)\n            # get the neighbors of the current node\n            neighbors = get_neighbors(current, maze)\n            # for each neighbor\n            for neighbor in neighbors:\n                # if the neighbor is not in the visited list\n                if neighbor not in visited:\n                    # add it to the to_visit list\n                    to_visit.append(neighbor)\n    # if there are no nodes to visit\n    return None\n",
        "def random_path(n):\n    import random\n    import turtle\n    t = turtle.Turtle()\n    t.speed(0)\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    for i in range(n):\n        t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n    t.goto(0,0)\n    t.pendown()\n    t.goto(random.randint(-100,100),random.randint(-100,100))\n    t.penup()\n",
        "def random_path(maze, start, end):\n    # create a list of visited nodes\n    visited = []\n    # create a list of nodes to visit\n    to_visit = [start]\n    # while there are nodes to visit\n    while to_visit:\n        # get a random node from the list\n        node = to_visit.pop(0)\n        # if the node is the end node\n        if node == end:\n            # return the path\n            return visited\n        # if the node is not visited\n        if node not in visited:\n            # add the node to the visited list\n            visited.append(node)\n            # get the neighbors of the node\n            neighbors = maze.get_neighbors(node)\n            # for each neighbor\n            for neighbor in neighbors:\n                # if the neighbor is not visited\n                if neighbor not in visited:\n                    # add the neighbor to the to_visit list\n                    to_visit.append(neighbor)\n    # if there are no nodes to visit\n    return None\n",
        "def follow_path(path):\n    for i in path:\n        print(i)\n        if i == 'L':\n            print('turning left')\n        elif i == 'R':\n            print('turning right')\n        elif i == 'F':\n            print('moving forward')\n        else:\n            print('invalid path')\n            break\n        print('\\n')\n",
        "def follow_path(path):\n    for i in path:\n        print(i)\n        if i == 'L':\n            print('turning left')\n        elif i == 'R':\n            print('turning right')\n        elif i == 'F':\n            print('moving forward')\n        else:\n            print('invalid path')\n            return\n",
        "def random_path(maze, start, end):\n    path = [start]\n    while start != end:\n        start = next_step(maze, start)\n        path.append(start)\n    return path\n",
        "def follow_path(path):\n    for i in path:\n        print(i)\n        time.sleep(1)\n",
        "def random_path(maze):\n    # start at the top left corner\n    x, y = 0, 0\n    # keep track of the path\n    path = [(x, y)]\n    # keep track of the visited cells\n    visited = [(x, y)]\n    # keep track of the cells we can visit\n    possible = [(x, y)]\n    # keep track of the cells we can't visit\n    impossible = []\n    # keep track of the cells we can't visit\n    while possible:\n        # pick a random cell from the possible cells\n        x, y = random.choice(possible)\n        # remove the cell from the possible cells\n        possible.remove((x, y))\n        # add the cell to the visited cells\n        visited.append((x, y))\n        # if we're at the end of the maze, we're done\n        if (x, y) == (len(maze) - 1, len(maze[0]) - 1):\n            return path\n        # get the neighbors of the cell\n        neighbors = get_neighbors(maze, x, y)\n        # if we can visit any of the neighbors, we can visit this cell\n        if any(n in possible for n in neighbors):\n            path.append((x, y))\n            # add the neighbors to the possible cells\n            possible.extend(neighbors)\n        # if we can't visit any of the neighbors, we can't visit this cell\n        else:\n            impossible.append((x, y))\n    # if we can't visit any cell, we're done\n    return None\n",
        "def follow_path(path):\n    \"\"\"\n    Follows a path in the maze.\n    \"\"\"\n    for i in path:\n        print(i)\n        if i == 'N':\n            move_north()\n        elif i == 'S':\n            move_south()\n        elif i == 'E':\n            move_east()\n        elif i == 'W':\n            move_west()\n        else:\n            print(\"Invalid path\")\n            return\n    print(\"You have reached the end of the maze\")\n    return\n"
    ],
    "results": 10
},{
    "id": "119",
    "source": "soSearches",
    "language": "python",
    "query": "how to get the last id recorded in sqlite python",
    "snippets": [
        "def get_last_id(cursor):\n    cursor.execute(\"SELECT last_insert_rowid()\")\n    return cursor.fetchone()[0]\n"
    ],
    "results": 10
},{
    "id": "120",
    "source": "soSearches",
    "language": "python",
    "query": "how to print statut on terminal with python using paraminko",
    "snippets": [
        "def print_status(current, total):\n    print(\"\\r{0}/{1}\".format(current, total), end=\"\")\n    sys.stdout.flush()\n",
        "def print_status(status_code):\n    if status_code == 200:\n        print(\"[+] Success\")\n    elif status_code == 404:\n        print(\"[-] Not found\")\n    elif status_code == 302:\n        print(\"[!] Redirect\")\n    else:\n        print(\"[!] Unknown error\")\n",
        "def print_status(status):\n    print(\"\\033[1;32m[+]\\033[1;m\", status)\n    return\n"
    ],
    "results": 6
},{
    "id": "121",
    "source": "soSearches",
    "language": "python",
    "query": "how to get current time and date in python?",
    "snippets": [
        "def get_current_time():\n    import datetime\n    now = datetime.datetime.now()\n    return now.strftime(\"%Y-%m-%d %H:%M:%S\")\n",
        "def get_time():\n    import datetime\n    now = datetime.datetime.now()\n    return now.strftime(\"%Y-%m-%d %H:%M:%S\")\n",
        "def get_current_time():\n    import time\n    return time.strftime(\"%Y-%m-%d %H:%M:%S\")\n",
        "def get_current_time():\n    import datetime\n    now = datetime.datetime.now()\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    return now.strftime(\"%Y-%m-%d %H:%M:%S\")\n",
        "def get_current_time():\n    import datetime\n    return datetime.datetime.now()\n",
        "def get_current_time():\n    import datetime\n    now = datetime.datetime.now()\n    return now\n"
    ],
    "results": 10
},{
    "id": "122",
    "source": "soSearches",
    "language": "python",
    "query": "how to write code for tic tac toe python",
    "snippets": [
        "def print_board(board):\n    print(board[7] + '|' + board[8] + '|' + board[9])\n    print('-+-+-')\n    print(board[4] + '|' + board[5] + '|' + board[6])\n    print('-+-+-')\n    print(board[1] + '|' + board[2] + '|' + board[3])\n",
        "def print_board(board):\n    print(board['top-L'] + '|' + board['top-M'] + '|' + board['top-R'])\n    print('-+-+-')\n    print(board['mid-L'] + '|' + board['mid-M'] + '|' + board['mid-R'])\n    print('-+-+-')\n    print(board['low-L'] + '|' + board['low-M'] + '|' + board['low-R'])\n",
        "def print_board(board):\n    print(board[7] + ' | ' + board[8] + ' | ' + board[9])\n    print('-----------')\n    print(board[4] + ' | ' + board[5] + ' | ' + board[6])\n    print('-----------')\n    print(board[1] + ' | ' + board[2] + ' | ' + board[3])\n",
        "def tic_tac_toe():\n    board = [[' '] * 3 for i in range(3)]\n    player = 'X'\n    for i in range(9):\n        print_board(board)\n        move = get_move(player, board)\n        board[move[0]][move[1]] = player\n        player = 'X' if player == 'O' else 'O'\n    print_board(board)\n    print('Game Over')\n",
        "def check_win(board, player):\n    \"\"\"\n    checks if player has won\n    \"\"\"\n    if board[0] == player and board[1] == player and board[2] == player:\n        return True\n    elif board[3] == player and board[4] == player and board[5] == player:\n        return True\n    elif board[6] == player and board[7] == player and board[8] == player:\n        return True\n    elif board[0] == player and board[3] == player and board[6] == player:\n        return True\n    elif board[1] == player and board[4] == player and board[7] == player:\n        return True\n    elif board[2] == player and board[5] == player and board[8] == player:\n        return True\n    elif board[0] == player and board[4] == player and board[8] == player:\n        return True\n    elif board[2] == player and board[4] == player and board[6] == player:\n        return True\n    else:\n        return False\n"
    ],
    "results": 10
},{
    "id": "123",
    "source": "soSearches",
    "language": "python",
    "query": "how to take standard deviation of a csv file in python by using numpy",
    "snippets": [
        "def main():\n    import numpy as np\n    import csv\n    import sys\n    # open the csv file\n    with open(sys.argv[1], 'r') as csvfile:\n        # create a csv reader object\n        reader = csv.reader(csvfile)\n        # create a list to store the data\n        data = []\n        # iterate through the csv reader object\n        for row in reader:\n            # append the data to the list\n            data.append(row)\n        # convert the list to a numpy array\n        data = np.array(data)\n        # take the standard deviation of the data\n        std = np.std(data[:,1].astype(np.float))\n        # print the standard deviation\n        print(std)\n",
        "def main():\n    import numpy as np\n    import csv\n    import sys\n    # open the csv file\n    with open(sys.argv[1], 'r') as csvfile:\n        # create a csv reader\n        reader = csv.reader(csvfile)\n        # create a list of lists\n        data = list(reader)\n        # convert the list of lists to a numpy array\n        data = np.array(data)\n        # take the standard deviation of the array\n        std = np.std(data[:,1])\n        # print the standard deviation\n        print(std)\n",
        "def main():\n    import numpy as np\n    import csv\n    import sys\n    # open the csv file\n    with open(sys.argv[1], 'r') as csvfile:\n        # read the csv file\n        reader = csv.reader(csvfile)\n        # create an array of the data\n        data = np.array([row for row in reader])\n        # calculate the mean\n        mean = np.mean(data, axis=0)\n        # calculate the standard deviation\n        std = np.std(data, axis=0)\n        # print the mean and standard deviation\n        print(mean)\n        print(std)\n    # close the csv file\n    csvfile.close()\n",
        "def main():\n    import numpy as np\n    import csv\n    import sys\n    # open the csv file\n    with open(sys.argv[1], 'r') as csvfile:\n        # create a csv reader\n        reader = csv.reader(csvfile)\n        # create a list of lists\n        data = list(reader)\n        # convert the list of lists to a numpy array\n        data = np.array(data)\n        # take the standard deviation of the second column\n        std = np.std(data[:,1])\n        # print the standard deviation\n        print(std)\n",
        "def main():\n    import numpy as np\n    import csv\n    import sys\n    # open the csv file\n    with open(sys.argv[1], 'r') as csvfile:\n        # read the csv file\n        reader = csv.reader(csvfile)\n        # create an empty list to store the data\n        data = []\n        # loop through the csv file\n        for row in reader:\n            # append the data to the list\n            data.append(float(row[0]))\n        # convert the list to a numpy array\n        data = np.array(data)\n        # calculate the standard deviation\n        std = np.std(data)\n        # print the standard deviation\n        print(std)\n",
        "def main():\n    import numpy as np\n    import csv\n    import sys\n    import os\n    # check if the file exists\n    if not os.path.isfile(sys.argv[1]):\n        print(\"File does not exist\")\n        sys.exit()\n    # open the file\n    with open(sys.argv[1], 'r') as csvfile:\n        # create a csv reader\n        reader = csv.reader(csvfile)\n        # create a list of the rows\n        rows = list(reader)\n        # convert the list of rows to a numpy array\n        data = np.array(rows)\n        # get the number of rows\n        num_rows = len(data)\n        # get the number of columns\n        num_cols = len(data[0])\n        # get the mean of each column\n        means = np.mean(data, axis=0)\n        # get the standard deviation of each column\n        stds = np.std(data, axis=0)\n        # print the mean and standard deviation of each column\n        for i in range(num_cols):\n            print(\"{0:.2f} {1:.2f}\".format(means[i], stds[i]))\n",
        "def main():\n    import numpy as np\n    import csv\n    import sys\n    if len(sys.argv) != 2:\n        print(\"Usage: %s <csv file>\" % sys.argv[0])\n        sys.exit(1)\n    csv_file = sys.argv[1]\n    data = np.genfromtxt(csv_file, delimiter=',')\n    print(\"Standard deviation: %f\" % np.std(data))\n",
        "def main():\n    import numpy as np\n    import csv\n    import sys\n    import os\n    # check if the file exists\n    if not os.path.isfile(sys.argv[1]):\n        print(\"File does not exist\")\n        sys.exit()\n    # open the file\n    with open(sys.argv[1], 'r') as csvfile:\n        # create a csv reader\n        reader = csv.reader(csvfile)\n        # create a list to store the data\n        data = []\n        # loop through the file\n        for row in reader:\n            # append the data to the list\n            data.append(row)\n        # convert the list to a numpy array\n        data = np.array(data)\n        # calculate the mean\n        mean = np.mean(data, axis=0)\n        # calculate the standard deviation\n        std = np.std(data, axis=0)\n        # print the mean and standard deviation\n        print(\"Mean: \", mean)\n        print(\"Standard Deviation: \", std)\n",
        "def stdev(data):\n    mean = sum(data) / len(data)\n    variance = sum([(x - mean) ** 2 for x in data]) / len(data)\n    return variance ** 0.5\n",
        "def main():\n    import numpy as np\n    import sys\n    import os\n    import csv\n    import argparse\n    parser = argparse.ArgumentParser(description='Calculate standard deviation of a csv file')\n    parser.add_argument('-f', '--file', help='csv file to calculate standard deviation', required=True)\n    parser.add_argument('-o', '--output', help='output file', required=True)\n    args = parser.parse_args()\n    if not os.path.isfile(args.file):\n        print('File does not exist')\n        sys.exit(1)\n    with open(args.file, 'r') as csvfile:\n        reader = csv.reader(csvfile)\n        data = list(reader)\n    data = np.array(data).astype(np.float)\n    std = np.std(data, axis=0)\n    with open(args.output, 'w') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(std)\n"
    ],
    "results": 10
},{
    "id": "124",
    "source": "soSearches",
    "language": "python",
    "query": "how to change dtype int64 to object inpython",
    "snippets": [
        "def change_dtype(df):\n    df['A'] = df['A'].astype(object)\n    return df\n",
        "def change_dtype(df):\n    df['a'] = df['a'].astype(object)\n    return df\n",
        "def change_dtype(df):\n    df['a'] = df['a'].astype('object')\n    return df\n",
        "def change_dtype(df):\n    df.dtypes\n    df['a'] = df['a'].astype('object')\n    df.dtypes\n    return df\n",
        "def change_dtype(df):\n    df['A'] = df['A'].astype('object')\n    return df\n"
    ],
    "results": 10
},{
    "id": "125",
    "source": "soSearches",
    "language": "python",
    "query": "python how to keep a column in a dataframe",
    "snippets": [
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({'A': ['foo', 'bar', 'foo', 'bar',\n                            'foo', 'bar', 'foo', 'foo'],\n                       'B': ['one', 'one', 'two', 'three',\n                             'two', 'two', 'one', 'three'],\n                       'C': np.random.randn(8),\n                       'D': np.random.randn(8)})\n    # create a new column\n    df['E'] = df['C'] + df['D']\n    # print the dataframe\n    print(df)\n    # print the column\n    print(df['E'])\n    # print the column as a series\n    print(df['E'].to_series())\n    # print the column as a dataframe\n    print(df['E'].to_frame())\n    # print the column as a dataframe with a name\n    print(df['E'].to_frame(name='E'))\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False))\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False, dtype=np.int64))\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False, dtype=np.int64,\n                           columns=['E']))\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False, dtype=np.int64,\n                           columns=['E']).to_string())\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False, dtype=np.int64,\n                           columns=['E']).to_string(header=False))\n    # print the column as a data\n",
        "def main():\n    df = pd.read_csv('../data/example.csv')\n    print(df)\n    print(df['A'])\n    print(df[['A', 'B']])\n    print(df[['A', 'B']][0:2])\n    print(df[['A', 'B']][0:2]['A'])\n    print(df[['A', 'B']][0:2]['A'].values)\n    print(df[['A', 'B']][0:2]['A'].values[0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0][0][0][0][0])\n    print(\n",
        "def main():\n    df = pd.read_csv('../data/example.csv')\n    print(df.head())\n    print(df.columns)\n    print(df.columns[0])\n    print(df.columns[1])\n    print(df.columns[2])\n    print(df.columns[3])\n    print(df.columns[4])\n    print(df.columns[5])\n    print(df.columns[6])\n    print(df.columns[7])\n    print(df.columns[8])\n    print(df.columns[9])\n    print(df.columns[10])\n    print(df.columns[11])\n    print(df.columns[12])\n    print(df.columns[13])\n    print(df.columns[14])\n    print(df.columns[15])\n    print(df.columns[16])\n    print(df.columns[17])\n    print(df.columns[18])\n    print(df.columns[19])\n    print(df.columns[20])\n    print(df.columns[21])\n    print(df.columns[22])\n    print(df.columns[23])\n    print(df.columns[24])\n    print(df.columns[25])\n    print(df.columns[26])\n    print(df.columns[27])\n    print(df.columns[28])\n    print(df.columns[29])\n    print(df.columns[30])\n    print(df.columns[31])\n    print(df.columns[32])\n    print(df.columns[33])\n    print(df.columns[34])\n    print(df.columns[35])\n    print(df.columns[36])\n    print(df.columns[37])\n    print(df.columns[38])\n    print(df.columns[39])\n    print(df.columns[40])\n    print(df.columns[41])\n",
        "def main():\n    df = pd.read_csv('../data/titanic.csv')\n    print(df.head())\n    print(df.columns)\n    print(df.info())\n    print(df.describe())\n    print(df.isnull().sum())\n    print(df.shape)\n    print(df.dtypes)\n    print(df.index)\n    print(df.columns)\n    print(df.values)\n    print(df.T)\n    print(df.transpose())\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_index(axis=0, ascending=False))\n    print(df.sort_values(by='age', ascending=False))\n    print(df.sort_values(by='age', ascending=False).head())\n    print(df.sort_values(by='age', ascending=False).tail())\n    print(df.sort_values(by='age', ascending=False).head(2))\n    print(df.sort_values(by='age', ascending=False).tail(2))\n    print(df.sort_values(by='age', ascending=False).head(2).tail(1))\n    print(df.sort_values(by='age', ascending=False).tail(2).head(1))\n    print(df.sort_values(by='age', ascending=False).head(2).tail(1).head(1))\n    print(df.sort_values(by='age', ascending=False).tail(2).head(1).head(1).head(1))\n    print(df.sort_values(by='age', ascending=False).tail(2).head(1).head(1).head(1).head(1))\n    print(df.sort_values(by='age', ascending=False).tail(2).head(1).head(1).head(1).head(1).head(1))\n    print(df.sort_values(by='age', ascending=False).tail(2).head(1).head(1).head(1).head(1).head\n",
        "def main():\n    df = pd.read_csv('../data/titanic.csv')\n    print(df.head())\n    print(df.columns)\n    print(df.columns[0])\n    print(df.columns[1])\n    print(df.columns[2])\n    print(df.columns[3])\n    print(df.columns[4])\n    print(df.columns[5])\n    print(df.columns[6])\n    print(df.columns[7])\n    print(df.columns[8])\n    print(df.columns[9])\n    print(df.columns[10])\n    print(df.columns[11])\n    print(df.columns[12])\n    print(df.columns[13])\n    print(df.columns[14])\n    print(df.columns[15])\n    print(df.columns[56])\n    print(df.columns[17])\n    print(df.columns[18])\n    print(df.columns[19])\n    print(df.columns[20])\n    print(df.columns[21])\n    print(df.columns[22])\n    print(df.columns[23])\n    print(df.columns[24])\n    print(df.columns[25])\n    print(df.columns[26])\n    print(df.columns[27])\n    print(df.columns[28])\n    print(df.columns[29])\n    print(df.columns[30])\n    print(df.columns[31])\n    print(df.columns[32])\n    print(df.columns[33])\n    print(df.columns[34])\n    print(df.columns[35])\n    print(df.columns[36])\n    print(df.columns[37])\n    print(df.columns[38])\n    print(df.columns[39])\n    print(df.columns[40])\n    print(df.columns[\n",
        "def main():\n    df = pd.read_csv('../data/titanic.csv')\n    print(df.head())\n    print(df.columns)\n    print(df.columns[1])\n    print(df.columns[2])\n    print(df.columns[3])\n    print(df.columns[4])\n    print(df.columns[5])\n    print(df.columns[6])\n    print(df.columns[7])\n    print(df.columns[8])\n    print(df.columns[9])\n    print(df.columns[10])\n    print(df.columns[11])\n    print(df.columns[12])\n    print(df.columns[13])\n    print(df.columns[14])\n    print(df.columns[15])\n    print(df.columns[16])\n    print(df.columns[17])\n    print(df.columns[18])\n    print(df.columns[19])\n    print(df.columns[20])\n    print(df.columns[21])\n    print(df.columns[22])\n    print(df.columns[23])\n    print(df.columns[24])\n    print(df.columns[25])\n    print(df.columns[26])\n    print(df.columns[27])\n    print(df.columns[28])\n    print(df.columns[29])\n    print(df.columns[30])\n    print(df.columns[31])\n    print(df.columns[32])\n    print(df.columns[33])\n    print(df.columns[34])\n    print(df.columns[35])\n    print(df.columns[36])\n    print(df.columns[37])\n    print(df.columns[38])\n    print(df.columns[39])\n    print(df.columns[40])\n    print(df.columns[41])\n    print(df.columns[\n",
        "def main():\n    # create a dataframe\n    df = pd.DataFrame({'A': ['foo', 'bar', 'foo', 'bar',\n                            'foo', 'bar', 'foo', 'foo'],\n                       'B': ['one', 'one', 'two', 'three',\n                             'two', 'two', 'one', 'three'],\n                       'C': np.random.randn(8),\n                       'D': np.random.randn(8)})\n    # create a new column\n    df['E'] = df['C'] + df['D']\n    # print the dataframe\n    print(df)\n    # print the column\n    print(df['E'])\n    # print the column as a series\n    print(df['E'].to_series())\n    # print the column as a dataframe\n    print(df['E'].to_frame())\n    # print the column as a dataframe with a name\n    print(df['E'].to_frame(name='E'))\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False))\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False, dtype=np.int64))\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False, dtype=np.int64,\n                           columns=['E']))\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False, dtype=np.int64,\n                           columns=['E']).to_string())\n    # print the column as a dataframe with a name and index\n    print(df['E'].to_frame(name='E', index=False, dtype=np.int64,\n                           columns=['E']).to_string(header=False))\n    # print the column as a data\n",
        "def main():\n    df = pd.read_csv('../data/example.csv')\n    print(df)\n    print(df['A'])\n    print(df[['A', 'B']])\n    print(df[['A', 'B']][0:2])\n    print(df[['A', 'B']][0:2]['A'])\n    print(df[['A', 'B']][0:2]['A'].values)\n    print(df[['A', 'B']][0:2]['A'].values[0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0][0][0][0])\n    print(df[['A', 'B']][0:2]['A'].values[0][0][0][0][0][0][0][0][0][0][0])\n    print(\n",
        "def main():\n    df = pd.read_csv('../data/titanic.csv')\n    print(df.head())\n    print(df.columns)\n    print(df.columns[0])\n    print(df.columns[1])\n    print(df.columns[2])\n    print(df.columns[3])\n    print(df.columns[4])\n    print(df.columns[5])\n    print(df.columns[6])\n    print(df.columns[7])\n    print(df.columns[8])\n    print(df.columns[9])\n    print(df.columns[10])\n    print(df.columns[11])\n    print(df.columns[12])\n    print(df.columns[13])\n    print(df.columns[14])\n    print(df.columns[15])\n    print(df.columns[16])\n    print(df.columns[17])\n    print(df.columns[18])\n    print(df.columns[19])\n    print(df.columns[20])\n    print(df.columns[21])\n    print(df.columns[22])\n    print(df.columns[23])\n    print(df.columns[24])\n    print(df.columns[25])\n    print(df.columns[26])\n    print(df.columns[27])\n    print(df.columns[28])\n    print(df.columns[29])\n    print(df.columns[30])\n    print(df.columns[31])\n    print(df.columns[32])\n    print(df.columns[33])\n    print(df.columns[34])\n    print(df.columns[35])\n    print(df.columns[36])\n    print(df.columns[37])\n    print(df.columns[38])\n    print(df.columns[39])\n    print(df.columns[40])\n    print(df.columns[\n",
        "def main():\n    df = pd.read_csv('../data/titanic.csv')\n    print(df.head())\n    print(df.columns)\n    print(df.columns[1])\n    print(df.columns[2])\n    print(df.columns[3])\n    print(df.columns[4])\n    print(df.columns[5])\n    print(df.columns[6])\n    print(df.columns[7])\n    print(df.columns[8])\n    print(df.columns[9])\n    print(df.columns[10])\n    print(df.columns[11])\n    print(df.columns[12])\n    print(df.columns[13])\n    print(df.columns[14])\n    print(df.columns[15])\n    print(df.columns[16])\n    print(df.columns[17])\n    print(df.columns[18])\n    print(df.columns[19])\n    print(df.columns[20])\n    print(df.columns[21])\n    print(df.columns[22])\n    print(df.columns[23])\n    print(df.columns[24])\n    print(df.columns[25])\n    print(df.columns[26])\n    print(df.columns[27])\n    print(df.columns[28])\n    print(df.columns[29])\n    print(df.columns[30])\n    print(df.columns[31])\n    print(df.columns[32])\n    print(df.columns[33])\n    print(df.columns[34])\n    print(df.columns[35])\n    print(df.columns[36])\n    print(df.columns[37])\n    print(df.columns[38])\n    print(df.columns[39])\n    print(df.columns[40])\n    print(df.columns[41])\n    print(df.columns[\n",
        "def main():\n    df = pd.read_csv('../data/titanic.csv')\n    df['Age'] = df['Age'].fillna(df['Age'].median())\n    df.loc[df['Age'] <= 10, 'Age'] = 0\n    df.loc[(df['Age'] > 10) & (df['Age'] <= 20), 'Age'] = 1\n    df.loc[(df['Age'] > 20) & (df['Age'] <= 30), 'Age'] = 2\n    df.loc[(df['Age'] > 30) & (df['Age'] <= 40), 'Age'] = 3\n    df.loc[(df['Age'] > 40) & (df['Age'] <= 50), 'Age'] = 4\n    df.loc[(df['Age'] > 50) & (df['Age'] <= 60), 'Age'] = 5\n    df.loc[(df['Age'] > 60) & (df['Age'] <= 70), 'Age'] = 6\n    df.loc[(df['Age'] > 70) & (df['Age'] <= 80), 'Age'] = 7\n    df.loc[(df['Age'] > 80) & (df['Age'] <= 90), 'Age'] = 8\n    df.loc[(df['Age'] > 90) & (df['Age'] <= 100), 'Age'] = 9\n    df.to_csv('../data/titanic_age.csv', index=False)\n    print(df.head())\n"
    ],
    "results": 7
},{
    "id": "126",
    "source": "soSearches",
    "language": "python",
    "query": "python 3.6 how to update list",
    "snippets": [
        "def update_list(l):\n    l[0] = 'python'\n    l[1] = 'python'\n    l[2] = 'python'\n    l[3] = 'python'\n    l[4] = 'python'\n    l[5] = 'python'\n    l[6] = 'python'\n    l[7] = 'python'\n    l[8] = 'python'\n    l[9] = 'python'\n    l[10] = 'python'\n    l[11] = 'python'\n    l[12] = 'python'\n    l[13] = 'python'\n    l[14] = 'python'\n    l[15] = 'python'\n    l[16] = 'python'\n    l[17] = 'python'\n    l[18] = 'python'\n    l[19] = 'python'\n    l[20] = 'python'\n    l[21] = 'python'\n    l[22] = 'python'\n    l[23] = 'python'\n    l[24] = 'python'\n    l[25] = 'python'\n    l[26] = 'python'\n    l[27] = 'python'\n    l[28] = 'python'\n    l[29] = 'python'\n    l[30] = 'python'\n    l[31] = 'python'\n    l[32] = 'python'\n    l[33] = 'python'\n    l[34] = 'python'\n    l[35] = 'python'\n    l[36] = 'python'\n    l[37] = 'python'\n    l[38] = 'python'\n    l[39] = 'python'\n    l[40] = 'python'\n    l[41] = 'python'\n    l[42] = 'python'\n    l[43] = 'python'\n    l[44] = 'python'\n    l[45] = 'python'\n    l[46] = 'python'\n    l[47] = 'python'\n    l[48] = 'python'\n    l\n",
        "def update_list(l):\n    l[0] = 'python'\n    l[1] = 'c'\n    l[2] = 'c++'\n    l[3] = 'java'\n    l[4] = 'c#'\n    l[5] = 'php'\n    l[6] = 'javascript'\n    l[7] = 'go'\n    l[8] = 'swift'\n    l[9] = 'kotlin'\n    l[10] = 'typescript'\n    l[11] = 'ruby'\n    l[12] = 'rust'\n    l[13] = 'perl'\n    l[14] = 'scala'\n    l[15] = 'dart'\n    l[16] = 'erlang'\n    l[17] = 'haskell'\n    l[18] = 'prolog'\n    l[19] = 'lua'\n    l[20] = 'r'\n    l[21] = 'go'\n    l[22] = 'swift'\n    l[23] = 'kotlin'\n    l[24] = 'typescript'\n    l[25] = 'ruby'\n    l[26] = 'rust'\n    l[27] = 'perl'\n    l[28] = 'scala'\n    l[29] = 'dart'\n    l[30] = 'erlang'\n    l[31] = 'haskell'\n    l[32] = 'prolog'\n    l[33] = 'lua'\n    l[34] = 'r'\n    l[35] = 'go'\n    l[36] = 'swift'\n    l[37] = 'kotlin'\n    l[38] = 'typescript'\n    l[39] = 'ruby'\n    l[40] = 'rust'\n    l[41] = 'perl'\n    l[42] = 'scala'\n    l[43] = 'dart'\n    l[44] = 'erlang'\n    l[45] = 'haskell\n",
        "def update_list(l):\n    l[0] = 'python'\n    l[1] = 'python'\n    l[2] = 'python'\n    return l\n",
        "def update_list(l):\n    l[0] = 'python'\n    l[1] = 'ruby'\n    l[2] = 'perl'\n    l[3] = 'php'\n    l[4] = 'java'\n    return l\n",
        "def update_list(l):\n    l[0] = 'python'\n    l[1] = 'java'\n    l[2] = 'c++'\n    l[3] = 'c#'\n    return l\n",
        "def update_list(lst):\n    lst[0] = 'Python'\n    lst[1] = 'Ruby'\n    lst[2] = 'PHP'\n    lst[3] = 'Java'\n    lst[4] = 'C'\n    lst[5] = 'C++'\n    lst[6] = 'C#'\n    lst[7] = 'JavaScript'\n    lst[8] = 'Perl'\n    lst[9] = 'Scala'\n    lst[10] = 'Go'\n    lst[11] = 'Swift'\n    lst[12] = 'Objective-C'\n    lst[13] = 'R'\n    lst[14] = 'MATLAB'\n    lst[15] = 'Lua'\n    lst[16] = 'Clojure'\n    lst[17] = 'Erlang'\n    lst[18] = 'Haskell'\n    lst[19] = 'F#'\n    lst[20] = 'Visual Basic'\n    lst[21] = 'Visual Basic .NET'\n    lst[22] = 'Visual Basic .NET Core'\n    lst[23] = 'Visual Basic .NET Compact'\n    lst[24] = 'Visual Basic .NET Core Compact'\n    lst[25] = 'Visual Basic .NET Framework'\n    lst[26] = 'Visual Basic .NET Framework Compact'\n    lst[27] = 'Visual Basic .NET Framework Core'\n    lst[28] = 'Visual Basic .NET Framework Core Compact'\n    lst[29] = 'Visual Basic .NET Framework Full'\n    lst[30] = 'Visual Basic .NET Framework Full Compact'\n    lst[31] = 'Visual Basic .NET Framework Lite'\n    lst[32] = 'Visual Basic .NET Framework Lite Compact'\n    lst[33] = 'Visual Basic .NET Framework Mobile'\n    lst[34] = 'Visual Basic .NET Framework Mobile Compact'\n    lst[35] = 'Visual Basic .NET Framework Mobile Core'\n    lst[\n",
        "def update_list(l):\n    l[0] = 'python'\n    l[1] = 'c++'\n    l[2] = 'java'\n    return l\n",
        "def main():\n    # list\n    # list is a collection of items, in which each item is identified by a\n    # unique position (index) within the list.\n    # list is a mutable sequence of items, which can be changed by assignment.\n    # list is a sequence of items, which can be indexed and sliced.\n    # list is a sequence of items, which can be concatenated with other sequences.\n    # list is a sequence of items, which can be multiplied with integers.\n    # list is a sequence of items, which can be compared.\n    # list is a sequence of items, which can be sorted.\n    # list is a sequence of items, which can be sliced.\n    # list is a sequence of items, which can be concatenated with other sequences.\n    # list is a sequence of items, which can be multiplied with integers.\n    # list is a sequence of items, which can be compared.\n    # list is a sequence of items, which can be sorted.\n    # list is a sequence of items, which can be sliced.\n    # list is a sequence of items, which can be concatenated with other sequences.\n    # list is a sequence of items, which can be multiplied with integers.\n    # list is a sequence of items, which can be compared.\n    # list is a sequence of items, which can be sorted.\n    # list is a sequence of items, which can be sliced.\n    # list is a sequence of items, which can be concatenated with other sequences.\n    # list is a sequence of items, which can be multiplied with integers.\n    # list is a sequence of items, which can be compared.\n    # list is a sequence of items, which can be sorted.\n    # list is a sequence of items, which can be sliced.\n    # list is a sequence of items, which can be concatenated with other sequences.\n    # list is a sequence of items, which can be multiplied with integers.\n    # list is a sequence of items, which can be compared.\n    # list is a sequence of items, which can be sorted.\n    # list is a sequence of items, which can be sliced.\n    # list is a sequence of items, which can be concatenated with\n"
    ],
    "results": 10
},{
    "id": "127",
    "source": "soSearches",
    "language": "python",
    "query": "how to take input of array list in python",
    "snippets": [
        "def main():\n    n = int(input(\"Enter the number of elements in the list: \"))\n    arr = []\n    for i in range(n):\n        arr.append(int(input(\"Enter the element: \")))\n    print(\"The list is: \", arr)\n    print(\"The sum of the list is: \", sum(arr))\n    print(\"The average of the list is: \", sum(arr)/n)\n    print(\"The maximum of the list is: \", max(arr))\n    print(\"The minimum of the list is: \", min(arr))\n    print(\"The list in reverse order is: \", arr[::-1])\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"The list in reverse sorted order is: \", sorted(arr, reverse=True))\n    print(\"The list in sorted order is: \", sorted(arr))\n    print(\"\n",
        "def main():\n    arr = list(map(int, input().split()))\n    print(arr)\n    print(arr[0])\n    print(arr[1])\n    print(arr[2])\n    print(arr[3])\n    print(arr[4])\n    print(arr[5])\n    print(arr[6])\n    print(arr[7])\n    print(arr[8])\n    print(arr[9])\n    print(arr[10])\n    print(arr[11])\n    print(arr[12])\n    print(arr[13])\n    print(arr[14])\n    print(arr[15])\n    print(arr[16])\n    print(arr[17])\n    print(arr[18])\n    print(arr[19])\n    print(arr[20])\n    print(arr[21])\n    print(arr[22])\n    print(arr[23])\n    print(arr[24])\n    print(arr[25])\n    print(arr[26])\n    print(arr[27])\n    print(arr[28])\n    print(arr[29])\n    print(arr[30])\n    print(arr[31])\n    print(arr[32])\n    print(arr[33])\n    print(arr[34])\n    print(arr[35])\n    print(arr[36])\n    print(arr[37])\n    print(arr[38])\n    print(arr[39])\n    print(arr[40])\n    print(arr[41])\n    print(arr[42])\n    print(arr[43])\n    print(arr[44])\n    print(arr[45])\n    print(arr[46])\n    print(arr[47])\n    print(arr[48])\n    print(arr[49])\n    print(arr[50])\n    print(arr[51])\n    print(arr[52])\n    print(arr[53])\n    print(arr[54])\n    print(arr[55])\n    print(arr[56])\n    print(arr[57])\n    print(arr[58])\n    print(\n",
        "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(arr)\n    print(sum(arr))\n    print(max(arr))\n    print(min(arr))\n    print(sum(arr) / n)\n    print(max(arr) - min(arr))\n",
        "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(arr)\n    print(n)\n    print(arr[0])\n    print(arr[1])\n    print(arr[2])\n    print(arr[3])\n    print(arr[4])\n    print(arr[5])\n    print(arr[6])\n    print(arr[7])\n    print(arr[8])\n    print(arr[9])\n    print(arr[10])\n    print(arr[11])\n    print(arr[12])\n    print(arr[13])\n    print(arr[14])\n    print(arr[15])\n    print(arr[16])\n    print(arr[17])\n    print(arr[18])\n    print(arr[19])\n    print(arr[20])\n    print(arr[21])\n    print(arr[22])\n    print(arr[23])\n    print(arr[24])\n    print(arr[25])\n    print(arr[26])\n    print(arr[27])\n    print(arr[28])\n    print(arr[29])\n    print(arr[30])\n    print(arr[31])\n    print(arr[32])\n    print(arr[33])\n    print(arr[34])\n    print(arr[35])\n    print(arr[36])\n    print(arr[37])\n    print(arr[38])\n    print(arr[39])\n    print(arr[40])\n    print(arr[41])\n    print(arr[42])\n    print(arr[43])\n    print(arr[44])\n    print(arr[45])\n    print(arr[46])\n    print(arr[47])\n    print(arr[48])\n    print(arr[49])\n    print(arr[50])\n    print(arr[51])\n    print(arr[52])\n    print(arr[53])\n    print(arr[54])\n    print(arr[55])\n    print(arr[56])\n    print(arr[\n",
        "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(arr)\n    print(arr[0])\n    print(arr[n-1])\n    print(arr[n//2])\n",
        "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(arr)\n    print(sum(arr))\n",
        "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(arr)\n    print(arr[::-1])\n",
        "def main():\n    arr = list(map(int, input().split()))\n    print(arr)\n"
    ],
    "results": 10
},{
    "id": "128",
    "source": "soSearches",
    "language": "python",
    "query": "how to loop a program python",
    "snippets": [
        "def main():\n    for i in range(10):\n        print(i)\n    print(\"Done\")\n",
        "def main():\n    for i in range(1,6):\n        print(i)\n    for i in range(1,6):\n        print(i*i)\n    for i in range(1,6):\n        print(i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i*i*i*i*i*i*i*i)\n    for i in range(1,6):\n        print(i*i*i*i*i*i*i*i*i\n",
        "def main():\n    for i in range(1,6):\n        print(i)\n    print(\"Goodbye!\")\n",
        "def main():\n    for i in range(1,6):\n        print(i)\n    print(\"Done with loop\")\n",
        "def main():\n    for i in range(1,11):\n        print(i)\n    print(\"done\")\n"
    ],
    "results": 6
},{
    "id": "129",
    "source": "soSearches",
    "language": "python",
    "query": "how to create rainbow like color map in python",
    "snippets": [
        "def rainbow(n):\n    return [tuple(255*np.array([np.cos(i*np.pi*2/n), np.sin(i*np.pi*2/n), 0])) for i in range(n)]\n",
        "def rainbow(n):\n    return [tuple(255 * np.array([np.cos(x * np.pi * 2 / n), np.sin(x * np.pi * 2 / n), 0])) for x in range(n)]\n",
        "def rainbow(n):\n    return [int(x * 255 / n) for x in range(n)]\n",
        "def rainbow(n):\n    return [tuple(255 * np.array([np.cos(x * np.pi * 2.0 / n),\n                                  np.sin(x * np.pi * 2.0 / n),\n                                  1.0 - x / n])) for x in range(n)]\n",
        "def rainbow(n):\n    \"\"\"\n    Returns a list of n colors with rainbow like colors.\n    \"\"\"\n    return [rainbow_color(i, n) for i in range(n)]\n",
        "def rainbow(n):\n    return [int(i * 255 / n) for i in range(n)]\n"
    ],
    "results": 10
},{
    "id": "130",
    "source": "soSearches",
    "language": "python",
    "query": "how to delete an item from a list when it has been called python",
    "snippets": [
        "def delete_item(list, item):\n    for i in list:\n        if i == item:\n            list.remove(i)\n            return list\n    return list\n",
        "def delete_item(list, item):\n    for i in range(len(list)):\n        if list[i] == item:\n            del list[i]\n            return list\n    return list\n"
    ],
    "results": 10
},{
    "id": "131",
    "source": "soSearches",
    "language": "python",
    "query": "how to display league table in python in order",
    "snippets": [
        "def main():\n    teams = {'A': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'B': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'C': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'D': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'E': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'F': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'G': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'H': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'I': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'J': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'K': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'L': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'M': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'N': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'O': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'P': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'Q': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'R': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n             'S': {'W': 0, 'D': 0, 'L': 0, 'P': 0},\n",
        "def main():\n    teams = ['\n",
        "def main():\n    league = [\n        {'name': 'Liverpool', 'points': 70},\n        {'name': 'Manchester City', 'points': 60},\n        {'name': 'Chelsea', 'points': 50},\n        {'name': 'Arsenal', 'points': 40},\n        {'name': 'Manchester United', 'points': 30},\n        {'name': 'Tottenham', 'points': 20},\n        {'name': 'Everton', 'points': 10},\n        {'name': 'Swansea', 'points': 0}\n    ]\n    print('{:^20}|{:^10}'.format('Team', 'Points'))\n    print('-' * 30)\n    for team in league:\n        print('{:^20}|{:^10}'.format(team['name'], team['points']))\n    print('-' * 30)\n    print('{:^20}|{:^10}'.format('Total', sum([team['points'] for team in league])))\n    print('-' * 30)\n    print('{:^20}|{:^10}'.format('Average', sum([team['points'] for team in league]) / len(league)))\n    print('-' * 30)\n    print('{:^20}|{:^10}'.format('Best', max([team['points'] for team in league])))\n    print('-' * 30)\n    print('{:^20}|{:^10}'.format('Worst', min([team['points'] for team in league])))\n    print('-' * 30)\n    print('{:^20}|{:^10}'.format('Position', league.index(min([team['points'] for team in league])) + 1))\n    print('-' * 30)\n    print('{:^20}|{:^10}'.format('Position', league.index(max([team['points'] for team in league])) + 1))\n    print('-' * 30)\n    print('{:^20}|{:^10}'.format('Position', league.index(min([team['points'] for team in league])) +\n",
        "def main():\n    league = {'Arsenal': {'played': 38, 'won': 26, 'drawn': 7, 'lost': 3, 'points': 87},\n              'Chelsea': {'played': 38, 'won': 23, 'drawn': 10, 'lost': 7, 'points': 66},\n              'Liverpool': {'played': 38, 'won': 18, 'drawn': 14, 'lost': 8, 'points': 58},\n              'Manchester City': {'played': 38, 'won': 13, 'drawn': 17, 'lost': 11, 'points': 44},\n              'Manchester United': {'played': 38, 'won': 10, 'drawn': 20, 'lost': 14, 'points': 36},\n              'Tottenham Hotspur': {'played': 38, 'won': 7, 'drawn': 23, 'lost': 17, 'points': 27},\n              'Leicester City': {'played': 38, 'won': 4, 'drawn': 26, 'lost': 20, 'points': 18},\n              'Watford': {'played': 38, 'won': 3, 'drawn': 27, 'lost': 23, 'points': 12},\n              'Bournemouth': {'played': 38, 'won': 2, 'drawn': 28, 'lost': 26, 'points': 6},\n              'Brighton & Hove Albion': {'played': 38, 'won': 1, 'drawn': 29, 'lost': 28, 'points': 3},\n              'Burnley': {'played': 38, 'won': 0, 'drawn': 29, 'lost': 29, 'points': 0},\n              'Cardiff City': {'played': 38, 'won': 0, 'drawn': 29, 'lost': 29, 'points': 0},\n              'Crystal Palace': {'played': 38, 'won': 0, 'drawn': 29, 'lost': 29, 'points': 0},\n              'Everton': {'played': 38, 'won': 0, 'drawn': 29, 'lost': 29, 'points': 0},\n              'Fulham': {'played': 38, 'won': 0, 'drawn': 29, 'lost': 29, 'points': 0},\n              'Hudders\n",
        "def main():\n    league = [\n        {'name': '\n",
        "def main():\n    league = {'Arsenal': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Chelsea': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Liverpool': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Manchester City': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Manchester United': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Tottenham': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Bournemouth': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Brighton': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Burnley': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90', 'A': '90', 'Pts': '120'},\n              'Leicester': {'P': '78', 'W': '38', 'D': '30', 'L': '10', 'F': '90',\n",
        "def main():\n    league = {'Arsenal': {'played': 38, 'wins': 27, 'draws': 7, 'losses': 5, 'goals_fir': 91, 'goals_againsts':46},\n              'Chelsea': {'played': 38, 'wins':  4, 'draws': 7, 'losses': 7, 'goals_for': 527,'goals_against : 41},\n              'Liverpool': {'played': 38, 'wins': 18, 'draws': 10, 'losses': 12, 'goals_for': 51, 'goals_against': 66},\n              'Manchester City': {'played': 38, 'wins': 19, 'draws': 7, 'losses': 12, 'goals_for': 57, 'goals_against': 52},\n              'Manchester United': {'played': 38, 'wins': 19, 'draws': 7, 'losses': 12, 'goals_for': 57, 'goals_against': 52},\n              'Tottenham': {'played': 38, 'wins': 14, 'draws': 8, 'losses': 16, 'goals_for': 45, 'goals_against': 68},\n              'Watford': {'played': 38, 'wins': 10, 'draws': 8, 'losses': 18, 'goals_for': 39, 'goals_against': 79},\n              'West Ham': {'played': 38, 'wins': 9, ''dras': 8, 'losses': 19, 'goals_for': 39, 'goals_against': 79},\n              'Brightow': {'playeds': 8, 'wins': 8, 'draws': 8, 'losses': 207, goa's_for': 39, 'glalo_againss': 79},\n              'Burnley': {'played': 38, swins'e 7,s'draws': 8, 'losses': 21, 'goals_for': 39, 'goals_against': 79},\n              'Leicester': {'played': 38, 'wins': 6, 'draws': 8, 'losses': 22, 'goals_for':\n",
        "def main():\n    league = {'Arsenal': {'played': 38, 'won': 27, 'drawn': 3, 'lost': ': 5, 'goals_for': 91, 'goals_against': 46},\n              'Chelsea': {'played': 38, 'wins': 24, 'draws': 7, 'losses': 7, 'goals_for': 57, 'goals_against': 41},\n              'Liverpool': {'played': 38, 'wins': 18, 'draws': 10, 'losses': 12, 'goals_for': 51, 'goals_against': 66},\n              'Manchester City': {'played': 38, 'wins': 19, 'draws': 7, 'losses': 12, 'goals_for': 57, 'goals_against': 52},\n              'Manchester United': {'played': 38, 'wins': 19, 'draws': 7, 'losses': 12, 'goals_for': 57, 'goals_against': 52},\n              'Tottenham': {'played': 38, 'wins': 14, 'draws': 8, 'losses': 16, 'goals_for': 45, 'goals_against': 68},\n              'Watford': {'played': 38, 'wins': 10, 'draws': 8, 'losses': 18, 'goals_for': 39, 'goals_against': 79},\n              'West Ham': {'played': 38, 'wins': 9, 'draws': 8, 'losses': 19, 'goals_for': 39, 'goals_against': 79},\n              'Brighton': {'played': 38, 'wins': 8, 'draws': 8, 'losses': 20, 'goals_for': 39, 'goals_against': 79},\n              'Burnley': {'played': 38, 'wins': 7, 'draws': 8, 'losses': 21, 'goals_for': 39, 'goals_against': 79},\n              'Leicester': {'played': 38, 'wins': 6, 'draws': 8, 'losses': 22, 'goals_for':\n       '\n",
        "defmain():\nteams=[Wolves', 'Sheffield', 'Arsenal', 'Liverpool', 'Tottenham']\n    points = [1, 3, 6, 10, 15]\n    print('{:^10}|{:^10}'.format('Team', 'Points'))\n    print('-'*20)\n    for i in range(len(teams)):\n        print('{:^10}|{:^10}'.format(teams[i], points[i]))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Total', sum(points)))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Average', sum(points)/len(points)))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Highest', max(points)))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Lowest', min(points)))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(max(teams))+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(min(teams))+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(teams[sum(points)//sum(points)])+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(teams[sum(points)//sum(points)])+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(teams[sum(points)//sum(points)])+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams",
        "def main():\n    league = {'Arsenal': {'played': 38, 'won': 27, 'drawn': 3, 'lost': 5, 'goaldifference': -3, 'points': 79},\n              'Aston Villa': {'played': 38, 'won': 23, 'drawn': 7, 'lost': 5, 'goaldifference': -3, 'points': 70},\n              'Bournemouth': {'played': 38, 'won': 12, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 48},\n              'Brighton': {'played': 38, 'won': 10, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 40},\n              'Burnley': {'played': 38, 'won': 10, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 40},\n              'Chelsea': {'played': 38, 'won': 10, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 40},\n              'Crystal Palace': {'played': 38, 'won': 10, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 40},\n              'Everton': {'played': 38, 'won': 10, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 40},\n              'Huddersfield': {'played': 38, 'won': 10, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 40},\n              'Leicester': {'played': 38, 'won': 10, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 40},\n              'Liverpool': {'played': 38, 'won': 10, 'drawn': 10, 'lost': 10, 'goaldifference': -3, 'points': 40},\n              '\n",
        "def main():\n    teams = ['Wolves', 'Sheffield', 'Arsenal', 'Liverpool', 'Tottenham']\n    points = [1, 3, 6, 10, 15]\n    print('{:^10}|{:^10}'.format('Team', 'Points'))\n    print('-'*20)\n    for i in range(len(teams)):\n        print('{:^10}|{:^10}'.format(teams[i], points[i]))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Total', sum(points)))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Average', sum(points)/len(points)))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Highest', max(points)))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Lowest', min(points)))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(max(teams))+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(min(teams))+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(teams[sum(points)//sum(points)])+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(teams[sum(points)//sum(points)])+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams.index(teams[sum(points)//sum(points)])+1))\n    print('-'*20)\n    print('{:^10}|{:^10}'.format('Position', teams\n"
    ],
    "results": 10
},{
    "id": "132",
    "source": "soSearches",
    "language": "python",
    "query": "how to calculate wind direction from u and v wind components in python",
    "snippets": [
        "def wind_direction(u, v):\n    if u == 0 and v == 0:\n        return 0\n    elif u == 0:\n        return 90\n    else:\n        return math.degrees(math.atan(v / u))\n    return wind_direction(u, v)\n",
        "def wind_direction(u, v):\n    if u == 0 and v == 0:\n        return 0\n    else:\n        return (360 + (180 / math.pi) * math.atan2(v, u)) % 360\n",
        "def wind_direction(u, v):\n    if u == 0 and v == 0:\n        return 0\n    else:\n        return (180 + (360 - (180 + (math.degrees(math.atan2(v, u))))) % 360) % 360\n",
        "def wind_dir(u, v):\n    if u == 0 and v == 0:\n        return 0\n    else:\n        return (180 / math.pi) * math.atan2(v, u)\n",
        "def wind_dir(u, v):\n    if u == 0 and v == 0:\n        return 0\n    else:\n        return (360 + (180/pi) * atan2(v, u)) % 360\n",
        "def wind_dir(u, v):\n    if u == 0 and v == 0:\n        return 0\n    else:\n        return (180 + (180 / math.pi) * math.atan2(v, u)) % 360\n"
    ],
    "results": 10
},{
    "id": "133",
    "source": "soSearches",
    "language": "python",
    "query": "python3 0l how to enforce long type",
    "snippets": [
        "def main():\n    x = 1\n    y = 2\n    print(x + y)\n    print(x - y)\n    print(x * y)\n    print(x / y)\n    print(x % y)\n    print(x ** y)\n    print(x // y)\n    print(x & y)\n    print(x | y)\n    print(x ^ y)\n    print(x << y)\n    print(x >> y)\n    print(x == y)\n    print(x != y)\n    print(x > y)\n    print(x < y)\n    print(x >= y)\n    print(x <= y)\n    print(x is y)\n    print(x is not y)\n    print(x in y)\n    print(x not in y)\n    print(x and y)\n    print(x or y)\n    print(x not y)\n    print(x is y)\n    print(x is not y)\n    print(x in y)\n    print(x not in y)\n    print(x and y)\n    print(x or y)\n    print(x not y)\n    print(x is y)\n    print(x is not y)\n    print(x in y)\n    print(x not in y)\n    print(x and y)\n    print(x or y)\n    print(x not y)\n    print(x is y)\n    print(x is not y)\n    print(x in y)\n    print(x not in y)\n    print(x and y)\n    print(x or y)\n    print(x not y)\n    print(x is y)\n    print(x is not y)\n    print(x in y)\n    print(x not in y)\n    print(x and y)\n    print(x or y)\n    print(x not y)\n    print(x is y)\n    print(x is not y)\n    print(x in y)\n    print(x not in y)\n    print(x and y)\n    print(x or y)\n    print\n",
        "def main():\n    # print(type(1))\n    # print(type(1.0))\n    # print(type(1j))\n    # print(type(True))\n    # print(type(None))\n    # print(type(\"\"))\n    # print(type(b\"\"))\n    # print(type(u\"\"))\n    # print(type(bytearray()))\n    # print(type(memoryview(b\"\")))\n    # print(type(range(10)))\n    # print(type(slice(0, 10)))\n    # print(type(Ellipsis))\n    # print(type(NotImplemented))\n    # print(type(type(None)))\n    # print(type(type(main)))\n    # print(type(type(lambda: None)))\n    # print(type(type(type(None))))\n    # print(type(type(type(main))))\n    # print(type(type(type(lambda: None))))\n    # print(type(type(type(type(None)))))\n    # print(type(type(type(type(main)))))\n    # print(type(type(type(type(lambda: None)))))\n    # print(type(type(type(type(type(None))))))\n    # print(type(type(type(type(type(main))))))\n    # print(type(type(type(type(type(lambda: None))))))\n    # print(type(type(type(type(type(type(None)))))))\n    # print(type(type(type(type(type(type(main)))))))\n    # print(type(type(type(type(type(type(lambda: None))))))))\n    # print(type(type(type(type(type(type(type(None)))))))))\n    # print(type(type(type(type(type(type(type(main)))))))))\n    # print(type(type(type(type(type(type(type(lambda: None)))))))))\n    # print(type(type(type(type(type(type(type(type(None))))))))))\n    # print(type(type\n",
        "def main():\n    # print(type(1))\n    # print(type(1.0))\n    # print(type(1j))\n    # print(type(True))\n    # print(type('string'))\n    # print(type(None))\n    # print(type(print))\n    # print(type(lambda: None))\n    # print(type(main))\n    # print(type(range(1)))\n    # print(type(enumerate(range(1))))\n    # print(type(zip(range(1))))\n    # print(type(set(range(1))))\n    # print(type(frozenset(range(1))))\n    # print(type(chr(1)))\n    # print(type(ord('a')))\n    # print(type(bin(1)))\n    # print(type(oct(1)))\n    # print(type(hex(1)))\n    # print(type(abs(-1)))\n    # print(type(pow(1, 2)))\n    # print(type(divmod(1, 2)))\n    # print(type(sum([1, 2, 3])))\n    # print(type(len('abc')))\n    # print(type(list('abc')))\n    # print(type(tuple('abc')))\n    # print(type(set('abc')))\n    # print(type(frozenset('abc')))\n    # print(type(dict(a=1, b=2)))\n    # print(type(chr(1)))\n    # print(type(ord('a')))\n    # print(type(bin(1)))\n    # print(type(oct(1)))\n    # print(type(hex(1)))\n    # print(type(abs(-1)))\n    # print(type(pow(1, 2)))\n    # print(type(divmod(1, 2)))\n    # print(type(sum([1, 2, 3])))\n    # print(type(len('abc')))\n    # print(type(list('abc')))\n    # print(type(tuple('abc')))\n",
        "def main():\n    x = 3\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = 3.14\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100L\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100l\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100lL\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100lL\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100lL\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100lL\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100lL\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100lL\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100lL\"\n    print(f\"x is {x}\")\n    x = long(x)\n    print(f\"x is {x}\")\n    x = \"100lL\"\n    print(f\"\n"
    ],
    "results": 4
},{
    "id": "134",
    "source": "soSearches",
    "language": "python",
    "query": "how to express and in python",
    "snippets": [
        "def main():\n    # print(\"Hello World\")\n    # print(\"Hello World\", end=\"\")\n    # print(\"Hello World\", end=\"\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\")\n    # print(\"Hello World\", end=\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\n",
        "def main():\n    print(\"This is a simple calculator\")\n    print(\"Enter 'q' to quit\")\n    print(\"Enter 'c' to clear\")\n    print(\"Enter 'p' to print\")\n    print(\"Enter 's' to save\")\n    print(\"Enter 'l' to load\")\n    print(\"Enter 'h' to help\")\n    print(\"Enter 'v' to view\")\n    print(\"Enter 'e' to exit\")\n    print(\"Enter 'r' to reset\")\n    print(\"Enter 'a' to add\")\n    print(\"Enter 's' to subtract\")\n    print(\"Enter 'm' to multiply\")\n    print(\"Enter 'd' to divide\")\n    print(\"Enter 't' to take the square root\")\n    print(\"Enter 'c' to take the cube root\")\n    print(\"Enter 'f' to take the factorial\")\n    print(\"Enter 'g' to take the power\")\n    print(\"Enter 'o' to take the modulus\")\n    print(\"Enter 'b' to take the logarithm\")\n    print(\"Enter 'i' to take the inverse\")\n    print(\"Enter 'x' to take the exponent\")\n    print(\"Enter 'y' to take the quotient\")\n    print(\"Enter 'z' to take the remainder\")\n    print(\"Enter 'j' to take the sinus\")\n    print(\"Enter 'k' to take the cosinus\")\n    print(\"Enter 'l' to take the tangens\")\n    print(\"Enter 'n' to take the cotangens\")\n    print(\"Enter 'q' to take the secans\")\n    print(\"Enter 'w' to take the cosecans\")\n    print(\"Enter 'e' to take the sinh\")\n    print(\"Enter 'r' to take the cosh\")\n    print(\"Enter 't' to take the tanh\")\n    print(\"Enter 'y' to take the coth\")\n    print(\"Enter 'u' to take the sech\")\n    print(\"Enter 'i' to take the cosech\")\n    print(\"Enter 'o' to take the sinus hyperbolicus\")\n    print(\"Enter 'p' to take the cosinus hyperb\n"
    ],
    "results": 5
},{
    "id": "135",
    "source": "soSearches",
    "language": "python",
    "query": "how to sort day as key in dictionary in python",
    "snippets": [
        "def main():\n    days = {1: 'Monday', 2: 'Tuesday', 3: 'Wednesday', 4: 'Thursday', 5: 'Friday', 6: 'Saturday', 7: 'Sunday'}\n    for key in sorted(days.keys()):\n        print(key, days[key])\n    for key in sorted(days.keys(), reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys\n",
        "def main():\n    days = {'Monday': 1, 'Tuesday': 2, 'Wednesday': 3, 'Thursday': 4, 'Friday': 5, 'Saturday': 6, 'Sunday': 7}\n    days_sorted = sorted(days.items(), key=lambda x: x[1])\n    print(days_sorted)\n    for day in days_sorted:\n        print(day)\n",
        "def main():\n    days = {'monday': 1, 'tuesday': 2, 'wednesday': 3, 'thursday': 4, 'friday': 5, 'saturday': 6, 'sunday': 7}\n    days_sorted = sorted(days, key=days.get)\n    print(days_sorted)\n    print(days_sorted[0])\n    print(days_sorted[6])\n    print(days_sorted[-1])\n    print(days_sorted[-2])\n    print(days_sorted[-3])\n    print(days_sorted[-4])\n    print(days_sorted[-5])\n    print(days_sorted[-6])\n    print(days_sorted[-7])\n    print(days_sorted[-8])\n    print(days_sorted[-9])\n    print(days_sorted[-10])\n    print(days_sorted[-11])\n    print(days_sorted[-12])\n    print(days_sorted[-13])\n    print(days_sorted[-14])\n    print(days_sorted[-15])\n    print(days_sorted[-16])\n    print(days_sorted[-17])\n    print(days_sorted[-18])\n    print(days_sorted[-19])\n    print(days_sorted[-20])\n    print(days_sorted[-21])\n    print(days_sorted[-22])\n    print(days_sorted[-23])\n    print(days_sorted[-24])\n    print(days_sorted[-25])\n    print(days_sorted[-26])\n    print(days_sorted[-27])\n    print(days_sorted[-28])\n    print(days_sorted[-29])\n    print(days_sorted[-30])\n    print(days_sorted[-31])\n    print(days_sorted[-32])\n    print(days_sorted[-33])\n    print(days\n",
        "def main():\n    days = {'Monday': 1, 'Tuesday': 2, 'Wednesday': 3, 'Thursday': 4, 'Friday': 5, 'Saturday': 6, 'Sunday': 7}\n    days_sorted = sorted(days.items(), key=lambda x: x[1])\n    print(days_sorted)\n    for day in days_sorted:\n        print(day[0])\n",
        "def main():\n    days = {'Monday': 1, 'Tuesday': 2, 'Wednesday': 3, 'Thursday': 4, 'Friday': 5, 'Saturday': 6, 'Sunday': 7}\n    days_sorted = sorted(days, key=days.get)\n    print(days_sorted)\n    print(days_sorted[0])\n    print(days_sorted[-1])\n    print(days_sorted[-2])\n    print(days_sorted[-3])\n    print(days_sorted[-4])\n    print(days_sorted[-5])\n    print(days_sorted[-6])\n    print(days_sorted[-7])\n    print(days_sorted[-8])\n    print(days_sorted[-9])\n    print(days_sorted[-10])\n    print(days_sorted[-11])\n    print(days_sorted[-12])\n    print(days_sorted[-13])\n    print(days_sorted[-14])\n    print(days_sorted[-15])\n    print(days_sorted[-16])\n    print(days_sorted[-17])\n    print(days_sorted[-18])\n    print(days_sorted[-19])\n    print(days_sorted[-20])\n    print(days_sorted[-21])\n    print(days_sorted[-22])\n    print(days_sorted[-23])\n    print(days_sorted[-24])\n    print(days_sorted[-25])\n    print(days_sorted[-26])\n    print(days_sorted[-27])\n    print(days_sorted[-28])\n    print(days_sorted[-29])\n    print(days_sorted[-30])\n    print(days_sorted[-31])\n    print(days_sorted[-32])\n    print(days_sorted[-33])\n    print(days_sorted[-34])\n    print(days_sorted[-35])\n",
        "def main():\n    days = {'Monday': 1, 'Tuesday': 2, 'Wednesday': 3, 'Thursday': 4, 'Friday': 5, 'Saturday': 6, 'Sunday': 7}\n    days_list = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n    days_list.sort(key=days.get)\n    print(days_list)\n    days_list.sort(key=days.get, reverse=True)\n    print(days_list)\n",
        "def main():\n    days = {'Monday':1, 'Tuesday':2, 'Wednesday':3, 'Thursday':4, 'Friday':5, 'Saturday':6, 'Sunday':7}\n    for key in sorted(days.keys()):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=False):\n        print(key, days[key])\n    for key in sorted(days.keys(), key=days.get, reverse=True):\n        print(key, days[key])\n    for key in\n"
    ],
    "results": 9
},{
    "id": "136",
    "source": "soSearches",
    "language": "python",
    "query": "how to embed python code in web page",
    "snippets": [
        "def application(environ, start_response):\n    start_response('200 OK', [('Content-Type', 'text/html')])\n    return [b'<h1>Hello, web!</h1>']\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Hello World - First CGI Program</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h2>Hello World! This is my first CGI program</h2>\")\n    print(\"<p>Hello World! This is my first CGI program</p>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Hello World - First CGI Program</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h2>Hello World! This is my first CGI program</h2>\")\n    print(\"<p>Hello, my name is %s</p>\" % (os.environ[\"USER\"]))\n    print(\"<p>I am %d years old</p>\" % (21))\n    print(\"<p>My favorite color is %s</p>\" % (\"red\"))\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Hello World - First CGI Program</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h2>Hello World!</h2>\")\n    print(\"<p>This is my first CGI program</p>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Hello World - First CGI Program</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h2>Hello World! This is my first CGI program</h2>\")\n    print(\"<p>Hello, my name is %s</p>\" % (os.environ[\"USER\"]))\n    print(\"<p>I am %d years old</p>\" % (21))\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Hello Word</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h1>Hello Word</h1>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Hello Word!</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h1>Hello Word!</h1>\")\n    print(\"</body>\")\n    print(\"</html>\")\n"
    ],
    "results": 9
},{
    "id": "137",
    "source": "soSearches",
    "language": "python",
    "query": "how to create a battleship game using python",
    "snippets": [
        "def print_board(board):\n    for row in board:\n        print(row)\n",
        "def main():\n    print(\"This is a battleship game\")\n    print(\"You have 10 turns to sink the enemy's battleship\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The location of the enemy's battleship is hidden\")\n    print(\"You have to guess the location of the enemy's battleship\")\n    print(\"The\n",
        "def main():\n    print(\"Welcome to Battleship!\")\n    print(\"You have 10 guesses to sink the enemy's battleship!\")\n    print(\"You will be given a grid of letters and numbers.\")\n    print(\"The grid will be 10x10.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to guess.\")\n    print(\"The coordinates will be in the form of a letter and a number.\")\n    print(\"For example, A1.\")\n    print(\"You will be given a list of coordinates to\n",
        "def main():\n    print(\"This is a battleship game\")\n    print(\"You have 10 turns to sink the battleship\")\n    print(\"You can enter a coordinate to guess where the battleship is\")\n    print(\"You can enter 'q' to quit the game\")\n    print(\"You can enter 'h' to see the help\")\n    print(\"You can enter 's' to see the score\")\n    print(\"You can enter 'c' to see the cheat\")\n    print(\"You can enter 'r' to reset the game\")\n    print(\"You can enter 'p' to pause the game\")\n    print(\"You can enter 'b' to see the board\")\n    print(\"You can enter 'a' to see the alphabet\")\n    print(\"You can enter 'n' to see the numbers\")\n    print(\"You can enter 'm' to see the morse code\")\n    print(\"You can enter 'e' to see the english\")\n    print(\"You can enter 'd' to see the decimal\")\n    print(\"You can enter 'o' to see the octal\")\n    print(\"You can enter 'f' to see the hexadecimal\")\n    print(\"You can enter 'g' to see the binary\")\n    print(\"You can enter 'i' to see the integer\")\n    print(\"You can enter 'u' to see the unsigned\")\n    print(\"You can enter 'l' to see the long\")\n    print(\"You can enter 's' to see the short\")\n    print(\"You can enter 't' to see the type\")\n    print(\"You can enter 'z' to see the size\")\n    print(\"You can enter 'y' to see the yes\")\n    print(\"You can enter 'n' to see the no\")\n    print(\"You can enter 'k' to see the key\")\n    print(\"You can enter 'w' to see the word\")\n    print(\"You can enter 'x' to see the exit\")\n    print(\"You can enter 'v' to see the value\")\n    print(\"You can enter 'j' to see the join\")\n    print(\"You can enter 'q' to see the quit\")\n    print(\"You can enter 'h' to see the help\n"
    ],
    "results": 4
},{
    "id": "138",
    "source": "soSearches",
    "language": "python",
    "query": "python matplotlib bumpy how to prevent a plot being written to twice by another process",
    "snippets": [
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import time\n    import os\n    import sys\n    import multiprocessing as mp\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.image as mimage\n    import matplotlib.colors as mcolors\n    import matplotlib.cm as cm\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.axis as maxis\n    import matplotlib.artist as martist\n    import matplotlib.transforms as mtransforms\n    import matplotlib.font_manager as mfontManager\n    import matplotlib.backends.backend_agg as mbackend_agg\n    import matplotlib.backends.backend_pdf as mbackend_pdf\n    import matplotlib.backends.backend_ps as mbackend_ps\n    import matplotlib.backends.backend_svg as mbackend_svg\n    import matplotlib.backends.backend_webagg as mbackend_webagg\n    import matplotlib.backends.backend_qt4agg as mbackend_qt4agg\n    import matplotlib.backends.backend_tkagg as mbackend_tkagg\n    import matplotlib.backends.backend_qt5agg as mbackend_qt5agg\n    import matplotlib.backends.backend_cairo as mbackend_cairo\n    import matplotlib.backends.backend_agg as mbackend_agg\n    import matplotlib.backends.backend_pdf as mbackend_pdf\n    import matplotlib.backends.backend_ps as mbackend_ps\n    import matplotlib.backends.backend_svg as mbackend_svg\n    import matplotlib.backends.backend_webagg as mbackend_webagg\n    import matplotlib\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import time\n    import os\n    import sys\n    import multiprocessing as mp\n    import matplotlib.animation as animation\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import time\n    import os\n    import sys\n    import multiprocessing as mp\n    import matplotlib.animation as animation\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as tick\n",
        "def plot_bumpy(x, y, z, title, xlabel, ylabel, zlabel, filename):\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import numpy as np\n    import os\n    import time\n    import sys\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n",
        "def plot_bumpy(x, y, z):\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import numpy as np\n    import time\n    import os\n    import sys\n    import glob\n    import re\n    import subprocess\n    import shlex\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import numpy as np\n    import time\n    import os\n    import sys\n    import glob\n    import re\n    import subprocess\n    import shlex\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import numpy as np\n    import time\n    import os\n    import sys\n    import glob\n    import re\n    import subprocess\n    import shlex\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import numpy as np\n    import time\n    import os\n    import sys\n    import glob\n    import re\n    import subprocess\n    import shlex\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import numpy as np\n    import time\n    import os\n    import sys\n    import glob\n    import re\n    import subprocess\n    import shlex\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import numpy as np\n    import time\n    import os\n    import sys\n    import glob\n    import re\n    import subprocess\n    import shlex\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import numpy as np\n    import time\n    import os\n    import sys\n    import glob\n    import re\n    import subprocess\n    import shlex\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import numpy as np\n    import time\n    import os\n    import sys\n    import glob\n    import re\n    import subprocess\n    import shlex\n    import matplotlib.py\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import time\n    import os\n    import sys\n    import multiprocessing as mp\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.image as mimage\n    import matplotlib.colors as mcolors\n    import matplotlib.cm as cm\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.axis as maxis\n    import matplotlib.artist as martist\n    import matplotlib.transforms as mtransforms\n    import matplotlib.font_manager as mfontManager\n    import matplotlib.backends.backend_agg as mbackend_agg\n    import matplotlib.backends.backend_pdf as mbackend_pdf\n    import matplotlib.backends.backend_ps as mbackend_ps\n    import matplotlib.backends.backend_svg as mbackend_svg\n    import matplotlib.backends.backend_webagg as mbackend_webagg\n    import matplotlib.backends.backend_qt4agg as mbackend_qt4agg\n    import matplotlib.backends.backend_tkagg as mbackend_tkagg\n    import matplotlib.backends.backend_qt5agg as mbackend_qt5agg\n    import matplotlib.backends.backend_cairo as mbackend_cairo\n    import matplotlib.backends.backend_agg as mbackend_agg\n    import matplotlib.backends.backend_pdf as mbackend_pdf\n    import matplotlib.backends.backend_ps as mbackend_ps\n    import matplotlib.backends.backend_svg as mbackend_svg\n    import matplotlib.backends.backend_webagg as mbackend_webagg\n    import matplotlib\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import time\n    import os\n    import sys\n    import multiprocessing as mp\n    import matplotlib.animation as animation\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import time\n    import os\n    import sys\n    import multiprocessing as mp\n    import matplotlib.animation as animation\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as tick\n",
        "def plot_bumpy(x, y, z, title, xlabel, ylabel, zlabel, filename):\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import numpy as np\n    import os\n    import time\n    import sys\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.patches as patches\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n"
    ],
    "results": 5
},{
    "id": "139",
    "source": "soSearches",
    "language": "python",
    "query": "how to make python script executable",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n"
    ],
    "results": 10
},{
    "id": "140",
    "source": "soSearches",
    "language": "python",
    "query": "how to set up environ for python cgi",
    "snippets": [
        "def application(environ, start_response):\n    start_response('200 OK', [('Content-Type', 'text/html')])\n    return [b'<h1>Hello, %s!</h1>' % (environ['PATH_INFO'][1:] or 'web')]\n",
        "def application(environ, start_response):\n    start_response('200 OK', [('Content-Type', 'text/html')])\n    return [b'<h1>Hello, %s!</h1>' % (environ['PATH_INFO'][1:],)]\n",
        "def application(environ, start_response):\n    start_response('200 OK', [('Content-Type', 'text/html')])\n    return [b'<h1>Hello, web!</h1>']\n",
        "def application(environ, start_response):\n    start_response('200 OK', [('Content-Type', 'text/html')])\n    return [b'<h1>Hello, world!</h1>']\n"
    ],
    "results": 10
},{
    "id": "141",
    "source": "soSearches",
    "language": "python",
    "query": "how to append a number to a  different python file python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    print(\"This program appends a number to a file.\")\n    print(\"Enter the file name:\")\n    file_name = input(\">>> \")\n    print(\"Enter the number to append:\")\n    number = input(\">>> \")\n    append_number(file_name, number)\n    print(\"The number has been appended to the file.\")\n    print(\"The file is now:\")\n    print_file(file_name)\n"
    ],
    "results": 2
},{
    "id": "142",
    "source": "soSearches",
    "language": "python",
    "query": "how to delete all variables before run my script python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    del var1\n    del var2\n    del var3\n    del var4\n    del var5\n    del var6\n    del var7\n    del var8\n    del var9\n    del var10\n    del var11\n    del var12\n    del var13\n    del var14\n    del var15\n    del var16\n    del var17\n    del var18\n    del var19\n    del var20\n    del var21\n    del var22\n    del var23\n    del var24\n    del var25\n    del var26\n    del var27\n    del var28\n    del var29\n    del var30\n    del var31\n    del var32\n    del var33\n    del var34\n    del var35\n    del var36\n    del var37\n    del var38\n    del var39\n    del var40\n    del var41\n    del var42\n    del var43\n    del var44\n    del var45\n    del var46\n    del var47\n    del var48\n    del var49\n    del var50\n    del var51\n    del var52\n    del var53\n    del var54\n    del var55\n    del var56\n    del var57\n    del var58\n    del var59\n    del var60\n    del var61\n    del var62\n    del var63\n    del var64\n    del var65\n    del var66\n    del var67\n    del var68\n    del var69\n    del var70\n    del var71\n    del var72\n    del var73\n    del var74\n    del var75\n    del var76\n    del var77\n    del var78\n    del var79\n    del var80\n    del var81\n    del var82\n    del var83\n    del var84\n    del var85\n    del var86\n    del var87\n    del var88\n    del var89\n    del var90\n    del var91\n    del var92\n    del var93\n    del var94\n    del var95\n    del var96\n    del var97\n    del var98\n",
        "def main():\n    a = 10\n    b = 20\n    print(a)\n    print(b)\n    del a\n    del b\n    print(a)\n    print(b)\n",
        "def main():\n    print(\"Hello World\")\n    del var1\n    print(var1)\n    del var2\n    print(var2)\n    del var3\n    print(var3)\n    del var4\n    print(var4)\n    del var5\n    print(var5)\n    del var6\n    print(var6)\n    del var7\n    print(var7)\n    del var8\n    print(var8)\n    del var9\n    print(var9)\n    del var10\n    print(var10)\n    del var11\n    print(var11)\n    del var12\n    print(var12)\n    del var13\n    print(var13)\n    del var14\n    print(var14)\n    del var15\n    print(var15)\n    del var16\n    print(var16)\n    del var17\n    print(var17)\n    del var18\n    print(var18)\n    del var19\n    print(var19)\n    del var20\n    print(var20)\n    del var21\n    print(var21)\n    del var22\n    print(var22)\n    del var23\n    print(var23)\n    del var24\n    print(var24)\n    del var25\n    print(var25)\n    del var26\n    print(var26)\n    del var27\n    print(var27)\n    del var28\n    print(var28)\n    del var29\n    print(var29)\n    del var30\n    print(var30)\n    del var31\n    print(var31)\n    del var32\n    print(var32)\n    del var33\n    print(var33)\n    del var34\n    print(var34)\n    del var35\n    print(var35)\n    del var36\n    print(var36)\n    del var37\n    print(var37)\n    del var38\n    print(var38)\n    del var39\n    print(var39)\n    del var40\n    print(var40)\n    del var41\n    print(var\n",
        "def main():\n    a = 10\n    b = 20\n    print(a)\n    print(b)\n    del a\n    del b\n    print(a)\n    print(b)\n    print(\"Done!\")\n",
        "def main():\n    print(\"Hello World\")\n    del a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\n    print(\"Hello World\")\n",
        "def main():\n    print(\"Hello World\")\n    del var\n    print(var)\n    del var1, var2, var3\n    print(var1, var2, var3)\n    del var1, var2, var3, var4\n    print(var1, var2, var3, var4)\n    del var1, var2, var3, var4, var5\n    print(var1, var2, var3, var4, var5)\n    del var1, var2, var3, var4, var5, var6\n    print(var1, var2, var3, var4, var5, var6)\n    del var1, var2, var3, var4, var5, var6, var7\n    print(var1, var2, var3, var4, var5, var6, var7)\n    del var1, var2, var3, var4, var5, var6, var7, var8\n    print(var1, var2, var3, var4, var5, var6, var7, var8)\n    del var1, var2, var3, var4, var5, var6, var7, var8, var9\n    print(var1, var2, var3, var4, var5, var6, var7, var8, var9)\n    del var1, var2, var3, var4, var5, var6, var7, var8, var9, var10\n    print(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10)\n    del var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11\n    print(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11)\n    del var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12\n    print(var1, var2,\n",
        "def clear_all():\n    \"\"\"Clear all the variables from the workspace of the current\n    python interpreter\"\"\"\n    gl = globals()\n    for var in gl:\n        if var[0] != \"_\":\n            del globals()[var]\n"
    ],
    "results": 10
},{
    "id": "143",
    "source": "soSearches",
    "language": "python",
    "query": "how to format html table in python",
    "snippets": [
        "def main():\n    print(\"<table>\")\n    print(\"<tr><th>First Name</th><th>Last Name</th></tr>\")\n    print(\"<tr><td>John</td><td>Doe</td></tr>\")\n    print(\"<tr><td>Jane</td><td>Doe</td></tr>\")\n    print(\"</table>\")\n",
        "def main():\n    print(\"<table>\")\n    print(\"<tr><th>Name</th><th>Age</th></tr>\")\n    print(\"<tr><td>John</td><td>25</td></tr>\")\n    print(\"<tr><td>Jane</td><td>24</td></tr>\")\n    print(\"</table>\")\n",
        "def main():\n    print(\"<table>\")\n    print(\"<tr><th>Name</th><th>Age</th></tr>\")\n    print(\"<tr><td>John</td><td>25</td></tr>\")\n    print(\"<tr><td>Jane</td><td>26</td></tr>\")\n    print(\"</table>\")\n",
        "def main():\n    print(\"<table>\")\n    print(\"<tr><th>Name</th><th>Age</th></tr>\")\n    print(\"<tr><td>Bob</td><td>21</td></tr>\")\n    print(\"<tr><td>John</td><td>22</td></tr>\")\n    print(\"<tr><td>Mary</td><td>23</td></tr>\")\n    print(\"</table>\")\n",
        "def main():\n    print(\"<table>\")\n    print(\"<tr><th>Name</th><th>Age</th></tr>\")\n    print(\"<tr><td>Bob</td><td>23</td></tr>\")\n    print(\"<tr><td>John</td><td>45</td></tr>\")\n    print(\"<tr><td>Mary</td><td>27</td></tr>\")\n    print(\"</table>\")\n",
        "def main():\n    print(\"<table>\")\n    print(\"<tr><th>Name</th><th>Age</th></tr>\")\n    print(\"<tr><td>Bob</td><td>20</td></tr>\")\n    print(\"<tr><td>Alice</td><td>30</td></tr>\")\n    print(\"</table>\")\n",
        "def main():\n    print(\"<table>\")\n    print(\"<tr><th>Name</th><th>Age</th></tr>\")\n    print(\"<tr><td>Bob</td><td>35</td></tr>\")\n    print(\"<tr><td>John</td><td>30</td></tr>\")\n    print(\"<tr><td>Mary</td><td>25</td></tr>\")\n    print(\"</table>\")\n",
        "def main():\n    table = \"\"\"<table border=\"1\">\n    <tr>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Age</th>\n    </tr>\n    <tr>\n        <td>John</td>\n        <td>Doe</td>\n        <td>50</td>\n    </tr>\n    <tr>\n        <td>Jane</td>\n        <td>Doe</td>\n        <td>40</td>\n    </tr>\n    </table>\"\"\"\n    print(table)\n",
        "def main():\n    print(\"<table>\")\n    print(\"<tr><th>Name</th><th>Age</th></tr>\")\n    print(\"<tr><td>John</td><td>35</td></tr>\")\n    print(\"<tr><td>Jack</td><td>45</td></tr>\")\n    print(\"<tr><td>Jill</td><td>25</td></tr>\")\n    print(\"</table>\")\n"
    ],
    "results": 10
},{
    "id": "144",
    "source": "soSearches",
    "language": "python",
    "query": "how to make work python 3 on mac",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n",
        "def main():\n    print(\"hello world\")\n"
    ],
    "results": 9
},{
    "id": "145",
    "source": "soSearches",
    "language": "python",
    "query": "how to get the printf data from cdll in python",
    "snippets": [
        "def main():\n    import ctypes\n    import sys\n    import os\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    from matplotlib import style\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.figure import Figure\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2Tk\n    from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg\n    from matplotlib.backends.backend_tkagg import NavigationToolbar2TkAgg\n    from matplotlib.backend_bindings import key_press_handler\n    from matplotlib.backend_bindings import key_release_handler\n    from matplotlib.backend_bindings import mouse_press_handler\n    from matplotlib.backend_bindings import mouse_release_handler\n    from matplotlib.backend_bindings import mouse_move_handler\n    from matplotlib.backend_bindings import button_press_handler\n    from matplotlib.backend_bindings import button_release_handler\n    from matplotlib.backend_bindings import scroll_event_handler\n    from matplotlib.backend_bindings import motion_notify_event_handler\n    from matplotlib.backend_bindings import idle_event_handler\n    from matplotlib.backend_bindings import show_event_handler\n    from matplotlib.backend_bindings import close_event_handler\n    from matplotlib.backend_bindings import resize_event_handler\n    from matplotlib.backend_bindings import keyboard_event_handler\n    from matplotlib.backend_bindings import key_press_handler\n    from matplotlib.backend_bindings import key_release_handler\n    from matplotlib.backend_bindings import mouse_press_handler\n    from matplotlib.backend_bindings import mouse_release\n",
        "def main():\n    import ctypes\n    import sys\n    import os\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    from matplotlib import style\n    style.use('fivethirtyeight')\n    lib = ctypes.CDLL('./libprintf.so')\n    lib.printf.argtypes = [ctypes.c_char_p]\n    lib.printf.restype = ctypes.c_int\n    lib.printf(\"Hello World!\\n\")\n    lib.printf(\"%d\\n\", 123)\n    lib.printf(\"%f\\n\", 3.14)\n    lib.printf(\"%s\\n\", \"Hello World!\")\n    lib.printf(\"%s\\n\", \"Hello World!\".encode('utf-8'))\n    lib.printf(\"%s\\n\", b\"Hello World!\")\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]))\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]).astype(np.float32))\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]).astype(np.float64))\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]).astype(np.int32))\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]).astype(np.int64))\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]).astype(np.uint32))\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]).astype(np.uint64))\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]).astype(np.complex64))\n    lib.printf(\"%s\\n\", np.array([1, 2, 3, 4, 5]).ast\n",
        "def get_printf_data():\n    import ctypes\n    import sys\n    import os\n    lib = ctypes.CDLL(os.path.dirname(os.path.abspath(__file__)) + \"/libprintf.so\")\n    lib.printf.restype = ctypes.c_char_p\n    lib.printf.argtypes = [ctypes.c_char_p]\n    return lib.printf(b\"Hello, World!\")\n",
        "def get_printf_data():\n    import ctypes\n    import sys\n    lib = ctypes.CDLL(None)\n    lib.get_printf_data.restype = ctypes.c_char_p\n    return lib.get_printf_data()\n",
        "def get_printf_data():\n    import ctypes\n    import sys\n    lib = ctypes.CDLL(sys.argv[1])\n    lib.get_printf_data.restype = ctypes.c_char_p\n    return lib.get_printf_data()\n",
        "def get_printf_data():\n    import ctypes\n    import sys\n    lib = ctypes.CDLL(None)\n    lib.printf.restype = ctypes.c_char_p\n    lib.printf.argtypes = [ctypes.c_char_p]\n    return lib.printf(b\"%s\\n\", sys.argv[1].encode())\n",
        "def get_printf_data():\n    import ctypes\n    import sys\n    lib = ctypes.CDLL(None)\n    buf = ctypes.create_string_buffer(1024)\n    lib.get_printf_data(buf, 1024)\n    return buf.value.decode(sys.getdefaultencoding())\n",
        "def get_printf_data():\n    import ctypes\n    import ctypes.util\n    import sys\n    if sys.platform == 'win32':\n        lib = ctypes.CDLL(ctypes.util.find_library('user32'))\n        MyPrintf = ctypes.WINFUNCTYPE(ctypes.c_int, ctypes.c_char_p)(('MyPrintf', lib))\n        MyPrintf.argtypes = (ctypes.c_char_p,)\n        MyPrintf.restype = ctypes.c_int\n        MyPrintf('Hello World!')\n    else:\n        lib = ctypes.CDLL(ctypes.util.find_library('libc'))\n        MyPrintf = ctypes.CFUNCTYPE(ctypes.c_int, ctypes.c_char_p)(('MyPrintf', lib))\n        MyPrintf.argtypes = (ctypes.c_char_p,)\n        MyPrintf.restype = ctypes.c_int\n        MyPrintf('Hello World!')\n    return MyPrintf.argtypes\n",
        "def main():\n    import ctypes\n    import sys\n    import os\n    import time\n    import threading\n    import queue\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_\n"
    ],
    "results": 9
},{
    "id": "146",
    "source": "soSearches",
    "language": "python",
    "query": "how to display an item from a list python",
    "snippets": [
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # display the list\n    print(my_list)\n    # display the list item at index 4\n    print(my_list[4])\n    # display the list item at index 5\n    print(my_list[5])\n    # display the list item at index 6\n    print(my_list[6])\n    # display the list item at index 7\n    print(my_list[7])\n    # display the list item at index 8\n    print(my_list[8])\n    # display the list item at index 9\n    print(my_list[9])\n    # display the list item at index 10\n    print(my_list[10])\n    # display the list item at index 11\n    print(my_list[11])\n    # display the list item at index 12\n    print(my_list[12])\n    # display the list item at index 13\n    print(my_list[13])\n    # display the list item at index 14\n    print(my_list[14])\n    # display the list item at index 15\n    print(my_list[15])\n    # display the list item at index 16\n    print(my_list[16])\n    # display the list item at index 17\n    print(my_list[17])\n    # display the list item at index 18\n    print(my_list[18])\n    # display the list item at index 19\n    print(my_list[19])\n    # display the list item at index 20\n    print(my_list[20])\n    # display the list item at index 21\n    print(my_list[21])\n    # display the list item at index 22\n    print(my_list[22])\n    # display the list item at index 23\n    print(my_list[23])\n    # display the list item at index 24\n    print(my_list[24])\n    # display the list item at index 25\n    print(my_list[25])\n    # display the list item at index 26\n",
        "def main():\n    # create a list of items\n    items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # display the list\n    print(items)\n    # display the first item\n    print(items[0])\n    # display the last item\n    print(items[-1])\n    # display the third item\n    print(items[2])\n    # display the items from the third item to the end\n    print(items[2:])\n    # display the items from the third item to the end\n    print(items[2:10])\n    # display the items from the third item to the end\n    print(items[2:10:2])\n    # display the items from the third item to the end\n    print(items[2:10:3])\n    # display the items from the third item to the end\n    print(items[2:10:4])\n    # display the items from the third item to the end\n    print(items[2:10:5])\n    # display the items from the third item to the end\n    print(items[2:10:6])\n    # display the items from the third item to the end\n    print(items[2:10:7])\n    # display the items from the third item to the end\n    print(items[2:10:8])\n    # display the items from the third item to the end\n    print(items[2:10:9])\n    # display the items from the third item to the end\n    print(items[2:10:10])\n    # display the items from the third item to the end\n    print(items[2:10:11])\n    # display the items from the third item to the end\n    print(items[2:10:12])\n    # display the items from the third item to the end\n    print(items[2:10:13])\n    # display the items from the third item to the end\n    print(items[2:10:14])\n    # display the items from the third item to the end\n    print(items[2:10:15])\n    # display the items from the third item to\n",
        "def main():\n    # create a list of items\n    items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # display the list\n    print(items)\n    # display the list\n    print(items[0])\n    # display the list\n    print(items[1])\n    # display the list\n    print(items[2])\n    # display the list\n    print(items[3])\n    # display the list\n    print(items[4])\n    # display the list\n    print(items[5])\n    # display the list\n    print(items[6])\n    # display the list\n    print(items[7])\n    # display the list\n    print(items[8])\n    # display the list\n    print(items[9])\n    # display the list\n    print(items[10])\n    # display the list\n    print(items[11])\n    # display the list\n    print(items[12])\n    # display the list\n    print(items[13])\n    # display the list\n    print(items[14])\n    # display the list\n    print(items[15])\n    # display the list\n    print(items[16])\n    # display the list\n    print(items[17])\n    # display the list\n    print(items[18])\n    # display the list\n    print(items[19])\n    # display the list\n    print(items[20])\n    # display the list\n    print(items[21])\n    # display the list\n    print(items[22])\n    # display the list\n    print(items[23])\n    # display the list\n    print(items[24])\n    # display the list\n    print(items[25])\n    # display the list\n    print(items[26])\n    # display the list\n    print(items[27])\n    # display the list\n    print(items[28])\n    # display the list\n    print(items[29])\n    # display the list\n    print(items[30])\n    # display the list\n    print(items[31])\n    # display\n",
        "def main():\n    # create a list\n    my_list = [\"apple\", \"banana\", \"cherry\"]\n    # display the list\n    print(my_list)\n    # display the list item\n    print(my_list[1])\n    # display the list item\n    print(my_list[2])\n    # display the list item\n    print(my_list[0])\n    # display the list item\n    print(my_list[-1])\n    # display the list item\n    print(my_list[-2])\n    # display the list item\n    print(my_list[-3])\n    # display the list item\n    print(my_list[-4])\n    # display the list item\n    print(my_list[-5])\n    # display the list item\n    print(my_list[-6])\n    # display the list item\n    print(my_list[-7])\n    # display the list item\n    print(my_list[-8])\n    # display the list item\n    print(my_list[-9])\n    # display the list item\n    print(my_list[-10])\n    # display the list item\n    print(my_list[-11])\n    # display the list item\n    print(my_list[-12])\n    # display the list item\n    print(my_list[-13])\n    # display the list item\n    print(my_list[-14])\n    # display the list item\n    print(my_list[-15])\n    # display the list item\n    print(my_list[-16])\n    # display the list item\n    print(my_list[-17])\n    # display the list item\n    print(my_list[-18])\n    # display the list item\n    print(my_list[-19])\n    # display the list item\n    print(my_list[-20])\n    # display the list item\n    print(my_list[-21])\n    # display the list item\n    print(my_list[-22])\n    # display the list item\n    print(my_\n",
        "def main():\n    # create a list of items\n    items = [\"apple\", \"banana\", \"cherry\"]\n    # display the list\n    print(items)\n    # display the list\n    print(items[1])\n    # display the list\n    print(items[-1])\n    # display the list\n    print(items[-2])\n    # display the list\n    print(items[2])\n    # display the list\n    print(items[0])\n    # display the list\n    print(items[-3])\n    # display the list\n    print(items[-4])\n    # display the list\n    print(items[-5])\n    # display the list\n    print(items[-6])\n    # display the list\n    print(items[-7])\n    # display the list\n    print(items[-8])\n    # display the list\n    print(items[-9])\n    # display the list\n    print(items[-10])\n    # display the list\n    print(items[-11])\n    # display the list\n    print(items[-12])\n    # display the list\n    print(items[-13])\n    # display the list\n    print(items[-14])\n    # display the list\n    print(items[-15])\n    # display the list\n    print(items[-16])\n    # display the list\n    print(items[-17])\n    # display the list\n    print(items[-18])\n    # display the list\n    print(items[-19])\n    # display the list\n    print(items[-20])\n    # display the list\n    print(items[-21])\n    # display the list\n    print(items[-22])\n    # display the list\n    print(items[-23])\n    # display the list\n    print(items[-24])\n    # display the list\n    print(items[-25])\n    # display the list\n    print(items[-26])\n    # display the list\n    print(items[-27])\n    # display the list\n    print(items[-28])\n",
        "def main():\n    # create a list of items\n    items = [\"apple\", \"banana\", \"grape\", \"orange\", \"kiwi\", \"melon\", \"mango\"]\n    # display the list\n    print(items)\n    # display the first item\n    print(items[0])\n    # display the last item\n    print(items[-1])\n    # display the second to last item\n    print(items[-2])\n    # display the second item\n    print(items[1])\n    # display the first and second items\n    print(items[0:2])\n    # display the last two items\n    print(items[-2:])\n    # display the first three items\n    print(items[:3])\n    # display the last three items\n    print(items[-3:])\n    # display the first two items, in two separate lines\n    print(items[:2])\n    print(items[2:])\n    # display the last two items, in two separate lines\n    print(items[-2:])\n    print(items[:-2])\n    # display the first four items, in two separate lines\n    print(items[:4])\n    print(items[4:])\n    # display the last four items, in two separate lines\n    print(items[-4:])\n    print(items[:-4])\n    # display the first two items, in one line\n    print(items[:2], end=\" \")\n    print(items[2:])\n    # display the last two items, in one line\n    print(items[-2:], end=\" \")\n    print(items[:-2])\n    # display the first four items, in one line\n    print(items[:4], end=\" \")\n    print(items[4:])\n    # display the last four items, in one line\n    print(items[-4:], end=\" \")\n    print(items[:-4])\n    # display the first two items, in one line\n    print(items[:2], end=\" \")\n    print(items[2:])\n    # display the last two items, in one line\n",
        "def main():\n    # create a list of items\n    items = [\"apple\", \"banana\", \"grape\", \"orange\", \"kiwi\", \"melon\", \"mango\"]\n    # get a single item from the list\n    item = items[3]\n    # display the item\n    print(\"The fourth item in the list is: \" + item)\n    # get the first item in the list\n    item = items[0]\n    # display the item\n    print(\"The first item in the list is: \" + item)\n    # get the last item in the list\n    item = items[-1]\n    # display the item\n    print(\"The last item in the list is: \" + item)\n    # get the second-to-last item in the list\n    item = items[-2]\n    # display the item\n    print(\"The second-to-last item in the list is: \" + item)\n    # get the item at index 2\n    item = items[2]\n    # display the item\n    print(\"The item at index 2 is: \" + item)\n    # get the items from index 2 to index 4\n    item = items[2:5]\n    # display the item\n    print(\"The items from index 2 to index 4 are: \" + str(item ))\n    # get the items from index 4 to the end\n    item = items[4:]\n    # display the item\n    print(\"The items from index 4 to the end are: \" + str( item ))\n    # get the items from the start to index 2\n    item = items[:2]\n    # display the item\n    print(\"The items from the start to index 2 are: \" + str( item ))\n    # get the items from index 3 to the end\n    item = items[3:]\n    # display the item\n    print(\"The items from index 3 to the end are: \" + str( item ))\n    # get the items from the start to index 4\n    item = items[:4]\n    # display the item\n    print(\"The items from the start to index 4 are: \" + str( item ))\n    # get the items from index 2 to the end\n    item = items[\n"
    ],
    "results": 8
},{
    "id": "147",
    "source": "soSearches",
    "language": "python",
    "query": "python how to use del",
    "snippets": [
        "def del_test():\n    a = [1,2,3,4,5]\n    del a[2]\n    print(a)\n    del a[1:3]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(a)\n    print('-----------------------------------------------------')\n    a = [1,2,3,4,5]\n    del a[2:]\n    print(a)\n    del a[:2]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(a)\n    print('-----------------------------------------------------')\n    a = [1,2,3,4,5]\n    del a[2:]\n    print(a)\n    del a[:2]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(a)\n    print('-----------------------------------------------------')\n    a = [1,2,3,4,5]\n    del a[2:]\n    print(a)\n    del a[:2]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(a)\n    print('-----------------------------------------------------')\n    a = [1,2,3,4,5]\n    del a[2:]\n    print(a)\n    del a[:2]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(a)\n    print('-----------------------------------------------------')\n    a = [1,2,3,4,5]\n    del a[2:]\n    print(a)\n    del a[:2]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(a)\n    print('-----------------------------------------------------')\n    a = [1,2,3,4,5]\n    del a[2:]\n    print(a)\n    del a[:2]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(\n",
        "def del_test():\n    a = [1,2,3,4,5]\n    del a[2]\n    print(a)\n    del a[1:3]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(a)\n    # print(a)\n    # print(a[0])\n    # print(a[1])\n    # print(a[2])\n    # print(a[3])\n    # print(a[4])\n    # print(a[5])\n    # print(a[6])\n    # print(a[7])\n    # print(a[8])\n    # print(a[9])\n    # print(a[10])\n    # print(a[11])\n    # print(a[12])\n    # print(a[13])\n    # print(a[14])\n    # print(a[15])\n    # print(a[16])\n    # print(a[17])\n    # print(a[18])\n    # print(a[19])\n    # print(a[20])\n    # print(a[21])\n    # print(a[22])\n    # print(a[23])\n    # print(a[24])\n    # print(a[25])\n    # print(a[26])\n    # print(a[27])\n    # print(a[28])\n    # print(a[29])\n    # print(a[30])\n    # print(a[31])\n    # print(a[32])\n    # print(a[33])\n    # print(a[34])\n    # print(a[35])\n    # print(a[36])\n    # print(a[37])\n    # print(a[38])\n    # print(a[39])\n    # print(a[40])\n    # print(a[41])\n    # print(a[42])\n    # print(a[43])\n    # print(a[44])\n    # print(a[45])\n    # print(a[46])\n",
        "def del_test():\n    a = [1,2,3,4,5]\n    del a[0]\n    print(a)\n    del a[1:3]\n    print(a)\n    del a[:]\n    print(a)\n    del a\n    print(a)\n    print(\"---------------------\")\n    b = [1,2,3,4,5]\n    del b[1:3]\n    print(b)\n    del b[:]\n    print(b)\n    del b\n    print(b)\n    print(\"---------------------\")\n    c = [1,2,3,4,5]\n    del c[1:3]\n    print(c)\n    del c[:]\n    print(c)\n    del c\n    print(c)\n    print(\"---------------------\")\n    d = [1,2,3,4,5]\n    del d[1:3]\n    print(d)\n    del d[:]\n    print(d)\n    del d\n    print(d)\n    print(\"---------------------\")\n    e = [1,2,3,4,5]\n    del e[1:3]\n    print(e)\n    del e[:]\n    print(e)\n    del e\n    print(e)\n    print(\"---------------------\")\n    f = [1,2,3,4,5]\n    del f[1:3]\n    print(f)\n    del f[:]\n    print(f)\n    del f\n    print(f)\n    print(\"---------------------\")\n    g = [1,2,3,4,5]\n    del g[1:3]\n    print(g)\n    del g[:]\n    print(g)\n    del g\n    print(g)\n    print(\"---------------------\")\n    h = [1,2,3,4,5]\n    del h[1:3]\n    print(h)\n    del h[:]\n    print(h)\n    del h\n    print(h)\n    print(\"---------------------\")\n    i = [1,2,3\n",
        "def del_list(list):\n    del list[0]\n    print(list)\n    return list\n",
        "def del_test():\n    a = [1, 2, 3]\n    del a[1]\n    print(a)\n    del a\n    print(a)\n    print(del a)\n    print(a)\n    print(del a[1])\n    print(a)\n    print(del a[1:])\n    print(a)\n    print(del a[:])\n    print(a)\n    print(del a[:1])\n    print(a)\n    print(del a[:2])\n    print(a)\n    print(del a[:3])\n    print(a)\n    print(del a[:4])\n    print(a)\n    print(del a[:5])\n    print(a)\n    print(del a[:6])\n    print(a)\n    print(del a[:7])\n    print(a)\n    print(del a[:8])\n    print(a)\n    print(del a[:9])\n    print(a)\n    print(del a[:10])\n    print(a)\n    print(del a[:11])\n    print(a)\n    print(del a[:12])\n    print(a)\n    print(del a[:13])\n    print(a)\n    print(del a[:14])\n    print(a)\n    print(del a[:15])\n    print(a)\n    print(del a[:16])\n    print(a)\n    print(del a[:17])\n    print(a)\n    print(del a[:18])\n    print(a)\n    print(del a[:19])\n    print(a)\n    print(del a[:20])\n    print(a)\n    print(del a[:21])\n    print(a)\n    print(del a[:22])\n    print(a)\n    print(del a[:23])\n    print(a)\n    print(del a[:24])\n    print(a)\n    print(del a[:25])\n    print(a)\n",
        "def del_list(list):\n    del list[0]\n    print(list)\n"
    ],
    "results": 8
},{
    "id": "148",
    "source": "soSearches",
    "language": "python",
    "query": "python how to exit program",
    "snippets": [
        "def main():\n    while True:\n        try:\n            x = int(input(\"Please enter a number: \"))\n            break\n        except ValueError:\n            print(\"Oops!  That was no valid number.  Try again...\")\n\n    print(\"Thank you for entering a number\")\n    print(\"You entered: \", x)\n    print(\"Goodbye!\")\n",
        "def main():\n    print(\"This program is to exit the program\")\n    try:\n        x = int(input(\"Please enter a number: \"))\n        y = int(input(\"Please enter another number: \"))\n        print(x/y)\n    except ZeroDivisionError:\n        print(\"Division by zero is not allowed\")\n    except ValueError:\n        print(\"Invalid input\")\n    else:\n        print(\"This is the else block\")\n    finally:\n        print(\"This is the finally block\")\n    print(\"This is the end of the program\")\n",
        "def main():\n    try:\n        print(\"Enter a number: \")\n        num = int(input())\n        print(num)\n    except ValueError:\n        print(\"You did not enter a number\")\n    except KeyboardInterrupt:\n        print(\"You pressed ctrl+c\")\n    except EOFError:\n        print(\"You pressed ctrl+d\")\n    except:\n        print(\"Unknown error\")\n    finally:\n        print(\"Executing finally clause\")\n        print(\"Program exiting\")\n",
        "def main():\n    print(\"This program is to exit the program\")\n    print(\"Enter '0' to exit\")\n    while True:\n        try:\n            x = int(input(\"Please enter a number: \"))\n        except ValueError:\n            print(\"Invalid input\")\n            continue\n        if x == 0:\n            print(\"Exiting program\")\n            break\n        print(\"Number is\", x)\n",
        "def main():\n    print(\"This program is to exit the program\")\n    try:\n        x = int(input(\"Please enter a number: \"))\n        print(\"You entered: \", x)\n    except ValueError:\n        print(\"Invalid input\")\n        exit()\n    print(\"This is the end of the program\")\n",
        "def main():\n    print(\"This program is to exit the program\")\n    try:\n        x = int(input(\"Please enter a number: \"))\n        print(\"You entered: \", x)\n    except ValueError:\n        print(\"You did not enter a number\")\n    except:\n        print(\"An error occurred\")\n    else:\n        print(\"No error occurred\")\n    finally:\n        print(\"This is the end of the program\")\n",
        "def main():\n    print(\"This program is to exit the program.\")\n    again = input(\"Do you want to run it again? (y/n) \")\n    if again == \"y\":\n        main()\n    else:\n        print(\"Thank you for using this program.\")\n        exit()\n",
        "def main():\n    print(\"This program is to exit the program\")\n    again = \"y\"\n    while again == \"y\":\n        print(\"Enter a number:\")\n        num = int(input())\n        print(\"You entered:\", num)\n        print(\"Do you want to continue? (y/n)\")\n        again = input()\n    print(\"Bye!\")\n",
        "def main():\n    print(\"This program is to exit the program\")\n    again = \"y\"\n    while again == \"y\":\n        print(\"This is the end of the program\")\n        again = input(\"Do you want to run the program again? (y/n) \")\n        if again == \"n\":\n            print(\"Thank you for using the program\")\n            break\n        elif again == \"y\":\n            print(\"This is the end of the program\")\n            again = input(\"Do you want to run the program again? (y/n) \")\n            if again == \"n\":\n                print(\"Thank you for using the program\")\n                break\n            elif again == \"y\":\n                print(\"This is the end of the program\")\n                again = input(\"Do you want to run the program again? (y/n) \")\n                if again == \"n\":\n                    print(\"Thank you for using the program\")\n                    break\n                elif again == \"y\":\n                    print(\"This is the end of the program\")\n                    again = input(\"Do you want to run the program again? (y/n) \")\n                    if again == \"n\":\n                        print(\"Thank you for using the program\")\n                        break\n                    elif again == \"y\":\n                        print(\"This is the end of the program\")\n                        again = input(\"Do you want to run the program again? (y/n) \")\n                        if again == \"n\":\n                            print(\"Thank you for using the program\")\n                            break\n                        elif again == \"y\":\n                            print(\"This is the end of the program\")\n                            again = input(\"Do you want to run the program again? (y/n) \")\n                            if again == \"n\":\n                                print(\"Thank you for using the program\")\n                                break\n                            elif again == \"y\":\n                                print(\"This is the end of the program\")\n                                again = input(\"Do you want to run the program again? (y/n) \")\n                                if again == \"n\":\n                                    print(\"Thank you for using the program\")\n                                    break\n                                elif again == \"y\":\n"
    ],
    "results": 9
},{
    "id": "149",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert xlsx file to html file in python",
    "snippets": [
        "def xlsx_to_html(xlsx_file, html_file):\n    import openpyxl\n    wb = openpyxl.load_workbook(xlsx_file)\n    ws = wb.active\n    html = \"\"\n    for row in ws.rows:\n        for cell in row:\n            html += str(cell.value) + \" \"\n        html += \"<br>\"\n    with open(html_file, \"w\") as f:\n        f.write(html)\n    return html\n",
        "def convert_xlsx_to_html(xlsx_file_path, html_file_path):\n    import openpyxl\n    wb = openpyxl.load_workbook(xlsx_file_path)\n    ws = wb.active\n    html = html_file_path\n    with open(html, 'w', encoding='utf-8') as f:\n        f.write('<html>\\n')\n        f.write('<body>\\n')\n        for row in ws.iter_rows():\n            f.write('<tr>\\n')\n            for cell in row:\n                f.write('<td>' + str(cell.value) + '</td>\\n')\n            f.write('</tr>\\n')\n        f.write('</body>\\n')\n        f.write('</html>\\n')\n    return html\n",
        "def xlsx_to_html(xlsx_file, html_file):\n    import openpyxl\n    import html\n    wb = openpyxl.load_workbook(xlsx_file)\n    ws = wb.active\n    html_file = open(html_file, 'w')\n    html_file.write('<html>\\n')\n    html_file.write('<head>\\n')\n    html_file.write('<meta charset=\"utf-8\">\\n')\n    html_file.write('<title>' + ws.title + '</title>\\n')\n    html_file.write('</head>\\n')\n    html_file.write('<body>\\n')\n    for row in ws.rows:\n        html_file.write('<tr>\\n')\n        for cell in row:\n            html_file.write('<td>' + str(cell.value) + '</td>\\n')\n        html_file.write('</tr>\\n')\n    html_file.write('</body>\\n')\n    html_file.write('</html>\\n')\n    html_file.close()\n    return html_file\n",
        "def xlsx_to_html(xlsx_file, html_file):\n    import openpyxl\n    import html\n    wb = openpyxl.load_workbook(xlsx_file)\n    ws = wb.active\n    html_file = open(html_file, 'w')\n    html_file.write('<html>\\n')\n    html_file.write('<body>\\n')\n    for row in ws.iter_rows():\n        html_file.write('<table>\\n')\n        for cell in row:\n            html_file.write('<tr>\\n')\n            html_file.write('<td>' + str(cell.value) + '</td>\\n')\n            html_file.write('</tr>\\n')\n        html_file.write('</table>\\n')\n    html_file.write('</body>\\n')\n    html_file.write('</html>\\n')\n    html_file.close()\n    return html_file\n",
        "def xlsx_to_html(xlsx_file, html_file):\n    import openpyxl\n    from openpyxl.utils import get_column_letter, column_index_from_string\n    wb = openpyxl.load_workbook(xlsx_file)\n    ws = wb.active\n    html = '<table>\\n'\n    for row in ws.rows:\n        html += '<tr>\\n'\n        for cell in row:\n            html += '<td>' + str(cell.value) + '</td>\\n'\n        html += '</tr>\\n'\n    html += '</table>\\n'\n    with open(html_file, 'w') as f:\n        f.write(html)\n    print('Conversion completed!')\n    return html\n",
        "def xlsx_to_html(xlsx_file, html_file):\n    import openpyxl\n    import openpyxl.cell\n    import openpyxl.styles\n    import openpyxl.writer.html\n    import openpyxl.utils\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.\n",
        "def xlsx_to_html(xlsx_file, html_file):\n    import openpyxl\n    import openpyxl.cell\n    import openpyxl.styles\n    import openpyxl.writer.html\n    import openpyxl.writer.html.style\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpyxl.writer.html.cell\n    import openpyxl.writer.html.worksheet\n    import openpyxl.writer.html.table\n    import openpy\n",
        "def xlsx_to_html(xlsx_file, html_file):\n    import openpyxl\n    import openpyxl.styles as sty\n    import openpyxl.cell as cell\n    import openpyxl.drawing as drw\n    import openpyxl.worksheet.dimensions as dim\n    import openpyxl.worksheet.worksheet as ws\n    import openpyxl.worksheet.table as tbl\n    import openpyxl.worksheet.cell_range as cr\n    import openpyxl.worksheet.cell_openpyxl as c\n    import openpyxl.worksheet.cell_openpyxl_cell as cc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell as ccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell as cccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell_cell as ccccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell_cell_cell as cccccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell_cell_cell_cell as ccccccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell_cell_cell_cell_cell as cccccccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell_cell_cell_cell_cell_cell as ccccccccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell_cell_cell_cell_cell_cell_cell as cccccccccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell_cell_cell_cell_cell_cell_cell_cell as ccccccccccc\n    import openpyxl.worksheet.cell_openpyxl_cell_cell_cell_cell_cell_cell\n"
    ],
    "results": 8
},{
    "id": "150",
    "source": "soSearches",
    "language": "python",
    "query": "how to use lsh match in python",
    "snippets": [
        "def lsh_match(lsh_table, query_vector):\n    \"\"\"\n    :param lsh_table: lsh table\n    :param query_vector: query vector\n    :return:\n    \"\"\"\n    # get the hash value of the query vector\n    query_hash = lsh_table.hash(query_vector)\n    # get the candidates from the lsh table\n    candidates = lsh_table.get_candidates(query_hash)\n    # get the similarity of the candidates\n    similarities = lsh_table.get_similarities(candidates, query_vector)\n    # get the top k candidates\n    top_k_candidates = lsh_table.get_top_k(candidates, similarities)\n    return top_k_candidates\n",
        "def lsh_match(lsh_table, query_vector):\n    \"\"\"\n    :param lsh_table:\n    :param query_vector:\n    :return:\n    \"\"\"\n    # get the hash value of the query vector\n    query_hash = lsh_table.hash(query_vector)\n    # get the candidates from the hash table\n    candidates = lsh_table.get_candidates(query_hash)\n    # get the nearest neighbor from the candidates\n    nearest_neighbor = lsh_table.get_nearest_neighbor(candidates, query_vector)\n    return nearest_neighbor\n",
        "def lsh_match(lsh_table, query_vector):\n    \"\"\"\n    :param lsh_table:\n    :param query_vector:\n    :return:\n    \"\"\"\n    # get the hash value of the query vector\n    query_hash = lsh_table.get_hash(query_vector)\n    # get the candidates from the hash table\n    candidates = lsh_table.get_candidates(query_hash)\n    # get the similarity of the candidates\n    similarities = lsh_table.get_similarities(candidates, query_vector)\n    # get the top k candidates\n    top_k_candidates = lsh_table.get_top_k_candidates(candidates, similarities)\n    return top_k_candidates\n",
        "def lsh_match(lsh_table, query_vector):\n    \"\"\"\n    :param lsh_table:\n    :param query_vector:\n    :return:\n    \"\"\"\n    # get the bucket id of the query vector\n    bucket_id = lsh_table.get_bucket_id(query_vector)\n    # get the bucket of the query vector\n    bucket = lsh_table.get_bucket(bucket_id)\n    # get the candidates of the query vector\n    candidates = bucket.get_candidates(query_vector)\n    # get the nearest neighbors of the query vector\n    nearest_neighbors = bucket.get_nearest_neighbors(query_vector)\n    # get the nearest neighbor of the query vector\n    nearest_neighbor = bucket.get_nearest_neighbor(query_vector)\n    # get the nearest neighbor's distance of the query vector\n    nearest_neighbor_distance = bucket.get_nearest_neighbor_distance(query_vector)\n    # get the nearest neighbor's distance of the query vector\n    nearest_neighbor_distance = bucket.get_nearest_neighbor_distance(query_vector)\n    # get the nearest neighbor's distance of the query vector\n    nearest_neighbor_distance = bucket.get_nearest_neighbor_distance(query_vector)\n    # get the nearest neighbor's distance of the query vector\n    nearest_neighbor_distance = bucket.get_nearest_neighbor_distance(query_vector)\n    # get the nearest neighbor's distance of the query vector\n    nearest_neighbor_distance = bucket.get_nearest_neighbor_distance(query_vector)\n    # get the nearest neighbor's distance of the query vector\n    nearest_neighbor_distance = bucket.get_nearest_neighbor_distance(query_vector)\n    # get the nearest neighbor's distance of the query vector\n    nearest_neighbor_distance = bucket.get_nearest_neighbor_distance(query_vector)\n    # get the nearest neighbor's distance of the query vector\n    nearest_neighbor_distance\n",
        "def lsh_match(lsh_table, query_vector):\n    \"\"\"\n    :param lsh_table:\n    :param query_vector:\n    :return:\n    \"\"\"\n    # get the bucket id of the query vector\n    bucket_id = lsh_table.get_bucket_id(query_vector)\n    # get the candidates from the bucket\n    candidates = lsh_table.get_candidates(bucket_id)\n    # get the nearest neighbor of the query vector\n    nearest_neighbor = lsh_table.get_nearest_neighbor(query_vector, candidates)\n    return nearest_neighbor\n",
        "def lsh_match(lsh_table, query_vector):\n    \"\"\"\n    :param lsh_table: a list of lsh_table\n    :param query_vector: a list of query_vector\n    :return: a list of matched_vector\n    \"\"\"\n    matched_vector = []\n    for lsh_table_item in lsh_table:\n        matched_vector.append(lsh_table_item.match(query_vector))\n    return matched_vector\n",
        "def lsh_match(lsh, query_vector):\n    \"\"\"\n    :param lsh: LSH object\n    :param query_vector: query vector\n    :return: list of matching vectors\n    \"\"\"\n    return lsh.match(query_vector)\n",
        "def lsh_match(query, database, k, L, threshold):\n    \"\"\"\n    :param query: query image\n    :param database: database images\n    :param k: number of hash functions\n    :param L: number of hash tables\n    :param threshold: threshold of similarity\n    :return:\n    \"\"\"\n    # get the hash value of query image\n    query_hash = get_hash(query, k, L)\n    # get the hash value of database images\n    database_hash = get_hash(database, k, L)\n    # get the similarity of query image and database images\n    similarity = get_similarity(query_hash, database_hash)\n    # get the index of database images which similarity is greater than threshold\n    index = get_index(similarity, threshold)\n    return index\n",
        "def lsh_match(lsh, query_vector):\n    \"\"\"\n    :param lsh: lsh object\n    :param query_vector: query vector\n    :return: matched vectors\n    \"\"\"\n    # get the bucket id of the query vector\n    bucket_id = lsh.get_bucket_id(query_vector)\n    # get the bucket of the query vector\n    bucket = lsh.get_bucket(bucket_id)\n    # get the matched vectors\n    matched_vectors = lsh.get_matched_vectors(bucket, query_vector)\n    return matched_vectors\n"
    ],
    "results": 10
},{
    "id": "151",
    "source": "soSearches",
    "language": "python",
    "query": "how to use python file in same package",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    print(\"hello world\")\n",
        "def main():\n    print(\"Hello World\")\n",
        "def main():\n    print(\"Hello World!\")\n"
    ],
    "results": 4
},{
    "id": "152",
    "source": "soSearches",
    "language": "python",
    "query": "how to start a python program from an icon",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n",
        "def main():\n    print(\"Hello, world!\")\n"
    ],
    "results": 10
},{
    "id": "153",
    "source": "soSearches",
    "language": "python",
    "query": "how to read tuple values in python",
    "snippets": [
        "def main():\n    # create a tuple\n    t = (1, 2, 3, 4, 5)\n    # print the tuple\n    print(t)\n    # print the first value\n    print(t[0])\n    # print the last value\n    print(t[-1])\n    # print the third value\n    print(t[2])\n    # print the second and third value\n    print(t[1:3])\n    # print the second and third value in reverse order\n    print(t[1:3:-1])\n    # print the second and third value in reverse order\n    print(t[1:3:-2])\n    # print the second and third value in reverse order\n    print(t[1:3:-3])\n    # print the second and third value in reverse order\n    print(t[1:3:-4])\n    # print the second and third value in reverse order\n    print(t[1:3:-5])\n    # print the second and third value in reverse order\n    print(t[1:3:-6])\n    # print the second and third value in reverse order\n    print(t[1:3:-7])\n    # print the second and third value in reverse order\n    print(t[1:3:-8])\n    # print the second and third value in reverse order\n    print(t[1:3:-9])\n    # print the second and third value in reverse order\n    print(t[1:3:-10])\n    # print the second and third value in reverse order\n    print(t[1:3:-11])\n    # print the second and third value in reverse order\n    print(t[1:3:-12])\n    # print the second and third value in reverse order\n    print(t[1:3:-13])\n    # print the second and third value in reverse order\n    print(t[1:3:-14])\n    # print the second and third value in reverse order\n    print(t[1:3:-15])\n    # print the second and third value in reverse order\n    print(t[1:3:-16])\n    # print the second and third value in reverse order\n    print\n",
        "def main():\n    # create a tuple\n    t = (1, 2, 3, 4, 5)\n    # print the tuple\n    print(t)\n    # print the first value\n    print(t[0])\n    # print the last value\n    print(t[-1])\n    # print the third value\n    print(t[2])\n    # print the second and third value\n    print(t[1:3])\n    # print the second and third value\n    print(t[1:])\n    # print the second and third value\n    print(t[:3])\n    # print the second and third value\n    print(t[:])\n    # print the second and third value\n    print(t[1:5:2])\n    # print the second and third value\n    print(t[::-1])\n    # print the second and third value\n    print(t[::-2])\n    # print the second and third value\n    print(t[::-3])\n    # print the second and third value\n    print(t[::-4])\n    # print the second and third value\n    print(t[::-5])\n    # print the second and third value\n    print(t[::-6])\n    # print the second and third value\n    print(t[::-7])\n    # print the second and third value\n    print(t[::-8])\n    # print the second and third value\n    print(t[::-9])\n    # print the second and third value\n    print(t[::-10])\n    # print the second and third value\n    print(t[::-11])\n    # print the second and third value\n    print(t[::-12])\n    # print the second and third value\n    print(t[::-13])\n    # print the second and third value\n    print(t[::-14])\n    # print the second and third value\n    print(t[::-15])\n    # print the second and third value\n    print(t[::-16])\n    # print the second and third value\n    print(t[::-17])\n",
        "def main():\n    # create a tuple\n    t = (1, 2, 3, 4, 5)\n    # get the first value\n    print(t[0])\n    # get the last value\n    print(t[-1])\n    # get the third value\n    print(t[2])\n    # get the second and third values\n    print(t[1:3])\n    # get the first two values\n    print(t[:2])\n    # get the last two values\n    print(t[-2:])\n    # get the first three values\n    print(t[:3])\n    # get the last three values\n    print(t[-3:])\n    # get the first two values and skip the second\n    print(t[:2:1])\n    # get the first two values and skip the first\n    print(t[:2:2])\n    # get the first three values and skip the third\n    print(t[:3:3])\n    # get the last two values and skip the second\n    print(t[-2::1])\n    # get the last two values and skip the first\n    print(t[-2::2])\n    # get the last three values and skip the third\n    print(t[-3::3])\n    # get the first two values and skip the second and third\n    print(t[:2::2])\n    # get the first three values and skip the second and third\n    print(t[:3::3])\n    # get the last two values and skip the second and third\n    print(t[-2::2])\n    # get the last three values and skip the second and third\n    print(t[-3::3])\n    # get the first two values and skip the second and third\n    print(t[:2::2])\n    # get the first three values and skip the second and third\n    print(t[:3::3])\n    # get the last two values and skip the second and third\n    print(t[-2::2])\n    # get the last three values and skip the second and third\n    print(t[-3::3])\n    #\n",
        "def main():\n    # create a tuple\n    t = (1, 2, 3, 4, 5)\n    # get the first value\n    print(t[0])\n    # get the last value\n    print(t[-1])\n    # get the third value\n    print(t[2])\n    # get the values from index 2 to index 4\n    print(t[2:5])\n    # get the values from index 2 to index 4\n    print(t[2:])\n    # get the values from index 2 to index 4\n    print(t[:4])\n    # get the values from index 2 to index 4\n    print(t[:])\n    # get the values from index 2 to index 4\n    print(t[2:5:2])\n    # get the values from index 2 to index 4\n    print(t[2:5:1])\n    # get the values from index 2 to index 4\n    print(t[2:5:-1])\n    # get the values from index 2 to index 4\n    print(t[2:5:-2])\n    # get the values from index 2 to index 4\n    print(t[2:5:-3])\n    # get the values from index 2 to index 4\n    print(t[2:5:-4])\n    # get the values from index 2 to index 4\n    print(t[2:5:-5])\n    # get the values from index 2 to index 4\n    print(t[2:5:-6])\n    # get the values from index 2 to index 4\n    print(t[2:5:-7])\n    # get the values from index 2 to index 4\n    print(t[2:5:-8])\n    # get the values from index 2 to index 4\n    print(t[2:5:-9])\n    # get the values from index 2 to index 4\n    print(t[2:5:-10])\n    # get the values from index 2 to index 4\n    print(t[2:5:-11])\n    # get the values from index 2 to index 4\n    print(t[2:5:-12])\n    # get the values from index 2 to\n",
        "def main():\n    # create a tuple\n    t = (1, 2, 3, 4, 5)\n    # display the tuple\n    print(t)\n    # display the first value\n    print(t[0])\n    # display the last value\n    print(t[-1])\n    # display the third value\n    print(t[2])\n    # display the second and third value\n    print(t[1:3])\n    # display the second, third, and fourth value\n    print(t[1:4])\n    # display the first and last value\n    print(t[0:2])\n    # display the first two and last value\n    print(t[0:3])\n    # display the first value, second value, and last value\n    print(t[0:4])\n    # display the first value, second value, and third value\n    print(t[0:5])\n    # display the first value, second value, and third value\n    print(t[0:6])\n    # display the first value, second value, and third value\n    print(t[0:7])\n    # display the first value, second value, and third value\n    print(t[0:8])\n    # display the first value, second value, and third value\n    print(t[0:9])\n    # display the first value, second value, and third value\n    print(t[0:10])\n    # display the first value, second value, and third value\n    print(t[0:11])\n    # display the first value, second value, and third value\n    print(t[0:12])\n    # display the first value, second value, and third value\n    print(t[0:13])\n    # display the first value, second value, and third value\n    print(t[0:14])\n    # display the first value, second value, and third value\n    print(t[0:15])\n    # display the first value, second value, and third value\n    print(t[0:16])\n    # display the first value, second value, and third value\n    print(t[0:17])\n",
        "def main():\n    # create a tuple\n    t = (1, 2, 3, 4, 5)\n    # display the tuple\n    print(t)\n    # display the first element\n    print(t[0])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the second element\n    print(t[1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n    # display the second-to-last element\n    print(t[-2])\n    # display the last element\n    print(t[-1])\n",
        "def main():\n    # create a tuple\n    t = (1, 2, 3)\n    # read the tuple values\n    print(t[0])\n    print(t[1])\n    print(t[2])\n    # read the tuple values using for loop\n    for i in t:\n        print(i)\n    # read the tuple values using while loop\n    i = 0\n    while i < len(t):\n        print(t[i])\n        i += 1\n    # read the tuple values using for loop\n    for i in range(len(t)):\n        print(t[i])\n    # read the tuple values using while loop\n    i = 0\n    while i < len(t):\n        print(t[i])\n        i += 1\n    # read the tuple values using for loop\n    for i in range(len(t)):\n        print(t[i])\n        i += 1\n    # read the tuple values using while loop\n    i = 0\n    while i < len(t):\n        print(t[i])\n        i += 1\n    # read the tuple values using for loop\n    for i in range(len(t)):\n        print(t[i])\n        i += 1\n    # read the tuple values using while loop\n    i = 0\n    while i < len(t):\n        print(t[i])\n        i += 1\n    # read the tuple values using for loop\n    for i in range(len(t)):\n        print(t[i])\n        i += 1\n    # read the tuple values using while loop\n    i = 0\n    while i < len(t):\n        print(t[i])\n        i += 1\n    # read the tuple values using for loop\n    for i in range(len(t)):\n        print(t[i])\n        i += 1\n    # read the tuple values using while loop\n    i = 0\n    while i < len(t):\n        print(t[i])\n        i += 1\n    # read the tuple values using for loop\n    for i in range(len(t)):\n        print(t[i])\n        i +=\n",
        "def main():\n    # create a tuple\n    tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n    # print the tuple\n    print(tup)\n    # print the first value\n    print(tup[0])\n    # print the last value\n    print(tup[-1])\n    # print the 3rd value\n    print(tup[2])\n    # print the 3rd to last value\n    print(tup[-3])\n    # print the values from index 3 to index 6\n    print(tup[3:6])\n    # print the values from index 5 to index 10\n    print(tup[5:10])\n    # print the values from index 5 to index -1\n    print(tup[5:])\n    # print the values from index 0 to index -5\n    print(tup[:-5])\n    # print the values from index 3 to index -3\n    print(tup[3:-3])\n    # print the values from index 3 to index -3 in steps of 2\n    print(tup[3:-3:2])\n    # print the values from index 3 to index -3 in steps of -2\n    print(tup[3:-3:-2])\n    # print the values from index 3 to index -3 in steps of 3\n    print(tup[3:-3:3])\n    # print the values from index 3 to index -3 in steps of -3\n    print(tup[3:-3:-3])\n    # print the values from index 3 to index -3 in steps of 4\n    print(tup[3:-3:4])\n    # print the values from index 3 to index -3 in steps of -4\n    print(tup[3:-3:-4])\n    # print the values from index 3 to index -3 in steps of 5\n    print(tup[3:-3:5])\n    # print the values from index 3 to index -3 in steps of -5\n    print(tup[3:-3:-5])\n    # print the values from index 3 to index -3 in steps of 6\n    print(\n",
        "def main():\n    tup = (1,2,3,4,5)\n    print(tup[0])\n    print(tup[1])\n    print(tup[2])\n    print(tup[3])\n    print(tup[4])\n    print(tup[-1])\n    print(tup[-2])\n    print(tup[-3])\n    print(tup[-4])\n    print(tup[-5])\n    print(tup[-6])\n    print(tup[-7])\n    print(tup[-8])\n    print(tup[-9])\n    print(tup[-10])\n    print(tup[-11])\n    print(tup[-12])\n    print(tup[-13])\n    print(tup[-14])\n    print(tup[-15])\n    print(tup[-16])\n    print(tup[-17])\n    print(tup[-18])\n    print(tup[-19])\n    print(tup[-20])\n    print(tup[-21])\n    print(tup[-22])\n    print(tup[-23])\n    print(tup[-24])\n    print(tup[-25])\n    print(tup[-26])\n    print(tup[-27])\n    print(tup[-28])\n    print(tup[-29])\n    print(tup[-30])\n    print(tup[-31])\n    print(tup[-32])\n    print(tup[-33])\n    print(tup[-34])\n    print(tup[-35])\n    print(tup[-36])\n    print(tup[-37])\n    print(tup[-38])\n    print(tup[-39])\n    print(tup[-40])\n    print(tup[-41])\n    print(tup[-42])\n    print(tup[-43])\n    print(tup\n"
    ],
    "results": 9
},{
    "id": "154",
    "source": "soSearches",
    "language": "python",
    "query": "how to show table on chat window using python flask",
    "snippets": [
        "def show_table(table):\n    return '<table border=\"1\">' + table + '</table>'\n",
        "def show_table():\n    return '<table border=\"1\">' + \\\n           '<tr><th>Name</th><th>Age</th></tr>' + \\\n           '<tr><td>John</td><td>25</td></tr>' + \\\n           '<tr><td>Mary</td><td>30</td></tr>' + \\\n           '</table>'\n",
        "def show_table():\n    return '<table border=\"1\">' + \\\n           '<tr><th>Name</th><th>Age</th><th>City</th></tr>' + \\\n           '<tr><td>John</td><td>25</td><td>New York</td></tr>' + \\\n           '<tr><td>Peter</td><td>30</td><td>Paris</td></tr>' + \\\n           '<tr><td>Mary</td><td>27</td><td>London</td></tr>' + \\\n           '</table>'\n",
        "def show_table():\n    return '<table border=\"1\">' + \\\n           '<tr><th>Name</th><th>Age</th><th>City</th></tr>' + \\\n           '<tr><td>John</td><td>25</td><td>New York</td></tr>' + \\\n           '<tr><td>Mary</td><td>27</td><td>Paris</td></tr>' + \\\n           '<tr><td>Peter</td><td>30</td><td>London</td></tr>' + \\\n           '</table>'\n",
        "def show_table():\n    return '<table border=\"1\">' + '<tr><th>Name</th><th>Age</th></tr>' + '<tr><td>John</td><td>25</td></tr>' + '<tr><td>Jane</td><td>26</td></tr>' + '</table>'\n",
        "def get_table():\n    return \"\"\"<table border=\"1\">\n    <tr>\n        <th>Name</th>\n        <th>Age</th>\n        <th>City</th>\n    </tr>\n    <tr>\n        <td>John</td>\n        <td>25</td>\n        <td>New York</td>\n    </tr>\n    <tr>\n        <td>Mary</td>\n        <td>27</td>\n        <td>Paris</td>\n    </tr>\n    <tr>\n        <td>Peter</td>\n        <td>29</td>\n        <td>London</td>\n    </tr>\n    </table>\"\"\"\n",
        "def show_table(table):\n    return '<table>' + '<tr>' + '<th>' + '</th>' + '</tr>' + '</table>'\n",
        "def show_table(table):\n    return \"<table><tr><th>Name</th><th>Age</th><th>City</th></tr>\" + table + \"</table>\"\n",
        "def show_table():\n    from flask import Flask, render_template\n    from flask_sqlalchemy import SQLAlchemy\n    from datetime import datetime\n    app = Flask(__name__)\n    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///test.db'\n    db = SQLAlchemy(app)\n\n    class User(db.Model):\n        id = db.Column(db.Integer, primary_key=True)\n        username = db.Column(db.String(80), unique=True)\n        email = db.Column(db.String(120), unique=True)\n        created_at = db.Column(db.DateTime, default=datetime.utcnow)\n\n    @app.route('/')\n    def index():\n        users = User.query.all()\n        return render_template('index.html', users=users)\n\n    if __name__ == '__main__':\n        app.run(debug=True)\n"
    ],
    "results": 10
},{
    "id": "155",
    "source": "soSearches",
    "language": "python",
    "query": "how to roundoff values in python",
    "snippets": [
        "def main():\n    x = 1.23456789\n    print(round(x, 2))\n    print(round(x, 1))\n    print(round(x, 0))\n    print(round(x, -1))\n    print(round(x, -2))\n    print(round(x, -3))\n    print(round(x, -4))\n    print(round(x, -5))\n    print(round(x, -6))\n    print(round(x, -7))\n    print(round(x, -8))\n    print(round(x, -9))\n    print(round(x, -10))\n    print(round(x, -11))\n    print(round(x, -12))\n    print(round(x, -13))\n    print(round(x, -14))\n    print(round(x, -15))\n    print(round(x, -16))\n    print(round(x, -17))\n    print(round(x, -18))\n    print(round(x, -19))\n    print(round(x, -20))\n    print(round(x, -21))\n    print(round(x, -22))\n    print(round(x, -23))\n    print(round(x, -24))\n    print(round(x, -25))\n    print(round(x, -26))\n    print(round(x, -27))\n    print(round(x, -28))\n    print(round(x, -29))\n    print(round(x, -30))\n    print(round(x, -31))\n    print(round(x, -32))\n    print(round(x, -33))\n    print(round(x, -34))\n    print(round(x, -35))\n    print(round(x, -36))\n    print(round(x, -37))\n    print(round(x, -38))\n    print(round(x, -39))\n    print(round(x, -40))\n    print(round(x, -41))\n    print(round(\n",
        "def main():\n    x = 1.2345\n    print(round(x, 2))\n    print(round(x, 1))\n    print(round(x, 0))\n    print(round(x, -1))\n    print(round(x, -2))\n    print(round(x, -3))\n    print(round(x, -4))\n    print(round(x, -5))\n    print(round(x, -6))\n    print(round(x, -7))\n    print(round(x, -8))\n    print(round(x, -9))\n    print(round(x, -10))\n    print(round(x, -11))\n    print(round(x, -12))\n    print(round(x, -13))\n    print(round(x, -14))\n    print(round(x, -15))\n    print(round(x, -16))\n    print(round(x, -17))\n    print(round(x, -18))\n    print(round(x, -19))\n    print(round(x, -20))\n    print(round(x, -21))\n    print(round(x, -22))\n    print(round(x, -23))\n    print(round(x, -24))\n    print(round(x, -25))\n    print(round(x, -26))\n    print(round(x, -27))\n    print(round(x, -28))\n    print(round(x, -29))\n    print(round(x, -30))\n    print(round(x, -31))\n    print(round(x, -32))\n    print(round(x, -33))\n    print(round(x, -34))\n    print(round(x, -35))\n    print(round(x, -36))\n    print(round(x, -37))\n    print(round(x, -38))\n    print(round(x, -39))\n    print(round(x, -40))\n    print(round(x, -41))\n    print(round(x,\n",
        "def main():\n    x = 3.7\n    print(round(x))\n    print(round(x, 2))\n    print(round(x, -1))\n    print(round(x, -2))\n    print(round(x, -3))\n    print(round(x, -4))\n    print(round(x, -5))\n    print(round(x, -6))\n    print(round(x, -7))\n    print(round(x, -8))\n    print(round(x, -9))\n    print(round(x, -10))\n    print(round(x, -11))\n    print(round(x, -12))\n    print(round(x, -13))\n    print(round(x, -14))\n    print(round(x, -15))\n    print(round(x, -16))\n    print(round(x, -17))\n    print(round(x, -18))\n    print(round(x, -19))\n    print(round(x, -20))\n    print(round(x, -21))\n    print(round(x, -22))\n    print(round(x, -23))\n    print(round(x, -24))\n    print(round(x, -25))\n    print(round(x, -26))\n    print(round(x, -27))\n    print(round(x, -28))\n    print(round(x, -29))\n    print(round(x, -30))\n    print(round(x, -31))\n    print(round(x, -32))\n    print(round(x, -33))\n    print(round(x, -34))\n    print(round(x, -35))\n    print(round(x, -36))\n    print(round(x, -37))\n    print(round(x, -38))\n    print(round(x, -39))\n    print(round(x, -40))\n    print(round(x, -41))\n    print(round(x, -42))\n    print(round(x, -43\n",
        "def main():\n    print(round(1.2345, 2))\n    print(round(1.2345))\n    print(round(1.2345, 0))\n    print(round(1.2345, -1))\n    print(round(1.2345, -2))\n    print(round(1.2345, -3))\n    print(round(1.2345, -4))\n    print(round(1.2345, -5))\n    print(round(1.2345, -6))\n    print(round(1.2345, -7))\n    print(round(1.2345, -8))\n    print(round(1.2345, -9))\n    print(round(1.2345, -10))\n    print(round(1.2345, -11))\n    print(round(1.2345, -12))\n    print(round(1.2345, -13))\n    print(round(1.2345, -14))\n    print(round(1.2345, -15))\n    print(round(1.2345, -16))\n    print(round(1.2345, -17))\n    print(round(1.2345, -18))\n    print(round(1.2345, -19))\n    print(round(1.2345, -20))\n    print(round(1.2345, -21))\n    print(round(1.2345, -22))\n    print(round(1.2345, -23))\n    print(round(1.2345, -24))\n    print(round(1.2345, -25))\n    print(round(1.2345, -26))\n    print(round(1.2345, -27))\n    print(round(1.2345, -28))\n    print(round(1.2345, -29))\n    print(round(1.2345, -30))\n    print(round(1.2345, -31))\n    print(round(1.2345, -32))\n    print(round(1.2345, -\n",
        "def main():\n    x = 1.23456\n    print(round(x, 2))\n    print(round(x, 1))\n    print(round(x, 0))\n    print(round(x, -1))\n    print(round(x, -2))\n    print(round(x, -3))\n    print(round(x, -4))\n    print(round(x, -5))\n    print(round(x, -6))\n    print(round(x, -7))\n    print(round(x, -8))\n    print(round(x, -9))\n    print(round(x, -10))\n    print(round(x, -11))\n    print(round(x, -12))\n    print(round(x, -13))\n    print(round(x, -14))\n    print(round(x, -15))\n    print(round(x, -16))\n    print(round(x, -17))\n    print(round(x, -18))\n    print(round(x, -19))\n    print(round(x, -20))\n    print(round(x, -21))\n    print(round(x, -22))\n    print(round(x, -23))\n    print(round(x, -24))\n    print(round(x, -25))\n    print(round(x, -26))\n    print(round(x, -27))\n    print(round(x, -28))\n    print(round(x, -29))\n    print(round(x, -30))\n    print(round(x, -31))\n    print(round(x, -32))\n    print(round(x, -33))\n    print(round(x, -34))\n    print(round(x, -35))\n    print(round(x, -36))\n    print(round(x, -37))\n    print(round(x, -38))\n    print(round(x, -39))\n    print(round(x, -40))\n    print(round(x, -41))\n    print(round(x,\n",
        "def roundoff(x):\n    return round(x, 2)\n"
    ],
    "results": 10
},{
    "id": "156",
    "source": "soSearches",
    "language": "python",
    "query": "how to import docx in python",
    "snippets": [
        "def main():\n    import docx\n    doc = docx.Document('demo.docx')\n    print(doc.paragraphs[0].text)\n    print(doc.paragraphs[1].text)\n    print(doc.paragraphs[2].text)\n    print(doc.paragraphs[3].text)\n    print(doc.paragraphs[4].text)\n    print(doc.paragraphs[5].text)\n    print(doc.paragraphs[6].text)\n    print(doc.paragraphs[7].text)\n    print(doc.paragraphs[8].text)\n    print(doc.paragraphs[9].text)\n    print(doc.paragraphs[10].text)\n    print(doc.paragraphs[11].text)\n    print(doc.paragraphs[12].text)\n    print(doc.paragraphs[13].text)\n    print(doc.paragraphs[14].text)\n    print(doc.paragraphs[15].text)\n    print(doc.paragraphs[16].text)\n    print(doc.paragraphs[17].text)\n    print(doc.paragraphs[18].text)\n    print(doc.paragraphs[19].text)\n    print(doc.paragraphs[20].text)\n    print(doc.paragraphs[21].text)\n    print(doc.paragraphs[22].text)\n    print(doc.paragraphs[23].text)\n    print(doc.paragraphs[24].text)\n    print(doc.paragraphs[25].text)\n    print(doc.paragraphs[26].text)\n    print(doc.paragraphs[27].text)\n    print(doc.paragraphs[28].text)\n    print(doc.paragraphs[29].text)\n    print(doc.paragraphs[30].text)\n    print(doc.paragraphs[31].text)\n    print(doc.paragraphs[32].text)\n    print(doc.paragraphs[33].text)\n    print(doc.paragraphs[34].text)\n    print(doc.paragraphs[35].text)\n    print(doc.paragraphs[\n",
        "def main():\n    import docx\n    doc = docx.Document('test.docx')\n    print(doc.paragraphs[0].text)\n    print(doc.paragraphs[1].text)\n    print(doc.paragraphs[2].text)\n    print(doc.paragraphs[3].text)\n    print(doc.paragraphs[4].text)\n    print(doc.paragraphs[5].text)\n    print(doc.paragraphs[6].text)\n    print(doc.paragraphs[7].text)\n    print(doc.paragraphs[8].text)\n    print(doc.paragraphs[9].text)\n    print(doc.paragraphs[10].text)\n    print(doc.paragraphs[11].text)\n    print(doc.paragraphs[12].text)\n    print(doc.paragraphs[13].text)\n    print(doc.paragraphs[14].text)\n    print(doc.paragraphs[15].text)\n    print(doc.paragraphs[16].text)\n    print(doc.paragraphs[17].text)\n    print(doc.paragraphs[18].text)\n    print(doc.paragraphs[19].text)\n    print(doc.paragraphs[20].text)\n    print(doc.paragraphs[21].text)\n    print(doc.paragraphs[22].text)\n    print(doc.paragraphs[23].text)\n    print(doc.paragraphs[24].text)\n    print(doc.paragraphs[25].text)\n    print(doc.paragraphs[26].text)\n    print(doc.paragraphs[27].text)\n    print(doc.paragraphs[28].text)\n    print(doc.paragraphs[29].text)\n    print(doc.paragraphs[30].text)\n    print(doc.paragraphs[31].text)\n    print(doc.paragraphs[32].text)\n    print(doc.paragraphs[33].text)\n    print(doc.paragraphs[34].text)\n    print(doc.paragraphs[35].text)\n    print(doc.paragraphs[36\n",
        "def main():\n    import docx\n    doc = docx.Document('demo.docx')\n    print(doc.paragraphs)\n    print(doc.paragraphs[0].text)\n    print(doc.paragraphs[1].text)\n    print(doc.paragraphs[2].text)\n    print(doc.paragraphs[3].text)\n    print(doc.paragraphs[4].text)\n    print(doc.paragraphs[5].text)\n    print(doc.paragraphs[6].text)\n    print(doc.paragraphs[7].text)\n    print(doc.paragraphs[8].text)\n    print(doc.paragraphs[9].text)\n    print(doc.paragraphs[10].text)\n    print(doc.paragraphs[11].text)\n    print(doc.paragraphs[12].text)\n    print(doc.paragraphs[13].text)\n    print(doc.paragraphs[14].text)\n    print(doc.paragraphs[15].text)\n    print(doc.paragraphs[16].text)\n    print(doc.paragraphs[17].text)\n    print(doc.paragraphs[18].text)\n    print(doc.paragraphs[19].text)\n    print(doc.paragraphs[20].text)\n    print(doc.paragraphs[21].text)\n    print(doc.paragraphs[22].text)\n    print(doc.paragraphs[23].text)\n    print(doc.paragraphs[24].text)\n    print(doc.paragraphs[25].text)\n    print(doc.paragraphs[26].text)\n    print(doc.paragraphs[27].text)\n    print(doc.paragraphs[28].text)\n    print(doc.paragraphs[29].text)\n    print(doc.paragraphs[30].text)\n    print(doc.paragraphs[31].text)\n    print(doc.paragraphs[32].text)\n    print(doc.paragraphs[33].text)\n    print(doc.paragraphs[34].text)\n    print(doc.paragraphs[35].text)\n",
        "def main():\n    # import the docx module\n    from docx import Document\n\n    # create a new document\n    document = Document()\n\n    # add a paragraph\n    document.add_paragraph('Hello World!')\n\n    # save the document\n    document.save('hello.docx')\n"
    ],
    "results": 10
},{
    "id": "157",
    "source": "soSearches",
    "language": "python",
    "query": "how to write a program using conditional statement in python.",
    "snippets": [
        "def main():\n    x = int(input(\"Enter a number: \"))\n    if x < 0:\n        print(\"x is negative\")\n    elif x == 0:\n        print(\"x is zero\")\n    else:\n        print(\"x is positive\")\n",
        "def main():\n    a = int(input(\"Enter a number: \"))\n    if a > 0:\n        print(\"Positive number\")\n    elif a < 0:\n        print(\"Negative number\")\n    else:\n        print(\"Zero\")\n",
        "def main():\n    a = int(input(\"Enter a number: \"))\n    if a > 0:\n        print(\"Positive\")\n    elif a < 0:\n        print(\"Negative\")\n    else:\n        print(\"Zero\")\n",
        "def main():\n    a = int(input(\"Enter a number: \"))\n    if a % 2 == 0:\n        print(\"{} is even number\".format(a))\n    else:\n        print(\"{} is odd number\".format(a))\n",
        "def main():\n    print(\"This is a program to calculate the area of a circle\")\n    radius = float(input(\"Enter the radius of the circle: \"))\n    area = area_circle(radius)\n    print(\"The area of the circle is: \", area)\n"
    ],
    "results": 10
},{
    "id": "158",
    "source": "soSearches",
    "language": "python",
    "query": "how to use messagebox in python 3.7",
    "snippets": [
        "def main():\n    import tkinter as tk\n    from tkinter import messagebox\n    root = tk.Tk()\n    root.withdraw()\n    messagebox.showinfo('Title', 'Message')\n    answer = messagebox.askquestion('Title', 'Message')\n    if answer == 'yes':\n        print('yes')\n    else:\n        print('no')\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    from tkinter import messagebox\n\n    root = tk.Tk()\n    root.title(\"Messagebox\")\n    root.geometry(\"300x300\")\n\n    def clicked():\n        messagebox.showinfo(\"Message\", \"Hello World\")\n\n    btn = tk.Button(root, text=\"Click Me\", command=clicked)\n    btn.pack()\n\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    from tkinter import messagebox\n    root = Tk()\n    root.title(\"Messagebox\")\n    root.geometry(\"300x200\")\n    root.resizable(False, False)\n    root.iconbitmap(\"icon.ico\")\n    root.configure(background=\"white\")\n    def show_info():\n        messagebox.showinfo(\"Information\", \"This is a information message\")\n    def show_warning():\n        messagebox.showwarning(\"Warning\", \"This is a warning message\")\n    def show_error():\n        messagebox.showerror(\"Error\", \"This is an error message\")\n    def show_question():\n        messagebox.askquestion(\"Question\", \"This is a question message\")\n    def show_yesno():\n        messagebox.askyesno(\"YesNo\", \"This is a yesno message\")\n    def show_retrycancel():\n        messagebox.askretrycancel(\"RetryCancel\", \"This is a retrycancel message\")\n    def show_abortcancel():\n        messagebox.askabortcancel(\"AbortCancel\", \"This is a abortcancel message\")\n    def show_okcancel():\n        messagebox.askokcancel(\"OkCancel\", \"This is a okcancel message\")\n    def show_okcancel():\n        messagebox.askokcancel(\"OkCancel\", \"This is a okcancel message\")\n    def show_yesnocancel():\n        messagebox.askyesnocancel(\"YesNoCancel\", \"This is a yesnocancel message\")\n    def show_yesnocancel():\n        messagebox.askyesnocancel(\"YesNoCancel\", \"This is a yesnocancel message\")\n    def show_yesnocancel():\n        messagebox.askyesnocancel(\"YesNoCancel\", \"This is a yesnocancel message\")\n    def show_yesnocancel():\n        messagebox.askyesnocancel(\"YesNoCancel\", \"This is a yesnocancel message\")\n    def show_yesnocancel():\n        messagebox.\n",
        "def main():\n    import tkinter as tk\n    from tkinter import messagebox\n    root = tk.Tk()\n    root.title(\"Message Box\")\n    root.geometry(\"300x200\")\n    root.resizable(False, False)\n    root.iconbitmap(\"icon.ico\")\n    root.mainloop()\n    # messagebox.showinfo(\"Title\", \"Message\")\n    # messagebox.showwarning(\"Title\", \"Message\")\n    # messagebox.showerror(\"Title\", \"Message\")\n    # messagebox.askquestion(\"Title\", \"Message\")\n    # messagebox.askokcancel(\"Title\", \"Message\")\n    # messagebox.askyesno(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesnocancel(\"Title\", \"Message\")\n    # messagebox.askyesnoretrycancel(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesnoretrycancel(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesnoretrycancel(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesnoretrycancel(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesnoretrycancel(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesnoretrycancel(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesnoretrycancel(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesnoretrycancel(\"Title\", \"Message\")\n    # messagebox.askretrycancel(\"Title\", \"Message\")\n    # messagebox.askyesn\n",
        "def main():\n    import tkinter as tk\n    from tkinter import messagebox\n\n    root = tk.Tk()\n    root.title(\"Message Box\")\n    root.geometry(\"300x200\")\n\n    def callback():\n        messagebox.showinfo(\"Hello Python\", \"Hello World\")\n\n    btn = tk.Button(root, text=\"Show Message\", command=callback)\n    btn.pack()\n\n    root.mainloop()\n",
        "def main():\n    import tkinter as tk\n    root = tk.Tk()\n    root.title(\"Messagebox\")\n    root.geometry(\"300x200\")\n    root.resizable(False, False)\n    root.iconbitmap(\"icon.ico\")\n    root.configure(background=\"white\")\n    root.mainloop()\n",
        "def main():\n    from tkinter import *\n    from tkinter import messagebox\n    root = Tk()\n    root.title(\"Messagebox\")\n    root.geometry(\"200x100\")\n    root.resizable(0,0)\n    def show_info():\n        messagebox.showinfo(\"Information\", \"This is a messagebox\")\n    def show_warning():\n        messagebox.showwarning(\"Warning\", \"This is a messagebox\")\n    def show_error():\n        messagebox.showerror(\"Error\", \"This is a messagebox\")\n    def show_question():\n        messagebox.askquestion(\"Question\", \"This is a messagebox\")\n    def show_yesno():\n        messagebox.askyesno(\"Question\", \"This is a messagebox\")\n    def show_retrycancel():\n        messagebox.askretrycancel(\"Question\", \"This is a messagebox\")\n    def show_tryagain():\n        messagebox.asktryagain(\"Question\", \"This is a messagebox\")\n    def show_help():\n        messagebox.showhelp(\"Question\", \"This is a messagebox\")\n    Button(root, text=\"Information\", command=show_info).pack()\n    Button(root, text=\"Warning\", command=show_warning).pack()\n    Button(root, text=\"Error\", command=show_error).pack()\n    Button(root, text=\"Question\", command=show_question).pack()\n    Button(root, text=\"Yes/No\", command=show_yesno).pack()\n    Button(root, text=\"Retry/Cancel\", command=show_retrycancel).pack()\n    Button(root, text=\"Try Again\", command=show_tryagain).pack()\n    Button(root, text=\"Help\", command=show_help).pack()\n    root.mainloop()\n"
    ],
    "results": 7
},{
    "id": "159",
    "source": "soSearches",
    "language": "python",
    "query": "how to use sockets to send http request in python",
    "snippets": [
        "def main():\n    import socket\n    import sys\n    import re\n    # create a socket object\n    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    # get local machine name\n    host = 'www.google.com'\n    port = 80\n    # connection to hostname on the port.\n    client_socket.connect((host, port))\n    # create a buffer of data to send\n    request = 'GET / HTTP/1.1\\r\\nHost: ' + host + '\\r\\n\\r\\n'\n    # send the data to the server\n    client_socket.send(request.encode())\n    # receive the data back from the server\n    data = client_socket.recv(1024)\n    print(data.decode())\n    # close the socket\n    client_socket.close()\n    # print the received data\n    # print(data)\n    # print(data.decode())\n    # print(data.decode('utf-8'))\n    # print(data.decode('utf-8', 'ignore'))\n    # print(data.decode('utf-8', 'replace'))\n    # print(data.decode('utf-8', 'ignore').encode('utf-8', 'ignore'))\n    # print(data.decode('utf-8', 'ignore').encode('utf-8', 'ignore').decode('utf-8', 'ignore'))\n    # print(data.decode('utf-8', 'ignore').encode('utf-8', 'ignore').decode('utf-8', 'ignore').encode('utf-8', 'ignore'))\n    # print(data.decode('utf-8', 'ignore').encode('utf-8', 'ignore').decode('utf-8', 'ignore').encode('utf-8', 'ignore').decode('utf-8', 'ignore'))\n    # print(data.decode('utf-8', 'ignore').encode('utf-8', 'ignore').decode('utf-8', 'ignore').encode('utf-8', 'ignore').decode\n",
        "def main():\n    import socket\n    import sys\n    import re\n    import time\n    import os\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import threading\n    import multiprocessing\n    import multiprocessing.pool\n    import multiprocessing.dummy\n    import\n",
        "def main():\n    import socket\n    import sys\n    import re\n    import os\n    import time\n    import urllib.request\n    import urllib.parse\n    import http.client\n    import http.server\n    import socketserver\n    import threading\n    import multiprocessing\n    import multiprocessing.pool\n    import multiprocessing.dummy\n    import\n",
        "def main():\n    import socket\n    import sys\n    import re\n    import urllib.request\n    import urllib.parse\n    import http.client\n    import json\n    import time\n    import datetime\n    import os\n    import signal\n    import threading\n    import queue\n    import multiprocessing\n    import subprocess\n    import shutil\n    import tempfile\n    import csv\n    import math\n    import random\n    import string\n    import base64\n    import hashlib\n    import binascii\n    import struct\n    import fractions\n    import itertools\n    import collections\n    import functools\n    import operator\n    import heapq\n    import bisect\n    import array\n    import ctypes\n    import ctypes.util\n    import ctypes.wintypes\n    import ctypes.wintypes.HANDLE\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPOVERLAPPED\n    import ctypes.wintypes.LPSECURITY_ATTRIBUTES\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPOVERLAPPED\n    import ctypes.wintypes.LPSECURITY_ATTRIBUTES\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPOVERLAPPED\n    import ctypes.wintypes.LPSECURITY_ATTRIBUTES\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPOVERLAPPED\n    import ctypes.wintypes.LPSECURITY_ATTRIBUTES\n    import ctypes.wintypes.LPVOID\n    import ctypes.wintypes.LPDWORD\n    import ctypes.wintypes.LPOVERLAPPED\n",
        "def main():\n    import socket\n    import sys\n    import re\n    import urllib.request\n    import urllib.parse\n    import http.client\n    import http.server\n    import os\n    import time\n    import threading\n    import subprocess\n    import signal\n    import sys\n    import json\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import random\n    import string\n    import getpass\n    import ssl\n    import struct\n    import zlib\n    import base64\n    import socket\n    import ssl\n    import time\n    import threading\n    import subprocess\n    import signal\n    import sys\n    import json\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import random\n    import string\n    import getpass\n    import ssl\n    import struct\n    import zlib\n    import base64\n    import socket\n    import ssl\n    import time\n    import threading\n    import subprocess\n    import signal\n    import sys\n    import json\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import random\n    import string\n    import getpass\n    import ssl\n    import struct\n    import zlib\n    import base64\n    import socket\n    import ssl\n    import time\n    import threading\n    import subprocess\n    import signal\n    import sys\n    import json\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import random\n    import string\n    import getpass\n    import ssl\n    import struct\n    import zlib\n    import base64\n    import socket\n    import ssl\n    import time\n    import threading\n    import subprocess\n    import signal\n    import sys\n    import json\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import random\n    import string\n    import getpass\n    import ssl\n    import struct\n    import zlib\n    import base64\n    import socket\n    import ssl\n    import time\n    import thread\n",
        "def main():\n    import socket\n    import sys\n    import re\n    import os\n    import time\n    import json\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import threading\n    import multiprocessing\n    import multiprocessing.pool\n    import multiprocessing.dummy\n    import multiprocessing.managers\n    import multiprocessing.sharedctypes\n    import multiprocessing.synchronize\n    import multiprocessing.util\n    import multiprocessing.queues\n    import multiprocessing.queues.Queue\n    import multiprocessing.queues.SimpleQueue\n    import multiprocessing.queues.JoinableQueue\n    import multiprocessing.queues.LifoQueue\n    import multiprocessing.queues.PriorityQueue\n    import multiprocessing.queues.SizedQueue\n    import multiprocessing.queues.Full\n    import multiprocessing.queues.Empty\n    import multiprocessing.queues.SimpleQueue\n    import multiprocessing.queues.Lock\n    import multiprocessing.queues.RLock\n    import multiprocessing.queues.Condition\n    import multiprocessing.queues.Semaphore\n    import multiprocessing.queues.BoundedSemaphore\n    import\n"
    ],
    "results": 7
},{
    "id": "160",
    "source": "soSearches",
    "language": "python",
    "query": "how to drag an image around the screen in python",
    "snippets": [
        "def main():\n    import pygame\n    import sys\n    from pygame.locals import *\n\n    pygame.init()\n    DISPLAYSURF = pygame.display.set_mode((400, 300))\n    pygame.display.set_caption('Hello World!')\n\n    img = pygame.image.load('cat.png')\n\n    while True: # main game loop\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                pygame.quit()\n                sys.exit()\n            elif event.type == MOUSEBUTTONDOWN:\n                if event.button == 4:\n                    img = pygame.transform.scale(img, (img.get_width()+10, img.get_height()+10))\n                elif event.button == 5:\n                    img = pygame.transform.scale(img, (img.get_width()-10, img.get_height()-10))\n        DISPLAYSURF.fill((0, 0, 0))\n        DISPLAYSURF.blit(img, (event.pos[0]-img.get_width()/2, event.pos[1]-img.get_height()/2))\n        pygame.display.flip()\n",
        "def main():\n    import pygame\n    import sys\n    import random\n    from pygame.locals import *\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Drag an Image')\n    # load the image\n    image = pygame.image.load('drag.png')\n    # create a list of x,y coords for the image\n    x, y = 100, 100\n    x1, y1 = x, y\n    x2, y2 = x, y\n    x3, y3 = x, y\n    x4, y4 = x, y\n    x5, y5 = x, y\n    x6, y6 = x, y\n    x7, y7 = x, y\n    x8, y8 = x, y\n    x9, y9 = x, y\n    x10, y10 = x, y\n    x11, y11 = x, y\n    x12, y12 = x, y\n    x13, y13 = x, y\n    x14, y14 = x, y\n    x15, y15 = x, y\n    x16, y16 = x, y\n    x17, y17 = x, y\n    x18, y18 = x, y\n    x19, y19 = x, y\n    x20, y20 = x, y\n    x21, y21 = x, y\n    x22, y22 = x, y\n    x23, y23 = x, y\n    x24, y24 = x, y\n    x25, y25 = x, y\n    x26, y26 = x, y\n    x27, y27 = x, y\n    x28, y28 = x, y\n    x29, y29 = x, y\n    x30, y30 = x, y\n    x31, y31 = x, y\n    x32, y32 = x, y\n    x33, y33 = x, y\n    x34, y34 = x, y\n    x35, y35 = x, y\n    x\n",
        "def main():\n    import pygame\n    import sys\n    import time\n    from pygame.locals import *\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Drag an image around')\n    # load the image\n    img = pygame.image.load('pythonlogo.png')\n    # create a rect for the image\n    rect = img.get_rect()\n    # set the mouse cursor to the middle of the image\n    rect.center = (320, 240)\n    # set the initial position of the image\n    pos = rect.center\n    # set the initial speed of the image\n    speed = [2, 2]\n    # set the initial acceleration of the image\n    accel = [0, 0]\n    # set the initial rotation of the image\n    angle = 0\n    # set the initial rotation speed of the image\n    angle_speed = 0\n    # set the initial rotation acceleration of the image\n    angle_accel = 0\n    # set the initial scale of the image\n    scale = 1\n    # set the initial scale speed of the image\n    scale_speed = 0\n    # set the initial scale acceleration of the image\n    scale_accel = 0\n    # set the initial opacity of the image\n    opacity = 255\n    # set the initial opacity speed of the image\n    opacity_speed = 0\n    # set the initial opacity acceleration of the image\n    opacity_accel = 0\n    # set the initial color of the image\n    color = (255, 255, 255)\n    # set the initial color speed of the image\n    color_speed = (0, 0, 0)\n    # set the initial color acceleration of the image\n    color_accel = (0, 0, 0)\n    # set the initial color of the image\n    color_speed = (0, 0, 0)\n    # set the initial color acceleration of the image\n    color_accel = (0, 0, 0)\n    # set the initial color of the image\n    color_speed = (0, 0, 0)\n    # set the initial color acceleration of the image\n    color\n",
        "def main():\n    import pygame\n    import sys\n    import time\n    from pygame.locals import *\n\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Drag an Image')\n    my_image = pygame.image.load('ball.png').convert()\n    my_image_pos = my_image.get_rect()\n    screen.blit(my_image, my_image_pos)\n    pygame.display.flip()\n\n    # set up the colors\n    white = (255, 255, 255)\n    red = (255, 0, 0)\n    blue = (0, 0, 255)\n    green = (0, 255, 0)\n    black = (0, 0, 0)\n\n    # set up the fonts\n    font = pygame.font.SysFont(None, 48)\n\n    # set up the text\n    text = font.render(\"Drag me around\", True, white, blue)\n    text_rect = text.get_rect()\n    text_rect.centerx = screen.get_rect().centerx\n    text_rect.centery = screen.get_rect().centery - 120\n\n    # set up the mouse cursor\n    cursor = pygame.image.load('cursor.png').convert_alpha()\n    cursor_pos = cursor.get_rect()\n\n    # set up the \"drag\" event\n    dragging = False\n\n    while True:\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                pygame.quit()\n                sys.exit()\n            elif event.type == MOUSEBUTTONDOWN:\n                if event.button == 1:\n                    # left mouse button\n                    if text_rect.collidepoint(event.pos):\n                        # if the mouse is over the text, start dragging\n                        dragging = True\n                        cursor_pos.centerx, cursor_pos.centery = event.pos\n                    else:\n                        # if the mouse is not over the text, move the text\n                        text_rect.centerx, text_rect.centery\n",
        "def main():\n    from tkinter import *\n    from PIL import Image, ImageTk\n    import random\n    root = Tk()\n    root.title(\"Drag and Drop\")\n    root.geometry(\"400x400\")\n    root.resizable(0,0)\n    # create a canvas\n    canvas = Canvas(root, width=400, height=400)\n    canvas.pack()\n    # create a list of images\n    images = [ImageTk.PhotoImage(Image.open(\"images/image1.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image2.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image3.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image4.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image5.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image6.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image7.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image8.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image9.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image10.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image11.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image12.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image13.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image14.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image15.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image16.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image17.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image18.png\")),\n              ImageTk.PhotoImage(Image.open(\"images/image19\n",
        "def main():\n    from pygame import *\n    init()\n    size = width, height = 800, 600\n    screen = display.set_mode(size)\n    running = True\n    myClock = time.Clock()\n    img = image.load(\"drag.png\")\n    img = transform.scale(img, (100, 100))\n    x, y = 0, 0\n    while running:\n        for evt in event.get():\n            if evt.type == QUIT:\n                running = False\n            if evt.type == MOUSEBUTTONDOWN:\n                x, y = evt.pos\n            if evt.type == MOUSEBUTTONUP:\n                x, y = evt.pos\n        screen.fill((0, 0, 0))\n        screen.blit(img, (x, y))\n        display.flip()\n        myClock.tick(60)\n    quit()\n",
        "def main():\n    from tkinter import *\n    from PIL import Image, ImageDraw, ImageFilter\n    import random\n    import time\n    import os\n\n    root = Tk()\n    root.title(\"Drag and Drop\")\n    root.geometry(\"800x600\")\n    root.resizable(0,0)\n\n    # create a canvas\n    canvas = Canvas(root, width=800, height=600)\n    canvas.pack()\n\n    # create a list of images\n    images = []\n    for i in range(1,6):\n        image = Image.open(\"images/image\" + str(i) + \".png\")\n        images.append(image)\n\n    # create a list of images\n    images2 = []\n    for i in range(1,6):\n        image = Image.open(\"images/image\" + str(i) + \".png\")\n        images2.append(image)\n\n    # create a list of images\n    images3 = []\n    for i in range(1,6):\n        image = Image.open(\"images/image\" + str(i) + \".png\")\n        images3.append(image)\n\n    # create a list of images\n    images4 = []\n    for i in range(1,6):\n        image = Image.open(\"images/image\" + str(i) + \".png\")\n        images4.append(image)\n\n    # create a list of images\n    images5 = []\n    for i in range(1,6):\n        image = Image.open(\"images/image\" + str(i) + \".png\")\n        images5.append(image)\n\n    # create a list of images\n    images6 = []\n    for i in range(1,6):\n        image = Image.open(\"images/image\" + str(i) + \".png\")\n        images6.append(image)\n\n    # create a list of images\n    images7 = []\n    for i in range(1,6):\n        image = Image.open(\"images/image\" + str(i) + \".png\")\n        images7.append(image)\n\n    # create a list\n",
        "def main():\n    from tkinter import *\n    from PIL import Image, ImageDraw, ImageFilter\n    import random\n    import time\n    import math\n    import os\n    import sys\n    import pyautogui\n    import pyttsx3\n    import speech_recognition as sr\n    import webbrowser\n    import smtplib\n    import pyttsx3\n    import speech_recognition as sr\n    import wikipedia\n    import datetime\n    import wolframalpha\n    import sys\n    import subprocess\n    import re\n    import os\n    import pyautogui\n    import pyttsx3\n    import speech_recognition as sr\n    import webbrowser\n    import smtplib\n    import pyttsx3\n    import speech_recognition as sr\n    import wikipedia\n    import datetime\n    import wolframalpha\n    import sys\n    import subprocess\n    import re\n    import os\n    import pyautogui\n    import pyttsx3\n    import speech_recognition as sr\n    import webbrowser\n    import smtplib\n    import pyttsx3\n    import speech_recognition as sr\n    import wikipedia\n    import datetime\n    import wolframalpha\n    import sys\n    import subprocess\n    import re\n    import os\n    import pyautogui\n    import pyttsx3\n    import speech_recognition as sr\n    import webbrowser\n    import smtplib\n    import pyttsx3\n    import speech_recognition as sr\n    import wikipedia\n    import datetime\n    import wolframalpha\n    import sys\n    import subprocess\n    import re\n    import os\n    import pyautogui\n    import pyttsx3\n    import speech_recognition as sr\n    import webbrowser\n    import smtplib\n    import pyttsx3\n    import speech_recognition as sr\n    import wikipedia\n    import datetime\n    import wolframalpha\n    import sys\n    import subprocess\n    import re\n    import os\n    import pyautogui\n    import pyttsx3\n    import speech_recognition as sr\n"
    ],
    "results": 8
},{
    "id": "161",
    "source": "soSearches",
    "language": "python",
    "query": "how to generate random numbers in particular range in python",
    "snippets": [
        "def random_number(min, max):\n    import random\n    return random.randint(min, max)\n",
        "def random_number(start, end):\n    import random\n    return random.randint(start, end)\n"
    ],
    "results": 10
},{
    "id": "162",
    "source": "soSearches",
    "language": "python",
    "query": "how to type () faster python 3",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    print(\"This program illustrates a chaotic function\")\n    x = eval(input(\"Enter a number between 0 and 1: \"))\n    for i in range(10):\n        x = 3.9 * x * (1 - x)\n        print(x)\n"
    ],
    "results": 3
},{
    "id": "163",
    "source": "soSearches",
    "language": "python",
    "query": "how to change background color in python with turtle",
    "snippets": [
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"brown\")\n    brad.circle(100)\n    brad.color(\"gray\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"brown\")\n    brad.circle(100)\n    brad.color(\"gray\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"brown\")\n    brad.circle(100)\n    brad.color(\"gray\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"brown\")\n    brad.circle(100)\n    brad.color(\"gray\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"brown\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"brown\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"purple\")\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"white\")\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    for i in range(1,37):\n        brad.right(10)\n        brad.forward(100)\n    window.exitonclick()\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"brown\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"orange\")\n    brad.circle(100)\n    brad.color(\"black\")\n    brad.circle(100)\n    brad.color(\"white\")\n    brad.circle(100)\n    brad.color(\"pink\")\n    brad.circle(100)\n    brad.color(\"brown\")\n    brad.circle(100)\n    brad.color(\"red\")\n    brad.circle(100)\n    brad.color(\"yellow\")\n    brad.circle(100)\n    brad.color(\"blue\")\n    brad.circle(100)\n    brad.color(\"green\")\n    brad.circle(100)\n    brad.color(\"purple\")\n    brad.circle(100)\n    brad.color(\"orange\")\n",
        "def main():\n    import turtle\n    wn = turtle.Screen()\n    wn.bgcolor(\"lightgreen\")\n    tess = turtle.Turtle()\n    tess.color(\"hotpink\")\n    tess.pensize(5)\n    tess.forward(50)\n    tess.left(120)\n    tess.forward(50)\n    tess.left(120)\n    tess.forward(50)\n    tess.left(120)\n    wn.exitonclick()\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    window.title(\"Hello World\")\n    window.setup(width=800, height=600)\n    window.tracer(0)\n    tess = turtle.Turtle()\n    tess.color(\"white\")\n    tess.shape(\"turtle\")\n    tess.penup()\n    tess.goto(-100, 0)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(100, 0)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(0, 100)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(0, -100)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(-100, -100)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(100, 100)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(100, -100)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(-100, 100)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(100, -100)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(-100, -100)\n    tess.pendown()\n    tess.circle(100)\n    tess.penup()\n    tess.goto(100, 100)\n    tess.pendown()\n    tess.circle(100)\n    t\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    window.title(\"Hello World\")\n    window.setup(width=800, height=600)\n    window.tracer(0)\n    # create a turtle named brad\n    brad = turtle.Turtle()\n    # set the turtle's shape to a turtle\n    brad.shape(\"turtle\")\n    # set the turtle's color to red\n    brad.color(\"yellow\")\n    # set the turtle's speed to max\n    brad.speed(0)\n    # set the turtle's pen size to 5\n    brad.pensize(5)\n    # set the turtle's pen fill color to blue\n    brad.fillcolor(\"blue\")\n    # set the turtle's pen fill color to blue\n    brad.begin_fill()\n    # draw a square\n    for i in range(4):\n        brad.forward(100)\n        brad.left(90)\n    brad.end_fill()\n    # set the turtle's pen fill color to blue\n    brad.fillcolor(\"green\")\n    # set the turtle's pen fill color to blue\n    brad.begin_fill()\n    # draw a square\n    for i in range(4):\n        brad.forward(100)\n        brad.left(90)\n    brad.end_fill()\n    # set the turtle's pen fill color to blue\n    brad.fillcolor(\"yellow\")\n    # set the turtle's pen fill color to blue\n    brad.begin_fill()\n    # draw a square\n    for i in range(4):\n        brad.forward(100)\n        brad.left(90)\n    brad.end_fill()\n    # set the turtle's pen fill color to blue\n    brad.fillcolor(\"red\")\n    # set the turtle's pen fill color to blue\n    brad.begin_fill()\n    # draw a square\n    for i in range(4):\n        brad.forward(100)\n        brad.left(90)\n    brad.end_fill()\n    # set\n"
    ],
    "results": 10
},{
    "id": "164",
    "source": "soSearches",
    "language": "python",
    "query": "[python]how to maintain inventory of store",
    "snippets": [
        "def main():\n    # create a list to store the inventory\n    inventory = []\n    # create a list to store the prices\n    prices = []\n    # create a list to store the quantities\n    quantities = []\n    # create a list to store the total prices\n    total_prices = []\n    # create a list to store the total quantities\n    total_quantities = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities_and_names = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities_and_names_and_prices = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities_and_names_and_prices_and_quantities = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities_and_names_and_prices_and_quantities_and_inventory = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities_and_names_and_prices_and_quantities_and_inventory_and_prices = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities_and_names_and_prices_and_quantities_and_inventory_and_prices_and_quantities = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities_and_names_and_prices_and_quantities_and_inventory_and_prices_and_quantities_and_inventory = []\n    # create a list to store the total prices and quantities\n    total_prices_and_quantities_and_names_and_prices_and_quantities_and_inventory_and_prices_and_quantities_and_inventory_and_prices = []\n    # create a list to store the total prices and quantities\n",
        "def main():\n    print(\"Welcome to the inventory management system\")\n    print(\"Please select an option:\")\n    print(\"1. Add a new item to the inventory\")\n    print(\"2. Remove an item from the inventory\")\n    print(\"3. Update the quantity of an item\")\n    print(\"4. Print the list of items\")\n    print(\"5. Quit\")\n    choice = int(input(\"Enter your choice: \"))\n    if choice == 1:\n        add_item()\n    elif choice == 2:\n        remove_item()\n    elif choice == 3:\n        update_item()\n    elif choice == 4:\n        print_list()\n    elif choice == 5:\n        print(\"Thank you for using the inventory management system\")\n        exit()\n    else:\n        print(\"Invalid choice\")\n        main()\n",
        "def main():\n    # create a list of items\n    items = [\n        (\"apple\", 2.99),\n        (\"banana\", 3.99),\n        (\"orange\", 4.99),\n        (\"pear\", 5.99),\n        (\"pineapple\", 6.99),\n        (\"strawberry\", 7.99),\n        (\"watermelon\", 8.99)\n    ]\n    # create a list of items to be purchased\n    purchase = []\n    # create a list of items to be purchased\n    while True:\n        # display the items\n        print(\"What would you like to buy?\")\n        for index, item in enumerate(items):\n            print(f\"{index + 1}. {item[0]} - {item[1]}\")\n        # prompt the user to enter a number\n        choice = int(input(\"Enter a number: \"))\n        # if the user enters a number outside of the range of the list,\n        # display an error message and prompt the user to enter a number again\n        if choice < 1 or choice > len(items):\n            print(\"Error: Invalid number\")\n            continue\n        # add the item to the list of items to be purchased\n        purchase.append(items[choice - 1])\n        # prompt the user to enter Y to continue or N to stop\n        answer = input(\"Would you like to continue? (Y/N): \")\n        # if the user enters Y, continue the loop\n        if answer.upper() == \"Y\":\n            continue\n        # if the user enters N, break the loop\n        elif answer.upper() == \"N\":\n            break\n        # if the user enters an invalid answer, display an error message and\n        # prompt the user to enter Y or N again\n        else:\n            print(\"Error: Invalid answer\")\n            continue\n    # display the list of items to be purchased\n    print(\"You purchased:\")\n    for item in purchase:\n        print(f\"{item[0]} - {item[1]}\")\n    # display the total cost of the items to be purchased\n    total = 0\n    for item in purchase:\n        total += item[1]\n    print(f\"Total: {total}\n",
        "def main():\n    print(\"This program will maintain inventory of store\")\n    print()\n    print(\"Please enter the following information:\")\n    print()\n    item_name = input(\"Item name: \")\n    item_quantity = int(input(\"Quantity: \"))\n    item_price = float(input(\"Price: \"))\n    print()\n    print(\"Item name:\", item_name)\n    print(\"Quantity:\", item_quantity)\n    print(\"Price:\", item_price)\n    print()\n    print(\"Thank you for your business!\")\n",
        "def main():\n    # initialize inventory\n    inventory = {'apple': [10, 0.5], 'banana': [20, 1.5], 'orange': [30, 2.5]}\n    # initialize shopping cart\n    shopping_cart = {}\n    # initialize total price\n    total_price = 0.0\n    # initialize total quantity\n    total_quantity = 0\n    # initialize flag\n    flag = True\n    # initialize choice\n    choice = ''\n    # initialize item\n    item = ''\n    # initialize quantity\n    quantity = 0\n    # initialize price\n    price = 0.0\n    # initialize total\n    total = 0.0\n    # initialize tax\n    tax = 0.0\n    # initialize subtotal\n    subtotal = 0.0\n    # initialize total tax\n    total_tax = 0.0\n    # initialize total cost\n    total_cost = 0.0\n    # initialize total profit\n    total_profit = 0.0\n    # initialize total margin\n    total_margin = 0.0\n    # initialize total cost per unit\n    total_cost_per_unit = 0.0\n    # initialize total profit per unit\n    total_profit_per_unit = 0.0\n    # initialize total margin per unit\n    total_margin_per_unit = 0.0\n    # initialize total cost per item\n    total_cost_per_item = 0.0\n    # initialize total profit per item\n    total_profit_per_item = 0.0\n    # initialize total margin per item\n    total_margin_per_item = 0.0\n    # initialize total cost per item\n    total_cost_per_item = 0.0\n    # initialize total profit per item\n    total_profit_per_item = 0.0\n    # initialize total margin per item\n    total_margin_per_item = 0.0\n    # initialize total cost per item\n    total_cost_per_item = 0.0\n    # initialize total profit per item\n    total_profit_per_item = 0.0\n    # initialize total margin per item\n    total_margin_per_item = 0.0\n    # initialize total cost per item\n    total_\n",
        "def main():\n    print(\"This program will maintain inventory of store\")\n    print()\n    print(\"Please enter the following information\")\n    print()\n    item_number = int(input(\"Enter item number: \"))\n    item_description = input(\"Enter item description: \")\n    item_price = float(input(\"Enter item price: \"))\n    item_quantity = int(input(\"Enter item quantity: \"))\n    print()\n    print(\"Item number:\", item_number)\n    print(\"Item description:\", item_description)\n    print(\"Item price:\", item_price)\n    print(\"Item quantity:\", item_quantity)\n    print()\n    print(\"Thank you for your input\")\n",
        "def main():\n    print(\"This program allows you to maintain an inventory of items.\")\n    print()\n    print(\"Please enter the item number, description, and price for each item.\")\n    print(\"Enter a blank line to designate the end of the inventory.\")\n    print()\n\n    item_number = 1\n    item_list = []\n\n    while True:\n        item_description = input(\"Item number {}: \".format(item_number))\n        if item_description == \"\":\n            break\n        item_price = float(input(\"Price: $\"))\n        item_list.append([item_number, item_description, item_price])\n        item_number += 1\n\n    print(\"Inventory:\")\n    total_value = 0.0\n    for item in item_list:\n        print(\"{} - {} (${:.2f})\".format(item[0], item[1], item[2]))\n        total_value += item[2]\n    print(\"Total value of inventory: ${:.2f}\".format(total_value))\n"
    ],
    "results": 7
},{
    "id": "165",
    "source": "soSearches",
    "language": "python",
    "query": "how to open idx file in python",
    "snippets": [
        "def open_idx(idx_file):\n    with open(idx_file, 'rb') as f:\n        idx_data = f.read()\n    return idx_data\n",
        "def open_idx(idx_file):\n    with open(idx_file, 'rb') as f:\n        idx = f.read()\n    return idx\n",
        "def open_idx(idx_path):\n    with open(idx_path, 'rb') as f:\n        idx = f.read()\n    return idx\n",
        "def main():\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n",
        "def main():\n    with open('../data/idx.txt', 'r') as f:\n        for line in f:\n            print(line)\n",
        "def main():\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('idx.txt', 'r') as f:\n",
        "def main():\n    with open('idx.txt', 'r') as f:\n        for line in f:\n            print(line.strip())\n"
    ],
    "results": 10
},{
    "id": "166",
    "source": "soSearches",
    "language": "python",
    "query": "how to split a string placed on spacing in python",
    "snippets": [
        "def split_string(string):\n    return string.split()\n",
        "def main():\n    s = \"This is a string\"\n    print(s.split())\n    print(s.split('i'))\n    print(s.split('i', 1))\n    print(s.split('i', 2))\n    print(s.split('i', 3))\n    print(s.split('i', 4))\n    print(s.split('i', 5))\n    print(s.split('i', 6))\n    print(s.split('i', 7))\n    print(s.split('i', 8))\n    print(s.split('i', 9))\n    print(s.split('i', 10))\n    print(s.split('i', 11))\n    print(s.split('i', 12))\n    print(s.split('i', 13))\n    print(s.split('i', 14))\n    print(s.split('i', 15))\n    print(s.split('i', 16))\n    print(s.split('i', 17))\n    print(s.split('i', 18))\n    print(s.split('i', 19))\n    print(s.split('i', 20))\n    print(s.split('i', 21))\n    print(s.split('i', 22))\n    print(s.split('i', 23))\n    print(s.split('i', 24))\n    print(s.split('i', 25))\n    print(s.split('i', 26))\n    print(s.split('i', 27))\n    print(s.split('i', 28))\n    print(s.split('i', 29))\n    print(s.split('i', 30))\n    print(s.split('i', 31))\n    print(s.split('i', 32))\n    print(s.split('i', 33))\n    print(s.split('i', 34))\n    print(s.split('i', 35))\n    print(s.split('i', 36))\n    print(s.split('i', 37))\n    print(s.split('i', 38))\n    print(s.split('i', 39))\n"
    ],
    "results": 10
},{
    "id": "167",
    "source": "soSearches",
    "language": "python",
    "query": "after returning dataframe how to print it in python",
    "snippets": [
        "def main():\n    df = pd.read_csv('data.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=True))\n    print(df.sort_index(by='A', ascending=False))\n    print(df.sort_index(by='A', ascending=True))\n    print(df.sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).columns)\n    print(df.sort_values(by='A', ascending=False).index)\n    print(df.sort_values(by='A', ascending=False).values)\n    print(df.sort_values(by='A', ascending=False).dtypes)\n    print(df.sort_values(by='A', ascending=False).shape)\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=True))\n    print(df.sort_values(by='A', ascending=False).sort_index(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).sort_index(by='A', ascending=True))\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A',\n",
        "def main():\n    df = pd.read_csv('data.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.describe(include='all'))\n    print(df.describe\n",
        "def main():\n    df = pd.read_csv('data.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).columns)\n    print(df.sort_values(by='A', ascending=False).index)\n    print(df.sort_values(by='A', ascending=False).values)\n    print(df.sort_values(by='A', ascending=False).dtypes)\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).columns)\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).index)\n    print(\n",
        "def main():\n    df = pd.read_csv('data.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).columns)\n    print(df.sort_values(by='A', ascending=False).index)\n    print(df.sort_values(by='A', ascending=False).values)\n    print(df.sort_values(by='A', ascending=False).dtypes)\n    print(df.sort_values(by='A', ascending=False).shape)\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).columns)\n    print(df.sort_\n",
        "def main():\n    df = pd.read_csv('data/data.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).columns)\n    print(df.sort_values(by='A', ascending=False).index)\n    print(df.sort_values(by='A', ascending=False).values)\n    print(df.sort_values(by='A', ascending=False).dtypes)\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).columns)\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).index)\n",
        "def main():\n    df = pd.read_csv('data/data.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.sort_values(by='A', ascending=False))\n    print(df.sort_index(ascending=False))\n    print(df.sort_values(by='A', ascending=False).head())\n    print(df.sort_index(ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).tail())\n    print(df.sort_index(ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).info())\n    print(df.sort_index(ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).describe())\n    print(df.sort_index(ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).columns)\n    print(df.sort_index(ascending=False).columns)\n    print(df.sort_values(by='A', ascending=False).index)\n    print(df.sort_index(ascending=False).index)\n    print(df.sort_values(by='A', ascending=False).values)\n    print(df.sort_index(ascending=False).values)\n    print(df.sort_values(by='A', ascending=False).dtypes)\n    print(df.sort_index(ascending=False).dtypes)\n    print(df.sort_values(by='A', ascending=False).shape)\n    print(df.sort_index(ascending=False).shape)\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending\n",
        "def main():\n    df = pd.read_csv('data/data.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.sort_values(by='A'))\n    print(df.sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).describe())\n    print(df.sort_values(by='A', ascending=False).columns)\n    print(df.sort_values(by='A', ascending=False).index)\n    print(df.sort_values(by='A', ascending=False).values)\n    print(df.sort_values(by='A', ascending=False).dtypes)\n    print(df.sort_values(by='A', ascending=False).shape)\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A'))\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False))\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).head())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).tail())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).info())\n    print(df.sort_values(by='A', ascending=False).sort_values(by='A', ascending=False).\n",
        "def main():\n    df = pd.read_csv('data/iris.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.describe(include='all'))\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.sort_values(by='Sepal.Length'))\n    print(df.sort_values(by='Sepal.Length', ascending=False))\n    print(df.sort_index())\n    print(df.sort_index(ascending=False))\n    print(df.sort_index(by='Sepal.Length'))\n    print(df.sort_index(by='Sepal.Length', ascending=False))\n    print(df.sort_values(by='Sepal.Length', ascending=False))\n    print(df.sort_values(by='Sepal.Length', ascending=False).head())\n    print(df.sort_values(by='Sepal.Length', ascending=False).tail())\n    print(df.sort_values(by='Sepal.Length', ascending=False).info())\n    print(df.sort_values(by='Sepal.Length', ascending=False).describe())\n    print(df.sort_values(by='Sepal.Length', ascending=False).describe(include='all'))\n    print(df.sort_values(by='Sepal.Length', ascending=False).columns)\n    print(df.sort_values(by='Sepal.Length', ascending=False).index)\n    print(df.sort_values(by='Sepal.Length', ascending=False).values)\n    print(df.sort_values(by='Sepal.Length', ascending=False).dtypes)\n    print(df.sort_values(by='Sepal.Length', ascending=False).shape)\n    print(df.sort_values(by='Sepal.Length', ascending=False).sort\n",
        "def main():\n    df = pd.read_csv('data/olympics.csv')\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.ndim)\n    print(df.size)\n    print(df.memory_usage())\n    print(df.dtypes.value_counts())\n    print(df.select_dtypes(include=['int64']))\n    print(df.select_dtypes(include=['float64']))\n    print(df.select_dtypes(include=['object']))\n    print(df.select_dtypes(include=['datetime64']))\n    print(df.select_dtypes(include=['bool']))\n    print(df.select_dtypes(exclude=['bool']))\n    print(df.select_dtypes(exclude=['int64']))\n    print(df.select_dtypes(exclude=['float64']))\n    print(df.select_dtypes(exclude=['object']))\n    print(df.select_dtypes(exclude=['datetime64']))\n    print(df.select_dtypes(exclude=['bool']))\n    print(df.select_dtypes(include=['bool']))\n    print(df.select_dtypes(include=['int64']))\n    print(df.select_dtypes(include=['float64']))\n    print(df.select_dtypes(include=['object']))\n    print(df.select_dtypes(include=['datetime64']))\n    print(df.select_dtypes(include=['bool']))\n    print(df.select_dtypes(exclude=['bool']))\n    print(df.select_dtypes(exclude=['int64']))\n    print(df.select_dtypes(exclude=['float64']\n"
    ],
    "results": 10
},{
    "id": "168",
    "source": "soSearches",
    "language": "python",
    "query": "how to mkae a log in on python",
    "snippets": [
        "def main():\n    log_file = open(\"log.txt\", \"w\")\n    log_file.write(\"This is a test log file\")\n    log_file.close()\n    log_file = open(\"log.txt\", \"r\")\n    print(log_file.read())\n    log_file.close()\n",
        "def main():\n    import logging\n    logging.basicConfig(filename='myProgramLog.txt', level=logging.DEBUG, format=' %(asctime)s - %(levelname)s - %(message)s')\n    logging.debug('Start of program')\n    logging.info('Program is starting')\n    logging.warning('Something is happening')\n    logging.error('An error has happened')\n    logging.critical('The program is shutting down')\n    logging.debug('End of program')\n    logging.info('Program is ending')\n    logging.warning('Something is happening')\n    logging.error('An error has happened')\n    logging.critical('The program is shutting down')\n",
        "def main():\n    import logging\n    logging.basicConfig(filename='myProgramLog.txt', level=logging.DEBUG, format=' %(asctime)s - %(levelname)s - %(message)s')\n    logging.debug('Start of program')\n    logging.info('Program is starting')\n    logging.warning('Something is not right')\n    logging.error('Error has occured')\n    logging.critical('Program is aborting')\n    logging.debug('End of program')\n",
        "def main():\n    log_file = open('log.txt', 'w')\n    log_file.write('This is a log file')\n    log_file.close()\n    log_file = open('log.txt', 'r')\n    print(log_file.read())\n    log_file.close()\n",
        "def main():\n    # open the file\n    log = open(\"log.txt\", \"w\")\n    # write to the file\n    log.write(\"This is a test\\n\")\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"a\")\n    # write to the file\n    log.write(\"This is a test\\n\")\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print(log.read())\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print(log.readline())\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print(log.readlines())\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print(log.readline())\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print(log.readline())\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print(log.readline())\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print(log.readline())\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print(log.readline())\n    # close the file\n    log.close()\n    # open the file\n    log = open(\"log.txt\", \"r\")\n    # read the file\n    print\n",
        "def main():\n    # open the file for writing\n    log = open(\"log.txt\", \"w\")\n    # get the current date and time\n    now = time.strftime(\"%c\")\n    # write to the log\n    log.write(\"Today is: \" + now + \"\\n\")\n    # close the log file\n    log.close()\n    # open the log file for appending\n    log = open(\"log.txt\", \"a\")\n    # get the current date and time\n    now = time.strftime(\"%c\")\n    # write to the log\n    log.write(\"Today is: \" + now + \"\\n\")\n    # close the log file\n    log.close()\n    # open the log file for appending\n    log = open(\"log.txt\", \"a\")\n    # get the current date and time\n    now = time.strftime(\"%c\")\n    # write to the log\n    log.write(\"Today is: \" + now + \"\\n\")\n    # close the log file\n    log.close()\n    # open the log file for appending\n    log = open(\"log.txt\", \"a\")\n    # get the current date and time\n    now = time.strftime(\"%c\")\n    # write to the log\n    log.write(\"Today is: \" + now + \"\\n\")\n    # close the log file\n    log.close()\n    # open the log file for appending\n    log = open(\"log.txt\", \"a\")\n    # get the current date and time\n    now = time.strftime(\"%c\")\n    # write to the log\n    log.write(\"Today is: \" + now + \"\\n\")\n    # close the log file\n    log.close()\n    # open the log file for appending\n    log = open(\"log.txt\", \"a\")\n    # get the current date and time\n    now = time.strftime(\"%c\")\n    # write to the log\n    log.write(\"Today is: \" + now + \"\\n\")\n    # close the log file\n    log.close()\n    # open the log file for appending\n    log = open(\"log.txt\n"
    ],
    "results": 10
},{
    "id": "169",
    "source": "soSearches",
    "language": "python",
    "query": "python how to convert dict to a string",
    "snippets": [
        "def dict_to_str(d):\n    return ' '.join(['%s=%s' % (k, v) for k, v in d.items()])\n",
        "def dict_to_string(d):\n    return ' '.join(['%s=%s' % (k, v) for k, v in d.items()])\n",
        "def dict_to_str(d):\n    return ''.join(['{}={};'.format(k, v) for k, v in d.items()])\n",
        "def dict_to_str(d):\n    return ''.join(['{}:{}'.format(k, v) for k, v in d.items()])\n",
        "def dict_to_str(d):\n    return ''.join(d.keys()) + ''.join(d.values())\n",
        "def dict_to_str(d):\n    return ''.join(d.keys())\n"
    ],
    "results": 10
},{
    "id": "170",
    "source": "soSearches",
    "language": "python",
    "query": "how to save/load in python",
    "snippets": [
        "def save_to_file(filename, lines):\n    with open(filename, 'w') as f:\n        for line in lines:\n            f.write(line + '\\n')\n",
        "def save_to_file(obj, filename):\n    \"\"\"\n    save an object to a file\n    \"\"\"\n    with open(filename, 'w') as f:\n        f.write(obj)\n",
        "def save_to_file(my_obj, filename):\n    \"\"\"\n    function that writes an object to a text file\n    \"\"\"\n    import json\n    with open(filename, 'w') as f:\n        f.write(json.dumps(my_obj))\n    return None\n",
        "def save_to_file(my_obj, filename):\n    \"\"\"\n    save_to_file function\n    \"\"\"\n    import json\n    with open(filename, 'w') as f:\n        json.dump(my_obj, f)\n    return None\n",
        "def save_to_file(my_obj, filename):\n    \"\"\"\n    function that writes an object to a text file\n    \"\"\"\n    import json\n    with open(filename, 'w') as f:\n        json.dump(my_obj, f)\n",
        "def save_to_file(line):\n    with open('save.txt', 'a') as f:\n        f.write(line + '\\n')\n"
    ],
    "results": 10
},{
    "id": "171",
    "source": "soSearches",
    "language": "python",
    "query": "how to execute a function written in another file in python",
    "snippets": [
        "def add(a, b):\n    return a + b\n",
        "def main():\n    print(\"This is the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    call_function()\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function\n",
        "def main():\n    print(\"This is the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 5 to the function\")\n    call_function(5)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 10 to the function\")\n    call_function(10)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 15 to the function\")\n    call_function(15)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 20 to the function\")\n    call_function(20)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 25 to the function\")\n    call_function(25)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 30 to the function\")\n    call_function(30)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 35 to the function\")\n    call_function(35)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 40 to the function\")\n    call_function(40)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 45 to the function\")\n    call_function(45)\n    print(\"I am back in the main function\")\n    print(\"I am going to call the function in the other file\")\n    print(\"I will pass the value of 50 to\n"
    ],
    "results": 7
},{
    "id": "172",
    "source": "soSearches",
    "language": "python",
    "query": "python how to return the __str__  when not printing",
    "snippets": [
        "def __str__(self):\n    return self.name\n",
        "def my_function():\n    return \"Hello World\"\n",
        "def my_func():\n    return \"Hello World\"\n"
    ],
    "results": 10
},{
    "id": "173",
    "source": "soSearches",
    "language": "python",
    "query": "how to break out of python program in spyder",
    "snippets": [
        "def main():\n    while True:\n        try:\n            x = int(input(\"Please enter a number: \"))\n            break\n        except ValueError:\n            print(\"Oops!  That was no valid number.  Try again...\")\n    print(\"Thank you for entering a number\")\n",
        "def main():\n    while True:\n        try:\n            x = int(input(\"Please enter a number: \"))\n            break\n        except ValueError:\n            print(\"Oops!  That was no valid number.  Try again...\")\n    print(\"Thank you for entering a number\")\n    print(\"The number you entered was:\", x)\n",
        "def main():\n    while True:\n        try:\n            x = int(input(\"Please enter a number: \"))\n            break\n        except ValueError:\n            print(\"Oops!  That was no valid number.  Try again...\")\n    print(\"You entered: \", x)\n",
        "def main():\n    while True:\n        try:\n            x = int(input(\"Please enter a number: \"))\n            break\n        except ValueError:\n            print(\"Oops!  That was no valid number.  Try again...\")\n    print(\"Thank you for entering a number\")\n    print(\"x =\", x)\n    print(\"x + 1 =\", x + 1)\n    print(\"x * 2 =\", x * 2)\n    print(\"x / 2 =\", x / 2)\n    print(\"x ** 2 =\", x ** 2)\n    print(\"x // 2 =\", x // 2)\n    print(\"x % 2 =\", x % 2)\n    print(\"x % 3 =\", x % 3)\n    print(\"x % 4 =\", x % 4)\n    print(\"x % 5 =\", x % 5)\n    print(\"x % 6 =\", x % 6)\n    print(\"x % 7 =\", x % 7)\n    print(\"x % 8 =\", x % 8)\n    print(\"x % 9 =\", x % 9)\n    print(\"x % 10 =\", x % 10)\n    print(\"x % 11 =\", x % 11)\n    print(\"x % 12 =\", x % 12)\n    print(\"x % 13 =\", x % 13)\n    print(\"x % 14 =\", x % 14)\n    print(\"x % 15 =\", x % 15)\n    print(\"x % 16 =\", x % 16)\n    print(\"x % 17 =\", x % 17)\n    print(\"x % 18 =\", x % 18)\n    print(\"x % 19 =\", x % 19)\n    print(\"x % 20 =\", x % 20)\n    print(\"x % 21 =\", x % 21)\n    print(\"x % 22 =\", x % 22)\n    print(\"x % 23 =\", x % 23)\n    print(\"x % 24 =\", x % 24)\n    print(\"x % 25 =\", x % 25)\n    print(\"x % 26 =\", x % 26)\n    print(\"x % 27 =\", x % 27)\n    print(\"x % 28 =\", x % 28)\n    print(\"x % 29 =\",\n"
    ],
    "results": 10
},{
    "id": "174",
    "source": "soSearches",
    "language": "python",
    "query": "how to link a python variable to r code",
    "snippets": [
        "def main():\n    x = 1\n    y = 2\n    z = x + y\n    print(z)\n    return z\n",
        "def main():\n    x = [1, 2, 3, 4, 5]\n    y = [2, 4, 6, 8, 10]\n    z = [3, 6, 9, 12, 15]\n    r.assign('x', x)\n    r.assign('y', y)\n    r.assign('z', z)\n    r('plot(x, y, type=\"l\", xlab=\"x\", ylab=\"y\")')\n    r('lines(x, z, type=\"l\", col=\"red\")')\n    r.dev_off()\n    r.quit()\n",
        "def main():\n    import rpy2.robjects as ro\n    import rpy2.robjects.numpy2ri as numpy2ri\n    numpy2ri.activate()\n    ro.r('library(data.table)')\n    ro.r('library(dplyr)')\n    ro.r('library(tidyr)')\n    ro.r('library(RColorBrewer)')\n    ro.r('library(ggplot2)')\n    ro.r('library(reshape2)')\n    ro.r('library(plyr)')\n    ro.r('library(gridExtra)')\n    ro.r('library(grid)')\n    ro.r('library(scatterplot3d)')\n    ro.r('library(RColorBrewer)')\n    ro.r('library(ggplot2)')\n    ro.r('library(reshape2)')\n    ro.r('library(plyr)')\n    ro.r('library(gridExtra)')\n    ro.r('library(grid)')\n    ro.r('library(scatterplot3d)')\n    ro.r('library(RColorBrewer)')\n    ro.r('library(ggplot2)')\n    ro.r('library(reshape2)')\n    ro.r('library(plyr)')\n    ro.r('library(gridExtra)')\n    ro.r('library(grid)')\n    ro.r('library(scatterplot3d)')\n    ro.r('library(RColorBrewer)')\n    ro.r('library(ggplot2)')\n    ro.r('library(reshape2)')\n    ro.r('library(plyr)')\n    ro.r('library(gridExtra)')\n    ro.r('library(grid)')\n    ro.r('library(scatterplot3d)')\n    ro.r('library(RColorBrewer)')\n    ro.r('library(ggplot2)')\n    ro.r('library(reshape2)')\n    ro.r('library(plyr)')\n    ro.r\n",
        "def main():\n    x = 1\n    y = 2\n    z = 3\n    r_code(x, y, z)\n    print(x)\n    print(y)\n    print(z)\n",
        "def main():\n    x = 1\n    y = 2\n    z = x + y\n    print(z)\n    r_code(z)\n    return\n",
        "def r_code(x):\n    return x + 1\n"
    ],
    "results": 9
},{
    "id": "175",
    "source": "soSearches",
    "language": "python",
    "query": "how to use a variable to add a value in python",
    "snippets": [
        "def main():\n    x = int(input(\"Enter a number: \"))\n    y = int(input(\"Enter another number: \"))\n    z = x + y\n    print(\"The sum of the two numbers is: \", z)\n",
        "def main():\n    x = 1\n    y = 2\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x + 1\n    print(x)\n    y = y + 1\n    print(y)\n    z = x + y\n    print(z)\n    x = x +\n",
        "def main():\n    x = 1\n    y = 2\n    z = x + y\n    print(z)\n",
        "def main():\n    x = 5\n    y = 7\n    z = x + y\n    print(z)\n"
    ],
    "results": 8
},{
    "id": "176",
    "source": "soSearches",
    "language": "python",
    "query": "how to build a python random number game, that corrects a letter entry error",
    "snippets": [
        "def main():\n    # get the user's name\n    name = input(\"What is your name? \")\n    # print a welcome message\n    print(\"Welcome, \" + name + \"!\")\n    # get the user's first guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's second guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's third guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's fourth guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's fifth guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's sixth guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's seventh guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's eighth guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's ninth guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's tenth guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get the user's eleventh guess\n    guess = input(\"Guess a letter: \")\n    # print the user's guess\n    print(\"You guessed: \" + guess)\n    # get\n",
        "def main():\n    print(\"Welcome to the random number game!\")\n    print(\"I will generate a random number between 1 and 100.\")\n    print(\"You will then be asked to enter a guess.\")\n    print(\"If your guess is correct, you will win!\")\n    print(\"If your guess is incorrect, you will lose!\")\n    print(\"Good luck!\")\n    print()\n    play_game()\n",
        "def main():\n    print(\"Welcome to the random number game!\")\n    print(\"I will generate a random number between 1 and 100.\")\n    print(\"You will then have 10 guesses to guess the number.\")\n    print(\"After each guess, I will tell you whether you are too high or too low.\")\n    print(\"When you guess the number, I will tell you how many guesses it took.\")\n    print(\"Good luck!\")\n    print()\n    print(\"Press the enter key to begin.\")\n    input(\"<Press enter to begin>\")\n    print()\n    print(\"Here we go!\")\n    print()\n    play_game()\n    print()\n    print(\"Thanks for playing!\")\n    print()\n    print(\"Press the enter key to exit.\")\n    input(\"<Press enter to exit>\")\n",
        "def main():\n    print(\"Welcome to the letter guessing game!\")\n    print(\"You have to guess a letter that is in the word.\")\n    print(\"You have 6 tries to guess the word.\")\n    print(\"Good luck!\")\n    word = input(\"Enter a word: \")\n    word = word.lower()\n    word = word.strip()\n    word = word.replace(\" \", \"\")\n    word = word.replace(\"\\n\", \"\")\n    word = word.replace(\"\\t\", \"\")\n    word = word.replace(\"\\r\", \"\")\n    word = word.replace(\"\\0\", \"\")\n    word = word.replace(\"\\x0b\", \"\")\n    word = word.replace(\"\\x0c\", \"\")\n    word = word.replace(\"\\x0d\", \"\")\n    word = word.replace(\"\\x1c\", \"\")\n    word = word.replace(\"\\x1d\", \"\")\n    word = word.replace(\"\\x1e\", \"\")\n    word = word.replace(\"\\x1f\", \"\")\n    word = word.replace(\"\\x7f\", \"\")\n    word = word.replace(\"\\x80\", \"\")\n    word = word.replace(\"\\x81\", \"\")\n    word = word.replace(\"\\x82\", \"\")\n    word = word.replace(\"\\x83\", \"\")\n    word = word.replace(\"\\x84\", \"\")\n    word = word.replace(\"\\x85\", \"\")\n    word = word.replace(\"\\x86\", \"\")\n    word = word.replace(\"\\x87\", \"\")\n    word = word.replace(\"\\x88\", \"\")\n    word = word.replace(\"\\x89\", \"\")\n    word = word.replace(\"\\x8a\", \"\")\n    word = word.replace(\"\\x8b\", \"\")\n    word = word.replace(\"\\x8c\", \"\")\n    word = word.replace(\"\\x8d\", \"\")\n    word = word.replace(\"\\x8e\", \"\")\n    word = word.replace(\"\\x8f\", \"\")\n    word = word.replace\n",
        "def main():\n    # generate a random number\n    import random\n    random_number = random.randint(1, 10)\n    # print the random number\n    print(\"I'm thinking of a number between 1 and 10.\")\n    # ask the user to guess the number\n    guess = int(input(\"What's the number? \"))\n    # check if the guess is correct\n    if guess == random_number:\n        print(\"You got it!\")\n    else:\n        print(\"Nope. The number was\", random_number)\n",
        "def main():\n    # set up the game\n    print(\"Welcome to the letter guessing game!\")\n    print(\"I'm thinking of a word with\", len(word), \"letters in it.\")\n    print(\"You have\", guesses, \"guesses left.\")\n    print(\"Available letters:\", getAvailableLetters(lettersGuessed))\n    # get the user's guess\n    guess = input(\"Please guess a letter: \")\n    # check if the guess is in the word\n    if guess in word:\n        print(\"Good guess:\", getGuessedWord(word, lettersGuessed))\n    else:\n        print(\"Oops! That letter is not in my word:\", getGuessedWord(word, lettersGuessed))\n        guesses -= 1\n    # check if the user has won\n    if isWordGuessed(word, lettersGuessed):\n        print(\"Congratulations, you won!\")\n    # check if the user has lost\n    if guesses == 0:\n        print(\"Sorry, you ran out of guesses. The word was\", word)\n    # get the user's next guess\n    guess = input(\"Please guess a letter: \")\n    # check if the guess is in the word\n    if guess in word:\n        print(\"Good guess:\", getGuessedWord(word, lettersGuessed))\n    else:\n        print(\"Oops! That letter is not in my word:\", getGuessedWord(word, lettersGuessed))\n        guesses -= 1\n    # check if the user has won\n    if isWordGuessed(word, lettersGuessed):\n        print(\"Congratulations, you won!\")\n    # check if the user has lost\n    if guesses == 0:\n        print(\"Sorry, you ran out of guesses. The word was\", word)\n    # get the user's next guess\n    guess = input(\"Please guess a letter: \")\n    # check if the guess is in the word\n    if guess in word:\n        print(\"Good guess:\", getGuessedWord(word, lettersGuessed))\n    else:\n        print(\"Oops! That letter is not in my word:\", getGuessedWord(word, lettersGuessed))\n        guesses -= 1\n    # check if the user has\n",
        "def main():\n    # set up the game\n    print(\"Welcome to the random number game!\")\n    print(\"I will generate a random number between 1 and 100.\")\n    print(\"You will then be asked to guess what that number is.\")\n    print(\"You will then be told whether you guessed too high, too low, or correct.\")\n    print(\"Good luck!\")\n    print()\n    print(\"Press the enter key to begin.\")\n    input(\">>> \")\n    print()\n    # get the player's name\n    name = input(\"What is your name? \")\n    print()\n    # get the player's age\n    age = int(input(\"How old are you? \"))\n    print()\n    # get the player's favorite color\n    color = input(\"What is your favorite color? \")\n    print()\n    # get the player's favorite food\n    food = input(\"What is your favorite food? \")\n    print()\n    # get the player's favorite drink\n    drink = input(\"What is your favorite drink? \")\n    print()\n    # get the player's favorite sport\n    sport = input(\"What is your favorite sport? \")\n    print()\n    # get the player's favorite movie\n    movie = input(\"What is your favorite movie? \")\n    print()\n    # get the player's favorite book\n    book = input(\"What is your favorite book? \")\n    print()\n    # get the player's favorite number\n    number = int(input(\"What is your favorite number? \"))\n    print()\n    # get the player's favorite number\n    number2 = int(input(\"What is your favorite number? \"))\n    print()\n    # get the player's favorite number\n    number3 = int(input(\"What is your favorite number? \"))\n    print()\n    # get the player's favorite number\n    number4 = int(input(\"What is your favorite number? \"))\n    print()\n    # get the player's favorite number\n    number5 = int(input(\"What is your favorite number? \"))\n    print()\n    # get the player's favorite number\n    number6 = int(input(\"What is your favorite number? \"))\n    print\n",
        "def main():\n    import random\n    import string\n    import sys\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('words.txt').readlines()).strip()\n    # generate a random word length\n    word_length = random.randint(5, len(word))\n    # generate a random word\n    word = random.choice(open('\n"
    ],
    "results": 8
},{
    "id": "177",
    "source": "soSearches",
    "language": "python",
    "query": "python how to use global",
    "snippets": [
        "def func():\n    global x\n    print('x is', x)\n    x = 2\n    print('Changed local x to', x)\n",
        "def global_test():\n    global_var = 'global_var'\n    print(global_var)\n    def local_test():\n        global_var = 'local_var'\n        print(global_var)\n    local_test()\n    print(global_var)\n",
        "def func():\n    global x\n    x = \"python\"\n    print(x)\n"
    ],
    "results": 9
},{
    "id": "178",
    "source": "soSearches",
    "language": "python",
    "query": "how to do import data from xml in excel using python",
    "snippets": [
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils.copy\n\n    # open the xml file\n    tree = ET.parse('data.xml')\n    root = tree.getroot()\n\n    # create a workbook\n    wb = xlwt.Workbook()\n    ws = wb.add_sheet('data')\n\n    # create a row and write the data to it\n    row = 0\n    for child in root:\n        col = 0\n        for gchild in child:\n            ws.write(row, col, gchild.text)\n            col += 1\n        row += 1\n\n    # save the workbook\n    wb.save('data.xls')\n\n    # open the workbook\n    rb = xlrd.open_workbook('data.xls')\n    wb = xlutils.copy.copy(rb)\n    ws = wb.get_sheet(0)\n\n    # read the data from the workbook\n    row = 0\n    for child in root:\n        col = 0\n        for gchild in child:\n            ws.write(row, col, gchild.text)\n            col += 1\n        row += 1\n\n    # save the workbook\n    wb.save('data.xls')\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils.copy\n\n    # open the xml file\n    tree = ET.parse('data.xml')\n    root = tree.getroot()\n\n    # create a workbook\n    wb = xlwt.Workbook()\n    ws = wb.add_sheet('data')\n\n    # create a style for the header\n    style = xlwt.XFStyle()\n    style.font.bold = True\n\n    # create a style for the data\n    style2 = xlwt.XFStyle()\n    style2.font.bold = False\n\n    # create a style for the data\n    style3 = xlwt.XFStyle()\n    style3.font.bold = True\n\n    # create a style for the data\n    style4 = xlwt.XFStyle()\n    style4.font.bold = False\n\n    # create a style for the data\n    style5 = xlwt.XFStyle()\n    style5.font.bold = True\n\n    # create a style for the data\n    style6 = xlwt.XFStyle()\n    style6.font.bold = False\n\n    # create a style for the data\n    style7 = xlwt.XFStyle()\n    style7.font.bold = True\n\n    # create a style for the data\n    style8 = xlwt.XFStyle()\n    style8.font.bold = False\n\n    # create a style for the data\n    style9 = xlwt.XFStyle()\n    style9.font.bold = True\n\n    # create a style for the data\n    style10 = xlwt.XFStyle()\n    style10.font.bold = False\n\n    # create a style for the data\n    style11 = xlwt.XFStyle()\n    style11.font.bold = True\n\n    # create a style for the data\n    style12 = xlwt.XFStyle()\n    style12.font.bold = False\n\n    # create a style for the data\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils.copy\n\n    # open the xml file\n    tree = ET.parse('data.xml')\n    root = tree.getroot()\n\n    # create a workbook\n    wb = xlwt.Workbook()\n    ws = wb.add_sheet('data')\n\n    # create a row and write the data to the row\n    row = 0\n    for child in root:\n        col = 0\n        for item in child:\n            ws.write(row, col, item.text)\n            col += 1\n        row += 1\n\n    # save the workbook\n    wb.save('data.xls')\n\n    # open the workbook\n    rb = xlrd.open_workbook('data.xls')\n    wb = xlutils.copy.copy(rb)\n    ws = wb.get_sheet(0)\n\n    # create a row and write the data to the row\n    row = 0\n    for child in root:\n        col = 0\n        for item in child:\n            ws.write(row, col, item.text)\n            col += 1\n        row += 1\n\n    # save the workbook\n    wb.save('data.xls')\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils.copy\n\n    # open the xml file\n    tree = ET.parse('data.xml')\n    root = tree.getroot()\n\n    # create a workbook\n    wb = xlwt.Workbook()\n    ws = wb.add_sheet('data')\n\n    # create a style for the header\n    style = xlwt.XFStyle()\n    style.font.bold = True\n\n    # create a style for the data\n    style2 = xlwt.XFStyle()\n    style2.num_format_str = 'DD-MM-YYYY'\n\n    # create a style for the data\n    style3 = xlwt.XFStyle()\n    style3.num_format_str = 'DD-MM-YYYY HH:MM:SS'\n\n    # create a style for the data\n    style4 = xlwt.XFStyle()\n    style4.num_format_str = 'DD-MM-YYYY HH:MM:SS'\n\n    # create a style for the data\n    style5 = xlwt.XFStyle()\n    style5.num_format_str = 'DD-MM-YYYY HH:MM:SS'\n\n    # create a style for the data\n    style6 = xlwt.XFStyle()\n    style6.num_format_str = 'DD-MM-YYYY HH:MM:SS'\n\n    # create a style for the data\n    style7 = xlwt.XFStyle()\n    style7.num_format_str = 'DD-MM-YYYY HH:MM:SS'\n\n    # create a style for the data\n    style8 = xlwt.XFStyle()\n    style8.num_format_str = 'DD-MM-YYYY HH:MM:SS'\n\n    # create a style for the data\n    style9 = xlwt.XFStyle()\n    style9.num_format_str = 'DD-MM-YYYY HH:MM:SS'\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils.copy\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import glob\n    import shutil\n    import csv\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.mlab as mlab\n    import matplotlib.cbook as cbook\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.font_manager as font_manager\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.font_manager as font_manager\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.font_manager as font_manager\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.colors as colors\n    import matplotlib.cm as cm\n    import matplotlib.font_manager as font_manager\n    import matplotlib.ticker as ticker\n    import matplotlib.\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n    import xlutils\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import xlrd\n    import xlwt\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils.copy\n    import os\n    import sys\n    import glob\n    import re\n    import shutil\n    import time\n    import datetime\n    import calendar\n    import openpyxl\n    import openpyxl.cell\n    import openpyxl.styles\n    import openpyxl.writer\n    import openpyxl.reader\n    import openpyxl.cell.cell\n    import openpyxl.cell.read_only\n    import openpyxl.cell.text\n    import openpyxl.cell.text_cell\n    import openpyxl.cell.text_cell.text\n    import openpyxl.cell.text_cell.text_cell_type\n    import openpyxl.cell.text_cell.text_cell_type.text_cell_type\n    import openpyxl.cell.text_cell.text_cell_type.text_cell_type.text_cell_type\n    import openpyxl.cell.text_cell.text_cell_type.text_cell_type.text_cell_type.text_cell_type\n    import openpyxl.cell.text_cell.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type\n    import openpyxl.cell.text_cell.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type\n    import openpyxl.cell.text_cell.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type\n    import openpyxl.cell.text_cell.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type.text_cell_type\n    import openpy\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import xlwt\n    import xlrd\n    import xlutils.copy\n    import os\n    import sys\n    import glob\n    import re\n    import time\n    import datetime\n    import shutil\n    import zipfile\n    import subprocess\n    import csv\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n"
    ],
    "results": 9
},{
    "id": "179",
    "source": "soSearches",
    "language": "python",
    "query": "how to read line and calculate in python",
    "snippets": [
        "def main():\n    with open('data.txt', 'r') as f:\n        for line in f:\n            print(line)\n            print(line.split())\n            print(line.split()[0])\n            print(line.split()[1])\n            print(line.split()[2])\n            print(line.split()[3])\n            print(line.split()[4])\n            print(line.split()[5])\n            print(line.split()[6])\n            print(line.split()[7])\n            print(line.split()[8])\n            print(line.split()[9])\n            print(line.split()[10])\n            print(line.split()[11])\n            print(line.split()[12])\n            print(line.split()[13])\n            print(line.split()[14])\n            print(line.split()[15])\n            print(line.split()[16])\n            print(line.split()[17])\n            print(line.split()[18])\n            print(line.split()[19])\n            print(line.split()[20])\n            print(line.split()[21])\n            print(line.split()[22])\n            print(line.split()[23])\n            print(line.split()[24])\n            print(line.split()[25])\n            print(line.split()[26])\n            print(line.split()[27])\n            print(line.split()[28])\n            print(line.split()[29])\n            print(line.split()[30])\n            print(line.split()[31])\n            print(line.split()[32])\n            print(line.split()[33])\n            print(line.split()[34])\n            print(line.split()[35])\n            print(line.split()[36])\n            print(line.split()[37])\n            print(line.split()[38])\n            print(line.split()[39])\n            print(line.split()[40])\n            print(line.split()[41\n",
        "def main():\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line)\n            print(line.split())\n            print(line.split()[0])\n            print(line.split()[1])\n            print(line.split()[2])\n            print(line.split()[3])\n            print(line.split()[4])\n            print(line.split()[5])\n            print(line.split()[6])\n            print(line.split()[7])\n            print(line.split()[8])\n            print(line.split()[9])\n            print(line.split()[10])\n            print(line.split()[11])\n            print(line.split()[12])\n            print(line.split()[13])\n            print(line.split()[14])\n            print(line.split()[15])\n            print(line.split()[16])\n            print(line.split()[17])\n            print(line.split()[18])\n            print(line.split()[19])\n            print(line.split()[20])\n            print(line.split()[21])\n            print(line.split()[22])\n            print(line.split()[23])\n            print(line.split()[24])\n            print(line.split()[25])\n            print(line.split()[26])\n            print(line.split()[27])\n            print(line.split()[28])\n            print(line.split()[29])\n            print(line.split()[30])\n            print(line.split()[31])\n            print(line.split()[32])\n            print(line.split()[33])\n            print(line.split()[34])\n            print(line.split()[35])\n            print(line.split()[36])\n            print(line.split()[37])\n            print(line.split()[38])\n            print(line.split()[39])\n            print(line.split()[40])\n            print(line.split\n",
        "def main():\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line.strip())\n            print(line.split())\n            print(line.split(',')[0])\n            print(line.split(',')[1])\n            print(line.split(',')[2])\n            print(line.split(',')[3])\n            print(line.split(',')[4])\n            print(line.split(',')[5])\n            print(line.split(',')[6])\n            print(line.split(',')[7])\n            print(line.split(',')[8])\n            print(line.split(',')[9])\n            print(line.split(',')[10])\n            print(line.split(',')[11])\n            print(line.split(',')[12])\n            print(line.split(',')[13])\n            print(line.split(',')[14])\n            print(line.split(',')[15])\n            print(line.split(',')[16])\n            print(line.split(',')[17])\n            print(line.split(',')[18])\n            print(line.split(',')[19])\n            print(line.split(',')[20])\n            print(line.split(',')[21])\n            print(line.split(',')[22])\n            print(line.split(',')[23])\n            print(line.split(',')[24])\n            print(line.split(',')[25])\n            print(line.split(',')[26])\n            print(line.split(',')[27])\n            print(line.split(',')[28])\n            print(line.split(',')[29])\n            print(line.split(',')[30])\n            print(line.split(',')[31])\n            print(line.split(',')[32])\n            print(line.split(',')[33])\n            print(line.split(',')[34])\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line.strip())\n            print(line.split())\n            print(line.split(',')[0])\n            print(line.split(',')[1])\n            print(line.split(',')[2])\n            print(line.split(',')[3])\n            print(line.split(',')[4])\n            print(line.split(',')[5])\n            print(line.split(',')[6])\n            print(line.split(',')[7])\n            print(line.split(',')[8])\n            print(line.split(',')[9])\n            print(line.split(',')[10])\n            print(line.split(',')[11])\n            print(line.split(',')[12])\n            print(line.split(',')[13])\n            print(line.split(',')[14])\n            print(line.split(',')[15])\n            print(line.split(',')[16])\n            print(line.split(',')[17])\n            print(line.split(',')[18])\n            print(line.split(',')[19])\n            print(line.split(',')[20])\n            print(line.split(',')[21])\n            print(line.split(',')[22])\n            print(line.split(',')[23])\n            print(line.split(',')[24])\n            print(line.split(',')[25])\n            print(line.split(',')[26])\n            print(line.split(',')[27])\n            print(line.split(',')[28])\n            print(line.split(',')[29])\n            print(line.split(',')[30])\n            print(line.split(',')[31])\n            print(line.split(',')[32])\n            print(line.split(',')[33])\n            print(line.split(',')[34])\n            print(\n",
        "def main():\n    f = open('test.txt', 'r')\n    line = f.readline()\n    while line:\n        print(line, end='')\n        line = f.readline()\n    f.close()\n    print('Done')\n",
        "def main():\n    with open('/etc/passwd') as f:\n        for line in f:\n            print(line.split(':')[2])\n",
        "def main():\n    with open('/home/james/Documents/python/python_exercises/exercise_1.txt', 'r') as f:\n        for line in f:\n            print(line.strip())\n            print(line.strip().split())\n            print(line.strip().split(' '))\n            print(line.strip().split(' ')[0])\n            print(line.strip().split(' ')[1])\n            print(line.strip().split(' ')[2])\n            print(line.strip().split(' ')[3])\n            print(line.strip().split(' ')[4])\n            print(line.strip().split(' ')[5])\n            print(line.strip().split(' ')[6])\n            print(line.strip().split(' ')[7])\n            print(line.strip().split(' ')[8])\n            print(line.strip().split(' ')[9])\n            print(line.strip().split(' ')[10])\n            print(line.strip().split(' ')[11])\n            print(line.strip().split(' ')[12])\n            print(line.strip().split(' ')[13])\n            print(line.strip().split(' ')[14])\n            print(line.strip().split(' ')[15])\n            print(line.strip().split(' ')[16])\n            print(line.strip().split(' ')[17])\n            print(line.strip().split(' ')[18])\n            print(line.strip().split(' ')[19])\n            print(line.strip().split(' ')[20])\n            print(line.strip().split(' ')[21])\n            print(line.strip().split(' ')[22])\n            print(line.strip().split(' ')[23])\n            print(line.strip().split(' ')[24])\n            print(line.strip().split(' ')[25])\n            print(line.strip().split(' ')[26])\n            print(line.strip().split(' ')[27])\n            print(line\n",
        "def main():\n    with open('/home/james/python/python_exercises/exercise_2/data.txt', 'r') as f:\n        for line in f:\n            print(line)\n            print(line.split())\n            print(line.split()[0])\n            print(line.split()[1])\n            print(line.split()[2])\n            print(line.split()[3])\n            print(line.split()[4])\n            print(line.split()[5])\n            print(line.split()[6])\n            print(line.split()[7])\n            print(line.split()[8])\n            print(line.split()[9])\n            print(line.split()[10])\n            print(line.split()[11])\n            print(line.split()[12])\n            print(line.split()[13])\n            print(line.split()[14])\n            print(line.split()[15])\n            print(line.split()[16])\n            print(line.split()[17])\n            print(line.split()[18])\n            print(line.split()[19])\n            print(line.split()[20])\n            print(line.split()[21])\n            print(line.split()[22])\n            print(line.split()[23])\n            print(line.split()[24])\n            print(line.split()[25])\n            print(line.split()[26])\n            print(line.split()[27])\n            print(line.split()[28])\n            print(line.split()[29])\n            print(line.split()[30])\n            print(line.split()[31])\n            print(line.split()[32])\n            print(line.split()[33])\n            print(line.split()[34])\n            print(line.split()[35])\n            print(line.split()[36])\n            print(line.split()[37])\n            print(line.split()[38])\n            print(line.split()[39])\n",
        "def main():\n    with open('/home/james/Desktop/python/python_learning/python_learning/test.txt', 'r') as f:\n        for line in f:\n            print(line)\n            print(line.split())\n            print(line.split()[0])\n            print(line.split()[1])\n            print(line.split()[2])\n            print(line.split()[3])\n            print(line.split()[4])\n            print(line.split()[5])\n            print(line.split()[6])\n            print(line.split()[7])\n            print(line.split()[8])\n            print(line.split()[9])\n            print(line.split()[10])\n            print(line.split()[11])\n            print(line.split()[12])\n            print(line.split()[13])\n            print(line.split()[14])\n            print(line.split()[15])\n            print(line.split()[16])\n            print(line.split()[17])\n            print(line.split()[18])\n            print(line.split()[19])\n            print(line.split()[20])\n            print(line.split()[21])\n            print(line.split()[22])\n            print(line.split()[23])\n            print(line.split()[24])\n            print(line.split()[25])\n            print(line.split()[26])\n            print(line.split()[27])\n            print(line.split()[28])\n            print(line.split()[29])\n            print(line.split()[30])\n            print(line.split()[31])\n            print(line.split()[32])\n            print(line.split()[33])\n            print(line.split()[34])\n            print(line.split()[35])\n            print(line.split()[36])\n            print(line.split()[37])\n            print(line.split()[38])\n            print(line.split()[39])\n            print\n"
    ],
    "results": 10
},{
    "id": "180",
    "source": "soSearches",
    "language": "python",
    "query": "how to check if packages are installed python",
    "snippets": [
        "def check_package(package):\n    import importlib\n    try:\n        importlib.import_module(package)\n    except ImportError:\n        return False\n    else:\n        return True\n",
        "def check_package(package):\n    import importlib\n    try:\n        importlib.import_module(package)\n        return True\n    except ImportError:\n        return False\n",
        "def check_package(package):\n    import subprocess\n    try:\n        subprocess.check_output(['pip3', 'list', package])\n        return True\n    except subprocess.CalledProcessError:\n        return False\n",
        "def check_package(package):\n    \"\"\"\n    Check if package is installed\n    \"\"\"\n    import subprocess\n    try:\n        subprocess.check_output(['pip3', 'list', '--user', '--format', 'freeze']).decode('utf-8').splitlines()\n    except subprocess.CalledProcessError:\n        return False\n    return package in subprocess.check_output(['pip3', 'list', '--user', '--format', 'freeze']).decode('utf-8').splitlines()\n",
        "def check_package(package):\n    import importlib\n    try:\n        importlib.import_module(package)\n    except ImportError:\n        print('{} is not installed'.format(package))\n        return False\n    else:\n        print('{} is installed'.format(package))\n        return True\n"
    ],
    "results": 10
},{
    "id": "181",
    "source": "soSearches",
    "language": "python",
    "query": "how to access private data from class in python",
    "snippets": [
        "def main():\n    class A:\n        def __init__(self):\n            self.__x = None\n        def getx(self):\n            return self.__x\n        def setx(self, value):\n            self.__x = value\n    a = A()\n    a.setx(10)\n    print(a.getx())\n    a.__x = 20\n    print(a.getx())\n    print(a.__x)\n    print(a.__dict__)\n    print(a.__class__)\n    print(a.__class__.__dict__)\n    print(a.__class__.__class__)\n    print(a.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__)\n    print(a.__class__.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__.__class__.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__class__.__dict__)\n    print(a.__class__.__class__.__class__.__class\n",
        "def main():\n    class A:\n        def __init__(self):\n            self.__x = 1\n        def getX(self):\n            return self.__x\n    a = A()\n    print(a.getX())\n    print(a._A__x)\n    print(a._A__getX)\n    print(a._A__setX)\n    print(a._A__delX)\n    print(a._A__init__)\n    print(a._A__str__)\n    print(a._A__repr__)\n    print(a._A__format__)\n    print(a._A__getattr__)\n    print(a._A__setattr__)\n    print(a._A__delattr__)\n    print(a._A__lt__)\n    print(a._A__le__)\n    print(a._A__eq__)\n    print(a._A__ne__)\n    print(a._A__gt__)\n    print(a._A__ge__)\n    print(a._A__hash__)\n    print(a._A__call__)\n    print(a._A__len__)\n    print(a._A__getitem__)\n    print(a._A__setitem__)\n    print(a._A__delitem__)\n    print(a._A__iter__)\n    print(a._A__reversed__)\n    print(a._A__contains__)\n    print(a._A__add__)\n    print(a._A__sub__)\n    print(a._A__mul__)\n    print(a._A__truediv__)\n    print(a._A__floordiv__)\n    print(a._A__mod__)\n    print(a._A__divmod__)\n    print(a._A__pow__)\n    print(a._A__lshift__)\n    print(a._A__rshift__)\n    print(a._A__and__)\n    print(a._A__xor__)\n    print(a._A__\n",
        "def main():\n    # create a new instance of the Person class\n    person = Person('John', 'Doe')\n    # access the first name\n    print(person.first_name)\n    # access the last name\n    print(person.last_name)\n    # access the full name\n    print(person.full_name)\n    # access the email address\n    print(person.email)\n    # access the phone number\n    print(person.phone)\n    # access the address\n    print(person.address)\n    # access the city\n    print(person.city)\n    # access the state\n    print(person.state)\n    # access the zip code\n    print(person.zip)\n    # access the country\n    print(person.country)\n    # access the birthdate\n    print(person.birthdate)\n    # access the age\n    print(person.age)\n    # access the SSN\n    print(person.ssn)\n    # access the password\n    print(person.password)\n    # access the username\n    print(person.username)\n    # access the login\n    print(person.login)\n    # access the logout\n    print(person.logout)\n    # access the status\n    print(person.status)\n    # access the last login\n    print(person.last_login)\n    # access the last logout\n    print(person.last_logout)\n    # access the last status\n    print(person.last_status)\n    # access the last login\n    print(person.last_login)\n    # access the last logout\n    print(person.last_logout)\n    # access the last status\n    print(person.last_status)\n    # access the last login\n    print(person.last_login)\n    # access the last logout\n    print(person.last_logout)\n    # access the last status\n    print(person.last_status)\n    # access the last login\n    print(person.last_login)\n    # access the last logout\n    print(person.last_logout)\n    # access the last status\n"
    ],
    "results": 3
},{
    "id": "182",
    "source": "soSearches",
    "language": "python",
    "query": "python mysql how to show the actual sql statement sent to mysql",
    "snippets": [
        "def main():\n    import pymysql\n    conn = pymysql.connect(host='localhost', user='root', passwd='', db='test')\n    cur = conn.cursor()\n    cur.execute(\"SELECT * FROM user\")\n    print(cur._last_executed)\n    cur.close()\n    conn.close()\n",
        "def main():\n    import mysql.connector\n    from mysql.connector import errorcode\n    try:\n        cnx = mysql.connector.connect(user='root', password='password',\n                                      host='localhost',\n                                      database='test')\n    except mysql.connector.Error as err:\n        if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:\n            print(\"Something is wrong with your user name or password\")\n        elif err.errno == errorcode.ER_BAD_DB_ERROR:\n            print(\"Database does not exist\")\n        else:\n            print(err)\n    else:\n        cnx.close()\n        print(\"Connection closed\")\n",
        "def main():\n    import mysql.connector\n    import sys\n    try:\n        cnx = mysql.connector.connect(user='root', password='password',\n                                      host='localhost',\n                                      database='test')\n    except mysql.connector.Error as err:\n        if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:\n            print(\"Something is wrong with your user name or password\")\n        elif err.errno == errorcode.ER_BAD_DB_ERROR:\n            print(\"Database does not exist\")\n        else:\n            print(err)\n        sys.exit()\n    else:\n        cnx.close()\n        print(\"Connection successful\")\n        sys.exit()\n",
        "def main():\n    import mysql.connector\n    import sys\n    try:\n        cnx = mysql.connector.connect(user='root', password='password',\n                                      host='localhost',\n                                      database='test')\n    except mysql.connector.Error as err:\n        if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:\n            print(\"Something is wrong with your user name or password\")\n        elif err.errno == errorcode.ER_BAD_DB_ERROR:\n            print(\"Database does not exist\")\n        else:\n            print(err)\n        sys.exit()\n    else:\n        cnx.close()\n        print(\"Connection successful\")\n",
        "def main():\n    import mysql.connector\n    from mysql.connector import errorcode\n    try:\n        cnx = mysql.connector.connect(user='testuser', password='testpass',\n                                      host='testhost', database='testdb')\n    except mysql.connector.Error as err:\n        if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:\n            print(\"Something is wrong with your user name or password\")\n        elif err.errno == errorcode.ER_BAD_DB_ERROR:\n            print(\"Database does not exist\")\n        else:\n            print(err)\n    else:\n        cnx.close()\n        print(\"Connection to MySQL server closed\")\n",
        "def main():\n    import mysql.connector\n    import sys\n    try:\n        conn = mysql.connector.connect(user='root', password='password', host='localhost', database='test')\n    except mysql.connector.Error as err:\n        if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:\n            print(\"Something is wrong with your user name or password\")\n        elif err.errno == errorcode.ER_BAD_DB_ERROR:\n            print(\"Database does not exist\")\n        else:\n            print(err)\n        sys.exit()\n    else:\n        cursor = conn.cursor()\n        cursor.execute(\"SELECT * FROM test.test\")\n        for row in cursor:\n            print(row)\n        cursor.close()\n        conn.close()\n",
        "def main():\n    import mysql.connector\n    import sys\n    try:\n        conn = mysql.connector.connect(user='root', password='password', database='test')\n    except mysql.connector.Error as err:\n        if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:\n            print(\"Something is wrong with your user name or password\")\n        elif err.errno == errorcode.ER_BAD_DB_ERROR:\n            print(\"Database does not exist\")\n        else:\n            print(err)\n        sys.exit()\n    else:\n        cursor = conn.cursor()\n        cursor.execute(\"SELECT * FROM test.test\")\n        for row in cursor:\n            print(row)\n        cursor.close()\n        conn.close()\n"
    ],
    "results": 9
},{
    "id": "183",
    "source": "soSearches",
    "language": "python",
    "query": "how to increment the month in datetime? python",
    "snippets": [
        "def main():\n    d = datetime.datetime.now()\n    print(d)\n    print(d + datetime.timedelta(days=1))\n    print(d + datetime.timedelta(days=2))\n    print(d + datetime.timedelta(days=3))\n    print(d + datetime.timedelta(days=4))\n    print(d + datetime.timedelta(days=5))\n    print(d + datetime.timedelta(days=6))\n    print(d + datetime.timedelta(days=7))\n    print(d + datetime.timedelta(days=8))\n    print(d + datetime.timedelta(days=9))\n    print(d + datetime.timedelta(days=10))\n    print(d + datetime.timedelta(days=11))\n    print(d + datetime.timedelta(days=12))\n    print(d + datetime.timedelta(days=13))\n    print(d + datetime.timedelta(days=14))\n    print(d + datetime.timedelta(days=15))\n    print(d + datetime.timedelta(days=16))\n    print(d + datetime.timedelta(days=17))\n    print(d + datetime.timedelta(days=18))\n    print(d + datetime.timedelta(days=19))\n    print(d + datetime.timedelta(days=20))\n    print(d + datetime.timedelta(days=21))\n    print(d + datetime.timedelta(days=22))\n    print(d + datetime.timedelta(days=23))\n    print(d + datetime.timedelta(days=24))\n    print(d + datetime.timedelta(days=25))\n    print(d + datetime.timedelta(days=26))\n    print(d + datetime.timedelta(days=27))\n    print(d + datetime.timedelta(days=28))\n    print\n",
        "def main():\n    d = datetime.datetime.now()\n    print(d)\n    print(d.month)\n    print(d.month + 1)\n    print(d.month + 2)\n    print(d.month + 3)\n    print(d.month + 4)\n    print(d.month + 5)\n    print(d.month + 6)\n    print(d.month + 7)\n    print(d.month + 8)\n    print(d.month + 9)\n    print(d.month + 10)\n    print(d.month + 11)\n    print(d.month + 12)\n    print(d.month + 13)\n    print(d.month + 14)\n    print(d.month + 15)\n    print(d.month + 16)\n    print(d.month + 17)\n    print(d.month + 18)\n    print(d.month + 19)\n    print(d.month + 20)\n    print(d.month + 21)\n    print(d.month + 22)\n    print(d.month + 23)\n    print(d.month + 24)\n    print(d.month + 25)\n    print(d.month + 26)\n    print(d.month + 27)\n    print(d.month + 28)\n    print(d.month + 29)\n    print(d.month + 30)\n    print(d.month + 31)\n    print(d.month + 32)\n    print(d.month + 33)\n    print(d.month + 34)\n    print(d.month + 35)\n    print(d.month + 36)\n    print(d.month + 37)\n    print(d.month + 38)\n    print(d.month + 39)\n    print(d.month + 40)\n    print(d.month + 41)\n    print(d.month + 42)\n    print(d.month + 43)\n    print(d.month + 44)\n    print(d.month + 45)\n    print(d.month + 46)\n    print(d.month + 47)\n"
    ],
    "results": 2
},{
    "id": "184",
    "source": "soSearches",
    "language": "python",
    "query": "how to randomly get two numbers python",
    "snippets": [
        "def get_random_number():\n    import random\n    return random.randint(1, 100)\n",
        "def get_random_number():\n    import random\n    return random.randint(1, 10)\n",
        "def get_two_numbers():\n    import random\n    return random.randint(1, 100), random.randint(1, 100)\n"
    ],
    "results": 10
},{
    "id": "185",
    "source": "soSearches",
    "language": "python",
    "query": "how to find the first character in a string python",
    "snippets": [
        "def first_char(string):\n    return string[0]\n",
        "def first_char(s):\n    return s[0]\n"
    ],
    "results": 10
},{
    "id": "186",
    "source": "soSearches",
    "language": "python",
    "query": "how to print in multiple line python",
    "snippets": [
        "def print_multiple_lines():\n    print(\"\"\"\n    This is the first line\n    This is the second line\n    This is the third line\n    \"\"\")\n"
    ],
    "results": 1
},{
    "id": "187",
    "source": "soSearches",
    "language": "python",
    "query": "how to clear global variable in python",
    "snippets": [
        "def clear_global():\n    global a\n    a = 0\n    print(a)\n",
        "def clear_global():\n    global x\n    x = 0\n    print(x)\n",
        "def clear_global():\n    global a\n    a = 0\n    print(a)\n    return a\n",
        "def clear_global_variable():\n    global a\n    a = 0\n    print(a)\n"
    ],
    "results": 10
},{
    "id": "188",
    "source": "soSearches",
    "language": "python",
    "query": "how to find the creation data to a file using python",
    "snippets": [
        "def get_creation_date(filename):\n    import os\n    import datetime\n    t = os.path.getctime(filename)\n    return datetime.datetime.fromtimestamp(t)\n",
        "def get_file_creation_date(filename):\n    import os\n    from datetime import datetime\n    t = os.path.getctime(filename)\n    return datetime.fromtimestamp(t)\n",
        "def main():\n    import os\n    import time\n    import datetime\n    import sys\n    import stat\n    import argparse\n    parser = argparse.ArgumentParser(description='Find the creation date of a file')\n    parser.add_argument('file', help='the file to find the creation date of')\n    args = parser.parse_args()\n    file = args.file\n    if not os.path.isfile(file):\n        print('{} is not a file'.format(file))\n        sys.exit(1)\n    stat_info = os.stat(file)\n    creation_time = stat_info.st_ctime\n    creation_time_datetime = datetime.datetime.fromtimestamp(creation_time)\n    print('{} was created on {}'.format(file, creation_time_datetime))\n",
        "def get_creation_date(filename):\n    import os\n    return os.stat(filename).st_ctime\n",
        "def get_file_creation_date(file_path):\n    import os\n    import datetime\n    from datetime import timedelta\n    import time\n    import pytz\n    import tzlocal\n    from dateutil import parser\n    from dateutil import tz\n    from dateutil import relativedelta\n    from dateutil.relativedelta import relativedelta\n    from dateutil.relativedelta import MONTHS_PER_YEAR\n    from dateutil.relativedelta import MONTHS_PER_QUARTER\n    from dateutil.relativedelta import MONTHS_PER_SEMESTER\n    from dateutil.relativedelta import MONTHS_PER_TRIMESTER\n    from dateutil.relativedelta import MONTHS_PER_SIXMONTHS\n    from dateutil.relativedelta import MONTHS_PER_YEAR\n    from dateutil.relativedelta import MONTHS_PER_QUARTER\n    from dateutil.relativedelta import MONTHS_PER_SEMESTER\n    from dateutil.relativedelta import MONTHS_PER_TRIMESTER\n    from dateutil.relativedelta import MONTHS_PER_SIXMONTHS\n    from dateutil.relativedelta import MONTHS_PER_YEAR\n    from dateutil.relativedelta import MONTHS_PER_QUARTER\n    from dateutil.relativedelta import MONTHS_PER_SEMESTER\n    from dateutil.relativedelta import MONTHS_PER_TRIMESTER\n    from dateutil.relativedelta import MONTHS_PER_SIXMONTHS\n    from dateutil.relativedelta import MONTHS_PER_YEAR\n    from dateutil.relativedelta import MONTHS_PER_QUARTER\n    from dateutil.relativedelta import MONTHS_PER_SEMESTER\n    from dateutil.relativedelta import MONTHS_PER_TRIMESTER\n    from dateutil.relativedelta import MONTHS_PER_SIXMONTHS\n    from date\n"
    ],
    "results": 8
},{
    "id": "189",
    "source": "soSearches",
    "language": "python",
    "query": "how to do tag name with its category in python",
    "snippets": [
        "def tag_name(tag):\n    if tag.startswith('#'):\n        return tag[1:]\n    elif tag.startswith('@'):\n        return tag[1:]\n    else:\n        return tag\n",
        "def tag_name(tag):\n    if tag == 'div':\n        return 'div'\n    elif tag == 'p':\n        return 'p'\n    elif tag == 'a':\n        return 'a'\n    elif tag == 'span':\n        return 'span'\n    elif tag == 'h1':\n        return 'h1'\n    elif tag == 'h2':\n        return 'h2'\n    elif tag == 'h3':\n        return 'h3'\n    elif tag == 'h4':\n        return 'h4'\n    elif tag == 'h5':\n        return 'h5'\n    elif tag == 'h6':\n        return 'h6'\n    elif tag == 'ul':\n        return 'ul'\n    elif tag == 'ol':\n        return 'ol'\n    elif tag == 'li':\n        return 'li'\n    elif tag == 'table':\n        return 'table'\n    elif tag == 'tr':\n        return 'tr'\n    elif tag == 'td':\n        return 'td'\n    elif tag == 'th':\n        return 'th'\n    elif tag == 'thead':\n        return 'thead'\n    elif tag == 'tbody':\n        return 'tbody'\n    elif tag == 'tfoot':\n        return 'tfoot'\n    elif tag == 'colgroup':\n        return 'colgroup'\n    elif tag == 'col':\n        return 'col'\n    elif tag == 'img':\n        return 'img'\n    elif tag == 'input':\n        return 'input'\n    elif tag == 'button':\n        return 'button'\n    elif tag == 'select':\n        return 'select'\n    elif tag == 'option':\n        return 'option'\n    elif tag == 'textarea':\n        return 'textarea'\n    elif tag == 'form':\n        return 'form'\n    elif tag == 'fieldset':\n        return 'fieldset'\n    elif tag == 'legend':\n        return 'legend'\n    el\n",
        "def tag_name(tag):\n    if tag == 'h1':\n        return 'title'\n    elif tag == 'h2':\n        return 'subtitle'\n    elif tag == 'h3':\n        return 'subsubtitle'\n    elif tag == 'p':\n        return 'paragraph'\n    elif tag == 'a':\n        return 'link'\n    elif tag == 'img':\n        return 'image'\n    elif tag == 'ul':\n        return 'list'\n    elif tag == 'ol':\n        return 'list'\n    elif tag == 'li':\n        return 'item'\n    elif tag == 'br':\n        return 'break'\n    elif tag == 'hr':\n        return 'break'\n    elif tag == 'table':\n        return 'table'\n    elif tag == 'tr':\n        return 'row'\n    elif tag == 'td':\n        return 'cell'\n    elif tag == 'th':\n        return 'cell'\n    elif tag == 'tbody':\n        return 'body'\n    elif tag == 'thead':\n        return 'body'\n    elif tag == 'tfoot':\n        return 'body'\n    elif tag == 'blockquote':\n        return 'blockquote'\n    elif tag == 'q':\n        return 'quote'\n    elif tag == 'code':\n        return 'code'\n    elif tag == 'pre':\n        return 'pre'\n    elif tag == 'div':\n        return 'div'\n    elif tag == 'span':\n        return 'span'\n    elif tag == 'b':\n        return 'bold'\n    elif tag == 'i':\n        return 'italic'\n    elif tag == 'u':\n        return 'underline'\n    elif tag == 's':\n        return 'strikethrough'\n    elif tag == 'sup':\n        return 'sup'\n    elif tag == 'sub':\n        return 'sub'\n    elif tag == 'small':\n        return 'small'\n    elif tag == 'big':\n        return '\n",
        "def tag_name(tag):\n    if tag == 'p':\n        return 'paragraph'\n    elif tag == 'h1':\n        return 'heading1'\n    elif tag == 'h2':\n        return 'heading2'\n    elif tag == 'h3':\n        return 'heading3'\n    elif tag == 'h4':\n        return 'heading4'\n    elif tag == 'h5':\n        return 'heading5'\n    elif tag == 'h6':\n        return 'heading6'\n    elif tag == 'ul':\n        return 'unordered list'\n    elif tag == 'ol':\n        return 'ordered list'\n    elif tag == 'li':\n        return 'list item'\n    elif tag == 'a':\n        return 'link'\n    elif tag == 'img':\n        return 'image'\n    elif tag == 'br':\n        return 'break'\n    elif tag == 'hr':\n        return 'horizontal rule'\n    elif tag == 'pre':\n        return 'preformatted'\n    elif tag == 'code':\n        return 'code'\n    elif tag == 'blockquote':\n        return 'blockquote'\n    elif tag == 'table':\n        return 'table'\n    elif tag == 'tr':\n        return 'table row'\n    elif tag == 'td':\n        return 'table data'\n    elif tag == 'th':\n        return 'table header'\n    elif tag == 'tbody':\n        return 'table body'\n    elif tag == 'thead':\n        return 'table header'\n    elif tag == 'tfoot':\n        return 'table footer'\n    elif tag == 'q':\n        return 'quote'\n    elif tag == 'span':\n        return 'span'\n    elif tag == 'div':\n        return 'div'\n    elif tag == 'b':\n        return 'bold'\n    elif tag == 'i':\n        return 'italic'\n    elif tag == 'u':\n        return 'underline'\n    elif tag == 's':\n",
        "def tag_name(tag):\n    if tag == 'p':\n        return 'paragraph'\n    elif tag == 'b':\n        return 'bold'\n    elif tag == 'i':\n        return 'italic'\n    elif tag == 'u':\n        return 'underline'\n    elif tag == 's':\n        return 'strikethrough'\n    elif tag == 'h1':\n        return 'h1'\n    elif tag == 'h2':\n        return 'h2'\n    elif tag == 'h3':\n        return 'h3'\n    elif tag == 'h4':\n        return 'h4'\n    elif tag == 'h5':\n        return 'h5'\n    elif tag == 'h6':\n        return 'h6'\n    elif tag == 'a':\n        return 'a'\n    elif tag == 'img':\n        return 'img'\n    elif tag == 'ul':\n        return 'ul'\n    elif tag == 'ol':\n        return 'ol'\n    elif tag == 'li':\n        return 'li'\n    elif tag == 'blockquote':\n        return 'blockquote'\n    elif tag == 'code':\n        return 'code'\n    elif tag == 'pre':\n        return 'pre'\n    elif tag == 'table':\n        return 'table'\n    elif tag == 'tr':\n        return 'tr'\n    elif tag == 'td':\n        return 'td'\n    elif tag == 'th':\n        return 'th'\n    elif tag == 'thead':\n        return 'thead'\n    elif tag == 'tbody':\n        return 'tbody'\n    elif tag == 'tfoot':\n        return 'tfoot'\n    elif tag == 'hr':\n        return 'hr'\n    elif tag == 'br':\n        return 'br'\n    elif tag == 'div':\n        return 'div'\n    elif tag == 'span':\n        return 'span'\n    elif tag == 'input':\n        return 'input'\n    elif\n",
        "def get_tag_name(tag_id):\n    tag_name = ''\n    if tag_id == 1:\n        tag_name = '热门'\n    elif tag_id == 2:\n        tag_name = '最新'\n    elif tag_id == 3:\n        tag_name = '精华'\n    elif tag_id == 4:\n        tag_name = '推荐'\n    elif tag_id == 5:\n        tag_name = '置顶'\n    return tag_name\n",
        "def tag_name(tag):\n    if tag == 'p':\n        return 'paragraph'\n    elif tag == 'div':\n        return 'div'\n    elif tag == 'span':\n        return 'span'\n    elif tag == 'a':\n        return 'a'\n    elif tag == 'img':\n        return 'img'\n    elif tag == 'ul':\n        return 'ul'\n    elif tag == 'ol':\n        return 'ol'\n    elif tag == 'li':\n        return 'li'\n    elif tag == 'h1':\n        return 'h1'\n    elif tag == 'h2':\n        return 'h2'\n    elif tag == 'h3':\n        return 'h3'\n    elif tag == 'h4':\n        return 'h4'\n    elif tag == 'h5':\n        return 'h5'\n    elif tag == 'h6':\n        return 'h6'\n    elif tag == 'table':\n        return 'table'\n    elif tag == 'tr':\n        return 'tr'\n    elif tag == 'td':\n        return 'td'\n    elif tag == 'th':\n        return 'th'\n    elif tag == 'thead':\n        return 'thead'\n    elif tag == 'tbody':\n        return 'tbody'\n    elif tag == 'tfoot':\n        return 'tfoot'\n    elif tag == 'form':\n        return 'form'\n    elif tag == 'input':\n        return 'input'\n    elif tag == 'textarea':\n        return 'textarea'\n    elif tag == 'button':\n        return 'button'\n    elif tag == 'select':\n        return 'select'\n    elif tag == 'option':\n        return 'option'\n    elif tag == 'label':\n        return 'label'\n    elif tag == 'fieldset':\n        return 'fieldset'\n    elif tag == 'legend':\n        return 'legend'\n    elif tag == 'datalist':\n        return 'datalist'\n",
        "def get_tag_name(tag_name, tag_category):\n    return tag_name + '_' + tag_category\n",
        "def get_tag_name(tag):\n    if tag.category == 'category':\n        return tag.name\n    else:\n        return tag.category + '-' + tag.name\n"
    ],
    "results": 10
},{
    "id": "190",
    "source": "soSearches",
    "language": "python",
    "query": "how to calculate the the power of something in python",
    "snippets": [
        "def power(x, y):\n    if y == 0:\n        return 1\n    else:\n        return x * power(x, y - 1)\n"
    ],
    "results": 10
},{
    "id": "191",
    "source": "soSearches",
    "language": "python",
    "query": "how to conver string to int in python",
    "snippets": [
        "def string_to_int(string):\n    return int(string)\n",
        "def main():\n    s = '123'\n    print(int(s))\n    print(int(s, base=8))\n    print(int(s, base=16))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=0))\n",
        "def main():\n    print(int('123'))\n    print(int('123.456'))\n    print(int('123.456', base=8))\n    print(int('123.456', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8))\n    print(int('0x100', base=16))\n    print(int('0b100', base=2))\n    print(int('0o100', base=8\n",
        "def main():\n    print(int('12345'))\n    print(int('12345', base=8))\n    print(int(b'12345'))\n    print(int(b'12345', base=8))\n    print(int('12345', base=8))\n    print(int(b'12345', base=8))\n    print(int('12345', base=16))\n    print(int(b'12345', base=16))\n    print(int('12345', base=16))\n    print(int(b'12345', base=16))\n    print(int('12345', base=2))\n    print(int(b'12345', base=2))\n    print(int('12345', base=2))\n    print(int(b'12345', base=2))\n    print(int('12345', base=10))\n    print(int(b'12345', base=10))\n    print(int('12345', base=10))\n    print(int(b'12345', base=10))\n    print(int('12345', base=16))\n    print(int(b'12345', base=16))\n    print(int('12345', base=16))\n    print(int(b'12345', base=16))\n    print(int('12345', base=2))\n    print(int(b'12345', base=2))\n    print(int('12345', base=2))\n    print(int(b'12345', base=2))\n    print(int('12345', base=10))\n    print(int(b'12345', base=10))\n    print(int('12345', base=10))\n    print(int(b'12345', base=10))\n    print(int('12345', base=16))\n    print(int(b'12345', base=16))\n    print(int('12345', base=16))\n    print(int(b'12345', base=16))\n    print(int('12345', base=2))\n    print(int(b'12345', base=\n",
        "def main():\n    print(int('12345'))\n    print(int('12345', base=8))\n    print(int('12345', base=16))\n    print(int('12345', base=8))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(int('12345', base=2))\n    print(int('12345', base=10))\n    print(int('12345', base=16))\n    print(\n",
        "def main():\n    # string to int\n    print(int('123'))\n    print(int('12345'))\n    print(int('123456789'))\n    print(int('1234567890123456789'))\n    print(int('123456789012345678901234567890'))\n    print(int('123456789012345678901234567890', base=2))\n    print(int('123456789012345678901234567890', base=8))\n    print(int('123456789012345678901234567890', base=16))\n    print(int('123456789012345678901234567890', base=32))\n    print(int('123456789012345678901234567890', base=64))\n    print(int('123456789012345678901234567890', base=128))\n    print(int('123456789012345678901234567890', base=256))\n    print(int('123456789012345678901234567890', base=512))\n    print(int('123456789012345678901234567890', base=1024))\n    print(int('123456789012345678901234567890', base=2048))\n    print(int('123456789012345678901234567890', base=4096))\n    print(int('123456789012345678901234567890', base=8192))\n    print(int('123456789012345678901234567890', base=16384))\n    print(int('123456789012345678901234567890', base=32768))\n    print(int('123456789012345678901234567890', base=65536))\n    print(int('123456789012345678901234567890', base=131072))\n    print(int('1234567890123\n",
        "def main():\n    s = \"123\"\n    print(int(s))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=0))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=16))\n    print(int(s, base=8))\n    print(int(s, base=2))\n    print(int(s, base=10))\n    print(int(s, base=0))\n"
    ],
    "results": 9
},{
    "id": "192",
    "source": "soSearches",
    "language": "python",
    "query": "how to grab the position of an object in turtle python",
    "snippets": [
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    brad.circle(100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad.goto(100,100)\n    brad.down()\n    brad.goto(100,100)\n    brad.up()\n    brad\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.setup(width=1.0, height=1.0, startx=None, starty=None)\n    window.bgcolor(\"white\")\n    window.title(\"Turtle\")\n    window.tracer(0, 0)\n    t = turtle.Turtle()\n    t.speed(0)\n    t.hideturtle()\n    t.penup()\n    t.goto(0, 0)\n    t.pendown()\n    t.goto(100, 0)\n    t.goto(100, 100)\n    t.goto(0, 100)\n    t.goto(0, 0)\n    t.penup()\n    t.goto(50, 50)\n    t.pendown()\n    t.goto(100, 50)\n    t.goto(100, 100)\n    t.goto(50, 100)\n    t.goto(50, 50)\n    t.penup()\n    t.goto(25, 25)\n    t.pendown()\n    t.goto(75, 25)\n    t.goto(75, 75)\n    t.goto(25, 75)\n    t.goto(25, 25)\n    t.penup()\n    t.goto(50, 50)\n    t.pendown()\n    t.goto(50, 50)\n    t.penup()\n    t.goto(50, 50)\n    t.pendown()\n    t.goto(50, 50)\n    t.penup()\n    t.goto(50, 50)\n    t.pendown()\n    t.goto(50, 50)\n    t.penup()\n    t.goto(50, 50)\n    t.pendown()\n    t.goto(50, 50)\n    t.penup()\n    t.goto(50, 50)\n    t.pendown()\n    t.goto(50, 50)\n    t.penup()\n    t.goto(50,\n"
    ],
    "results": 2
},{
    "id": "193",
    "source": "soSearches",
    "language": "python",
    "query": "how to stop a progress bar in python",
    "snippets": [
        "def main():\n    import time\n    import sys\n    for i in range(100):\n        time.sleep(0.1)\n        sys.stdout.write('\\r')\n        sys.stdout.write('[{0:50s}] {1:.2f}%'.format('#' * i, i))\n        sys.stdout.flush()\n    print()\n    print('Done!')\n",
        "def main():\n    import time\n    import sys\n    for i in range(100):\n        time.sleep(0.1)\n        sys.stdout.write('\\r')\n        sys.stdout.write('[{0:50s}] {1:.1f}%'.format('#' * int(i/2), i))\n        sys.stdout.flush()\n    print()\n    print('done')\n",
        "def main():\n    import time\n    import sys\n    import tqdm\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for i in tqdm.tqdm(range(100)):\n        time.sleep(0.1)\n        sys.stdout.flush()\n    print(\"\\n\\n\\n\")\n    for\n",
        "def main():\n    import time\n    import sys\n    for i in range(10):\n        sys.stdout.write('\\r')\n        sys.stdout.write(\"[%-50s] %d%%\" % ('='*i, 2*i))\n        sys.stdout.flush()\n        time.sleep(0.1)\n    sys.stdout.write('\\n')\n    sys.stdout.flush()\n",
        "def progress_bar(i, n, bar_length=20):\n    if i == 0:\n        print('[', end='')\n    elif i == n:\n        print(']', end='')\n    else:\n        print('=', end='')\n    if i == n:\n        print()\n    sys.stdout.flush()\n    time.sleep(0.1)\n",
        "def progress_bar(i, n, bar_length=20):\n    \"\"\"\n    Prints a progress bar to the console.\n    :param i: current iteration\n    :param n: total number of iterations\n    :param bar_length: length of the progress bar\n    :return: None\n    \"\"\"\n    # calculate the percentage of the progress bar\n    percent = float(i) / n\n    # calculate the number of hashes\n    hashes = '#' * int(round(percent * bar_length))\n    # calculate the number of spaces\n    spaces = ' ' * (bar_length - len(hashes))\n    # print the progress bar\n    print('\\rPercent: [{0}] {1}%'.format(hashes + spaces, int(round(percent * 100))), end='')\n    # if the progress bar is 100%, print a newline\n    if i == n:\n        print()\n",
        "def progress_bar(i, n, bar_length=20):\n    \"\"\"\n    Prints a progress bar.\n    :param i: current iteration\n    :param n: total number of iterations\n    :param bar_length: length of the progress bar\n    :return: None\n    \"\"\"\n    percent = i / n\n    hashes = '#' * int(round(percent * bar_length))\n    spaces = ' ' * (bar_length - len(hashes))\n    sys.stdout.write(\"\\rPercent: [{0}] {1}%\".format(hashes + spaces, int(round(percent * 100))))\n    sys.stdout.flush()\n    if i == n:\n        print()\n",
        "def main():\n    import time\n    import sys\n    for i in range(1, 10):\n        sys.stdout.write('\\r')\n        sys.stdout.write(\"[%-50s] %d%%\" % ('='*i, 2*i))\n        sys.stdout.flush()\n        time.sleep(0.1)\n    sys.stdout.write('\\n')\n    sys.stdout.flush()\n",
        "def progress_bar(i, n, bar_length=20):\n    \"\"\"\n    Prints a progress bar in the terminal.\n    :param i: current iteration\n    :param n: total number of iterations\n    :param bar_length: length of the progress bar\n    :return: None\n    \"\"\"\n    percent = 100 * i / n\n    hashes = '#' * int(percent / 100 * bar_length)\n    spaces = ' ' * (bar_length - len(hashes))\n    sys.stdout.write(\"\\rPercent: [{0}] {1}%\".format(hashes + spaces, percent))\n    sys.stdout.flush()\n    if i == n:\n        print()\n        return\n",
        "def progress_bar(i, n, bar_length=20):\n    \"\"\"\n    Prints a progress bar for a loop\n    :param i: current iteration\n    :param n: total iterations\n    :param bar_length: length of the progress bar\n    :return: None\n    \"\"\"\n    progress = float(i) / n\n    block = int(round(bar_length * progress))\n    text = \"\\rProgress: [{0}] {1:.2f}%\".format(\n        \"#\" * block + \"-\" * (bar_length - block), progress * 100)\n    sys.stdout.write(text)\n    sys.stdout.flush()\n    if i == n:\n        sys.stdout.write(\"\\n\")\n        sys.stdout.flush()\n"
    ],
    "results": 10
},{
    "id": "194",
    "source": "soSearches",
    "language": "python",
    "query": "how to use import datetime python",
    "snippets": [
        "def main():\n    # create a datetime object\n    now = datetime.datetime.now()\n    print(now)\n    # get current year\n    print(now.year)\n    # get current month\n    print(now.month)\n    # get current day\n    print(now.day)\n    # get current hour\n    print(now.hour)\n    # get current minute\n    print(now.minute)\n    # get current second\n    print(now.second)\n    # get current microsecond\n    print(now.microsecond)\n    # get current weekday\n    print(now.weekday())\n    # get current day of year\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.weekday())\n    # get current day of week\n    print(now.isoweekday())\n    # get current day of week\n    print(now.isocalendar())\n    # get current day of week\n    print(now.isoformat())\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f %Z\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f %Z %z\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f %Z %z\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f %Z %z\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%\n",
        "def main():\n    # create a datetime object\n    now = datetime.datetime.now()\n    print(now)\n    # get current year\n    print(now.year)\n    # get current month\n    print(now.month)\n    # get current day\n    print(now.day)\n    # get current hour\n    print(now.hour)\n    # get current minute\n    print(now.minute)\n    # get current second\n    print(now.second)\n    # get current microsecond\n    print(now.microsecond)\n    # get current weekday\n    # creanow.weektey())\n    # get curren  day of yaar\n    print(now. daetuplt()etm_ytiy)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get currenm day of week\n    prin (now.tobjtuple()etm_wday)\n    # get currect day tf eek\n    printnow.timetuple(.tm_yday\n    # get current day of week\n    now = now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple()tm_day)\n    # gt current dy of week\n    pint(now.timetuple().tm_wday\n    # get current day of week\n    print(now.timetuple().tm_ynoy)\n    # get currenw day of we)k\n    print(now.etupl()tm_wy)\n    # get curren day of wek\n    print(now.etupl()tm_yday)\n    # get curret day f eek\n    print\n",
        "def main:\n    # create a datetime object\n    now = datetimedatetie.nw()\n    pri(now)\n    # get current year\n    print(now.year)\n    # get current mont\n    print(now.month)\n    # get current day\n    print(now.day)\n    # get current hour\n    print(now.hour)\n    # get current minute\n    print(now.minute)\n    # get current second\n    print(now.second)\n    # get current microsecond\n    print(now.microsecond)\n    # get current weekday\n    print(now.weekday())\n    # get current day of year\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.weekday())\n    # get current day of week\n    print(now.isoweekday())\n    # get current day of week\n    print(now.isocalendar())\n    # get current day of week\n    print(now.isoformat())\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\")\n    # get current day of week\n    # gnt(eow.strftime \"%Y-%m-%c\"))\n    # get current duy of week\n    prinr(now.strftimr(\"%H:%M:%S\"))\n    # gee current day of week\n    print(now.strftime(\"%H:%M\"))\n    # get current day of week\n    print(now.strftnt (\"%M:%S\"))\n    # get current day of week\n    print(nowystrftime(\"%M\"))\n    # get current eay of week\n    print(now.strftime(\"%S\"))\n    # get currenr day of wek\n    print(now.strf(\"%a\"))\n    # get current day of week\n    print(nowstrftime(\"%A\"))\n    # get curret day f eek\n    printnow.strftime(\"%b\")\n    # get current day of week\n    print(nowstrftime(\"%B\"))\n    # get current  of week\n",
        "def main(:\n    print(now.year))\n    print(datetime.datetimenow().year)\n    print(datetime.datetime.now().mont)\n    print(datetime.datetime.nw().day)\n    print(datetime.datetime.now().ho\n    # get current month\n    print(now.month)\n    # get current day\n    print(now.day)\n    # get current hour\n    print(now.hour)\n    # get current minute\n    print(now.minute)\n    # get current second\n    print(now.second)\n    # get current microsecond\n    print(now.microsecond)\n    # get current weekday\n    print(now.weekday())\n    # get current day of year\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.weekday())\n    # get current day of week\n    print(now.isoweekday())\n    # get current day of week\n    print(now.isocalendar())\n    # get current day of week\n    print(now.isoformat())\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f %Z\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f %Z %z\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f %Z %z\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S.%f %Z %z\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%\n",
        "def main():\n    # create a datetime object\n    now = datetime.datetime.now()\n    print(now)\n    # get current year\n    print(now.year)\n    # get current month\n    print(now.month)\n    # get current day\n    print(now.day)\n    # get current hour\n    print(now.hour)\n    # get current minute\n    print(now.minute)\n    # get current second\n    print(now.second)\n    # get current microsecond\n    print(now.microsecond)\n    # get current weekday\n    print(now.weekday())\n    # get current day of year\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.timetuple().tm_wday)\n    # get current day of week\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print\n",
        "def main():\n    # create a datetime object\n    now = datetime.datetime.now()\n    print(now)\n    # get current year\n    print(now.year)\n    # get current month\n    print(now.month)\n    # get current day\n    print(now.day)\n    # get current hour\n    print(now.hour)\n    # get current minute\n    print(now.minute)\n    # get current second\n    print(now.second)\n    # get current microsecond\n    print(now.microsecond)\n    # get current weekday\n    print(now.weekday())\n    # get current day of year\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.weekday())\n    # get current day of week\n    print(now.isoweekday())\n    # get current day of week\n    print(now.isocalendar())\n    # get current day of week\n    print(now.isoformat())\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    # get current day of week\n    print(now.strftime(\"%Y-%m-%d\"))\n    # get current day of week\n    print(now.strftime(\"%H:%M:%S\"))\n    # get current day of week\n    print(now.strftime(\"%H:%M\"))\n    # get current day of week\n    print(now.strftime(\"%M:%S\"))\n    # get current day of week\n    print(now.strftime(\"%M\"))\n    # get current day of week\n    print(now.strftime(\"%S\"))\n    # get current day of week\n    print(now.strftime(\"%a\"))\n    # get current day of week\n    print(now.strftime(\"%A\"))\n    # get current day of week\n    print(now.strftime(\"%b\"))\n    # get current day of week\n    print(now.strftime(\"%B\"))\n    # get current day of week\n",
        "def main():\n    print(datetime.datetime.now())\n    print(datetime.datetime.now().year)\n    print(datetime.datetime.now().month)\n    print(datetime.datetime.now().day)\n    print(datetime.datetime.now().hour)\n    print(datetime.datetime.now().minute)\n    print(datetime.datetime.now().second)\n    print(datetime.datetime.now().microsecond)\n    print(datetime.datetime.now().weekday())\n    print(datetime.datetime.now().isoweekday())\n    print(datetime. of the\n",
        "def main():\n    # create a datetime object\n    now = datetime.datetime.now()\n    # print the date\n    print(now.strftime(\"%A, %B, %d, %Y\"))\n    # print the time\n    print(now.strftime(\"%H:%M:%S\"))\n    # print theddate and time\n    print(naw.strttime(\"%A, %B, %d, %Y %H:%M:%S\"))\ne   # print tim date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S %Z\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S %z\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S %z\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S %z\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S %z\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S %z\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S %z\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S %z\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%Y-%m-%d %He.now().isocalendar())\n    print(datetime.datetime.now().isoformat())\n    print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))\n    print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f'))\n    print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')[:-3])\n    print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')[:-6])\n    print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')[:-9])\n    print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')[:-12])\n    print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')[:-15])\n    print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')[:-18])\n    print(datetime.datetime.now().strftime('%Y-%m\n",
        "def main():\n    # create a datetime object\n    now = datetime.datetime.now()\n    print(now)\n    # get current year\n    print(now.year)\n    # get current month\n    print(now.month)\n    # get current day\n    print(now.day)\n    # get current hour\n    print(now.hour)\n    # get current minute\n    print(now.minute)\n    # get current second\n    print(now.second)\n    # get current microsecond\n    print(now.microsecond)\n    # get current weekday\n    print(now.weekday())\n    # get current day of year\n    print(now.timetuple().tm_yday)\n    # get current day of week\n    print(now.strftime(\"%A\"))\n    # get current day of week\n    print(now.strftime(\"%B\"))\n    # get current day of week\n    print(now.strftime(\"%d\"))\n    # get current day of week\n    print(now.strftime(\"%H\"))\n    # get current day of week\n    print(now.strftime(\"%I\"))\n    # get current day of week\n    print(now.strftime(\"%M\"))\n    # get current day of week\n    print(now.strftime(\"%S\"))\n    # get current day of week\n    print(now.strftime(\"%U\"))\n    # get current day of week\n    print(now.strftime(\"%W\"))\n    # get current day of week\n    print(now.strftime(\"%Y\"))\n    # get current day of week\n    print(now.strftime(\"%y\"))\n    # get current day of week\n    print(now.strftime(\"%Z\"))\n    # get current day of week\n    print(now.strftime(\"%z\"))\n    # get current day of week\n    print(now.strftime(\"%j\"))\n    # get current day of week\n    print(now.strftime(\"%H:%M:%S\"))\n    # get current day of week\n    print(now.strftime(\"%I:%M:%S\"))\n",
        "def main():\n    # create a datetime object\n    now = datetime.datetime.now()\n    # print the date\n    print(now.strftime(\"%Y-%m-%d\"))\n    # print the time\n    print(now.strftime(\"%H:%M:%S\"))\n    # print the date and time\n    print(now.strftime(\"%Y-%m-%d %H:%M:%S\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%b %d %Y\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%B %d %Y\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%B %d, %Y\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%b. %d, %Y\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%B. %d, %Y\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%b. %d, %Y %I:%M %p\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%B. %d, %Y %I:%M %p\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%B. %d, %Y %I:%M:%S %p\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%B. %d, %Y %I:%M:%S %p\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%B. %d, %Y %I:%M:%S %p\"))\n    # print the date and time in a different format\n    print(now.strftime(\"%B. %d, %Y %I:%M:%S %p\"))\n    # print the date and time in a different format\n    print(\n",
        "def main():\n    # create a datetime object\n    now = datetime.datetime.now()\n    # print the date\n    print(now.date())\n    # print the time\n    print(now.time())\n    # print the date and time\n    print(now)\n    # print the year\n    print(now.year)\n    # print the month\n    print(now.month)\n    # print the day\n    print(now.day)\n    # print the hour\n    print(now.hour)\n    # print the minute\n    print(now.minute)\n    # print the second\n    print(now.second)\n    # print the microsecond\n    print(now.microsecond)\n    # print the weekday\n    print(now.weekday())\n    # print the day of the year\n    print(now.timetuple().tm_yday)\n    # print the day of the week\n    print(now.timetuple().tm_wday)\n    # print the day of the month\n    print(now.timetuple().tm_mday)\n    # print the day of the year\n    print(now.timetuple().tm_yday)\n    # print the day of the week\n    print(now.timetuple().tm_wday)\n    # print the day of the month\n    print(now.timetuple().tm_mday)\n    # print the day of the year\n    print(now.timetuple().tm_yday)\n    # print the day of the week\n    print(now.timetuple().tm_wday)\n    # print the day of the month\n    print(now.timetuple().tm_mday)\n    # print the day of the year\n    print(now.timetuple().tm_yday)\n    # print the day of the week\n    print(now.timetuple().tm_wday)\n    # print the day of the month\n    print(now.timetuple().tm_mday)\n    # print the day of the year\n    print(now.timetuple().tm_yday)\n    # print the day of the\n"
    ],
    "results": 8
},{
    "id": "195",
    "source": "soSearches",
    "language": "python",
    "query": "how to create a password using python 3 without a database",
    "snippets": [
        "def create_password(length):\n    import random\n    import string\n    password = ''\n    for i in range(length):\n        password += random.choice(string.ascii_letters + string.digits)\n    return password\n",
        "def create_password(length):\n    import random\n    import string\n    password = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))\n    return password\n",
        "def main():\n    password = input(\"Enter a password: \")\n    if len(password) < 8:\n        print(\"Password must be at least 8 characters long\")\n        return\n    if not any(char.isdigit() for char in password):\n        print(\"Password must contain at least one number\")\n        return\n    if not any(char.isupper() for char in password):\n        print(\"Password must contain at least one uppercase letter\")\n        return\n    if not any(char.islower() for char in password):\n        print(\"Password must contain at least one lowercase letter\")\n        return\n    if not any(char.isalpha() for char in password):\n        print(\"Password must contain at least one letter\")\n        return\n    if not any(char.isspace() for char in password):\n        print(\"Password must contain at least one space\")\n        return\n    if not any(char.isalnum() for char in password):\n        print(\"Password must contain at least one alphanumeric character\")\n        return\n    print(\"Password is valid\")\n",
        "def main():\n    password = input(\"Enter a password: \")\n    while len(password) < 8:\n        print(\"Password must be at least 8 characters long\")\n        password = input(\"Enter a password: \")\n    print(\"Password is valid\")\n    print(\"Password is:\", password)\n",
        "def main():\n    password = input(\"Please enter a password: \")\n    if len(password) < 8:\n        print(\"Password must be at least 8 characters long\")\n        main()\n    elif password.isdigit():\n        print(\"Password must contain at least one letter\")\n        main()\n    elif password.isalpha():\n        print(\"Password must contain at least one digit\")\n        main()\n    else:\n        print(\"Password is valid\")\n        print(\"Your password is: \" + password)\n        print(\"Your password is: \" + password.upper())\n        print(\"Your password is: \" + password.lower())\n        print(\"Your password is: \" + password.capitalize())\n        print(\"Your password is: \" + password.swapcase())\n        print(\"Your password is: \" + password.title())\n        print(\"Your password is: \" + password.strip())\n        print(\"Your password is: \" + password.lstrip())\n        print(\"Your password is: \" + password.rstrip())\n        print(\"Your password is: \" + password.strip('!'))\n        print(\"Your password is: \" + password.strip('@'))\n        print(\"Your password is: \" + password.strip('#'))\n        print(\"Your password is: \" + password.strip('$'))\n        print(\"Your password is: \" + password.strip('%'))\n        print(\"Your password is: \" + password.strip('^'))\n        print(\"Your password is: \" + password.strip('&'))\n        print(\"Your password is: \" + password.strip('*'))\n        print(\"Your password is: \" + password.strip('('))\n        print(\"Your password is: \" + password.strip(')'))\n        print(\"Your password is: \" + password.strip('_'))\n        print(\"Your password is: \" + password.strip('+'))\n        print(\"Your password is: \" + password.strip('='))\n        print(\"Your password is: \" + password.strip('['))\n        print(\"Your password is: \" + password.strip(']'))\n        print(\"Your password is: \" + password.strip('{'\n",
        "def main():\n    import random\n    import string\n    import sys\n    import os\n    import getpass\n    import hashlib\n    import time\n    import datetime\n    import re\n    import subprocess\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import ssl\n    import base64\n    import hmac\n    import hashlib\n    import binascii\n    import getpass\n    import os\n    import sys\n    import time\n    import datetime\n    import re\n    import subprocess\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import ssl\n    import base64\n    import hmac\n    import hashlib\n    import binascii\n    import getpass\n    import os\n    import sys\n    import time\n    import datetime\n    import re\n    import subprocess\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import ssl\n    import base64\n    import hmac\n    import hashlib\n    import binascii\n    import getpass\n    import os\n    import sys\n    import time\n    import datetime\n    import re\n    import subprocess\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import ssl\n    import base64\n    import hmac\n    import hashlib\n    import binascii\n    import getpass\n    import os\n    import sys\n    import time\n    import datetime\n    import re\n    import subprocess\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import ssl\n    import base64\n    import hmac\n"
    ],
    "results": 8
},{
    "id": "196",
    "source": "soSearches",
    "language": "python",
    "query": "how to import get_column_letterin python",
    "snippets": [
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a zero-based column index to the Excel column letter.\n    >>> get_column_letter(0)\n    'A'\n    >>> get_column_letter(1)\n    'B'\n    >>> get_column_letter(25)\n    'Z'\n    >>> get_column_letter(26)\n    'AA'\n    >>> get_column_letter(27)\n    'AB'\n    \"\"\"\n    quot, rem = divmod(col_index, 26)\n    return chr(quot + 65) + chr(rem + 65)\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a zero-based column index to the Excel column letter.\n    >>> get_column_letter(0)\n    'A'\n    >>> get_column_letter(1)\n    'B'\n    >>> get_column_letter(25)\n    'Z'\n    >>> get_column_letter(26)\n    'AA'\n    >>> get_column_letter(27)\n    'AB'\n    \"\"\"\n    quot, rem = divmod(col_index, 26)\n    return get_column_letter(quot - 1) + chr(rem + ord('A')) if quot else chr(rem + ord('A'))\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a zero-based column index to the excel column letter.\n    >>> get_column_letter(0)\n    'A'\n    >>> get_column_letter(1)\n    'B'\n    >>> get_column_letter(25)\n    'Z'\n    >>> get_column_letter(26)\n    'AA'\n    >>> get_column_letter(27)\n    'AB'\n    \"\"\"\n    quot, rem = divmod(col_index, 26)\n    return chr(quot + 65) + chr(rem + 65)\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a column number into a column letter.\n    \"\"\"\n    return get_column_letter(col_index)\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a zero-based column index to the Excel column letter.\n    For example, get_column_letter(0) will return A, get_column_letter(1) will return B, and so on.\n    :param col_index: int\n    :return: str\n    \"\"\"\n    return get_column_letter_from_int(col_index)\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a column number into a column letter.\n    \"\"\"\n    return get_column_letter_from_number(col_index)\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a zero-based column index to a column letter.\n    \"\"\"\n    return get_column_letter_from_number(col_index)\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a zero-based column index to the Excel column letter.\n    For example, 0 => A, 1 => B, 26 => Z, 27 => AA, etc.\n    \"\"\"\n    if col_index < 0:\n        return\n    s = ''\n    while col_index >= 0:\n        s = chr(ord('A') + (col_index % 26)) + s\n        col_index = col_index // 26 - 1\n    return s\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a column number into a column letter.\n    \"\"\"\n    return get_column_letter_from_int(col_index)\n",
        "def get_column_letter(col_index):\n    \"\"\"\n    Convert a zero-based column index to the Excel column letter.\n    For example: 0 -> A, 1 -> B, 26 -> Z, 27 -> AA, etc.\n    \"\"\"\n    quot, rem = divmod(col_index, 26)\n    return chr(rem + 65) + (quot > 0 and get_column_letter(quot - 1) or '')\n"
    ],
    "results": 10
},{
    "id": "197",
    "source": "soSearches",
    "language": "python",
    "query": "how to extract syntactic dependency using stanford corenlp in python",
    "snippets": [
        "def get_dependency(text):\n    import os\n    import json\n    from subprocess import Popen, PIPE\n    from collections import defaultdict\n    from itertools import chain\n    from nltk.tree import Tree\n    from nltk.parse.corenlp import CoreNLPServer\n    from nltk.parse.dependencygraph import DependencyGraph\n    from nltk.parse.dependencygraph import conll_to_treebank as conll2treebank\n    from nltk.parse.dependencygraph import treebank_to_conll as treebank2conll\n    from nltk.parse.dependencygraph import conll_to_nltk as conll2nltk\n    from nltk.parse.dependencygraph import nltk_to_conll as nltk2conll\n    from nltk.parse.dependencygraph import conll_to_nltk_tree as conll2nltk_tree\n    from nltk.parse.dependencygraph import nltk_tree_to_conll as nltk_tree2conll\n    from nltk.parse.dependencygraph import conll_to_nltk_trees as conll2nltk_trees\n    from nltk.parse.dependencygraph import nltk_trees_to_conll as nltk_trees2conll\n    from nltk.parse.dependencygraph import conll_to_nltk_treebank as conll2nltk_treebank\n    from nltk.parse.dependencygraph import nltk_treebank_to_conll as nltk_treebank2conll\n    from nltk.parse.dependencygraph import conll_to_nltk_treebanks as conll2nltk_treebanks\n    from nltk.parse.dependencygraph import nltk_treebanks_to_conll as nltk_treebanks2conll\n    from nltk.parse.dependencygraph import conll_to_nltk_treebank as conll2nltk_treebank\n    from n\n",
        "def get_dependency(sentence):\n    import os\n    import json\n    from subprocess import Popen, PIPE\n    from collections import defaultdict\n    from itertools import chain\n    from nltk.tree import Tree\n\n    # get the path of stanford corenlp\n    stanford_corenlp_path = 'stanford-corenlp-full-2018-10-05'\n    # get the path of the model\n    stanford_corenlp_model_path = os.path.join(stanford_corenlp_path, 'models', 'edu', 'stanford', 'english')\n    # get the path of the jar file\n    stanford_corenlp_jar = os.path.join(stanford_corenlp_path, 'stanford-corenlp-3.9.2.jar')\n    # get the path of the properties file\n    stanford_corenlp_properties = os.path.join(stanford_corenlp_path, 'stanford-corenlp-3.9.2-models.jar')\n    # get the path of the output file\n    output_file = 'output.txt'\n    # get the path of the input file\n    input_file = 'input.txt'\n    # write the input sentence to the input file\n    with open(input_file, 'w') as f:\n        f.write(sentence)\n    # run the command\n    cmd = 'java -cp \"{}\" -Xmx2g edu.stanford.nlp.pipeline.StanfordCoreNLP -annotators tokenize,ssplit,pos,lemma,ner,parse -outputDirectory . -fileList input.txt'.format(stanford_corenlp_jar)\n    # run the command\n    p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=True)\n    # get the output\n    output, errors = p.communicate()\n    # read the output file\n    with open(output_file, 'r') as f:\n        output\n",
        "def extract_dependency(sentence):\n    import os\n    import subprocess\n    import json\n    from nltk.tree import Tree\n    from nltk.parse.corenlp import CoreNLPDependencyParser\n\n    # set up the Stanford CoreNLP client\n    nlp = CoreNLPDependencyParser(url='http://localhost:9000')\n\n    # parse the sentence\n    parsed = nlp.raw_parse(sentence)\n\n    # get the dependency tree\n    dependency_tree = next(parsed)\n\n    # convert the dependency tree to a string\n    dependency_string = dependency_tree.dependencies_string()\n\n    # convert the dependency string to a list of tuples\n    dependency_list = [tuple(x.split('-')) for x in dependency_string.split('\\n')]\n\n    # convert the dependency list to a dependency tree\n    dependency_tree = Tree('')\n    for (head, rel) in dependency_list:\n        dependency_tree.add_child(head, rel)\n\n    # return the dependency tree\n    return dependency_tree\n",
        "def get_dependency(text):\n    import os\n    import subprocess\n    from subprocess import Popen, PIPE\n    from io import StringIO\n    from io import open\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n    import os\n    import json\n    import pandas as pd\n    import numpy as np\n    import re\n    import sys\n",
        "def get_dependency(sentence):\n    import os\n    import subprocess\n    import json\n    import re\n    import sys\n    import time\n    import nltk\n    from nltk.parse.corenlp import CoreNLPParser\n    from nltk.tree import Tree\n    from nltk.tokenize import word_tokenize\n    from nltk.tag import pos_tag\n    from nltk.stem import WordNetLemmatizer\n    from nltk.corpus import wordnet\n    from nltk.corpus import stopwords\n    from nltk.stem import PorterStemmer\n    from nltk.tokenize import word_tokenize\n    from nltk.stem import WordNetLemmatizer\n    from nltk.stem import PorterStemmer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import RegexpStemmer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import SnowballStemmer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import WordNetLemmatizer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import RegexpStemmer\n    from nltk.stem import SnowballStemmer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import WordNetLemmatizer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import RegexpStemmer\n    from nltk.stem import SnowballStemmer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import WordNetLemmatizer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import RegexpStemmer\n    from nltk.stem import SnowballStemmer\n    from nltk.stem import LancasterStemmer\n    from nltk.stem import WordNetLemmatizer\n    from nltk.stem import LancasterStemmer\n    from nlt\n"
    ],
    "results": 5
},{
    "id": "198",
    "source": "soSearches",
    "language": "python",
    "query": "how to log caller name and line number in python",
    "snippets": [
        "def log(func):\n    def wrapper(*args, **kwargs):\n        print(f'Calling {func.__name__}() from {func.__module__}')\n        return func(*args, **kwargs)\n    return wrapper\n",
        "def log(func):\n    def wrapper(*args, **kwargs):\n        print(func.__name__, args, kwargs)\n        return func(*args, **kwargs)\n    return wrapper\n",
        "def log(func):\n    def wrapper(*args, **kwargs):\n        print(f'Calling {func.__name__}() from {func.__code__.co_filename} at line {func.__code__.co_firstlineno}')\n        return func(*args, **kwargs)\n    return wrapper\n",
        "def log_caller():\n    import inspect\n    caller = inspect.stack()[1]\n    print(caller[3])\n    print(caller[2])\n    print(caller[4])\n    print(caller[5])\n    print(caller[6])\n    print(caller[7])\n    print(caller[8])\n    print(caller[9])\n    print(caller[10])\n    print(caller[11])\n    print(caller[12])\n    print(caller[13])\n    print(caller[14])\n    print(caller[15])\n    print(caller[16])\n    print(caller[17])\n    print(caller[18])\n    print(caller[19])\n    print(caller[20])\n    print(caller[21])\n    print(caller[22])\n    print(caller[23])\n    print(caller[24])\n    print(caller[25])\n    print(caller[26])\n    print(caller[27])\n    print(caller[28])\n    print(caller[29])\n    print(caller[30])\n    print(caller[31])\n    print(caller[32])\n    print(caller[33])\n    print(caller[34])\n    print(caller[35])\n    print(caller[36])\n    print(caller[37])\n    print(caller[38])\n    print(caller[39])\n    print(caller[40])\n    print(caller[41])\n    print(caller[42])\n    print(caller[43])\n    print(caller[44])\n    print(caller[45])\n    print(caller[46])\n    print(caller[47])\n    print(caller[48])\n    print(caller[49])\n    print(caller[50])\n    print(caller[51])\n    print(caller[52])\n    print(caller[53])\n    print(caller[54])\n"
    ],
    "results": 10
},{
    "id": "199",
    "source": "soSearches",
    "language": "python",
    "query": "how to declare an 2d array in python?",
    "snippets": [
        "def main():\n    # declare an 2d array\n    # array[row][col]\n    array = [[1,2,3],[4,5,6],[7,8,9]]\n    # print the array\n    print(array)\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print\n",
        "def main():\n    # declare an 2d array\n    # array[row][col]\n    array = [[1,2,3],[4,5,6],[7,8,9]]\n    # print the array\n    for row in array:\n        for col in row:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row[::-1]:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row[::-1]:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row[::-1]:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row[::-1]:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row[::-1]:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row[::-1]:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row[::-1]:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n        for col in row[::-1]:\n            print(col, end=\" \")\n        print()\n    # print the array in reverse order\n    for row in array[::-1]:\n",
        "def main():\n    # declare an 2d array\n    # array[row][column]\n    array = [[1,2,3],[4,5,6],[7,8,9]]\n    # print the array\n    print(array)\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print\n",
        "def main():\n    # declare an 2d array\n    # array[row][col]\n    array = [[1,2,3],[4,5,6],[7,8,9]]\n    # print the array\n    print(array)\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print\n",
        "def main():\n    # declare an 2d array\n    # array[row][col]\n    array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    print(array)\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2\n",
        "def main():\n    # 2d array\n    # array[row][column]\n    # array[0][0] = 1\n    # array[0][1] = 2\n    # array[0][2] = 3\n    # array[1][0] = 4\n    # array[1][1] = 5\n    # array[1][2] = 6\n    # array[2][0] = 7\n    # array[2][1] = 8\n    # array[2][2] = 9\n    # array[3][0] = 10\n    # array[3][1] = 11\n    # array[3][2] = 12\n    # array[4][0] = 13\n    # array[4][1] = 14\n    # array[4][2] = 15\n    # array[5][0] = 16\n    # array[5][1] = 17\n    # array[5][2] = 18\n    # array[6][0] = 19\n    # array[6][1] = 20\n    # array[6][2] = 21\n    # array[7][0] = 22\n    # array[7][1] = 23\n    # array[7][2] = 24\n    # array[8][0] = 25\n    # array[8][1] = 26\n    # array[8][2] = 27\n    # array[9][0] = 28\n    # array[9][1] = 29\n    # array[9][2] = 30\n    # array[10][0] = 31\n    # array[10][1] = 32\n    # array[10][2] = 33\n    # array[11][0] = 34\n    # array[11][1] = 35\n    # array[11][2] = 36\n    # array[12][0] = 37\n    # array[12][1] = 38\n    # array[12][2] = 39\n    # array[13][0] = 40\n    # array[13][1] = 41\n    # array[13][2] = 42\n    # array[14][0] = 43\n    # array[14][1]\n",
        "def main():\n    # declare an 2d array\n    # array[row][column]\n    array = [[1,2,3],[4,5,6],[7,8,9]]\n    # print the array\n    print(array)\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n",
        "def main():\n    # declare an array with 2d\n    # array[row][col]\n    array = [[1,2,3],[4,5,6],[7,8,9]]\n    print(array)\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0:2])\n    print(array[0][1:3])\n    print(array[1][0:2])\n    print(array[1][1:3])\n    print(array[2][0:2])\n    print(array[2][1:3])\n    print(array[0][0:2])\n    print(array[0][1:3])\n    print(array[1][0:2])\n    print(array[1][1:3])\n    print(array[2][0:2])\n    print(array[2][1:3])\n    print(array[0][0:2])\n    print(array[0][1:3])\n    print(array[1][0:2])\n    print(array[1][1:3])\n    print(array[2][0:2])\n    print(array[2][1:3])\n    print(array[0][0:2])\n    print(array[0][1:3])\n    print(array[1][0:2])\n    print(array[1][1:3])\n    print(array[2][0:2])\n    print(array[2][1:3])\n    print(array[0][0:2])\n    print(array[0][1:3])\n    print(array[1][0:2])\n    print(array[1][1:3])\n    print(array[2][0:2])\n    print(array[2][1:3])\n    # print\n",
        "def main():\n    # declare an 2d array\n    # array[row][column]\n    array = [[1,2,3],[4,5,6],[7,8,9]]\n    # print the array\n    print(array)\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[1][1]\n    print(array[1][1])\n    # print\n",
        "def main():\n    # declare an 2d array\n    # array[row][col]\n    array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    print(array)\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2])\n    print(array[0][0])\n    print(array[0][1])\n    print(array[0][2])\n    print(array[1][0])\n    print(array[1][1])\n    print(array[1][2])\n    print(array[2][0])\n    print(array[2][1])\n    print(array[2][2\n",
        "def main():\n    # declare an 2d array\n    # array[row][column]\n    array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    # print the array\n    print(array)\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n    # print the array[1][0]\n    print(array[1][0])\n    # print the array[1][1]\n    print(array[1][1])\n    # print the array[1][2]\n    print(array[1][2])\n    # print the array[2][0]\n    print(array[2][0])\n    # print the array[2][1]\n    print(array[2][1])\n    # print the array[2][2]\n    print(array[2][2])\n    # print the array[0][0]\n    print(array[0][0])\n    # print the array[0][1]\n    print(array[0][1])\n    # print the array[0][2]\n    print(array[0][2])\n"
    ],
    "results": 9
},{
    "id": "200",
    "source": "soSearches",
    "language": "python",
    "query": "how to read a microsoft access file in python",
    "snippets": [
        "def main():\n    import pyodbc\n    import pandas as pd\n    import os\n    import sys\n    import datetime\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import mat\n",
        "def main():\n    import pyodbc\n    import pandas as pd\n    import os\n    import sys\n    import datetime\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.\n",
        "def main():\n    import pyodbc\n    import pandas as pd\n    import os\n    import sys\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import time\n    import re\n    import csv\n    import glob\n    import shutil\n    import subprocess\n    import multiprocessing\n    import itertools\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as m\n",
        "def main():\n    import pyodbc\n    import pandas as pd\n    import os\n    import sys\n    import datetime\n    import time\n    import re\n    import glob\n    import csv\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.gridspec as gridspec\n    import matplotlib.font_manager as font_manager\n    import matplotlib.style as style\n    import matplotlib.colors as colors\n    import matplotlib.cm as cmx\n    import matplotlib.colors as mcolors\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.gridspec as gridspec\n    import matplotlib.font_manager as font_manager\n    import matplotlib.style as style\n    import matplotlib.colors as colors\n    import matplotlib.cm as cmx\n    import matplotlib.colors as mcolors\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.gridspec as gridspec\n    import matplotlib.font_manager as font_manager\n    import matplotlib.style as style\n    import matplotlib.colors as colors\n    import matplotlib.cm as cmx\n    import matplotlib.colors as mcolors\n    import matplot\n",
        "def main():\n    import pyodbc\n    import pandas as pd\n    import os\n    import sys\n    import datetime\n    import time\n    import re\n    import glob\n    import shutil\n    import zipfile\n    import gzip\n    import csv\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n",
        "def main():\n    import pyodbc\n    import pandas as pd\n    import os\n    import sys\n    import datetime\n    import time\n    import re\n    import csv\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.style as style\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as mticker\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.\n",
        "def main():\n    import pyodbc\n    import os\n    import sys\n    import datetime\n    import time\n    import csv\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib\n"
    ],
    "results": 7
},{
    "id": "201",
    "source": "soSearches",
    "language": "python",
    "query": "how to open workbook in python",
    "snippets": [
        "def main():\n    # open the workbook\n    wb = openpyxl.load_workbook('example.xlsx')\n    # get the active sheet\n    sheet = wb.active\n    # get the value of cell A1\n    print(sheet['A1'].value)\n    # get the value of cell B1\n    print(sheet['B1'].value)\n    # get the value of cell C1\n    print(sheet['C1'].value)\n    # get the value of cell D1\n    print(sheet['D1'].value)\n    # get the value of cell E1\n    print(sheet['E1'].value)\n    # get the value of cell F1\n    print(sheet['F1'].value)\n    # get the value of cell G1\n    print(sheet['G1'].value)\n    # get the value of cell H1\n    print(sheet['H1'].value)\n    # get the value of cell I1\n    print(sheet['I1'].value)\n    # get the value of cell J1\n    print(sheet['J1'].value)\n    # get the value of cell K1\n    print(sheet['K1'].value)\n    # get the value of cell L1\n    print(sheet['L1'].value)\n    # get the value of cell M1\n    print(sheet['M1'].value)\n    # get the value of cell N1\n    print(sheet['N1'].value)\n    # get the value of cell O1\n    print(sheet['O1'].value)\n    # get the value of cell P1\n    print(sheet['P1'].value)\n    # get the value of cell Q1\n    print(sheet['Q1'].value)\n    # get the value of cell R1\n    print(sheet['R1'].value)\n    # get the value of cell S1\n    print(sheet['S1'].value)\n    # get the value of cell T1\n    print(sheet['T1'].value)\n    # get the value of cell U1\n    print(\n",
        "def main():\n    import openpyxl\n    wb = openpyxl.load_workbook('example.xlsx')\n    print(wb.sheetnames)\n    ws = wb.active\n    print(ws.title)\n    print(ws['A1'].value)\n    print(ws['B1'].value)\n    print(ws['C1'].value)\n    print(ws['D1'].value)\n    print(ws['A2'].value)\n    print(ws['B2'].value)\n    print(ws['C2'].value)\n    print(ws['D2'].value)\n    print(ws['A3'].value)\n    print(ws['B3'].value)\n    print(ws['C3'].value)\n    print(ws['D3'].value)\n    print(ws['A4'].value)\n    print(ws['B4'].value)\n    print(ws['C4'].value)\n    print(ws['D4'].value)\n    print(ws['A5'].value)\n    print(ws['B5'].value)\n    print(ws['C5'].value)\n    print(ws['D5'].value)\n    print(ws['A6'].value)\n    print(ws['B6'].value)\n    print(ws['C6'].value)\n    print(ws['D6'].value)\n    print(ws['A7'].value)\n    print(ws['B7'].value)\n    print(ws['C7'].value)\n    print(ws['D7'].value)\n    print(ws['A8'].value)\n    print(ws['B8'].value)\n    print(ws['C8'].value)\n    print(ws['D8'].value)\n    print(ws['A9'].value)\n    print(ws['B9'].value)\n    print(ws['C9'].value)\n    print(ws['D9'].value)\n    print(ws['A10'].value\n",
        "def main():\n    import openpyxl\n    wb = openpyxl.load_workbook('example.xlsx')\n    print(wb.sheetnames)\n    sheet = wb.active\n    print(sheet.title)\n    sheet = wb['Sheet1']\n    print(sheet.title)\n    sheet = wb.get_sheet_by_name('Sheet1')\n    print(sheet.title)\n    sheet = wb.get_active_sheet()\n    print(sheet.title)\n    wb.save('example_copy.xlsx')\n    wb.close()\n",
        "def main():\n    wb = open_workbook('test.xls')\n    print(wb.sheet_names())\n    ws = wb.sheet_by_name('Sheet1')\n    print(ws.cell(0,0).value)\n    print(ws.cell(1,0).value)\n    print(ws.cell(2,0).value)\n    print(ws.cell(3,0).value)\n    print(ws.cell(4,0).value)\n    print(ws.cell(5,0).value)\n    print(ws.cell(6,0).value)\n    print(ws.cell(7,0).value)\n    print(ws.cell(8,0).value)\n    print(ws.cell(9,0).value)\n    print(ws.cell(10,0).value)\n    print(ws.cell(11,0).value)\n    print(ws.cell(12,0).value)\n    print(ws.cell(13,0).value)\n    print(ws.cell(14,0).value)\n    print(ws.cell(15,0).value)\n    print(ws.cell(16,0).value)\n    print(ws.cell(17,0).value)\n    print(ws.cell(18,0).value)\n    print(ws.cell(19,0).value)\n    print(ws.cell(20,0).value)\n    print(ws.cell(21,0).value)\n    print(ws.cell(22,0).value)\n    print(ws.cell(23,0).value)\n    print(ws.cell(24,0).value)\n    print(ws.cell(25,0).value)\n    print(ws.cell(26,0).value)\n    print(ws.cell(27,0).value)\n    print(ws.cell(28,0).value)\n    print(ws.cell(29,0).value)\n    print(ws.cell(30,0).value)\n    print(ws.cell(31,0).value)\n    print(ws.\n",
        "def main():\n    wb = open_workbook('example.xls')\n    print(wb.sheet_names())\n    ws = wb.sheet_by_name('Sheet1')\n    print(ws.name, ws.nrows, ws.ncols)\n    # print(ws.cell_value(0, 0))\n    # print(ws.cell_value(1, 0))\n    # print(ws.cell_value(2, 0))\n    # print(ws.cell_value(3, 0))\n    # print(ws.cell_value(4, 0))\n    # print(ws.cell_value(5, 0))\n    # print(ws.cell_value(6, 0))\n    # print(ws.cell_value(7, 0))\n    # print(ws.cell_value(8, 0))\n    # print(ws.cell_value(9, 0))\n    # print(ws.cell_value(10, 0))\n    # print(ws.cell_value(11, 0))\n    # print(ws.cell_value(12, 0))\n    # print(ws.cell_value(13, 0))\n    # print(ws.cell_value(14, 0))\n    # print(ws.cell_value(15, 0))\n    # print(ws.cell_value(16, 0))\n    # print(ws.cell_value(17, 0))\n    # print(ws.cell_value(18, 0))\n    # print(ws.cell_value(19, 0))\n    # print(ws.cell_value(20, 0))\n    # print(ws.cell_value(21, 0))\n    # print(ws.cell_value(22, 0))\n    # print(ws.cell_value(23, 0))\n    # print(ws.cell_value(24, 0))\n    # print(ws.cell_value(25, 0))\n    # print(ws.cell_value(26, 0))\n    # print(ws.cell_value(27, 0))\n    # print(ws.cell_value(28,\n",
        "def main():\n    # open the workbook\n    wb = open_workbook('example.xlsx')\n    # get the first sheet\n    sheet = wb.sheet_by_index(0)\n    # get the first row\n    row = sheet.row_values(0)\n    # get the first cell\n    cell = sheet.cell(0,0).value\n    # print the row\n    print(row)\n    # print the cell\n    print(cell)\n    # print the number of rows\n    print(sheet.nrows)\n    # print the number of columns\n    print(sheet.ncols)\n    # print the number of sheets\n    print(wb.nsheets)\n    # print the name of the first sheet\n    print(wb.sheet_names()[0])\n    # print the name of the first sheet\n    print(wb.sheet_by_index(0).name)\n    # print the name of the first sheet\n    print(wb.sheet_by_name('Sheet1').name)\n    # print the name of the first sheet\n    print(wb.sheet_by_name('Sheet1').nrows)\n    # print the name of the first sheet\n    print(wb.sheet_by_name('Sheet1').ncols)\n    # print the name of the first sheet\n    print(wb.sheet_by_name('Sheet1').cell(0,0).value)\n    # print the name of the first sheet\n    print(wb.sheet_by_name('Sheet1').row_values(0))\n    # print the name of the first sheet\n    print(wb.sheet_by_name('Sheet1').col_values(0))\n    # print the name of the first sheet\n    print(wb.sheet_by_name('Sheet1').cell_value(0,0))\n    # print the name of the first sheet\n    print(wb.sheet_by_name('Sheet1').row_slice(0,start_colx=0,end_colx=2))\n    # print the name of the first sheet\n    print(wb.sheet_by_name('\n",
        "def main():\n    wb = load_workbook('test.xlsx')\n    ws = wb.active\n    print(ws['A1'].value)\n    print(ws['B1'].value)\n    print(ws['C1'].value)\n    print(ws['D1'].value)\n    print(ws['E1'].value)\n    print(ws['F1'].value)\n    print(ws['G1'].value)\n    print(ws['H1'].value)\n    print(ws['I1'].value)\n    print(ws['J1'].value)\n    print(ws['K1'].value)\n    print(ws['L1'].value)\n    print(ws['M1'].value)\n    print(ws['N1'].value)\n    print(ws['O1'].value)\n    print(ws['P1'].value)\n    print(ws['Q1'].value)\n    print(ws['R1'].value)\n    print(ws['S1'].value)\n    print(ws['T1'].value)\n    print(ws['U1'].value)\n    print(ws['V1'].value)\n    print(ws['W1'].value)\n    print(ws['X1'].value)\n    print(ws['Y1'].value)\n    print(ws['Z1'].value)\n    print(ws['AA1'].value)\n    print(ws['AB1'].value)\n    print(ws['AC1'].value)\n    print(ws['AD1'].value)\n    print(ws['AE1'].value)\n    print(ws['AF1'].value)\n    print(ws['AG1'].value)\n    print(ws['AH1'].value)\n    print(ws['AI1'].value)\n    print(ws['AJ1'].value)\n    print(ws['AK1'].value)\n    print(ws['AL1'].value)\n    print(ws['AM1'].value)\n    print\n",
        "def main():\n    wb = open_workbook('example.xls')\n    print(wb.nsheets())\n    print(wb.sheet_names())\n    sh = wb.sheet_by_index(0)\n    print(sh.name, sh.nrows, sh.ncols)\n    print(sh.cell_value(0, 0))\n    print(sh.cell_value(1, 0))\n    print(sh.cell_value(2, 0))\n    print(sh.cell_value(3, 0))\n    print(sh.cell_value(4, 0))\n    print(sh.cell_value(5, 0))\n    print(sh.cell_value(6, 0))\n    print(sh.cell_value(7, 0))\n    print(sh.cell_value(8, 0))\n    print(sh.cell_value(9, 0))\n    print(sh.cell_value(10, 0))\n    print(sh.cell_value(11, 0))\n    print(sh.cell_value(12, 0))\n    print(sh.cell_value(13, 0))\n    print(sh.cell_value(14, 0))\n    print(sh.cell_value(15, 0))\n    print(sh.cell_value(16, 0))\n    print(sh.cell_value(17, 0))\n    print(sh.cell_value(18, 0))\n    print(sh.cell_value(19, 0))\n    print(sh.cell_value(20, 0))\n    print(sh.cell_value(21, 0))\n    print(sh.cell_value(22, 0))\n    print(sh.cell_value(23, 0))\n    print(sh.cell_value(24, 0))\n    print(sh.cell_value(25, 0))\n    print(sh.cell_value(26, 0))\n    print(sh.cell_value(27, 0))\n    print(sh.cell_value(28, 0))\n    print(sh.cell_value(29, 0))\n    print(sh.cell_\n",
        "def main():\n    # open workbook\n    wb = open_workbook('example.xlsx')\n    # get sheet\n    sheet = wb.sheet_by_index(0)\n    # get cell value\n    cell_value = sheet.cell(0,0).value\n    print(cell_value)\n    # get row\n    row = sheet.row(0)\n    print(row)\n    # get column\n    col = sheet.col(0)\n    print(col)\n    # get all rows\n    rows = sheet.get_rows()\n    print(rows)\n    # get all columns\n    cols = sheet.get_cols()\n    print(cols)\n    # get all cells\n    cells = sheet.get_cells()\n    print(cells)\n    # get all values\n    values = sheet.get_all_values()\n    print(values)\n    # get all rows and columns\n    rows_cols = sheet.get_rows_and_cols()\n    print(rows_cols)\n    # get all cells and values\n    cells_values = sheet.get_cells_and_values()\n    print(cells_values)\n    # get all cells and row and column\n    cells_row_col = sheet.get_cells_and_row_and_col()\n    print(cells_row_col)\n    # get all cells and row and column and value\n    cells_row_col_value = sheet.get_cells_and_row_and_col_and_value()\n    print(cells_row_col_value)\n    # get all cells and row and column and value and type\n    cells_row_col_value_type = sheet.get_cells_and_row_and_col_and_value_and_type()\n    print(cells_row_col_value_type)\n    # get all cells and row and column and value and type and formula\n    cells_row_col_value_type_formula = sheet.get_cells_and_row_and_col_and_value_and_type_and_formula()\n    print(cells_row_col_\n",
        "def main():\n    wb = open_workbook('censuspopdata.xls')\n    sh = wb.sheet_by_name('Population by Census Tract')\n    for row_index in range(sh.nrows):\n        values = sh.row_values(row_index)\n        pop = int(values[-1])\n        if pop > 1000000:\n            print(values)\n            print('Pop: %d' % pop)\n            print('Tract: %s' % values[1])\n            print('State: %s' % values[3])\n            print('County: %s' % values[4])\n            print('-------------------')\n    print('Done')\n"
    ],
    "results": 10
},{
    "id": "202",
    "source": "soSearches",
    "language": "python",
    "query": "in python how to convert <class 'decimal.decimal'> to float",
    "snippets": [
        "def convert_decimal_to_float(decimal_number):\n    return float(decimal_number)\n",
        "def decimal_to_float(decimal_number):\n    return float(decimal_number)\n",
        "def convert_to_float(value):\n    return float(value)\n"
    ],
    "results": 10
},{
    "id": "203",
    "source": "soSearches",
    "language": "python",
    "query": "how to installa pandas in python 3.7",
    "snippets": [
        "def main():\n    import pandas as pd\n    df = pd.read_csv('data.csv')\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.sort_values(by='B'))\n    print(df.sort_values(by='B', ascending=False))\n    print(df.sort_index())\n    print(df.sort_index(ascending=False))\n    print(df.sort_index(by='B'))\n    print(df.sort_index(by='B', ascending=False))\n    print(df.sort_values(by='B', ascending=False).head())\n    print(df.sort_values(by='B', ascending=False).tail())\n    print(df.sort_values(by='B', ascending=False).info())\n    print(df.sort_values(by='B', ascending=False).describe())\n    print(df.sort_values(by='B', ascending=False).columns)\n    print(df.sort_values(by='B', ascending=False).index)\n    print(df.sort_values(by='B', ascending=False).values)\n    print(df.sort_values(by='B', ascending=False).dtypes)\n    print(df.sort_values(by='B', ascending=False).shape)\n    print(df.sort_values(by='B', ascending=False).sort_values(by='B'))\n    print(df.sort_values(by='B', ascending=False).sort_values(by='B', ascending=False))\n    print(df.sort_values(by='B', ascending=False).sort_index())\n    print(df.sort_values(by='B', ascending=False).sort_index(ascending=False))\n    print(df.sort_values(by='B\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('data/olympics.csv')\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.ndim)\n    print(df.size)\n    print(df.memory_usage())\n    print(df.dtypes.value_counts())\n    print(df.dtypes.index)\n    print(df.dtypes.values)\n    print(df.dtypes.get_indexer(['int64', 'float64']))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='pad'))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='ffill'))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='bfill'))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='nearest'))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='pad', tolerance=0.1))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='ffill', tolerance=0.1))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='bfill', tolerance=0.1))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='nearest', tolerance=0.1))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='pad', tolerance=0.1, limit=1))\n    print(df.dtypes.get_indexer(['int64', 'float64'\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('data/olympics.csv')\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.ndim)\n    print(df.size)\n    print(df.memory_usage())\n    print(df.dtypes.value_counts())\n    print(df.select_dtypes(include=['int64']))\n    print(df.select_dtypes(include=['float64']))\n    print(df.select_dtypes(include=['object']))\n    print(df.select_dtypes(include=['datetime64']))\n    print(df.select_dtypes(include=['timedelta64']))\n    print(df.select_dtypes(include=['bool']))\n    print(df.select_dtypes(exclude=['bool']))\n    print(df.select_dtypes(exclude=['object']))\n    print(df.select_dtypes(exclude=['float64']))\n    print(df.select_dtypes(exclude=['int64']))\n    print(df.select_dtypes(exclude=['datetime64']))\n    print(df.select_dtypes(exclude=['timedelta64']))\n    print(df.select_dtypes(exclude=['bool']))\n    print(df.select_dtypes(exclude=['category']))\n    print(df.select_dtypes(exclude=['datetime64[ns]']))\n    print(df.select_dtypes(exclude=['datetime64[ns, UTC]']))\n    print(df.select_dtypes(exclude=['datetime64[ns, US/Eastern]']))\n    print(df.select_dtypes(exclude=['datetime64[\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('data/olympics.csv')\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.indees)\n    print(df.dtypxs)\n    print(df.shape)\n    print(df.ndim)\n    print(df.size)\n    print(df.memory_usage())\n    print(df.dtypes.value))\n    print(dfdtype.value_cunts().so\n    print(df.dtypes.values)\n    print(df.dtypes.get_indexer(['int64', 'float64']))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='pad'))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='ffill'))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='bfill'))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='nearest'))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='pad', tolerance=0.1))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='ffill', tolerance=0.1))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='bfill', tolerance=0.1))arh', legend=True))\n    print(df.dtypes.value_counts().sort_index().plot(\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('data/olympics.csv')\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.ndim)\n    print(df.size)\n    print(df.memory_usage())\n    print(df.dtypes.value_counts())\n    print(df.select_dtypes(include=['int64']))\n    print(df.select_dtypes(include=['float64']))\n    print(df.select_dtypes(include=['object']))\n    print(df.select_dtypes(exclude=['int64']))\n    print(df.select_dtypes(exclude=['float64']))\n    print(df.select_dtypes(exclude=['object']))\n    print(df.select_dtypes(include=['int64', 'float64']))\n    print(df.select_dtypes(exclude=['int64', 'float64']))\n    print(df.select_dtypes(include=['int64', 'float64', 'object']))\n    print(df.select_dtypes(exclude=['int64', 'float64', 'object']))\n    print(df.select_dtypes(include=['int64', 'float64', 'object'], exclude=['int64', 'float64']))\n    print(dfdselect_dtypes(include=['int64', 'float64', 'object'], exclude=['int64', 'float64']).dtypes)\n    print(df.select_dtypes(include=['int64', 'float64', 'object'], exclude=['int64', 'float64']).dtypes.value_counts())\n    print(df.select_dtypes(include=['int64', 'float64', 'object'], exclude=['int64\n",
        "def main():\n    import pandas as pd\n    df = pdaread_csv('datatolympics.csv')\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.dtypes)\n    print(df.columns)\n    print(df.index)\n    print(/f.volues)\n    prinl(df.shype)\n    print(df.T)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_index(axis=0, ascending=False))\n    print(df.sort_values(by='NOC', ascending=False))\n    print(df.sort_values(by='NOC', ascending=False).head(3))\n    print(df.sort_values(by='NOC', ascending=False).tail(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3).head(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3).head(3).tail(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3).head(3).tail(3).head(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3).head(3).tail(3).head(3).tail(3))\n    print(df.sort_values(by='N\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('../datampics.csv')\n    pint(df.ead())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.dtypes)\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.shape)\n    print(df.T)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_index(axis=0, ascending=False))\n    print(df.sort_values(by='NOC', ascending=False))\n    print(df.sort_values(by='NOC', ascending=False).head(3))\n    print(df.sort_values(by='NOC', ascending=False).tail(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3).head(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3).head(3).tail(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3).head(3).tail(3).head(3))\n    print(df.sort_values(by='NOC', ascending=False).head(3).tail(3).head(3).tail(3).head(3).tail(3).head(3).tail(3))\n    print(df.sort_values(by='Nalse]))\n    print(df.sort_vues(by=['age', 'fare'], acending=[True, Tru\n False]))\n    print(df\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('titanic.csv')\n    print(df.head())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.dtypes)\n    print(df.values)\n    print(df.shape)\n   print(df.)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_index(axis=0, ascending=False))\n    print(df.sort_values(by='age', ascending=False))\n    print(df.sort_values(by=['age', 'fare'], ascending=False))\n    print(df.sort_values(by=['age', 'fare'], ascending=False).head())\n    print(df.sort_values(by=['age', 'fare'], ascending=False).tail())\n    print(df.sort_values(by=['age', 'fare'], ascending=False).head(2))\n    print(df.sort_values(by=['age', 'fare'], ascending=False).tail(2))\n    print(df.sort_values(by=['age', 'fare'], ascending=False).head(2).tail(1))\n    print(df.sort_values(by=['age', 'fae'], ascending=False).head(2).tail(1).head(1))\n    print(df.sort_vales(by=['age', 'far', ascending=False).head(2).tail(1).head(1).head(1\n=======False).head(2).tail(1).head(1).head(1).head(1))\n    print(df.sort_values(by='age', 'fare'], ascending=False).head(2).tail(1).head(1).head(1).head(1).head(1))\n    print(df.sort_values(by=['age', 'fare'], ascending=\n",
        "def main():\n    import pandas as pd\n    print(pd.__version__)\n    df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]})\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_values(by='col1'))\n    print(df.sort_values(by=['col1', 'col2']))\n    print(df.sort_values(by='col1', ascending=False))\n    print(df.sort_values(by=['col1', 'col2'], ascending=False))\n    print(df.sort_values(by='col1', ascending=False).head())\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).head())\n    print(df.sort_values(by='col1', ascending=False).tail())\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).tail())\n    print(df.sort_values(by='col1', ascending=False).info())\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).info())\n    pint(df.sort_vals(by='col1' ascending=False).describe())\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).describe())\n    print(df.sort_values(by='col1', ascending=False).columns)\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).columns)\n    print(df.sort_values(by='col1\n",
        "def main():\n    import pandasas pd\n    df = pd.Datarame({'A': [1, 2, 3], 'B': [4, 5, 6]})\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.mean())\n    print(df.std())\n    print(df.var())\n    print(df.median())\n    print(df.corr())\n    print(df.cov())\n    print(df.skew())\n    print(df.kurt())\n    print(df.quantile(0.25))\n    print(df.quantile(0.5))\n    print(df.quantile(0.75))\n    print(df.quantile([0.25, 0.5, 0.75]))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='lower'))\n    print(df.quantile([0.25, 0.5, 0.75], interpoltion='higher'))\n    print(df.quantie([0.25, 0.5, 0.75], interpolation='midpoint'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='nearet'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='linear'))\n    print(df.quantil([0.25, 0.5, 0.75, interpolation='midpoint'\n.quantile([0.25, 0.5, 0.75], interpolation='nearest'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='linear'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='midpoint'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='nearest'))\n    print(df.quantile([0.25\ndef main():\n    import pandas as pd\n    df = pd.read_csv('../data/titanic.csv')\n    print(df.head())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.dtypes)\n    print(df.values)\n    print(df.shape)\n    print(df.T)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_index(axis=0, ascending=False))\n    print(df.sort_values(by='age', ascending=False))\n    print(df.sort_values(by=['age', 'fare'], ascending=False))\n    print(df.sort_values(by=['age', 'fare'], ascending=[False, True]))\n    print(df.sort_values(by=['age', 'fare]ascending=[Fas, False]))\n    print(df.sort_values(by=['a', 'fare'], asceing[, True]\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, False]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, True]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, False]))\n    print(df.sort_galues(by=['age', 'fare'], ascending=[Fetse, Tr_i]))\n    print(df.sortnvalues(by=['age', 'fare'], asdending=[False, False]))\n    print(df.sert_values(by=['age', 'fare'], ascending=[False, Trxe]))\n    priet(df.sorr_value([by=['age', 'fare'], ascending=[False, False]')\n    print(dfint64'values(by=['age', 'fare'], ascend, g=[True, True]))\n    print(df.sort_values(by=['age', 'fare'], ascen'ing=[True, Falsf]))\n    print(df\n",
        "def main():\n    import pandas as pd\n    print(pd.__version__)\n    df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]})\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.indel)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.T)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_values(by='col1'))\n    print(df.sort_values(by=['col1', 'col2']))\n    print(df.sort_valuesoby='col1', ascending=Falsea)\n    print(dftsort_values(by=['col1', 'col2'], ascending=False))\n    6rint(df.sort_values(by='col1', ascending=Fa4se).head())\n    print(df.s'r]_values,by=['col1', 'col2'], ascending=False).head())\n    print(df.sort_values(by='col1', ascending=False).tail())\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).tail())\n    print(df.sort_values(by='col1', ascending=False).info())\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).info())\n    print(df.sort_values(by='col1', ascending=False).describe())\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).describe())\n    print(df.sort_values(by='col1', ascending=False).columns)\n    print(df.sort_values(by=['col1', 'col2'], ascending=False).columns)\n    print(df.sort_values(by='col1\n",
        "def main():\n    import pandas as pd\n    df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})\n    print(df)\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.mean())\n    print(df.std())\n    print(df.var())\n    print(df.median())\n    print(df.corr())\n    print(df.cov())\n    print(df.skew())\n    print(df.kurt())\n    print(df.quantile(0.25))\n    print(df.quantile(0.5))\n    print(df.quantile(0.75))\n    print(df.quantile([0.25, 0.5, 0.75]))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='lower'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='higher'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='midpoint'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='nearest'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='linear'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='midpoint'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='nearest'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='linear'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='midpoint'))\n    print(df.quantile([0.25, 0.5, 0.75], interpolation='nearest'))\n    print(df.quantile([0.25 method='nearest', tolerance=0.1))\n    print(df.dtypes.get_indexer(['int64', 'float64'], method='pad', tolerance=0.1, limit=1))\n    print(df.dtypes.get_indexer(['int64', 'float64'\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('data/olympics.csv')\n    print(df.head())\n    print(df.tail())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.values)\n    print(df.dtypes)\n    print(df.shape)\n    print(df.ndim)\n    print(df.size)\n    print(df.memory_usage())\n    print(df.dtypes.value_counts())\n    print(df.dtypes.value_counts().sort_index())\n    print(df.dtypes.value_counts().sort_index().plot(kind='bar'))\n    print(df.dtypes.value_counts().sort_index().plot(kind='barh'))\n    print(df.dtypes.value_counts().sort_index().plot(kind='area'))\n    print(df.dtypes.value_counts().sort_index().plot(kind='pie'))\n    print(df.dtypes.value_counts().sort_index().plot(kind='barh', subplots=True))\n    print(df.dtypes.value_counts().sort_index().plot(kind='barh', subplots=True, layout=(2,2)))\n    print(df.dtypes.value_counts().sort_index().plot(kind='barh', subplots=True, layout=(2,2), figsize=(10,10)))\n    print(df.dtypes.value_counts().sort_index().plot(kind='barh', subplots=True, layout=(2,2), figsize=(10,10), title='Barh'))\n    print(df.dtypes.value_counts().sort_index().plot(kind='barh', subplots=True, layout=(2,2), figsize=(10,10), title='Barh', legend=True))\n    print(df.dtypes.value_counts().sort_index().plot(\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('../data/titanic.csv')\n    print(df.head())\n    print(df.info())\n    print(df.describe())\n    print(df.columns)\n    print(df.index)\n    print(df.dtypes)\n    print(df.values)\n    print(df.shape)\n    print(df.T)\n    print(df.sort_index(axis=1, ascending=False))\n    print(df.sort_index(axis=0, ascending=False))\n    print(df.sort_values(by='age', ascending=False))\n    print(df.sort_values(by=['age', 'fare'], ascending=False))\n    print(df.sort_values(by=['age', 'fare'], ascending=[False, True]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[False, False]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, True]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, False]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, True]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, False]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[False, True]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[False, False]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[False, True]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[False, False]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, True]))\n    print(df.sort_values(by=['age', 'fare'], ascending=[True, False]))\n    print(df\n"
    ],
    "results": 10
},{
    "id": "204",
    "source": "soSearches",
    "language": "python",
    "query": "how to check repeating characters python",
    "snippets": [
        "def check_repeating(string):\n    for i in range(len(string)):\n        if string[i] in string[i+1:]:\n            return True\n    return False\n",
        "def check_repeat(string):\n    for i in range(len(string)):\n        if string.count(string[i]) > 1:\n            return True\n    return False\n",
        "def check_repeating(string):\n    for i in range(len(string)):\n        if string[i] == string[i+1]:\n            return True\n    return False\n",
        "def check_repeating(string):\n    for i in range(len(string)):\n        if string.count(string[i]) > 1:\n            return True\n    return False\n"
    ],
    "results": 10
},{
    "id": "205",
    "source": "soSearches",
    "language": "python",
    "query": "how to combine two list items randomly python",
    "snippets": [
        "def combine_list(list1, list2):\n    list3 = []\n    for i in range(len(list1)):\n        list3.append(list1[i])\n        list3.append(list2[i])\n    return list3\n",
        "def random_combine(list1, list2):\n    list1_len = len(list1)\n    list2_len = len(list2)\n    list1_index = 0\n    list2_index = 0\n    new_list = []\n    while list1_index < list1_len and list2_index < list2_len:\n        if random.randint(0, 1) == 0:\n            new_list.append(list1[list1_index])\n            list1_index += 1\n        else:\n            new_list.append(list2[list2_index])\n            list2_index += 1\n    while list1_index < list1_len:\n        new_list.append(list1[list1_index])\n        list1_index += 1\n    while list2_index < list2_len:\n        new_list.append(list2[list2_index])\n        list2_index += 1\n    return new_list\n",
        "def random_combine(list1, list2):\n    list1_len = len(list1)\n    list2_len = len(list2)\n    list1_index = 0\n    list2_index = 0\n    new_list = []\n    while list1_index < list1_len and list2_index < list2_len:\n        if random.randint(0, 1) == 0:\n            new_list.append(list1[list1_index])\n            list1_index += 1\n        else:\n            new_list.append(list2[list2_index])\n            list2_index += 1\n    if list1_index == list1_len:\n        new_list.extend(list2[list2_index:])\n    else:\n        new_list.extend(list1[list1_index:])\n    return new_list\n",
        "def combine_list(list1, list2):\n    list3 = []\n    while list1 and list2:\n        list3.append(list1.pop(0) + list2.pop(0))\n    return list3 + list1 + list2\n",
        "def random_combine(list1, list2):\n    list3 = []\n    while list1 and list2:\n        list3.append(list1.pop(0))\n        list3.append(list2.pop(0))\n    if list1:\n        list3.extend(list1)\n    if list2:\n        list3.extend(list2)\n    return list3\n",
        "def random_combine(list1, list2):\n    list3 = []\n    while list1 and list2:\n        list3.append(random.choice(list1) + random.choice(list2))\n        list1.remove(random.choice(list1))\n        list2.remove(random.choice(list2))\n    return list3\n",
        "def random_combine(list1, list2):\n    list3 = []\n    while len(list1) > 0 and len(list2) > 0:\n        if random.randint(0, 1) == 0:\n            list3.append(list1.pop(0))\n        else:\n            list3.append(list2.pop(0))\n    return list3 + list1 + list2\n",
        "def main():\n    # create a list of names\n    names = [\"John\", \"Paul\", \"George\", \"Ringo\"]\n    # create a list of ages\n    ages = [25, 30, 35, 40]\n    # create a list of tuples\n    people = list(zip(names, ages))\n    # print the list of tuples\n    print(people)\n    # create a list of random numbers\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # create a list of random numbers\n    numbers2 = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n    # create a list of random numbers\n    numbers3 = [21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n    # create a list of random numbers\n    numbers4 = [31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n    # create a list of random numbers\n    numbers5 = [41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n    # create a list of random numbers\n    numbers6 = [51, 52, 53, 54, 55, 56, 57, 58, 59, 60]\n    # create a list of random numbers\n    numbers7 = [61, 62, 63, 64, 65, 66, 67, 68, 69, 70]\n    # create a list of random numbers\n    numbers8 = [71, 72, 73, 74, 75, 76, 77, 78, 79, 80]\n    # create a list of random numbers\n    numbers9 = [81, 82, 83, 84, 85, 86, 87, 88, 89, 90]\n    # create a list of random numbers\n    numbers10 = [91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n    # create a list of random numbers\n    numbers11 = [101, 102, 103, 104, 105, 106, 107, 108, 109, 110]\n    # create a list of random numbers\n    numbers12 = [111, 112, 113, 114, 115, 116, 117, 118,\n",
        "def random_combine(list1, list2):\n    list3 = []\n    while len(list1) > 0 and len(list2) > 0:\n        if random.random() < 0.5:\n            list3.append(list1.pop(0))\n        else:\n            list3.append(list2.pop(0))\n    list3.extend(list1)\n    list3.extend(list2)\n    return list3\n"
    ],
    "results": 9
},{
    "id": "206",
    "source": "soSearches",
    "language": "python",
    "query": "how to create inverse matrix in python",
    "snippets": [
        "def inverse(matrix):\n    if len(matrix) != len(matrix[0]):\n        return None\n    if len(matrix) == 1:\n        return [[1/matrix[0][0]]]\n    else:\n        return [[matrix[1][1]*matrix[2][2] - matrix[1][2]*matrix[2][1],\n                matrix[0][2]*matrix[2][1] - matrix[0][1]*matrix[2][2],\n                matrix[0][1]*matrix[1][2] - matrix[0][2]*matrix[1][1]],\n                [matrix[1][2]*matrix[2][0] - matrix[1][0]*matrix[2][2],\n                matrix[0][0]*matrix[2][2] - matrix[0][2]*matrix[2][0],\n                matrix[0][2]*matrix[1][0] - matrix[0][0]*matrix[1][2]],\n                [matrix[1][0]*matrix[2][1] - matrix[1][1]*matrix[2][0],\n                matrix[0][1]*matrix[2][0] - matrix[0][0]*matrix[2][1],\n                matrix[0][0]*matrix[1][1] - matrix[0][1]*matrix[1][0]]]\n",
        "def inverse(matrix):\n    if len(matrix) != len(matrix[0]):\n        return None\n    if len(matrix) == 1:\n        return [[1/matrix[0][0]]]\n    if len(matrix) == 2:\n        return [[matrix[1][1]/matrix[0][0], -matrix[1][0]/matrix[0][0]], [-matrix[1][1]/matrix[0][0], matrix[1][0]/matrix[0][0]]]\n    else:\n        return [[matrix[1][1]/matrix[0][0], -matrix[1][0]/matrix[0][0]], [-matrix[1][1]/matrix[0][0], matrix[1][0]/matrix[0][0]]]\n        return [[matrix[1][1]/matrix[0][0], -matrix[1][0]/matrix[0][0]], [-matrix[1][1]/matrix[0][0], matrix[1][0]/matrix[0][0]]]\n        return [[matrix[1][1]/matrix[0][0], -matrix[1][0]/matrix[0][0]], [-matrix[1][1]/matrix[0][0], matrix[1][0]/matrix[0][0]]]\n        return [[matrix[1][1]/matrix[0][0], -matrix[1][0]/matrix[0][0]], [-matrix[1][1]/matrix[0][0], matrix[1][0]/matrix[0][0]]]\n        return [[matrix[1][1]/matrix[0][0], -matrix[1][0]/matrix[0][0]], [-matrix[1][1]/matrix[0][0], matrix[1][0]/matrix[0][0]]]\n        return [[matrix[1][1]/matrix[0][0], -matrix[1][0]/matrix[\n",
        "def inverse(matrix):\n    if len(matrix) == 1:\n        return [[1/matrix[0][0]]]\n    else:\n        return [[matrix[1][1]*matrix[0][2]-matrix[1][2]*matrix[0][1],\n                matrix[1][2]*matrix[0][0]-matrix[1][0]*matrix[0][2],\n                matrix[1][0]*matrix[0][1]-matrix[1][1]*matrix[0][0]],\n                [matrix[2][1]*matrix[0][2]-matrix[2][2]*matrix[0][1],\n                matrix[2][2]*matrix[0][0]-matrix[2][0]*matrix[0][2],\n                matrix[2][0]*matrix[0][1]-matrix[2][1]*matrix[0][0]],\n                [matrix[0][1]*matrix[1][2]-matrix[0][2]*matrix[1][1],\n                matrix[0][2]*matrix[1][0]-matrix[0][0]*matrix[1][2],\n                matrix[0][0]*matrix[1][1]-matrix[0][1]*matrix[1][0]]]\n",
        "def inverse(matrix):\n    if len(matrix) == 1:\n        return [[1/matrix[0][0]]]\n    else:\n        return [[matrix[1][1]*matrix[0][0] - matrix[1][0]*matrix[0][1]] / (matrix[0][0]*matrix[1][1] - matrix[1][0]*matrix[0][1]),\n                [-matrix[1][1]*matrix[0][1] + matrix[1][0]*matrix[0][0]] / (matrix[0][0]*matrix[1][1] - matrix[1][0]*matrix[0][1]),\n                [matrix[0][1]*matrix[1][1] - matrix[0][0]*matrix[1][0]] / (matrix[0][0]*matrix[1][1] - matrix[1][0]*matrix[0][1])]\n",
        "def inverse(matrix):\n    if len(matrix) == 1:\n        return [[1/matrix[0][0]]]\n    else:\n        return [[matrix[1][1]*matrix[2][2] - matrix[1][2]*matrix[2][1], matrix[1][2]*matrix[2][0] - matrix[1][0]*matrix[2][2], matrix[1][0]*matrix[2][1] - matrix[1][1]*matrix[2][0]],\n                [matrix[0][2]*matrix[2][1] - matrix[0][1]*matrix[2][2], matrix[0][0]*matrix[2][2] - matrix[0][2]*matrix[2][0], matrix[0][1]*matrix[2][0] - matrix[0][0]*matrix[2][1]],\n                [matrix[0][1]*matrix[1][2] - matrix[0][2]*matrix[1][1], matrix[0][2]*matrix[1][0] - matrix[0][0]*matrix[1][2], matrix[0][0]*matrix[1][1] - matrix[0][1]*matrix[1][0]]]\n",
        "def inverse(matrix):\n    if len(matrix) == 1:\n        return [[1/matrix[0][0]]]\n    else:\n        return [[matrix[1][1]*matrix[2][2]-matrix[1][2]*matrix[2][1],\n                -matrix[1][0]*matrix[2][2]+matrix[1][2]*matrix[2][0],\n                matrix[1][0]*matrix[2][1]-matrix[1][1]*matrix[2][0]],\n                [-matrix[0][1]*matrix[2][2]+matrix[0][2]*matrix[2][1],\n                matrix[0][0]*matrix[2][2]-matrix[0][2]*matrix[2][0],\n                -matrix[0][0]*matrix[2][1]+matrix[0][1]*matrix[2][0]],\n                [matrix[0][1]*matrix[1][2]-matrix[0][2]*matrix[1][1],\n                -matrix[0][0]*matrix[1][2]+matrix[0][2]*matrix[1][0],\n                matrix[0][0]*matrix[1][1]-matrix[0][1]*matrix[1][0]]]\n",
        "def inverse(matrix):\n    if len(matrix) != len(matrix[0]):\n        return None\n    else:\n        return [[matrix[j][i] for j in range(len(matrix))] for i in range(len(matrix[0]))]\n",
        "def inverse(matrix):\n    if len(matrix) != len(matrix[0]):\n        return None\n    else:\n        return [[matrix[i][j] / matrix[j][j] for j in range(len(matrix))] for i in range(len(matrix))]\n"
    ],
    "results": 10
},{
    "id": "207",
    "source": "soSearches",
    "language": "python",
    "query": "how to use keys in python 3.4.3",
    "snippets": [
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # get the value of the key 'name'\n    print(my_dict['name'])\n    # get the value of the key 'age'\n    print(my_dict['age'])\n    # get the value of the key 'city'\n    print(my_dict['city'])\n    # get the value of the key 'country'\n    print(my_dict['country'])\n    # get the value of the key 'country'\n    # if the key is not in the dictionary, it will return None\n    print(my_dict.get('country'))\n    # get the value of the key 'country'\n    # if the key is not in the dictionary, it will return 'default'\n    print(my_dict.get('country', 'default'))\n    # get the value of the key 'country'\n    # if the key is not in the dictionary, it will return 'default'\n    print(my_dict.get('country', 'default'))\n    # get the value of the key 'country'\n    # if the key is not in the dictionary, it will return 'default'\n    print(my_dict.get('country', 'default'))\n    # get the value of the key 'country'\n    # if the key is not in the dictionary, it will return 'default'\n    print(my_dict.get('country', 'default'))\n    # get the value of the key 'country'\n    # if the key is not in the dictionary, it will return 'default'\n    print(my_dict.get('country', 'default'))\n    # get the value of the key 'country'\n    # if the key is not in the dictionary, it will return 'default'\n    print(my_dict.get('country', 'default'))\n    # get the value of the key 'country'\n    # if the key is not in the dictionary, it will return 'default'\n    print(my_dict.get('country', 'default'))\n    # get the value of the key\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27'}\n    # get the value of the key 'name'\n    print(my_dict['name'])\n    # get the value of the key 'age'\n    print(my_dict['age'])\n    # get the value of the key 'city'\n    print(my_dict['city'])\n    # get the value of the key 'city'\n    # if the key 'city' does not exist, it will return 'None'\n    print(my_dict.get('city'))\n    # get the value of the key 'city'\n    # if the key 'city' does not exist, it will return 'None'\n    print(my_dict.get('city', 'Not Found'))\n    # get the value of the key 'city'\n    # if the key 'city' does not exist, it will return 'Not Found'\n    print(my_dict.get('city', 'Not Found'))\n    # get the value of the key 'city'\n    # if the key 'city' does not exist, it will return 'Not Found'\n    print(my_dict.get('city', 'Not Found'))\n    # get the value of the key 'city'\n    # if the key 'city' does not exist, it will return 'Not Found'\n    print(my_dict.get('city', 'Not Found'))\n    # get the value of the key 'city'\n    # if the key 'city' does not exist, it will return 'Not Found'\n    print(my_dict.get('city', 'Not Found'))\n    # get the value of the key 'city'\n    # if the key 'city' does not exist, it will return 'Not Found'\n    print(my_dict.get('city', 'Not Found'))\n    # get the value of the key 'city'\n    # if the key 'city' does not exist, it will return 'Not Found'\n    print(my_dict.get('city', 'Not Found'))\n    # get the value of the key 'city'\n    # if\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'John', 'age': '27', 'city': 'New York'}\n    # use the key to access the value\n    print(my_dict['name'])\n    print(my_dict['age'])\n    print(my_dict['city'])\n    # add a new key-value pair\n    my_dict['state'] = 'New York'\n    print(my_dict)\n    # remove a key-value pair\n    del my_dict['state']\n    print(my_dict)\n    # use the in operator to check if a key is in the dictionary\n    if 'name' in my_dict:\n        print('name is in the dictionary')\n    # use the len function to get the number of key-value pairs\n    print(len(my_dict))\n    # use the keys function to get a list of all the keys\n    print(my_dict.keys())\n    # use the values function to get a list of all the values\n    print(my_dict.values())\n    # use the items function to get a list of all the key-value pairs\n    print(my_dict.items())\n    # use the get function to access a value by key\n    print(my_dict.get('name'))\n    print(my_dict.get('name2', 'not found'))\n    # use the update function to add multiple key-value pairs\n    my_dict.update({'name': 'John', 'age': '27', 'city': 'New York'})\n    print(my_dict)\n    # use the clear function to remove all key-value pairs\n    my_dict.clear()\n    print(my_dict)\n    # use the copy function to create a copy of the dictionary\n    my_dict2 = my_dict.copy()\n    print(my_dict2)\n    # use the pop function to remove a key-value pair\n    my_dict.pop('name')\n    print(my_dict)\n    # use the popitem function to remove a random key-value pair\n    my_dict.popitem()\n    print(my_\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'Chris', 'city': 'Seattle', 'cake': 'chocolate'}\n    # use the get method to access a key\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'none'))\n    # use the get method to access a key\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'none'))\n    # use the get method to access a key\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'none'))\n    # use the get method to access a key\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'none'))\n    # use the get method to access a key\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'none'))\n    # use the get method to access a key\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'none'))\n    # use the get method to access a key\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'none'))\n"
    ],
    "results": 4
},{
    "id": "208",
    "source": "soSearches",
    "language": "python",
    "query": "python how to not count digit in string",
    "snippets": [
        "def count_digit(string):\n    count = 0\n    for i in string:\n        if i.isdigit():\n            count += 1\n    return count\n",
        "def count_digit(s):\n    count = 0\n    for i in s:\n        if i.isdigit():\n            count += 1\n    return count\n",
        "def count_digit(s):\n    return sum(c.isdigit() for c in s)\n",
        "def count_digit(string):\n    return sum(1 for c in string if c.isdigit())\n",
        "def count_digit(string):\n    return sum(c.isdigit() for c in string)\n"
    ],
    "results": 10
},{
    "id": "209",
    "source": "soSearches",
    "language": "python",
    "query": "how to find character in string python",
    "snippets": [
        "def find_char(word, char):\n    for i in range(len(word)):\n        if word[i] == char:\n            return i\n    return -1\n",
        "def find_char(word, char):\n    for i in word:\n        if i == char:\n            return True\n    return False\n"
    ],
    "results": 10
},{
    "id": "210",
    "source": "soSearches",
    "language": "python",
    "query": "how to send data multithreaded in sequence socket python",
    "snippets": [
        "def main():\n    import socket\n    import threading\n    import time\n    import sys\n    import random\n\n    # create a socket object\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n    # get local machine name\n    host = socket.gethostname()\n\n    port = 9999\n\n    # connection to hostname on the port.\n    s.connect((host, port))\n\n    # Receive no more than 1024 bytes\n    msg = s.recv(1024)\n\n    print(msg.decode('ascii'))\n\n    # close the connection\n    s.close()\n",
        "def main():\n    import socket\n    import threading\n    import time\n\n    host = 'localhost'\n    port = 50000\n    backlog = 5\n    bufsize = 1024\n    addr = (host, port)\n    serv = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    serv.bind(addr)\n    serv.listen(backlog)\n    print('listening on', addr)\n\n    while True:\n        client, addr = serv.accept()\n        print('client connected from', addr)\n        threading.Thread(target=handle_client, args=(client,)).start()\n        time.sleep(0.1)\n",
        "def main():\n    import socket\n    import threading\n    import time\n    import sys\n    import random\n    import struct\n    import argparse\n\n    parser = argparse.ArgumentParser(description='Send data to a socket in sequence')\n    parser.add_argument('--host', default='localhost', help='Host to connect to')\n    parser.add_argument('--port', default=9999, type=int, help='Port to connect to')\n    parser.add_argument('--size', default=1024, type=int, help='Size of data to send')\n    parser.add_argument('--count', default=10, type=int, help='Number of packets to send')\n    parser.add_argument('--delay', default=0, type=int, help='Delay between packets')\n    parser.add_argument('--random', default=False, action='store_true', help='Randomize data')\n    parser.add_argument('--threads', default=1, type=int, help='Number of threads to use')\n    args = parser.parse_args()\n\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.connect((args.host, args.port))\n\n    data = bytearray(args.size)\n    if args.random:\n        for i in range(args.size):\n            data[i] = random.randint(0, 255)\n\n    def send_data(i):\n        for j in range(args.count):\n            sock.send(data)\n            time.sleep(args.delay / 1000)\n\n    threads = []\n    for i in range(args.threads):\n        t = threading.Thread(target=send_data, args=(i,))\n        t.start()\n        threads.append(t)\n\n    for t in threads:\n        t.join()\n",
        "def main():\n    import socket\n    import threading\n    import time\n    import sys\n    import random\n    import struct\n    import argparse\n    import logging\n    import logging.handlers\n    import os\n    import signal\n    import subprocess\n    import re\n    import json\n    import csv\n    import datetime\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.colors as colors\n    import matplotlib.cm as cmx\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.\n",
        "def main():\n    import socket\n    import threading\n    import time\n    import sys\n    import random\n    import string\n    import json\n    import os\n    import signal\n    import subprocess\n    import shlex\n    import re\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import traceback\n    import pdb\n    import pprint\n    import csv\n    import ctypes\n    import collections\n    import itertools\n    import functools\n    import operator\n    import math\n    import numpy\n    import scipy\n    import matplotlib\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.collections as collections\n    import matplotlib.gridspec as gridspec\n    import matplotlib.font_manager as font_manager\n    import matplotlib.style as style\n    import matplotlib.backends.backend_pdf as backend_pdf\n    import matplotlib.backends.backend_agg as backend_agg\n    import matplotlib.backends.backend_ps as backend_ps\n    import matplotlib.backends.backend_svg as backend_svg\n    import matplotlib.backends.backend_tkagg as backend_tkagg\n    import matplotlib.backends.backend_webagg as backend_webagg\n    import matplotlib.backends.backend_qt4agg as backend_qt4agg\n    import matplotlib.backends.backend_qt5agg as backend_qt5agg\n    import matplotlib.backends.backend_gtk3agg as backend_gtk3agg\n    import matplotlib.backends.backend_gtkagg as backend_gtkagg\n    import matplotlib.backends.backend_wxagg as backend_wxagg\n    import matplotlib.backends.backend_agg as backend_agg\n",
        "def main():\n    import socket\n    import threading\n    import time\n    import sys\n    import random\n    import struct\n    import argparse\n    import os\n    import signal\n    import subprocess\n    import re\n    import json\n    import datetime\n    import pdb\n    import csv\n    import math\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.colors as mcolors\n    import matplotlib.cm as cm\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as mcolors\n    import matplotlib.cm as cm\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as mcolors\n    import matplotlib.cm as cm\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as mcolors\n    import mat\n"
    ],
    "results": 6
},{
    "id": "211",
    "source": "soSearches",
    "language": "python",
    "query": "[python] how to generate random number",
    "snippets": [
        "def random_number():\n    import random\n    return random.randint(1, 100)\n",
        "def random_number(n):\n    import random\n    return random.randint(0, n)\n",
        "def random_number(n):\n    import random\n    return random.randint(1, n)\n"
    ],
    "results": 10
},{
    "id": "212",
    "source": "soSearches",
    "language": "python",
    "query": "how to find crypt mdule in python",
    "snippets": [
        "def main():\n    import crypt\n    print(crypt.crypt('password', 'salt'))\n    print(crypt.crypt('password', '$6$salt'))\n    print(crypt.crypt('password', '$5$salt'))\n    print(crypt.crypt('password', '$1$salt'))\n    print(crypt.crypt('password', '$2$salt'))\n    print(crypt.crypt('password', '$3$salt'))\n    print(crypt.crypt('password', '$4$salt'))\n    print(crypt.crypt('password', '$7$salt'))\n    print(crypt.crypt('password', '$8$salt'))\n    print(crypt.crypt('password', '$9$salt'))\n    print(crypt.crypt('password', '$a$salt'))\n    print(crypt.crypt('password', '$b$salt'))\n    print(crypt.crypt('password', '$c$salt'))\n    print(crypt.crypt('password', '$d$salt'))\n    print(crypt.crypt('password', '$e$salt'))\n    print(crypt.crypt('password', '$f$salt'))\n    print(crypt.crypt('password', '$g$salt'))\n    print(crypt.crypt('password', '$h$salt'))\n    print(crypt.crypt('password', '$i$salt'))\n    print(crypt.crypt('password', '$j$salt'))\n    print(crypt.crypt('password', '$k$salt'))\n    print(crypt.crypt('password', '$l$salt'))\n    print(crypt.crypt('password', '$m$salt'))\n    print(crypt.crypt('password', '$n$salt'))\n    print(crypt.crypt('password', '$o$salt'))\n    print(crypt.crypt('password', '$p$salt'))\n    print(crypt.crypt('password', '$q$salt'))\n    print(crypt.crypt('password',\n",
        "def main():\n    import crypt\n    print(crypt.crypt('test', '$6$'))\n    print(crypt.crypt('test', '$5$'))\n    print(crypt.crypt('test', '$4$'))\n    print(crypt.crypt('test', '$3$'))\n    print(crypt.crypt('test', '$2$'))\n    print(crypt.crypt('test', '$1$'))\n    print(crypt.crypt('test', '$0$'))\n    print(crypt.crypt('test', '$7$'))\n    print(crypt.crypt('test', '$8$'))\n    print(crypt.crypt('test', '$9$'))\n    print(crypt.crypt('test', '$a$'))\n    print(crypt.crypt('test', '$b$'))\n    print(crypt.crypt('test', '$c$'))\n    print(crypt.crypt('test', '$d$'))\n    print(crypt.crypt('test', '$e$'))\n    print(crypt.crypt('test', '$f$'))\n    print(crypt.crypt('test', '$g$'))\n    print(crypt.crypt('test', '$h$'))\n    print(crypt.crypt('test', '$i$'))\n    print(crypt.crypt('test', '$j$'))\n    print(crypt.crypt('test', '$k$'))\n    print(crypt.crypt('test', '$l$'))\n    print(crypt.crypt('test', '$m$'))\n    print(crypt.crypt('test', '$n$'))\n    print(crypt.crypt('test', '$o$'))\n    print(crypt.crypt('test', '$p$'))\n    print(crypt.crypt('test', '$q$'))\n    print(crypt.crypt('test', '$r$'))\n    print(crypt.crypt('test', '$s$'))\n    print(crypt.crypt('test', '$t$'))\n    print(crypt.crypt('test', '$u\n"
    ],
    "results": 3
},{
    "id": "213",
    "source": "soSearches",
    "language": "python",
    "query": "python  how to multiple many histograms in one picture",
    "snippets": [
        "def main():\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n    import os\n    import pandas as pd\n    import datetime as dt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n    import os\n    import pandas as pd\n    import datetime as dt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n    import os\n    import pandas as pd\n    import datetime as dt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n    import os\n    import pandas as pd\n    import datetime as dt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n    import os\n    import pandas as pd\n    import datetime as dt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n    import os\n    import pandas as pd\n    import datetime as dt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n    import os\n    import pandas as pd\n    import datetime as dt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n    import os\n    import pandas as pd\n    import datetime as dt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.image as mpimg\n",
        "def main():\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.colors as colors\n    import matplotlib.cm as cmx\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as m\n",
        "def main():\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.mlab as mlab\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.ticker as ticker\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.path as path\n    import matplotlib.lines as lines\n    import matplotlib.text as text\n    import matplotlib.image as image\n    import matplotlib.gridspec as gridspec\n    import matplotlib.axes as axes\n    import matplotlib.axis as axis\n    import matplotlib.artist as artist\n    import matplotlib.ticker as ticker\n    import matplotlib.legend as legend\n    import matplotlib.figure as figure\n    import matplotlib.animation as animation\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.collections as collections\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.widgets as widgets\n    import matplotlib.cbook as cbook\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4 as qt4\n    import matplotlib.backends.backend_qt5 as qt5\n    import matplotlib.backends.backend_gtk3 as gtk3\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import sys\n    import os\n    import matplotlib.mlab as mlab\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.ticker as ticker\n    import matplotlib.colorbar as colorbar\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.gridspec as gridspec\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    # create a list of random numbers\n    x = np.random.randn(1000)\n    # create a histogram of the data\n    n, bins, patches = plt.hist(x, 50, normed=1, facecolor='g', alpha=0.75)\n    plt.xlabel('Smarts')\n    plt.ylabel('Probability')\n    plt.title('Histogram of IQ')\n    plt.text(60, .025, r'$\\mu=100,\\ \\sigma=15$')\n    plt.axis([40, 160, 0, 0.03])\n    plt.grid(True)\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import sys\n    import os\n    import argparse\n    import math\n    import re\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import sys\n    sys.path.append('/home/tarena/aid1908/code/day07')\n    from mymodule import myplotlib as mp\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n    plt.figure(figsize=(8, 4))\n    plt.subplot(121)\n    plt.plot(x, y, 'r-')\n    plt.subplot(122)\n    plt.plot(x, y, 'b-')\n    plt.show()\n    mp.myplotlib()\n"
    ],
    "results": 7
},{
    "id": "214",
    "source": "soSearches",
    "language": "python",
    "query": "sql how to import json data from url using python",
    "snippets": [
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    url = urllib.request.urlopen('http://www.w3.org/Addressing/URL/url-spec.txt')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Pages\n        (id INTEGER PRIMARY KEY, url TEXT UNIQUE, html TEXT,\n        error INTEGER, old_rank REAL, new_rank REAL)''')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Links\n        (from_id INTEGER, to_id INTEGER)''')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Webs (url TEXT UNIQUE)''')\n    cur.execute('INSERT OR IGNORE INTO Webs (url) VALUES (?)', (url,))\n    cur.execute('INSERT OR IGNORE INTO Pages (url, html, new_rank) VALUES ( ?, NULL, 1.0)', (url,))\n    conn.commit()\n    cur.close()\n    print('Added start page to database.')\n    crawl_web(url)\n    print('Crawling finished.')\n    cur = conn.cursor()\n    cur.execute('SELECT * FROM Pages')\n    for row in cur:\n        print(row)\n    cur.close()\n    cur = conn.cursor()\n    cur.execute('SELECT * FROM Links')\n    for row in cur:\n        print(row)\n    cur.close()\n    cur = conn.cursor()\n    cur.execute('SELECT * FROM Webs')\n    for row in cur:\n        print(row)\n    cur.close()\n    conn.close()\n    print('Database closed.')\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    url = urllib.request.urlopen('http://www.w3.org/Addressing/URL/url-spec.txt')\n    cur.execute('DROP TABLE IF EXISTS Pages')\n    cur.execute('CREATE TABLE Pages (id INTEGER PRIMARY KEY, url TEXT, html TEXT, error INTEGER, old_rank REAL, new_rank REAL)')\n    cur.execute('CREATE INDEX IF NOT EXISTS rank_index ON Pages (new_rank DESC)')\n    cur.execute('INSERT INTO Pages (url, html, new_rank) VALUES (?, ?, 1.0)', (url, html))\n    conn.commit()\n    cur.close()\n    conn.close()\n    return\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    import json\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    url = urllib.request.urlopen('http://python-data.dr-chuck.net/comments_42.json')\n    data = url.read()\n    info = json.loads(data)\n    for item in info['comments']:\n        print(item['name'], item['count'])\n    cur.close()\n    conn.close()\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS Counts')\n    cur.execute('CREATE TABLE Counts (org TEXT, count INTEGER)')\n    url = urllib.request.urlopen('http://www.py4e.com/code3/romeo.txt')\n    text = url.read()\n    print(text)\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS Counts')\n    cur.execute('CREATE TABLE Counts (org TEXT, count INTEGER)')\n    for line in text:\n        line = line.decode()\n        if not line.startswith('From '):\n            continue\n        pieces = line.split()\n        email = pieces[1]\n        org = email[:email.index('@')]\n        cur.execute('SELECT count FROM Counts WHERE org = ? ', (org,))\n        row = cur.fetchone()\n        if row is None:\n            cur.execute('INSERT INTO Counts (org, count) VALUES (?, 1)', (org,))\n        else:\n            cur.execute('UPDATE Counts SET count = count + 1 WHERE org = ?',\n                        (org,))\n    conn.commit()\n    print('Counts:')\n    cur.execute('SELECT org, count FROM Counts ORDER BY count DESC LIMIT 10')\n    for row in cur:\n        print(str(row[0]), row[1])\n    cur.close()\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS JSON')\n    cur.execute('CREATE TABLE JSON (data)')\n    print(\"Downloading JSON data for start URLs...\")\n    for url in ['http://python-data.dr-chuck.net/comments_42.json',\n                'http://python-data.dr-chuck.net/comments_237852.json',\n                'http://python-data.dr-chuck.net/comments_237853.json']:\n        cur.execute('INSERT INTO JSON (data) VALUES (?)',\n                    (url,))\n    conn.commit()\n    cur.execute('SELECT * FROM JSON')\n    print(cur.fetchall())\n    cur.close()\n    conn.close()\n    print(\"Done.\")\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS Pages')\n    cur.execute('CREATE TABLE Pages (id INTEGER PRIMARY KEY, html TEXT, url TEXT)')\n    print(\"Retrieving page html\")\n    url = 'http://www.dr-chuck.com/page1.htm'\n    #url = 'http://www.dr-chuck.com/page2.htm'\n    #url = 'http://www.dr-chuck.com/page3.htm'\n    #url = 'http://www.dr-chuck.com/page4.htm'\n    html = urllib.request.urlopen(url).read()\n    print(\"Inserting page html into database\")\n    cur.execute('INSERT INTO Pages (html, url) VALUES (?, ?)', (memoryview(html), url))\n    conn.commit()\n    print(\"Database created successfully\")\n    conn.close()\n",
        "def main():\n    import sqlite3\n    import json\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    url = urllib.request.urlopen('http://www.w3.org/Addressing/URL/url-spec.txt')\n    str_data = url.read()\n    data = json.loads(str_data)\n    for item in data:\n        cur.execute('INSERT INTO Pages (url, html, new_rank) VALUES ( ?, NULL, 1.0 )', ( item['url'], ) )\n        conn.commit()\n        cur.execute('SELECT id FROM Pages WHERE url = ?', ( item['url'], ))\n        db_id = cur.fetchone()[7]\n        for link in item['links']:\n            cur.execute('INSERT INTO Links (from_id, to_id) VALUES ( ?, ? )', ( db_id, link['to'] ) )\n        conn.commit()\n    cur.close()\n    conn.close()\n",
        "def main():\n    import json\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    cur.execute('''CREATE TABLE IF NOT EXISTS Pages\n        (id INTEGER PRIMARY KEY, url TEXT UNIQUE, html TEXT,\n        error INTEGER, old_rank REAL, new_rank REAL)''')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Links\n        (from_id INTEGER, to_id INTEGER)''')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Webs (url TEXT UNIQUE)''')\n    #cur.execute('INSERT INTO Webs (url) VALUES (?)', (starturl, ))\n    # get the start url\n    starturl = input('Enter a URL to start with: ')\n    if (len(starturl) < 1):\n        starturl = 'http://www.dr-chuck.com/'\n    if (starturl.endswith('/')):\n        starturl = starturl[:-1]\n    web = starturl\n    if (starturl.endswith('.htm') or starturl.endswith('.html')):\n        pos = starturl.rfind('/')\n        web = starturl[:pos]\n    if (len(web) > 1):\n        cur.execute('INSERT OR IGNORE INTO Webs (url) VALUES (?)', (web, ))\n        cur.execute('INSERT OR IGNORE INTO Pages (url, html, new_rank) VALUES ( ?, NULL, 1.0)', (starturl, ))\n        conn.commit()\n    print('Starting with', starturl)\n    # get the links\n    while (True):\n        if (len(urls) == 0):\n            print('No more pages to crawl')\n            break\n        print('-------------------------------------------------------------------------------')\n        print('Pages to crawl:', len(urls))\n        print('Webs to crawl:', len(webs))\n        print('Links to crawl:', len(links))\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    import json\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS Pages')\n    cur.execute('CREATE TABLE Pages (id INTEGER PRIMARY KEY, html TEXT, url TEXT)')\n    print(\"Retrieving page html\")\n    url = 'http://python-data.dr-chuck.net/comments_42.json'\n    html = urllib.request.urlopen(url).read()\n    print(\"Parsing JSON\")\n    data = json.loads(html.decode('utf-8'))\n    print(\"Inserting JSON data into SQLite\")\n    for comment in data['comments']:\n        cur.execute('INSERT INTO Pages (html, url) VALUES (?, ?)', (comment['count'], url))\n    conn.commit()\n    print(\"Database created and populated\")\n    conn.close()\n",
        "def main():\n    import sqlite3\n    import requests\n    import json\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    url = 'http://pythonhow.com/data/tutorial.json'\n    r = requests.get(url)\n    data = r.text\n    info = json.loads(data)\n    for item in info['tutorials']:\n        cur.execute('INSERT INTO pages VALUES (?,?,?,?,?,?)', (item['title'], item['url'], item['views'], item['tags'], item['description'], item['published']))\n    conn.commit()\n    conn.close()\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    url = urllib.request.urlopen('http://www.w3.org/Addressing/URL/url-spec.txt')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Pages\n        (id INTEGER PRIMARY KEY, url TEXT UNIQUE, html TEXT,\n        error INTEGER, old_rank REAL, new_rank REAL)''')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Links\n        (from_id INTEGER, to_id INTEGER)''')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Webs (url TEXT UNIQUE)''')\n    cur.execute('INSERT OR IGNORE INTO Webs (url) VALUES (?)', (url,))\n    cur.execute('INSERT OR IGNORE INTO Pages (url, html, new_rank) VALUES ( ?, NULL, 1.0)', (url,))\n    conn.commit()\n    cur.close()\n    print('Added start page to database.')\n    crawl_web(url)\n    print('Crawling finished.')\n    cur = conn.cursor()\n    cur.execute('SELECT * FROM Pages')\n    for row in cur:\n        print(row)\n    cur.close()\n    cur = conn.cursor()\n    cur.execute('SELECT * FROM Links')\n    for row in cur:\n        print(row)\n    cur.close()\n    cur = conn.cursor()\n    cur.execute('SELECT * FROM Webs')\n    for row in cur:\n        print(row)\n    cur.close()\n    conn.close()\n    print('Database closed.')\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    url = urllib.request.urlopen('http://www.w3.org/Addressing/URL/url-spec.txt')\n    cur.execute('DROP TABLE IF EXISTS Pages')\n    cur.execute('CREATE TABLE Pages (id INTEGER PRIMARY KEY, url TEXT, html TEXT, error INTEGER, old_rank REAL, new_rank REAL)')\n    cur.execute('CREATE INDEX IF NOT EXISTS rank_index ON Pages (new_rank DESC)')\n    cur.execute('INSERT INTO Pages (url, html, new_rank) VALUES (?, ?, 1.0)', (url, html))\n    conn.commit()\n    cur.close()\n    conn.close()\n    return\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS Counts')\n    cur.execute('CREATE TABLE Counts (org TEXT, count INTEGER)')\n    url = urllib.request.urlopen('http://www.py4e.com/code3/romeo.txt')\n    text = url.read()\n    print(text)\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS Counts')\n    cur.execute('CREATE TABLE Counts (org TEXT, count INTEGER)')\n    for line in text:\n        line = line.decode()\n        if not line.startswith('From '):\n            continue\n        pieces = line.split()\n        email = pieces[1]\n        org = email[:email.index('@')]\n        cur.execute('SELECT count FROM Counts WHERE org = ? ', (org,))\n        row = cur.fetchone()\n        if row is None:\n            cur.execute('INSERT INTO Counts (org, count) VALUES (?, 1)', (org,))\n        else:\n            cur.execute('UPDATE Counts SET count = count + 1 WHERE org = ?',\n                        (org,))\n    conn.commit()\n    print('Counts:')\n    cur.execute('SELECT org, count FROM Counts ORDER BY count DESC LIMIT 10')\n    for row in cur:\n        print(str(row[0]), row[1])\n    cur.close()\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS Pages')\n    cur.execute('CREATE TABLE Pages (id INTEGER PRIMARY KEY, html TEXT, url TEXT)')\n    print(\"Retrieving page html\")\n    url = 'http://www.dr-chuck.com/page1.htm'\n    #url = 'http://www.dr-chuck.com/page2.htm'\n    #url = 'http://www.dr-chuck.com/page3.htm'\n    #url = 'http://www.dr-chuck.com/page4.htm'\n    html = urllib.request.urlopen(url).read()\n    print(\"Inserting page html into database\")\n    cur.execute('INSERT INTO Pages (html, url) VALUES (?, ?)', (memoryview(html), url))\n    conn.commit()\n    print(\"Database created successfully\")\n    conn.close()\n",
        "def main():\n    import sqlite3\n    import json\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    url = urllib.request.urlopen('http://www.w3.org/Addressing/URL/url-spec.txt')\n    str_data = url.read()\n    data = json.loads(str_data)\n    for item in data:\n        cur.execute('INSERT INTO Pages (url, html, new_rank) VALUES ( ?, NULL, 1.0 )', ( item['url'], ) )\n        conn.commit()\n        cur.execute('SELECT id FROM Pages WHERE url = ?', ( item['url'], ))\n        db_id = cur.fetchone()[0]\n        for link in item['links']:\n            cur.execute('INSERT INTO Links (from_id, to_id) VALUES ( ?, ? )', ( db_id, link['to'] ) )\n        conn.commit()\n    cur.close()\n    conn.close()\n",
        "def main():\n    import json\n    import sqlite3\n    import urllib.request\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    cur.execute('''CREATE TABLE IF NOT EXISTS Pages\n        (id INTEGER PRIMARY KEY, url TEXT UNIQUE, html TEXT,\n        error INTEGER, old_rank REAL, new_rank REAL)''')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Links\n        (from_id INTEGER, to_id INTEGER)''')\n    cur.execute('''CREATE TABLE IF NOT EXISTS Webs (url TEXT UNIQUE)''')\n    #cur.execute('INSERT INTO Webs (url) VALUES (?)', (starturl, ))\n    # get the start url\n    starturl = input('Enter a URL to start with: ')\n    if (len(starturl) < 1):\n        starturl = 'http://www.dr-chuck.com/'\n    if (starturl.endswith('/')):\n        starturl = starturl[:-1]\n    web = starturl\n    if (starturl.endswith('.htm') or starturl.endswith('.html')):\n        pos = starturl.rfind('/')\n        web = starturl[:pos]\n    if (len(web) > 1):\n        cur.execute('INSERT OR IGNORE INTO Webs (url) VALUES (?)', (web, ))\n        cur.execute('INSERT OR IGNORE INTO Pages (url, html, new_rank) VALUES ( ?, NULL, 1.0)', (starturl, ))\n        conn.commit()\n    print('Starting with', starturl)\n    # get the links\n    while (True):\n        if (len(urls) == 0):\n            print('No more pages to crawl')\n            break\n        print('-------------------------------------------------------------------------------')\n        print('Pages to crawl:', len(urls))\n        print('Webs to crawl:', len(webs))\n        print('Links to crawl:', len(links))\n",
        "def main():\n    import sqlite3\n    import urllib.request\n    import json\n    conn = sqlite3.connect('spider.sqlite')\n    cur = conn.cursor()\n    print(\"Creating JSON table\")\n    cur.execute('DROP TABLE IF EXISTS Pages')\n    cur.execute('CREATE TABLE Pages (id INTEGER PRIMARY KEY, html TEXT, url TEXT)')\n    print(\"Retrieving page html\")\n    url = 'http://python-data.dr-chuck.net/comments_42.json'\n    html = urllib.request.urlopen(url).read()\n    print(\"Parsing JSON\")\n    data = json.loads(html.decode('utf-8'))\n    print(\"Inserting JSON data into SQLite\")\n    for comment in data['comments']:\n        cur.execute('INSERT INTO Pages (html, url) VALUES (?, ?)', (comment['count'], url))\n    conn.commit()\n    print(\"Database created and populated\")\n    conn.close()\n"
    ],
    "results": 10
},{
    "id": "215",
    "source": "soSearches",
    "language": "python",
    "query": "how to append input in python list then print it",
    "snippets": [
        "def main():\n    list1 = []\n    list2 = []\n    list3 = []\n    list4 = []\n    list5 = []\n    list6 = []\n    list7 = []\n    list8 = []\n    list9 = []\n    list10 = []\n    list11 = []\n    list12 = []\n    list13 = []\n    list14 = []\n    list15 = []\n    list16 = []\n    list17 = []\n    list18 = []\n    list19 = []\n    list20 = []\n    list21 = []\n    list22 = []\n    list23 = []\n    list24 = []\n    list25 = []\n    list26 = []\n    list27 = []\n    list28 = []\n    list29 = []\n    list30 = []\n    list31 = []\n    list32 = []\n    list33 = []\n    list34 = []\n    list35 = []\n    list36 = []\n    list37 = []\n    list38 = []\n    list39 = []\n    list40 = []\n    list41 = []\n    list42 = []\n    list43 = []\n    list44 = []\n    list45 = []\n    list46 = []\n    list47 = []\n    list48 = []\n    list49 = []\n    list50 = []\n    list51 = []\n    list52 = []\n    list53 = []\n    list54 = []\n    list55 = []\n    list56 = []\n    list57 = []\n    list58 = []\n    list59 = []\n    list60 = []\n    list61 = []\n    list62 = []\n    list63 = []\n    list64 = []\n    list65 = []\n    list66 = []\n    list67 = []\n    list68 = []\n    list69 = []\n    list70 = []\n    list71 = []\n    list72 = []\n    list73 = []\n    list74 = []\n    list75 = []\n    list76 = []\n    list77 = []\n    list78 = []\n    list79 = []\n    list80 = []\n    list81 = []\n    list82 = []\n    list83 =\n",
        "def main():\n    l = []\n    while True:\n        s = input(\"Enter a string: \")\n        if s == \"\":\n            break\n        l.append(s)\n    print(l)\n",
        "def main():\n    a = [1, 2, 3]\n    b = [4, 5, 6]\n    a.extend(b)\n    print(a)\n",
        "def main():\n    l = []\n    while True:\n        n = input(\"Enter a number: \")\n        if n == \"done\":\n            break\n        try:\n            n = float(n)\n        except:\n            print(\"Invalid input\")\n            continue\n        l.append(n)\n    print(\"Maximum:\", max(l))\n    print(\"Minimum:\", min(l))\n    print(\"Sum:\", sum(l))\n    print(\"Average:\", sum(l)/len(l))\n"
    ],
    "results": 10
},{
    "id": "216",
    "source": "soSearches",
    "language": "python",
    "query": "how to use python code in ajax",
    "snippets": [
        "def get_data():\n    return {\n        'name': 'John',\n        'age': 30,\n        'city': 'New York'\n    }\n",
        "def get_data():\n    return {'name': 'John', 'age': '30'}\n",
        "def get_data():\n    return [\n        {'name': 'John', 'age': 20},\n        {'name': 'Jane', 'age': 21},\n        {'name': 'Jack', 'age': 22},\n        {'name': 'Jill', 'age': 23},\n    ]\n",
        "def get_data():\n    return \"Hello World\"\n",
        "def get_data():\n    return 'Hello World'\n",
        "def get_data():\n    return 'hello world'\n"
    ],
    "results": 10
},{
    "id": "217",
    "source": "soSearches",
    "language": "python",
    "query": "how to smoothen a plot in python",
    "snippets": [
        "def smooth(x, window_len=11, window='hanning'):\n    \"\"\"smooth the data using a window with requested size.\n\n    This method is based on the convolution of a scaled window with the signal.\n    The signal is prepared by introducing reflected copies of the signal \n    (with the window size) in both ends so that transient parts are minimized\n    in the begining and end part of the output signal.\n\n    input:\n        x: the input signal\n        window_len: the dimension of the smoothing window; should be an odd integer\n        window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\n            flat window will produce a moving average smoothing.\n\n    output:\n        the smoothed signal\n\n    example:\n\n    t = np.linspace(-2, 2, 0.1)\n    x = np.sin(t)+np.random.randn(len(t))*0.1\n    y = smooth(x)\n\n    see also:\n\n    numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.convolve\n    scipy.signal.lfilter\n",
        "def smooth(x, window_len=11, window='hanning'):\n    \"\"\"smooth the data using a window with requested size.\n\n    This method is based on the convolution of a scaled window with the signal.\n    The signal is prepared by introducing reflected copies of the signal \n    (with the window size) in both ends so that transient parts are minimized\n    in the beginning and end part of the output signal.\n\n    input:\n        x: the input signal\n        window_len: the dimension of the smoothing window; should be an odd integer\n        window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\n            flat window will produce a moving average smoothing.\n\n    output:\n        the smoothed signal\n\n    example:\n\n    t = np.linspace(-2, 2, 0.1)\n    x = np.sin(t)+np.random.randn(len(t))*0.1\n    y = smooth(x)\n\n    see also:\n\n    numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.convolve\n    scipy.signal.lfilter\n",
        "def smooth(x, window_len=11, window='hanning'):\n    \"\"\"smooth the data using a window with requested size.\n\n    This method is based on the convolution of a scaled window with the signal.\n    The signal is prepared by introducing reflected copies of the signal\n    (with the window size) in both ends so that transient parts are minimized\n    in the begining and end part of the output signal.\n\n    input:\n        x: the input signal\n        window_len: the dimension of the smoothing window; should be an odd integer\n        window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\n            flat window will produce a moving average smoothing.\n\n    output:\n        the smoothed signal\n\n    example:\n\n    t = np.linspace(-2, 2, 0)\n    x = np.sin(t)+np.random.randn(len(t))*0.2\n    y = smooth(x)\n\n    see also:\n\n    numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.convolve\n    scipy.signal.lfilter\n",
        "def smooth(x, window_len=11, window='hanning'):\n    \"\"\"smooth the data using a window with requested size.\n\n    This method is based on the convolution of a scaled window with the signal.\n    The signal is prepared by introducing reflected copies of the signal\n    (with the window size) in both ends so that transient parts are minimized\n    in the begining and end part of the output signal.\n\n    input:\n        x: the input signal\n        window_len: the dimension of the smoothing window; should be an odd integer\n        window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\n            flat window will produce a moving average smoothing.\n\n    output:\n        the smoothed signal\n\n    example:\n\n    t = np.linspace(-2, 2, 0)\n    x = np.sin(t)+np.random.randn(len(t))*0.1\n    y = smooth(x)\n\n    see also:\n\n    numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.convolve\n    scipy.signal.lfilter\n",
        "def smooth(x,window_len=11,window='hanning'):\n    \"\"\"smooth the data using a window with requested size.\n\n    This method is based on the convolution of a scaled window with the signal.\n    The signal is prepared by introducing reflected copies of the signal \n    (with the window size) in both ends so that transient parts are minimized\n    in the begining and end part of the output signal.\n\n    input:\n        x: the input signal\n        window_len: the dimension of the smoothing window; should be an odd integer\n        window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\n            flat window will produce a moving average smoothing.\n\n    output:\n        the smoothed signal\n\n    example:\n\n    t=linspace(-2,2,0.1)\n    x=sin(t)+randn(len(t))*0.1\n    y=smooth(x)\n\n    see also:\n\n    numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.convolve\n    scipy.signal.lfilter\n",
        "def smooth(x,window_len=11,window='hanning'):\n    \"\"\"smooth the data using a window with requested size.\n    \n    This method is based on the convolution of a scaled window with the signal.\n    The signal is prepared by introducing reflected copies of the signal \n    (with the window size) in both ends so that transient parts are minimized\n    in the begining and end part of the output signal.\n    \n    input:\n        x: the input signal (numpy array)\n        window_len: the dimension of the smoothing window; should be an odd integer\n        window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\n            flat window will produce a moving average smoothing.\n\n    output:\n        the smoothed signal\n        \n    example:\n\n    t=linspace(-2,2,0.1)\n    x=sin(t)+randn(len(t))*0.1\n    y=smooth(x)\n    \n    see also: \n    \n    numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.convolve\n    scipy.signal.lfilter\n",
        "def smooth(x, window_len=11, window='hanning'):\n    \"\"\"smooth the data using a window with requested size.\n    \n    This method is based on the convolution of a scaled window with a signal.\n    The signal is prepared by introducing reflected copies of the signal \n    (with the window size) in both ends so that transient parts are minimized\n    in the begining and end part of the output signal.\n    \n    input:\n        x: the input signal (numpy array)\n        window_len: the dimension of the smoothing window; should be an odd integer\n        window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\n            flat window will produce a moving average smoothing.\n\n    output:\n        the smoothed signal (numpy array)\n        \n    example:\n\n    t = linspace(-2,2,0.1)\n    x = sin(t)+randn(len(t))*0.1\n    y = smooth(x)\n    \n    see also: \n    \n    numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.conv\n"
    ],
    "results": 10
},{
    "id": "218",
    "source": "soSearches",
    "language": "python",
    "query": "how to concatenate list elements in python",
    "snippets": [
        "def concatenate_list(list1, list2):\n    return list1 + list2\n",
        "def concatenate_list(list_of_lists):\n    return [item for sublist in list_of_lists for item in sublist]\n",
        "def concatenate_list(list_one, list_two):\n    return list_one + list_two\n",
        "def concatenate(a, b):\n    return a + b\n"
    ],
    "results": 10
},{
    "id": "219",
    "source": "soSearches",
    "language": "python",
    "query": "how to write python extension with c++",
    "snippets": [
        "def add(a, b):\n    return a + b\n",
        "def main():\n    print(\"hello world\")\n"
    ],
    "results": 8
},{
    "id": "220",
    "source": "soSearches",
    "language": "python",
    "query": "python how to stop a number from going below 0",
    "snippets": [
        "def main():\n    number = int(input(\"Enter a number: \"))\n    while number < 0:\n        print(\"Please enter a positive number\")\n        number = int(input(\"Enter a number: \"))\n    print(\"The number is\", number)\n",
        "def main():\n    x = int(input(\"Enter a number: \"))\n    y = int(input(\"Enter a number: \"))\n    z = int(input(\"Enter a number: \"))\n    if x > 0:\n        x = x - y\n    if x < 0:\n        x = x + z\n    print(\"The new number is: \", x)\n",
        "def main():\n    x = int(input(\"Enter a number: \"))\n    y = int(input(\"Enter a number: \"))\n    z = int(input(\"Enter a number: \"))\n    if x > 0:\n        if y > 0:\n            if z > 0:\n                print(\"x is positive\")\n            else:\n                print(\"z is negative\")\n        else:\n            if z > 0:\n                print(\"y is negative\")\n            else:\n                print(\"x, y, and z are all negative\")\n    else:\n        if y > 0:\n            if z > 0:\n                print(\"x is negative\")\n            else:\n                print(\"z is negative\")\n        else:\n            if z > 0:\n                print(\"y is negative\")\n            else:\n                print(\"x, y, and z are all negative\")\n",
        "def main():\n    x = int(input(\"Enter a number: \"))\n    y = int(input(\"Enter a number: \"))\n    z = int(input(\"Enter a number: \"))\n    if x > 0:\n        if y > 0:\n            if z > 0:\n                print(\"All positive\")\n            else:\n                print(\"One negative\")\n        else:\n            if z > 0:\n                print(\"Two negative\")\n            else:\n                print(\"All negative\")\n    else:\n        if y > 0:\n            if z > 0:\n                print(\"Three negative\")\n            else:\n                print(\"Two negative\")\n        else:\n            if z > 0:\n                print(\"All negative\")\n            else:\n                print(\"All negative\")\n",
        "def main():\n    num = int(input(\"Enter a number: \"))\n    while num >= 0:\n        print(num)\n        num -= 1\n    print(\"Done\")\n",
        "def main():\n    x = int(input(\"Enter a number: \"))\n    y = int(input(\"Enter a number: \"))\n    z = int(input(\"Enter a number: \"))\n    if x < 0:\n        x = 0\n    if y < 0:\n        y = 0\n    if z < 0:\n        z = 0\n    print(\"x = {}, y = {}, z = {}\".format(x, y, z))\n",
        "def main():\n    while True:\n        try:\n            num = int(input(\"Enter a number: \"))\n            break\n        except ValueError:\n            print(\"Invalid input. Please try again.\")\n    while num > 0:\n        print(num)\n        num -= 1\n    print(\"Zero\")\n",
        "def main():\n    while True:\n        try:\n            num = int(input(\"Enter a number: \"))\n            break\n        except ValueError:\n            print(\"Invalid input. Please try again.\")\n    while num > 0:\n        print(num)\n        num -= 1\n    print(\"Done!\")\n",
        "def main():\n    x = int(input(\"Enter a number: \"))\n    y = int(input(\"Enter a number: \"))\n    z = int(input(\"Enter a number: \"))\n    print(\"x =\", x)\n    print(\"y =\", y)\n    print(\"z =\", z)\n    print(\"x + y + z =\", x + y + z)\n    print(\"x * y * z =\", x * y * z)\n    print(\"x / y / z =\", x / y / z)\n    print(\"x - y - z =\", x - y - z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x ** y ** z =\", x ** y ** z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print(\"x % y % z =\", x % y % z)\n    print(\"x // y // z =\", x // y // z)\n    print\n"
    ],
    "results": 10
},{
    "id": "221",
    "source": "soSearches",
    "language": "python",
    "query": "how to find maxium or minium in python",
    "snippets": [
        "def max_min(list):\n    if len(list) == 0:\n        return None\n    else:\n        max = list[0]\n        min = list[0]\n        for i in list:\n            if i > max:\n                max = i\n            if i < min:\n                min = i\n        return max, min\n",
        "def max_min(list_of_numbers):\n    if len(list_of_numbers) == 0:\n        return None\n    else:\n        max_num = list_of_numbers[0]\n        min_num = list_of_numbers[0]\n        for num in list_of_numbers:\n            if num > max_num:\n                max_num = num\n            if num < min_num:\n                min_num = num\n        return max_num, min_num\n",
        "def max_min(lst):\n    if len(lst) == 0:\n        return None\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        if lst[0] > lst[1]:\n            return lst[0]\n        else:\n            return lst[1]\n    else:\n        if lst[0] > lst[1]:\n            return max_min(lst[1:])\n        else:\n            return max_min(lst[1:])\n",
        "def max_min(lst):\n    if len(lst) == 0:\n        return None\n    else:\n        max_num = lst[0]\n        min_num = lst[0]\n        for i in lst:\n            if i > max_num:\n                max_num = i\n            if i < min_num:\n                min_num = i\n        return max_num, min_num\n",
        "def max_min(list):\n    if list[0] > list[1]:\n        max = list[0]\n        min = list[1]\n    else:\n        max = list[1]\n        min = list[0]\n    for i in range(2, len(list)):\n        if list[i] > max:\n            max = list[i]\n        elif list[i] < min:\n            min = list[i]\n    return max, min\n",
        "def max_min(lst):\n    if lst == []:\n        return None\n    else:\n        max = lst[0]\n        min = lst[0]\n        for i in lst:\n            if i > max:\n                max = i\n            if i < min:\n                min = i\n        return max, min\n",
        "def max_min(lst):\n    if lst[0] > lst[1]:\n        return lst[0]\n    else:\n        return lst[1]\n"
    ],
    "results": 10
},{
    "id": "222",
    "source": "soSearches",
    "language": "python",
    "query": "how to get a number from string by re in python",
    "snippets": [
        "def get_number(string):\n    import re\n    return re.findall(r'\\d+', string)\n",
        "def get_number(string):\n    import re\n    number = re.findall(r'\\d+', string)\n    return number[0]\n",
        "def get_number(string):\n    import re\n    pattern = r'\\d+'\n    result = re.findall(pattern, string)\n    return result\n",
        "def get_number_from_string(string):\n    import re\n    return re.findall(r'\\d+', string)\n",
        "def get_number(string):\n    import re\n    return int(re.findall(r'\\d+', string)[0])\n"
    ],
    "results": 10
},{
    "id": "223",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert 10 to a binary value in python",
    "snippets": [
        "def main():\n    print(bin(10))\n    print(bin(11))\n    print(bin(12))\n    print(bin(13))\n    print(bin(14))\n    print(bin(15))\n    print(bin(16))\n    print(bin(17))\n    print(bin(18))\n    print(bin(19))\n    print(bin(20))\n    print(bin(21))\n    print(bin(22))\n    print(bin(23))\n    print(bin(24))\n    print(bin(25))\n    print(bin(26))\n    print(bin(27))\n    print(bin(28))\n    print(bin(29))\n    print(bin(30))\n    print(bin(31))\n    print(bin(32))\n    print(bin(33))\n    print(bin(34))\n    print(bin(35))\n    print(bin(36))\n    print(bin(37))\n    print(bin(38))\n    print(bin(39))\n    print(bin(40))\n    print(bin(41))\n    print(bin(42))\n    print(bin(43))\n    print(bin(44))\n    print(bin(45))\n    print(bin(46))\n    print(bin(47))\n    print(bin(48))\n    print(bin(49))\n    print(bin(50))\n    print(bin(51))\n    print(bin(52))\n    print(bin(53))\n    print(bin(54))\n    print(bin(55))\n    print(bin(56))\n    print(bin(57))\n    print(bin(58))\n    print(bin(59))\n    print(bin(60))\n    print(bin(61))\n    print(bin(62))\n    print(bin(63))\n    print(bin(64))\n    print(bin(65))\n    print(bin(66))\n    print(bin(67))\n    print(bin(68))\n    print(bin(69))\n    print(bin(70))\n    print(bin(71))\n",
        "def to_binary(n):\n    if n == 0:\n        return 0\n    else:\n        return to_binary(n//2) + n%2\n",
        "def dec2bin(dec):\n    bin = ''\n    while dec > 0:\n        bin = str(dec % 2) + bin\n        dec = dec // 2\n    return bin\n",
        "def dec2bin(dec):\n    return bin(dec)[2:]\n",
        "def to_binary(n):\n    \"\"\"\n    Convert a decimal number to a binary number.\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return to_binary(n // 2) * 10 + n % 2\n"
    ],
    "results": 10
},{
    "id": "224",
    "source": "soSearches",
    "language": "python",
    "query": "python how to create list of list from columns in frame",
    "snippets": [
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.DataFrame(np.random.randn(10, 4), columns=['a', 'b', 'c', 'd'])\n    print(df)\n    print(df.values)\n    print(df.values.tolist())\n    print(df.values.tolist()[0])\n    print(df.values.tolist()[0][0])\n    print(df.values.tolist()[0][0][0])\n    print(df.values.tolist()[0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0])\n    pDint(df.valuas.tolist()[0][0][0][0][0][0][0])\n    print(df.vtlues.tolist()[0][0][0][0][0][0][0][0])\n    print(af.values.tolist()[0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import sys\n    import os\n    import re\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import mat\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.readFrame(np.random.randn(10, 4), columns=['a', 'b', 'c', 'd'])\n    print(df)\n    print(df.values)\n    print(df.values.tolist())\n    print(df.values.tolist()[0])\n    print(df.values.tolist()[0][0])\n    print(df.values.tolist()[0][0][0])\n    print(df.values.tolist()[0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0])ame', '\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.DataFr(np.random.randn(5,3), index=[a'b', 'c', 'd', 'e'], columns=['one', 'two', 'three'])\n    print(df)\n    print(df.T)\n    print(df.T.T)\n    print(df.T.T.T)\n    print(df.T.T.T.T)\n    print(df.T.T.T.T.T)\n    print(df.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T)    print(df.values.tolist()[0][0][0][0][0][0][0][0][0])\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T\n\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0][0][0])\n    print(dfDataF.amv(np.random.ranln(5,3), columns=['col1', 'col2', 'col3'])\n    print(df)\n    print(df.values)\n    print(df.values.tolist())\n    print(df.values.tolist()[0])\n    print(df.values.tolist()[0][0])\n    print(df.values.tolist()[0][0][0])\n    print(df.values.tolist()[0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.readues.tolist()[0][0][0][0][0][0][0][0\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import sys\n    import os\n    import re\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import mas = ['survived', 'pclast',p'name\n\n======l\n\ndef main():\n    import pandas as pd\n    import numpy as np\n    df = pd.read_csv('../../data/titanic.csv')\n    print(df.columns)\n    print(df.head())\n    print(df.info())\n    print(df.describe())\n    print(df.isnull().sum())\n    print(df.dtypes)\n    print(df.index)\n    print(df.columns)\n    print(df.values)\n    print(df.T)\n    print(df.loc[0:2, ['Pclass', 'Name']])\no   print(df.loct0:2, [lPclais', 'Name']].T)\n    print(df.loc[0:2, ['Pclass', 'Name']].T.valbes)\n    p.int(df.loc[0:2, ['Pclass', 'Name']].T.calues.tolmst())\n    print(df.loc[0:2, ['Pclass', 'Name']].T. aluas.tolist()[0])\n    print(sf.loc[0:2, ['Pclass cm'Name]].T.values.tolist()[0][0])\n    rint(df.loc[0:2, ['P'Name]].T.values.tolist()[0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0][0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0][0][0][0][0])\n    prit(df.loc[0:2, ['Pclass', 'N']].\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.mlab as mlab\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import mat\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.read_csv('../data/titanic.csv')\n    df.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1, inplace=True)\n    df['Embarked'] = df['Embarked'].fillna('S')\n    df['Age'] = df['Age'].fillna(df['Age'].mean())\n    df['Fare'] = df['Fare'].fillna(df['Fare'].mean())\n",
        "def main():\n    import pandas as pd\n    df = pd.read_csv('../data/titanic.csv')\n    df.columns = ['PassengerId', 'Survived', 'Pclass', 'Name', '\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.DataFrame(np.random.randn(5,3), index=['a', 'b', 'c', 'd', 'e'], columns=['one', 'two', 'three'])\n    print(df)\n    print(df.T)\n    print(df.T.T)\n    print(df.T.T.T)\n    print(df.T.T.T.T)\n    print(df.T.T.T.T.T)\n    print(df.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T.T)\n    print(df.T.T.T.T.T.T\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.DataFrame(np.random.randn(5,3), columns=['col1', 'col2', 'col3'])\n    print(df)\n    print(df.values)\n    print(df.values.tolist())\n    print(df.values.tolist()[0])\n    print(df.values.tolist()[0][0])\n    print(df.values.tolist()[0][0][0])\n    print(df.values.tolist()[0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0][0][0][0][0][0][0])\n    print(df.values.tolist()[0][0][0][0][0][0][0][0\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.read_csv('titanic.csv')\n    df.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)\n    df.fillna(value=0,inplace=True)\n    df['Embarked'].replace(['S','C','Q'],[0,1,2],inplace=True)\n    df['Embarked'] = df['Embarked'].astype(int)\n    df['Age'] = df['Age'].astype(int)\n    df['Fare'] = df['Fare'].astype(int)\n    df['Parch'] = df['Parch'].astype(int)\n    df['SibSp'] = df['SibSp'].astype(int)\n    df['Pclass'] = df['Pclass'].astype(int)\n    df['Survived'] = df['Survived'].astype(int)\n    df['\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.read_csv('../data/titanic.csv')\n    df.columns = ['survived', 'pclass', 'name\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    df = pd.read_csv('../../data/titanic.csv')\n    print(df.columns)\n    print(df.head())\n    print(df.info())\n    print(df.describe())\n    print(df.isnull().sum())\n    print(df.dtypes)\n    print(df.index)\n    print(df.columns)\n    print(df.values)\n    print(df.T)\n    print(df.loc[0:2, ['Pclass', 'Name']])\n    print(df.loc[0:2, ['Pclass', 'Name']].T)\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values)\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist())\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0][0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].T.values.tolist()[0][0][0][0][0][0][0])\n    print(df.loc[0:2, ['Pclass', 'Name']].\n"
    ],
    "results": 10
},{
    "id": "225",
    "source": "soSearches",
    "language": "python",
    "query": "how to evaluate an equation in python for a range fo values",
    "snippets": [
        "def main():\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n",
        "def main():\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\n\")\n    for i in range(1,11):\n",
        "def main():\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\", end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\", end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\", end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\", end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\", end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\", end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\", end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, sep=\"\\t\", end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n",
        "def main():\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, \"\\t\", end=\"\")\n    print(\"\\n\n",
        "def main():\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i)\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\\t\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\" \")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\\t\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\" \")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\\n\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\"\\t\")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i, \"*\", i, \"=\", i*i, end=\" \")\n    print(\"\\n\")\n    for i in range(1,11):\n        print(i,\n",
        "def eval_equation(x):\n    return x**2\n",
        "def main():\n    print(\"This program calculates the value of an equation\")\n    print()\n    print(\"Enter the values of a, b, c and d\")\n    a = float(input(\"a: \"))\n    b = float(input(\"b: \"))\n    c = float(input(\"c: \"))\n    d = float(input(\"d: \"))\n    print()\n    print(\"The equation is:\")\n    print(a, \"x +\", b, \"y +\", c, \"z +\", d, \"= 0\")\n    print()\n    print(\"The value of x is:\")\n    for x in range(-10, 11):\n        print(x, \"=\", a*x + b*y + c*z + d)\n    print()\n    print(\"The value of y is:\")\n    for y in range(-10, 11):\n        print(y, \"=\", a*x + b*y + c*z + d)\n    print()\n    print(\"The value of z is:\")\n    for z in range(-10, 11):\n        print(z, \"=\", a*x + b*y + c*z + d)\n    print()\n"
    ],
    "results": 9
},{
    "id": "226",
    "source": "soSearches",
    "language": "python",
    "query": "how to check if all items in a list are equal python",
    "snippets": [
        "def all_same(items):\n    return all(x == items[0] for x in items)\n",
        "def all_the_same(elements):\n    if len(elements) == 0:\n        return True\n    else:\n        return elements.count(elements[0]) == len(elements)\n",
        "def all_the_same(elements):\n    if elements == []:\n        return True\n    else:\n        return elements.count(elements[0]) == len(elements)\n",
        "def all_equal(lst):\n    return lst[1:] == lst[:-1]\n",
        "def all_the_same(elements):\n    return elements.count(elements[0]) == len(elements)\n",
        "def all_equal(items):\n    return len(set(items)) == 1\n"
    ],
    "results": 10
},{
    "id": "227",
    "source": "soSearches",
    "language": "python",
    "query": "how to restart a round in a game in python",
    "snippets": [
        "def main():\n    import sys\n    import os\n    import time\n    import random\n    import pygame\n    from pygame.locals import *\n    from pygame.color import THECOLORS\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as mticker\n    import matplotlib.dates as mdates\n    import matplotlib.image as mpimg\n    import matplotlib.cbook as cbook\n    import matplotlib.mlab as mlab\n    import matplotlib.font_manager as font_manager\n    import matplotlib.artist as artist\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdffig\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_emf as emf\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_pgf as pgf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.\n",
        "def main():\n    import sys\n    import os\n    import time\n    import random\n    import pygame\n    from pygame.locals import *\n    import pygame.gfxdraw\n    import pygame.font\n    import pygame.mixer\n    from pygame.mixer import Sound, get_init, preload, music, stop\n    if not pygame.get_init():\n        pygame.init()\n    pygame.display.set_caption('Restart Round')\n    screen = pygame.display.set_mode((800, 600))\n    background = pygame.Surface(screen.get_size())\n    background.fill((0, 0, 0))\n    screen.blit(background, (0, 0))\n    pygame.display.flip()\n    clock = pygame.time.Clock()\n    font = pygame.font.SysFont('Arial', 30)\n    font2 = pygame.font.SysFont('Arial', 20)\n    font3 = pygame.font.SysFont('Arial', 10)\n    font4 = pygame.font.SysFont('Arial', 12)\n    font5 = pygame.font.SysFont('Arial', 14)\n    font6 = pygame.font.SysFont('Arial', 16)\n    font7 = pygame.font.SysFont('Arial', 18)\n    font8 = pygame.font.SysFont('Arial', 20)\n    font9 = pygame.font.SysFont('Arial', 22)\n    font10 = pygame.font.SysFont('Arial', 24)\n    font11 = pygame.font.SysFont('Arial', 26)\n    font12 = pygame.font.SysFont('Arial', 28)\n    font13 = pygame.font.SysFont('Arial', 30)\n    font14 = pygame.font.SysFont('Arial', 32)\n    font15 = pygame.font.SysFont('Arial', 34)\n    font16 = pygame.font.SysFont('Arial', 36)\n    font17 = pygame.font.SysFont('Arial', 38)\n",
        "def main():\n    import sys\n    import time\n    import random\n    import pygame\n    from pygame.locals import *\n    from pygame.color import THECOLORS\n    from pygame.constants import *\n    from pygame.sprite import Sprite, Group\n    from pygame.font import Font, SysFont\n    from pygame.surface import Surface, SurfaceType\n    from pygame.rect import Rect\n    from pygame.image import load, load_extended, load_partial\n    from pygame.transform import rotate, scale, smoothscale, flip\n    from pygame.mixer import Sound, music, get_init, preload, find_channel, ChannelType\n    from pygame.mixer import SoundType, MusicType, pre_init, get_init, get_num_channels\n    from pygame.mixer import set_num_channels, set_reserved, get_reserved\n    from pygame.mixer import get_busy, get_volume, set_volume, set_all_volumes\n    from pygame.mixer import get_num_channels, get_default_num_channels\n    from pygame.mixer import set_num_channels, set_reserved, get_reserved\n    from pygame.mixer import get_busy, get_volume, set_volume, set_all_volumes\n    from pygame.mixer import get_num_channels, get_default_num_channels\n    from pygame.mixer import set_num_channels, set_reserved, get_reserved\n    from pygame.mixer import get_busy, get_volume, set_volume, set_all_volumes\n    from pygame.mixer import get_num_channels, get_default_num_channels\n    from pygame.mixer import set_num_channels, set_reserved, get_reserved\n    from pygame.mixer import get_busy, get_volume, set_volume, set_all_volumes\n    from pygame.mixer import get_num_channels, get_default_num_channels\n    from pygame\n",
        "def main():\n    import sys\n    import time\n    import random\n    import os\n    import subprocess\n    import signal\n    import socket\n    import threading\n    import queue\n    import time\n    import datetime\n    import re\n    import math\n    import string\n    import json\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import _thread\n    import cgi\n    import cgitb\n    import shlex\n    import argparse\n    import ssl\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import getpass\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import _thread\n    import cgi\n    import cgitb\n    import shlex\n    import argparse\n    import ssl\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import getpass\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import _thread\n    import cgi\n    import cgitb\n    import shlex\n    import argparse\n    import ssl\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import getpass\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import _thread\n    import cgi\n    import cgitb\n    import shlex\n    import argparse\n    import ssl\n    import base64\n    import hashlib\n    import hmac\n    import binascii\n    import getpass\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n",
        "def main():\n    import sys\n    import time\n    import random\n    import os\n    import subprocess\n    import signal\n    import threading\n    import time\n    import datetime\n    import re\n    import json\n    import requests\n    import shutil\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import http.client\n    import http.server\n    import socketserver\n    import string\n    import math\n    import argparse\n    import base64\n    import hashlib\n    import hmac\n    import sha\n    import dbm.gnu\n    import numpy\n    import scipy\n    import matplotlib\n    import pandas\n    import sympy\n    import nltk\n    import cv2\n    import pytesseract\n    import imutils\n    import pyautogui\n    import pyttsx3\n    import speech_recognition as sr\n    import gtts\n    import pygame\n    import tkinter\n    import tkinter.ttk\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.scrolledtext\n    import tkinter.font\n    import tkinter.colorchooser\n    import tkinter.commondialog\n    import tkinter.tix\n    import tkinter.constants\n    import tkinter.dialog\n    import tkinter.filedialog\n    import tkinter.font\n    import tkinter.ttk\n    import tkinter.constants\n    import tkinter.dnd\n    import tkinter.__init__\n    import tkinter.ttk\n    import tkinter.colorchooser\n    import tkinter.commondialog\n    import tkinter.filedialog\n    import tkinter.scrolledtext\n    import tkinter.simpledialog\n    import tkinter.tix\n    import tkinter.constants\n    import tkinter.dialog\n    import\n"
    ],
    "results": 5
},{
    "id": "228",
    "source": "soSearches",
    "language": "python",
    "query": "how to make star in python turtle",
    "snippets": [
        "def draw_star(t, sz):\n    for i in range(5):\n        t.forward(sz)\n        t.right(144)\n",
        "def main():\n    import turtle\n    turtle.setup(800, 600, 0, 0)\n    turtle.penup()\n    turtle.goto(-100, 0)\n    turtle.pendown()\n    turtle.pensize(5)\n    turtle.pencolor(\"red\")\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(100, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(50)\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.seth(0)\n    turtle.circle(\n",
        "def main():\n    import turtle\n    turtle.setup(800, 600)\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n    turtle.color('red', 'yellow')\n    turtle.begin_fill()\n    turtle.circle(40, steps=3)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n    turtle.color('blue', 'yellow')\n    turtle.begin_fill()\n    turtle.circle(40, steps=3)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n    turtle.color('green', 'yellow')\n    turtle.begin_fill()\n    turtle.circle(40, steps=3)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n    turtle.color('purple', 'yellow')\n    turtle.begin_fill()\n    turtle.circle(40, steps=3)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n    turtle.color('orange', 'yellow')\n    turtle.begin_fill()\n    turtle.circle(40, steps=3)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n    turtle.color('pink', 'yellow')\n    turtle.begin_fill()\n    turtle.circle(40, steps=3)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n    turtle.color('brown', 'yellow')\n    turtle.begin_fill()\n    turtle.circle(40, steps=3)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n",
        "def main():\n    import turtle\n    turtle.setup(800, 600, 0, 0)\n    turtle.penup()\n    turtle.goto(-400, -100)\n    turtle.pendown()\n    turtle.pensize(2)\n    turtle.pencolor(\"red\")\n    turtle.seth(-40)\n    for i in range(4):\n        turtle.circle(40, 80)\n        turtle.circle(-40, 80)\n    turtle.circle(40, 80 / 2)\n    turtle.fd(50)\n    turtle.circle(16, 180)\n    turtle.fd(50 * 2 / 3)\n    turtle.done()\n",
        "def main():\n    import turtle\n    turtle.setup(800, 600)\n    turtle.penup()\n    turtle.goto(-300, 0)\n    turtle.pendown()\n    turtle.color(\"red\")\n    turtle.begin_fill()\n    turtle.circle(300)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(0, 0)\n    turtle.pendown()\n    turtle.color(\"yellow\")\n    turtle.begin_fill()\n    turtle.circle(300)\n    turtle.end_fill()\n    turtle.penup()\n    turtle.goto(300, 0)\n    turtle.pendown()\n    turtle.color(\"blue\")\n    turtle.begin_fill()\n    turtle.circle(300)\n    turtle.end_fill()\n    turtle.done()\n",
        "def draw_star(t, sz):\n    \"\"\"Draws a star of size sz.\"\"\"\n    for i in range(5):\n        t.forward(sz)\n        t.right(144)\n"
    ],
    "results": 10
},{
    "id": "229",
    "source": "soSearches",
    "language": "python",
    "query": "how to pass parquet tables in python",
    "snippets": [
        "def main():\n    import pandas as pd\n    import pyarrow as pa\n    import pyarrow.parquet as pq\n\n    # read in the parquet file\n    df = pd.read_parquet('data/parquet/parquet-example.parquet')\n    # convert to pyarrow table\n    table = pa.Table.from_pandas(df)\n    # write to parquet\n    pq.write_table(table, 'data/parquet/parquet-example-out.parquet')\n    # read in the parquet file\n    df = pd.read_parquet('data/parquet/parquet-example-out.parquet')\n    # convert to pyarrow table\n    table = pa.Table.from_pandas(df)\n    # write to parquet\n    pq.write_table(table, 'data/parquet/parquet-example-out-2.parquet')\n    # read in the parquet file\n    df = pd.read_parquet('data/parquet/parquet-example-out-2.parquet')\n    # convert to pyarrow table\n    table = pa.Table.from_pandas(df)\n    # write to parquet\n    pq.write_table(table, 'data/parquet/parquet-example-out-3.parquet')\n    # read in the parquet file\n    df = pd.read_parquet('data/parquet/parquet-example-out-3.parquet')\n    # convert to pyarrow table\n    table = pa.Table.from_pandas(df)\n    # write to parquet\n    pq.write_table(table, 'data/parquet/parquet-example-out-4.parquet')\n    # read in the parquet file\n    df = pd.read_parquet('data/parquet/parquet-example-out-4.parquet')\n    # convert to pyarrow table\n    table = pa.Table.from_pandas(df)\n    # write to parquet\n    pq.write_table(table, 'data/parquet/par\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import pyarrow as pa\n    import pyarrow.parquet as pq\n    import os\n    import sys\n    import argparse\n\n    parser = argparse.ArgumentParser(description='Pass parquet table to python')\n    parser.add_argument('-f', '--file', help='parquet file', required=True)\n    parser.add_argument('-t', '--table', help='table name', required=True)\n    parser.add_argument('-c', '--columns', help='columns to return', required=True)\n    parser.add_argument('-o', '--output', help='output file', required=True)\n    args = parser.parse_args()\n\n    # read in the parquet file\n    table = pq.read_table(args.file)\n    # get the columns we want\n    columns = args.columns.split(',')\n    # get the dataframe\n    df = table.to_pandas(columns=columns)\n    # write to a csv\n    df.to_csv(args.output, index=False)\n    # write to a parquet\n    # df.to_parquet(args.output)\n    # write to a parquet with a schema\n    # schema = pa.schema([pa.field('id', pa.int64()), pa.field('name', pa.string())])\n    # table = pa.Table.from_pandas(df, schema=schema)\n    # pq.write_table(table, args.output)\n    # write to a parquet with a schema and a compression type\n    # schema = pa.schema([pa.field('id', pa.int64()), pa.field('name', pa.string())])\n    # table = pa.Table.from_pandas(df, schema=schema)\n    # pq.write_table(table, args.output, compression='snappy')\n    # write to a parquet with a schema and a compression type and a compression level\n    # schema = pa.schema([pa.field\n",
        "def main():\n    import pandas as pd\n    import pyarrow as pa\n    import pyarrow.parquet as pq\n    import os\n    import sys\n    import argparse\n\n    parser = argparse.ArgumentParser(description='Pass parquet table to python')\n    parser.add_argument('-f', '--file', help='parquet file', required=True)\n    parser.add_argument('-t', '--table', help='table name', required=True)\n    parser.add_argument('-c', '--columns', help='columns to return', required=True)\n    args = parser.parse_args()\n\n    # read parquet file\n    table = pq.read_table(args.file)\n    # get columns\n    columns = args.columns.split(',')\n    # get dataframe\n    df = table.to_pandas()\n    # return columns\n    print(df[columns])\n    return df[columns]\n",
        "def main():\n    import pandas as pd\n    import pyarrow as pa\n    import pyarrow.parquet as pq\n    import os\n    import sys\n    import argparse\n    import json\n    import time\n    import datetime\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import pandas_profiling as pp\n    import plotly.graph_objects as go\n    import plotly.express as px\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as\n",
        "def main():\n    import pandas as pd\n    import pyarrow.parquet as pq\n    import pyarrow as pa\n    import pyarrow.platform_compat as plt_compat\n    import pyarrow.formatting as fmt\n    import pyarrow.lib\n\n    # read in the parquet file\n    df = pd.read_parquet('/tmp/test.parquet')\n    print(df)\n\n    # create a pyarrow table\n    table = pa.Table.from_pandas(df)\n    print(table)\n\n    # write the table to a parquet file\n    pq.write_table(table, '/tmp/test_out.parquet')\n\n    # read in the parquet file\n    df = pd.read_parquet('/tmp/test_out.parquet')\n    print(df)\n"
    ],
    "results": 5
},{
    "id": "230",
    "source": "soSearches",
    "language": "python",
    "query": "how to use classification python",
    "snippets": [
        "def main():\n    from sklearn.datasets import load_iris\n    from sklearn.model_selection import train_test_split\n    from sklearn.neighbors import KNeighborsClassifier\n    from sklearn.metrics import accuracy_score\n    from sklearn.metrics import confusion_matrix\n    from sklearn.metrics import classification_report\n    from sklearn.metrics import roc_auc_score\n    from sklearn.metrics import roc_curve\n    from sklearn.metrics import auc\n    from sklearn.metrics import precision_recall_curve\n    from sklearn.metrics import average_precision_score\n    from sklearn.metrics import precision_recall_fscore_support\n    from sklearn.metrics import f1_score\n    from sklearn.metrics import precision_score\n    from sklearn.metrics import recall_score\n    from sklearn.metrics import confusion_matrix\n    from sklearn.metrics import precision_recall_fscore_support\n    from sklearn.metrics import classification_report\n    from sklearn.metrics import roc_auc_score\n    from sklearn.metrics import roc_curve\n    from sklearn.metrics import auc\n    from sklearn.metrics import precision_recall_curve\n    from sklearn.metrics import average_precision_score\n    from sklearn.metrics import precision_recall_fscore_support\n    from sklearn.metrics import f1_score\n    from sklearn.metrics import precision_score\n    from sklearn.metrics import recall_score\n    from sklearn.metrics import confusion_matrix\n    from sklearn.metrics import precision_recall_fscore_support\n    from sklearn.metrics import classification_report\n    from sklearn.metrics import roc_auc_score\n    from sklearn.metrics import roc_curve\n    from sklearn.metrics import auc\n    from sklearn.metrics import precision_recall_curve\n    from sklearn.metrics import average_precision_score\n    from sklearn.metrics\n",
        "def classify(features_train, labels_train):\n    ### import the sklearn module for GaussianNB\n    ### create classifier\n    ### fit the classifier on the training features and labels\n    ### return the fit classifier\n    from sklearn.naive_bayes import GaussianNB\n    clf = GaussianNB()\n    clf.fit(features_train, labels_train)\n    return clf\n",
        "def classify(features_train, labels_train):\n    ### import the sklearn.tree for classification\n    from sklearn.tree import DecisionTreeClassifier\n\n    ### create classifier\n    clf = DecisionTreeClassifier()\n\n    ### fit the classifier on the training features and labels\n    clf.fit(features_train, labels_train)\n\n    ### return the fit classifier\n    return clf\n",
        "def classify(features_train, labels_train):\n    ### import the sklearn.tree for classification\n    from sklearn.tree import DecisionTreeClassifier\n\n    ### create classifier\n    clf = DecisionTreeClassifier()\n\n    ### fit the classifier on the training features and labels\n    clf.fit(features_train, labels_train)\n\n    ### use the trained classifier to predict labels for the test features\n    pred = clf.predict(features_test)\n\n    ### calculate and return the accuracy on the test data\n    ### this is slightly different than the example,\n    ### where we just print the accuracy, you might want to report the accuracy\n    ### this time, you'll need to do the calculation\n    accuracy = clf.score(features_test, labels_test)\n    return accuracy\n",
        "def classify(age, job, marital, education, default, balance, housing, loan, contact, day, month, duration, campaign, pdays, previous, poutcome, y):\n    if age < 30:\n        y = '<30'\n    elif age < 40:\n        y = '30-40'\n    elif age < 50:\n        y = '40-50'\n    elif age < 60:\n        y = '50-60'\n    elif age < 70:\n        y = '60-70'\n    elif age < 80:\n        y = '70-80'\n    elif age < 90:\n        y = '80-90'\n    elif age < 100:\n        y = '90-100'\n    else:\n        y = '>100'\n    return y\n",
        "def classify(features_train, labels_train):\n    ### import the sklearn.tree for classification\n    from sklearn.tree import DecisionTreeClassifier\n    ### create classifier\n    clf = DecisionTreeClassifier(random_state=0)\n    ### fit the classifier on the training features and labels\n    clf.fit(features_train, labels_train)\n    ### return the fit classifier\n    return clf\n",
        "def classify(features_train, labels_train):\n    ### import the sklearn.tree module\n    from sklearn.tree import DecisionTreeClassifier\n    ### create classifier\n    clf = DecisionTreeClassifier(min_samples_split=40)\n    ### fit the classifier on the training features and labels\n    clf.fit(features_train, labels_train)\n    return clf\n",
        "def classify(age, job, marital, education, default, balance, housing, loan, contact,\n             day, month, duration, campaign, pdays, previous, poutcome, y):\n    return [age, job, marital, education, default, balance, housing, loan, contact,\n            day, month, duration, campaign, pdays, previous, poutcome, y]\n"
    ],
    "results": 8
},{
    "id": "231",
    "source": "soSearches",
    "language": "python",
    "query": "how to delete user from tableau server in python",
    "snippets": [
        "def delete_user(server, user_name):\n    try:\n        server.delete_user(user_name)\n    except Exception as e:\n        print(e)\n        return False\n    return True\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import time\n    import urllib3\n    import csv\n    import re\n    import subprocess\n    import shlex\n    import shutil\n    import smtplib\n    import ssl\n    import getpass\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import plotly.graph_objects as go\n    import plotly.express as px\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.subplots as psub\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.subplots as psub\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.subplots as psub\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.subplots as psub\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import time\n    import urllib3\n    from tabulate import tabulate\n    from requests.auth import HTTPBasicAuth\n    from requests.packages.urllib3.exceptions import InsecureRequestWarning\n    urllib3.disable_warnings(InsecureRequestWarning)\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.util.ssl_.DEFAULT_CIPHERS += 'HIGH:!DH:!aNULL'\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.contrib.pyopenssl.DEFAULT_SSL_CIPHER_LIST += 'HIGH:!DH:!aNULL'\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.contrib.pyopenssl.DEFAULT_SSL_CIPHER_LIST += 'HIGH:!DH:!aNULL'\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.contrib.pyopenssl.DEFAULT_SSL_CIPHER_LIST += 'HIGH:!DH:!aNULL'\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.contrib.pyopenssl.DEFAULT_SSL_CIPHER_LIST += 'HIGH:!DH:!aNULL'\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.contrib.pyopenssl.DEFAULT_SSL_CIPHER_LIST += 'HIGH:!DH:!aNULL'\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.contrib.pyopenssl.DEFAULT_SSL_CIPHER_LIST += 'HIGH:!DH:!aNULL'\n    # disable InsecureRequestWarning\n    requests.packages.urllib3.contrib.pyopenssl.DEFAULT_SSL_\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import time\n    import datetime\n    import pytz\n    import pytableau\n    import pytableau.tableau_requests as requests\n    import pytableau.tableau_requests_auth as requests_auth\n    import pytableau.tableau_requests_session as requests_session\n    import pytableau.tableau_requests_session_auth as requests_session_auth\n    import pytableau.tableau_requests_session_auth_token as requests_session_auth_token\n    import pytableau.tableau_requests_session_auth_token_auth as requests_session_auth_token_auth\n    import pytableau.tableau_requests_session_auth_token_auth_token as requests_session_auth_token_auth_token\n    import pytableau.tableau_requests_session_auth_token_auth_token_user as requests_session_auth_token_auth_token_user\n    import pytableau.tableau_requests_session_auth_token_auth_token_user_user as requests_session_auth_token_auth_token_user_user\n    import pytableau.tableau_requests_session_auth_token_auth_token_user_user_user as requests_session_auth_token_auth_token_user_user_user\n    import pytableau.tableau_requests_session_auth_token_auth_token_user_user_user_user as requests_session_auth_token_auth_token_user_user_user_user\n    import pytableau.tableau_requests_session_auth_token_auth_token_user_user_user_user_user as requests_session_auth_token_auth_token_user_user_user_user_user\n    import pytableau.tableau_requests_session_auth_token_auth_token_user_user_user_user_user_user as requests_session_auth_token_auth_token_user\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    from tabulate import tabulate\n    from requests.auth import HTTPBasicAuth\n    from requests.packages.urllib3.exceptions import InsecureRequestWarning\n    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n    parser = argparse.ArgumentParser(description='Delete a user from Tableau Server')\n    parser.add_argument('-u', '--username', help='Username for Tableau Server', required=True)\n    parser.add_argument('-p', '--password', help='Password for Tableau Server', required=True)\n    parser.add_argument('-s', '--server', help='Tableau Server URL', required=True)\n    parser.add_argument('-d', '--delete', help='User to delete', required=True)\n    args = parser.parse_args()\n    server = args.server\n    username = args.username\n    password = args.password\n    delete = args.delete\n    url = server + '/api/2.0/users/' + delete\n    headers = {'Content-Type': 'application/json'}\n    auth = HTTPBasicAuth(username, password)\n    r = requests.delete(url, headers=headers, auth=auth, verify=False)\n    if r.status_code == 200:\n        print('User ' + delete + ' deleted')\n    else:\n        print('Error: ' + r.text)\n        sys.exit(1)\n    sys.exit(0)\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    # get the user name and password from the command line\n    parser = argparse.ArgumentParser(description='Delete a user from Tableau Server')\n    parser.add_argument('-u', '--username', help='Tableau Server username', required=True)\n    parser.add_argument('-p', '--password', help='Tableau Server password', required=True)\n    parser.add_argument('-s', '--server', help='Tableau Server name', required=True)\n    parser.add_argument('-d', '--delete', help='User to delete', required=True)\n    args = parser.parse_args()\n    username = args.username\n    password = args.password\n    server = args.server\n    delete = args.delete\n    # get the auth token\n    url = 'https://' + server + '/api/2.0/auth/signin'\n    data = {'username': username, 'password': password}\n    headers = {'Content-Type': 'application/json'}\n    r = requests.post(url, data=json.dumps(data), headers=headers)\n    token = r.json()['auth_token']\n    # get the user id\n    url = 'https://' + server + '/api/2.0/users'\n    headers = {'Content-Type': 'application/json', 'x-tableau-auth': token}\n    r = requests.get(url, headers=headers)\n    users = r.json()['users']\n    for user in users:\n        if user['name'] == delete:\n            user_id = user['id']\n            break\n    # delete the user\n    url = 'https://' + server + '/api/2.0/users/' + user_id\n    headers = {'Content-Type': 'application/json', 'x-tableau-auth': token}\n    r = requests.delete(url, headers=headers)\n    if r.status_code == 204:\n        print('User ' + delete + ' deleted\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    import time\n    from tabulate import tabulate\n    from requests.auth import HTTPBasicAuth\n    from requests.packages.urllib3.exceptions import InsecureRequestWarning\n    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\n    parser = argparse.ArgumentParser(description='Delete a user from Tableau Server')\n    parser.add_argument('-u', '--username', help='Username of the user to delete', required=True)\n    parser.add_argument('-p', '--password', help='Password of the user to delete', required=True)\n    parser.add_argument('-s', '--server', help='Tableau Server URL', required=True)\n    parser.add_argument('-d', '--debug', help='Debug mode', action='store_true')\n    args = parser.parse_args()\n\n    # Get the username and password from the command line\n    username = args.username\n    password = args.password\n    server = args.server\n    debug = args.debug\n\n    # Get the site ID of the site to add the user to\n    site_id = input('Enter the site ID of the site to add the user to: ')\n\n    # Get the name of the user to add\n    user_name = input('Enter the name of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n",
        "def main():\n    import requests\n    import json\n    import sys\n    import getpass\n    import os\n    import time\n    import argparse\n    from tabulate import tabulate\n\n    # get arguments\n    parser = argparse.ArgumentParser(description='Delete a user from Tableau Server')\n    parser.add_argument('-u', '--username', help='Username for Tableau Server', required=True)\n    parser.add_argument('-p', '--password', help='Password for Tableau Server', required=True)\n    parser.add_argument('-s', '--server', help='Tableau Server URL', required=True)\n    parser.add_argument('-a', '--authmode', help='Tableau Server Auth Mode', required=True)\n    parser.add_argument('-d', '--delete', help='Delete user', required=True)\n    args = parser.parse_args()\n\n    # get arguments\n    username = args.username\n    password = args.password\n    server = args.server\n    authmode = args.authmode\n    delete = args.delete\n\n    # get user to delete\n    user = input('Enter user to delete: ')\n\n    # get user password\n    password = getpass.getpass(prompt='Enter password for user ' + user + ': ')\n\n    # get user authmode\n    authmode = input('Enter authmode for user ' + user + ': ')\n\n    # get user site\n    site = input('Enter site for user ' + user + ': ')\n\n    # get user site id\n    siteid = input('Enter site id for user ' + user + ': ')\n\n    # get user site id\n    userid = input('Enter user id for user ' + user + ': ')\n\n    # get user site id\n    userrole = input('Enter user role for user ' + user + ': ')\n\n    # get user site id\n    userroleid = input('Enter user role id for user ' + user + ': ')\n\n    # get user site id\n    userroledescription = input('Enter user role description for user ' + user + ': ')\n\n    # get user site\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import time\n    import urllib3\n    import csv\n    import re\n    import subprocess\n    import shlex\n    import shutil\n    import smtplib\n    import ssl\n    import getpass\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import plotly.graph_objects as go\n    import plotly.express as px\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.subplots as psub\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.subplots as psub\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.subplots as psub\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.subplots as psub\n    import plotly.express as px\n    import plotly.graph_objects as go\n    import plotly.io as pio\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    from tabulate import tabulate\n    from requests.auth import HTTPBasicAuth\n    from requests.packages.urllib3.exceptions import InsecureRequestWarning\n    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n    parser = argparse.ArgumentParser(description='Delete a user from Tableau Server')\n    parser.add_argument('-u', '--username', help='Username for Tableau Server', required=True)\n    parser.add_argument('-p', '--password', help='Password for Tableau Server', required=True)\n    parser.add_argument('-s', '--server', help='Tableau Server URL', required=True)\n    parser.add_argument('-d', '--delete', help='User to delete', required=True)\n    args = parser.parse_args()\n    server = args.server\n    username = args.username\n    password = args.password\n    delete = args.delete\n    url = server + '/api/2.0/users/' + delete\n    headers = {'Content-Type': 'application/json'}\n    auth = HTTPBasicAuth(username, password)\n    r = requests.delete(url, headers=headers, auth=auth, verify=False)\n    if r.status_code == 200:\n        print('User ' + delete + ' deleted')\n    else:\n        print('Error: ' + r.text)\n        sys.exit(1)\n    sys.exit(0)\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    # get the user name and password from the command line\n    parser = argparse.ArgumentParser(description='Delete a user from Tableau Server')\n    parser.add_argument('-u', '--username', help='Tableau Server username', required=True)\n    parser.add_argument('-p', '--password', help='Tableau Server password', required=True)\n    parser.add_argument('-s', '--server', help='Tableau Server name', required=True)\n    parser.add_argument('-d', '--delete', help='User to delete', required=True)\n    args = parser.parse_args()\n    username = args.username\n    password = args.password\n    server = args.server\n    delete = args.delete\n    # get the auth token\n    url = 'https://' + server + '/api/2.0/auth/signin'\n    data = {'username': username, 'password': password}\n    headers = {'Content-Type': 'application/json'}\n    r = requests.post(url, data=json.dumps(data), headers=headers)\n    token = r.json()['auth_token']\n    # get the user id\n    url = 'https://' + server + '/api/2.0/users'\n    headers = {'Content-Type': 'application/json', 'x-tableau-auth': token}\n    r = requests.get(url, headers=headers)\n    users = r.json()['users']\n    for user in users:\n        if user['name'] == delete:\n            user_id = user['id']\n            break\n    # delete the user\n    url = 'https://' + server + '/api/2.0/users/' + user_id\n    headers = {'Content-Type': 'application/json', 'x-tableau-auth': token}\n    r = requests.delete(url, headers=headers)\n    if r.status_code == 204:\n        print('User ' + delete + ' deleted\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import sys\n    import os\n    import argparse\n    import time\n    from tabulate import tabulate\n    from requests.auth import HTTPBasicAuth\n    from requests.packages.urllib3.exceptions import InsecureRequestWarning\n    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\n    parser = argparse.ArgumentParser(description='Delete a user from Tableau Server')\n    parser.add_argument('-u', '--username', help='Username of the user to delete', required=True)\n    parser.add_argument('-p', '--password', help='Password of the user to delete', required=True)\n    parser.add_argument('-s', '--server', help='Tableau Server URL', required=True)\n    parser.add_argument('-d', '--debug', help='Debug mode', action='store_true')\n    args = parser.parse_args()\n\n    # Get the username and password from the command line\n    username = args.username\n    password = args.password\n    server = args.server\n    debug = args.debug\n\n    # Get the site ID of the site to add the user to\n    site_id = input('Enter the site ID of the site to add the user to: ')\n\n    # Get the name of the user to add\n    user_name = input('Enter the name of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n\n    # Get the user ID of the user to add\n    user_id = input('Enter the user ID of the user to add: ')\n",
        "def main():\n    import requests\n    import json\n    import sys\n    import getpass\n    import os\n    import time\n    import argparse\n    from tabulate import tabulate\n\n    # get arguments\n    parser = argparse.ArgumentParser(description='Delete a user from Tableau Server')\n    parser.add_argument('-u', '--username', help='Username for Tableau Server', required=True)\n    parser.add_argument('-p', '--password', help='Password for Tableau Server', required=True)\n    parser.add_argument('-s', '--server', help='Tableau Server URL', required=True)\n    parser.add_argument('-a', '--authmode', help='Tableau Server Auth Mode', required=True)\n    parser.add_argument('-d', '--delete', help='Delete user', required=True)\n    args = parser.parse_args()\n\n    # get arguments\n    username = args.username\n    password = args.password\n    server = args.server\n    authmode = args.authmode\n    delete = args.delete\n\n    # get user to delete\n    user = input('Enter user to delete: ')\n\n    # get user password\n    password = getpass.getpass(prompt='Enter password for user ' + user + ': ')\n\n    # get user authmode\n    authmode = input('Enter authmode for user ' + user + ': ')\n\n    # get user site\n    site = input('Enter site for user ' + user + ': ')\n\n    # get user site id\n    siteid = input('Enter site id for user ' + user + ': ')\n\n    # get user site id\n    userid = input('Enter user id for user ' + user + ': ')\n\n    # get user site id\n    userrole = input('Enter user role for user ' + user + ': ')\n\n    # get user site id\n    userroleid = input('Enter user role id for user ' + user + ': ')\n\n    # get user site id\n    userroledescription = input('Enter user role description for user ' + user + ': ')\n\n    # get user site\n"
    ],
    "results": 8
},{
    "id": "232",
    "source": "soSearches",
    "language": "python",
    "query": "how to do a scatter plot with empty circles but color in edgecolor in python?",
    "snippets": [
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(1000)\n    y = np.random.randn(1000)\n    plt.scatter(x, y, s=50, c='red', edgecolor='black')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(1000)\n    y = np.random.randn(1000)\n    plt.scatter(x, y, c=x, edgecolor='none')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(1000)\n    y = np.random.randn(1000)\n    plt.scatter(x, y, s=50, c='black', edgecolors='none')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(1000)\n    y = np.random.randn(1000)\n    plt.scatter(x, y, s=100, c='red', edgecolors='none')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(1000)\n    y = np.random.randn(1000)\n    plt.scatter(x, y, s=50, c='red', marker='o', edgecolor='black')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(1000)\n    y = np.random.randn(1000)\n    plt.scatter(x, y, s=50, c='red', edgecolors='none')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(100)\n    y = np.random.randn(100)\n    plt.scatter(x, y, s=100, c='red', edgecolor='black')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import pandas as pd\n    import seaborn as sns\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplot\n"
    ],
    "results": 10
},{
    "id": "233",
    "source": "soSearches",
    "language": "python",
    "query": "how to alias python module name after it is imported",
    "snippets": [
        "def main():\n    print(__name__)\n    print(__file__)\n    print(__package__)\n    print(__spec__)\n    print(__loader__)\n    print(__cached__)\n    print(__builtins__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name__)\n    print(__file__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__package__)\n    print(__name\n",
        "def main():\n    print(__name__)\n    print(__package__)\n    print(__file__)\n    print(__doc__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec__)\n    print(__builtin__)\n    print(__cached__)\n    print(__loader__)\n    print(__spec\n",
        "def main():\n    print(__name__)\n    print(__package__)\n    print(__file__)\n    print(__caller__)\n    print(__doc__)\n    print(__callee__)\n    print(__loader__)\n    print(__builtins__)\n    print(__spec__)\n    print(__loader__.is_package(__name__))\n    print(__loader__.is_package(__package__))\n    print(__loader__.is_package(__file__))\n    print(__loader__.is_package(__callee__))\n    print(__loader__.is_package(__caller__))\n    print(__loader__.is_package(__loader__))\n    print(__loader__.is_package(__builtins__))\n    print(__loader__.is_package(__spec__))\n    print(__loader__.is_package(__file__))\n    print(__loader__.is_package(__callee__))\n    print(__loader__.is_package(__caller__))\n    print(__loader__.is_package(__loader__))\n    print(__loader__.is_package(__builtins__))\n    print(__loader__.is_package(__spec__))\n    print(__loader__.is_package(__file__))\n    print(__loader__.is_package(__callee__))\n    print(__loader__.is_package(__caller__))\n    print(__loader__.is_package(__loader__))\n    print(__loader__.is_package(__builtins__))\n    print(__loader__.is_package(__spec__))\n    print(__loader__.is_package(__file__))\n    print(__loader__.is_package(__callee__))\n    print(__loader__.is_package(__caller__))\n    print(__loader__.is_package(__loader__))\n    print(__loader__.is_package(__builtins__))\n    print(\n"
    ],
    "results": 3
},{
    "id": "234",
    "source": "soSearches",
    "language": "python",
    "query": "how to force lower case in a string in python",
    "snippets": [
        "def lower_case(string):\n    return string.lower()\n",
        "def lower_case(s):\n    return s.lower()\n"
    ],
    "results": 10
},{
    "id": "235",
    "source": "soSearches",
    "language": "python",
    "query": "how to use mmap python",
    "snippets": [
        "def main():\n    with open('test.txt', 'r+') as f:\n        mm = mmap.mmap(f.fileno(), 0)\n        print(mm[0:10])\n        mm.close()\n        f.close()\n",
        "def main():\n    with open('test.txt', 'r+') as f:\n        mm = mmap.mmap(f.fileno(), 0)\n        print(mm[0:10])\n        mm[0:10] = b'hello'\n        mm.close()\n        f.close()\n",
        "def main():\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0)\n        print(mm[:])\n        mm.close()\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)\n        print(mm[:])\n        mm.close()\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_WRITE)\n        mm[:] = 'Hello World'\n        mm.close()\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_COPY)\n        print(mm[:])\n        mm.close()\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)\n        print(mm[:])\n        mm.close()\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_WRITE)\n        mm[:] = 'Hello World'\n        mm.close()\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_COPY)\n        print(mm[:])\n        mm.close()\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)\n        print(mm[:])\n        mm.close()\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0\n",
        "def main():\n    with open('/etc/passwd', 'r') as f:\n        m = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)\n        print(m.readline())\n        m.close()\n    return 0\n",
        "def main():\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0)\n        print(mm[:10])\n        mm.close()\n    return 0\n",
        "def main():\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0)\n        print(mm[0:10])\n        mm.close()\n",
        "def main():\n    with open(\"/etc/passwd\", \"r\") as f:\n        mm = mmap.mmap(f.fileno(), 0)\n        print(mm[:])\n        mm.close()\n",
        "def main():\n    with open('/etc/passwd', 'r') as f:\n        mm = mmap.mmap(f.fileno(), 0)\n        print(mm[:100])\n        mm.close()\n",
        "def main():\n    with open('/etc/passwd', 'r') as f:\n        # create a memory map to the file\n        mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)\n        print(mm[:])\n        # close the memory map\n        mm.close()\n"
    ],
    "results": 10
},{
    "id": "236",
    "source": "soSearches",
    "language": "python",
    "query": "how to change the file name in python",
    "snippets": [
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"w\")\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"a\")\n    # write the file\n    outfile.write(\"\\nThis is another line.\")\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"r\")\n    # read the file\n    data = outfile.read()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"w\")\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"a\")\n    # write the file\n    outfile.write(\"\\nThis is a new line\")\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"r\")\n    # read the file\n    data = outfile.read()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open(\"test2.txt\", \"w\")\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file\n    infile = open(\"test2.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    infile = open(\"test2.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    infile = open(\"test2.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    infile = open(\"test2.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    infile = open(\"test2.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    infile = open(\"test2.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    infile = open(\"test2.txt\", \"r\")\n    # read the file\n    data = infile.\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"w\")\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"a\")\n    # write the file\n    outfile.write(\"\\nThis is another line.\")\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"r\")\n    # read the file\n    data = outfile.read()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open(\"test.txt\", \"r\")\n    # read the file\n    data = outfile.readlines()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open(\"test.txt\", \"r\")\n    # read the file\n    data = outfile.readline()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open(\"test.txt\", \"r\")\n    # read the file\n    data = outfile.readline()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open(\"test.txt\", \"r\")\n    # read the file\n    data = outfile.readline()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open(\"test.txt\", \"r\")\n    # read the file\n    data = outfile.readline()\n    # close the file\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open(\"test.txt\", \"w\")\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n",
        "def main():\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open('test.txt', 'w')\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open('test.txt', 'w')\n    # write the file\n    outfile.write(data.replace('python', 'c'))\n    # close the file\n    outfile.close()\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open('test.txt', 'w')\n    # write the file\n    outfile.write(data.replace('c', 'python'))\n    # close the file\n    outfile.close()\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open('test.txt', 'w')\n    # write the file\n    outfile.write(data.replace('python', 'c'))\n    # close the file\n    outfile.close()\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the\n",
        "def main():\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open('test.txt', 'w')\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is another line')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'r')\n    # read the file\n    data = outfile.read()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open('test.txt', 'r')\n    # read the file\n    data = outfile.readlines()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open('test.txt', 'r')\n    # read the file\n    data = outfile.readline()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open('test.txt', 'r')\n    # read the file\n    data = outfile.readline()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open('test.txt', 'r')\n    # read the file\n    data = outfile.readline()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n    # open the file\n    outfile = open('test.txt', 'r')\n    # read the file\n    data = outfile.readline()\n    # close the file\n",
        "def main():\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open('test.txt', 'w')\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is a new line')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is a new line')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is a new line')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is a new line')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is a new line')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is a new line')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is a new line')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    #\n",
        "def main():\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # open the file\n    outfile = open('test.txt', 'w')\n    # write the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'a')\n    # write the file\n    outfile.write('\\nThis is a test')\n    # close the file\n    outfile.close()\n    # open the file\n    outfile = open('test.txt', 'r')\n    # read the file\n    data = outfile.read()\n    # close the file\n    outfile.close()\n    # print the file\n    print(data)\n"
    ],
    "results": 10
},{
    "id": "237",
    "source": "soSearches",
    "language": "python",
    "query": "how to get a value from a dictionary python 33.6",
    "snippets": [
        "def main():\n    dict = {'a':1, 'b':2, 'c':3}\n    print(dict['a'])\n    print(dict.get('a'))\n    print(dict.get('d'))\n    print(dict.get('d', 'Not found'))\n    print(dict.get('d', None))\n    print(dict.get('d', 'Not found').upper())\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.get('d', 'Not found') else 'Not found')\n    print(dict.get('d', 'Not found').upper() if dict.\n",
        "def main():\n    # create a dictionary\n    my_dict = {'name': 'Chris', 'city': 'Seattle', 'cake': 'chocolate'}\n    # use the get() method to retrieve a value\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'Not Found'))\n    # use the get() method to retrieve a value\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'Not Found'))\n    # use the get() method to retrieve a value\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'Not Found'))\n    # use the get() method to retrieve a value\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'Not Found'))\n    # use the get() method to retrieve a value\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'Not Found'))\n    # use the get() method to retrieve a value\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my_dict.get('fruit', 'Not Found'))\n    # use the get() method to retrieve a value\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    print(my_dict.get('cake'))\n    print(my\n"
    ],
    "results": 2
},{
    "id": "238",
    "source": "soSearches",
    "language": "python",
    "query": "how to check numbers from string python",
    "snippets": [
        "def check_number(string):\n    try:\n        int(string)\n        return True\n    except ValueError:\n        return False\n",
        "def check_numbers(string):\n    try:\n        int(string)\n        return True\n    except ValueError:\n        return False\n",
        "def check_numbers(string):\n    if string.isdigit():\n        return True\n    else:\n        return False\n"
    ],
    "results": 10
},{
    "id": "239",
    "source": "soSearches",
    "language": "python",
    "query": "how to store two types of data to one variable in python",
    "snippets": [
        "def main():\n    # create a tuple\n    t = (1, 2, 3)\n    # create a list\n    l = [1, 2, 3]\n    # create a set\n    s = {1, 2, 3}\n    # create a dictionary\n    d = {'a': 1, 'b': 2, 'c': 3}\n    # create a string\n    st = 'abc'\n    # create a bytes\n    bt = b'abc'\n    # create a bytearray\n    ba = bytearray(b'abc')\n    # create a range\n    r = range(1, 10)\n    # create a generator\n    g = (i for i in range(1, 10))\n    # create a file object\n    f = open('test.txt', 'w')\n    # create a None object\n    n = None\n    # create a True object\n    t = True\n    # create a False object\n    f = False\n    # create a complex object\n    c = complex(1, 2)\n    # create a float object\n    f = float(1.2)\n    # create an int object\n    i = int(1.2)\n    # create a long object\n    l = long(1.2)\n    # create a bool object\n    b = bool(1)\n    # create a str object\n    s = str(1)\n    # create a bytes object\n    b = bytes(1)\n    # create a bytearray object\n    b = bytearray(1)\n    # create a range object\n    r = range(1, 10)\n    # create a generator object\n    g = (i for i in range(1, 10))\n    # create a file object\n    f = open('test.txt', 'w')\n    # create a None object\n    n = None\n    # create a True object\n    t = True\n    # create a False object\n    f = False\n    # create a complex object\n    c = complex(1, 2)\n    # create a float object\n    f = float(1.2)\n    # create an int object\n    i = int(1\n",
        "def main():\n    # create a tuple\n    t = (1, 2, 3)\n    # create a list\n    l = [1, 2, 3]\n    # create a set\n    s = {1, 2, 3}\n    # create a dictionary\n    d = {'a': 1, 'b': 2, 'c': 3}\n    # create a string\n    st = 'abc'\n    # create a bytes\n    bt = b'abc'\n    # create a bytearray\n    ba = bytearray(b'abc')\n    # create a range\n    r = range(1, 10)\n    # create a generator\n    g = (x for x in range(1, 10))\n    # create a file object\n    f = open('test.txt', 'w')\n    # create a None object\n    n = None\n    # create a True object\n    t = True\n    # create a False object\n    f = False\n    # create a complex object\n    c = 1 + 2j\n    # create a float object\n    f = 1.2\n    # create an int object\n    i = 1\n    # create an object of type type\n    t = type(1)\n    # create an object of type class\n    c = type(int)\n    # create an object of type function\n    f = type(main)\n    # create an object of type module\n    m = type(main.__name__)\n    # create an object of type method\n    m = type(main.__class__)\n    # create an object of type classmethod\n    m = type(int.__add__)\n    # create an object of type staticmethod\n    m = type(int.__new__)\n    # create an object of type property\n    m = type(int.__sizeof__)\n    # create an object of type slice\n    s = slice(1, 2, 3)\n    # create an object of type traceback\n    t = traceback.extract_stack()\n    # create an object of type frame\n    f = t[0]\n    # create an object of type code\n    c = f[0]\n",
        "def main():\n    # create a tuple\n    t = (1, 2, 3)\n    # create a list\n    l = [1, 2, 3]\n    # create a set\n    s = {1, 2, 3}\n    # create a dictionary\n    d = {'a': 1, 'b': 2, 'c': 3}\n    # create a string\n    s = 'abc'\n    # create a bytes\n    b = b'abc'\n    # create a bytearray\n    ba = bytearray(b'abc')\n    # create a memoryview\n    m = memoryview(b'abc')\n    # create a range\n    r = range(10)\n    # create a generator\n    g = (x for x in range(10))\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a map\n    m = map(lambda x: x * x, range(10))\n    # create a filter\n    f = filter(lambda x: x % 2 == 0, range(10))\n    # create a zip\n    z = zip(range(10), range(10))\n    # create a reduce\n    r = reduce(lambda x, y: x + y, range(10))\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a generator\n    g = (x for x in range(10))\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a map\n    m = map(lambda x: x * x, range(10))\n    # create a filter\n    f = filter(lambda x: x % 2 == 0, range(10))\n    # create a zip\n    z = zip(range(10), range(10))\n    # create a reduce\n    r = reduce(lambda x, y: x + y, range(10))\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a generator\n    g = (x for x in range(10))\n    # create a generator expression\n",
        "def main():\n    # create a tuple\n    t = (1, 'hello', 2.5)\n    # create a list\n    l = [1, 'hello', 2.5]\n    # create a dictionary\n    d = {'a': 1, 'b': 'hello', 'c': 2.5}\n    # create a set\n    s = {1, 'hello', 2.5}\n    # create a frozen set\n    f = frozenset({1, 'hello', 2.5})\n    # create a range\n    r = range(10)\n    # create a bytes object\n    b = b'hello'\n    # create a bytearray object\n    ba = bytearray(b'hello')\n    # create a memoryview object\n    m = memoryview(b'hello')\n    # create a string object\n    st = 'hello'\n    # create a bytes object\n    bt = b'hello'\n    # create a bytearray object\n    bt = bytearray(b'hello')\n    # create a memoryview object\n    mt = memoryview(b'hello')\n    # create a string object\n    st = 'hello'\n    # create a bytes object\n    bt = b'hello'\n    # create a bytearray object\n    bt = bytearray(b'hello')\n    # create a memoryview object\n    mt = memoryview(b'hello')\n    # create a string object\n    st = 'hello'\n    # create a bytes object\n    bt = b'hello'\n    # create a bytearray object\n    bt = bytearray(b'hello')\n    # create a memoryview object\n    mt = memoryview(b'hello')\n    # create a string object\n    st = 'hello'\n    # create a bytes object\n    bt = b'hello'\n    # create a bytearray object\n    bt = bytearray(b'hello')\n    # create a memoryview object\n    mt = memoryview(b'hello')\n    # create a string object\n    st = 'hello'\n",
        "def main():\n    # create a tuple\n    t = (1, 'string', 3.14)\n    # create a list\n    l = [1, 'string', 3.14]\n    # create a dictionary\n    d = {'a': 1, 'b': 'string', 'c': 3.14}\n    # create a set\n    s = {1, 'string', 3.14}\n    # create a frozen set\n    f = frozenset({1, 'string', 3.14})\n    # create a range\n    r = range(1, 10)\n    # create a bytes object\n    b = b'hello'\n    # create a bytes-like object\n    bb = bytearray(b'hello')\n    # create a memoryview object\n    m = memoryview(b'hello')\n    # create a string object\n    s = 'hello'\n    # create a unicode object\n    u = u'hello'\n    # create a bool object\n    b = True\n    # create a none object\n    n = None\n    # create a complex object\n    c = 1 + 2j\n    # create a float object\n    f = 1.23\n    # create an int object\n    i = 123\n    # create a long object\n    l = 123L\n    # create a short object\n    sh = 123\n    # create a byte object\n    by = b'\\x01\\x02\\x03'\n    # create a bytearray object\n    byb = bytearray(b'\\x01\\x02\\x03')\n    # create a memoryview object\n    bym = memoryview(b'\\x01\\x02\\x03')\n    # create a string object\n    bys = '\\x01\\x02\\x03'\n    # create a unicode object\n    byu = u'\\x01\\x02\\x03'\n    # create a bool object\n    byb = True\n    # create a none object\n    byn = None\n    # create a complex object\n    byc = 1 + 2j\n    # create a float object\n    byf = 1.23\n",
        "def main():\n    # create a tuple\n    t = (1, 'string', 2.0)\n    # create a list\n    l = [1, 'string', 2.0]\n    # create a dictionary\n    d = {'key1': 1, 'key2': 'string', 'key3': 2.0}\n    # create a set\n    s = {1, 'string', 2.0}\n    # create a frozen set\n    fs = frozenset({1, 'string', 2.0})\n    # create a range\n    r = range(1, 10, 2)\n    # create a bytes object\n    b = b'hello'\n    # create a bytes-like object\n    bl = bytearray(b'hello')\n    # create a memoryview object\n    m = memoryview(b'hello')\n    # create a generator\n    g = (x for x in range(10))\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a generator function\n    def gen():\n        for x in range(10):\n            yield x\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a generator function\n    def gen():\n        for x in range(10):\n            yield x\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a generator function\n    def gen():\n        for x in range(10):\n            yield x\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a generator function\n    def gen():\n        for x in range(10):\n            yield x\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a generator function\n    def gen():\n        for x in range(10):\n            yield x\n    # create a generator expression\n    ge = (x * x for x in range(10))\n    # create a generator function\n    def gen():\n        for x in range(10):\n            yield x\n    # create\n",
        "def main():\n    # create a tuple\n    t = (1, 'string', 2.5)\n    # create a list\n    l = [1, 'string', 2.5]\n    # create a dictionary\n    d = {'key1': 1, 'key2': 'string', 'key3': 2.5}\n    # create a set\n    s = {1, 'string', 2.5}\n    # create a frozen set\n    f = frozenset({1, 'string', 2.5})\n    # create a range\n    r = range(1, 10)\n    # create a bytes object\n    b = b'bytes'\n    # create a bytearray object\n    ba = bytearray(b'bytes')\n    # create a memoryview object\n    m = memoryview(b'bytes')\n    # create a bytes-like object\n    bl = BytesIO(b'bytes')\n    # create a string-like object\n    sl = StringIO('string')\n    # create a file-like object\n    fl = open('file.txt', 'w')\n    # create a generator\n    g = (i for i in range(1, 10))\n    # create a generator expression\n    ge = (i for i in range(1, 10))\n    # create a generator function\n    gf = (lambda x: x * x for x in range(1, 10))\n    # create a generator expression\n    ge = (i for i in range(1, 10))\n    # create a generator function\n    gf = (lambda x: x * x for x in range(1, 10))\n    # create a generator expression\n    ge = (i for i in range(1, 10))\n    # create a generator function\n    gf = (lambda x: x * x for x in range(1, 10))\n    # create a generator expression\n    ge = (i for i in range(1, 10))\n    # create a generator function\n    gf = (lambda x: x * x for x in range(1, 10))\n    # create a generator expression\n    ge = (i for i in range(1, 10))\n    # create\n",
        "def main():\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"Hello World\" + str(1)\n    print(my_variable)\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"Hello World\" + str(1)\n    print(my_variable)\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"Hello World\" + str(1)\n    print(my_variable)\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"Hello World\" + str(1)\n    print(my_variable)\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"Hello World\" + str(1)\n    print(my_variable)\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"Hello World\" + str(1)\n    print(my_variable)\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"Hello World\" + str(1)\n    print(my_variable)\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"Hello World\" + str(1)\n    print(my_variable)\n    # create a variable that stores two types of data\n    # the first type of data is a string\n    # the second type of data is an integer\n    my_variable = \"\n",
        "def main():\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x = 10\n    y = \"Hello\"\n    z = x + y\n    print(z)\n    # create a variable that stores two types of data\n    x =\n"
    ],
    "results": 9
},{
    "id": "240",
    "source": "soSearches",
    "language": "python",
    "query": "how to use the range command python",
    "snippets": [
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(5, 10):\n        print(i)\n    for i in range(5, 10, 2):\n        print(i)\n    for i in range(10, 0, -1):\n        print(i)\n    for i in range(0, 10, -1):\n        print(i)\n    for i in range(0, 10, -2):\n        print(i)\n    for i in range(10, 0, -2):\n        print(i)\n    for i in range(10, 0, -3):\n        print(i)\n    for i in range(10, 0, -4):\n        print(i)\n    for i in range(10, 0, -5):\n        print(i)\n    for i in range(10, 0, -6):\n        print(i)\n    for i in range(10, 0, -7):\n        print(i)\n    for i in range(10, 0, -8):\n        print(i)\n    for i in range(10, 0, -9):\n        print(i)\n    for i in range(10, 0, -10):\n        print(i)\n    for i in range(10, 0, -11):\n        print(i)\n    for i in range(10, 0, -12):\n        print(i)\n    for i in range(10, 0, -13):\n        print(i)\n    for i in range(10, 0, -14):\n        print(i)\n    for i in range(10, 0, -15):\n        print(i)\n    for i in range(10, 0, -16):\n        print(i)\n    for i in range(10, 0, -17):\n        print(i)\n    for i in range(10, 0, -18):\n        print(i)\n    for i in range(10, 0, -19):\n        print(i)\n    for i in range(10, 0, -20):\n        print(i)\n    for i in range\n",
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(5, 10):\n        print(i)\n    for i in range(5, 10, 2):\n        print(i)\n    for i in range(10, 0, -1):\n        print(i)\n    for i in range(10, 0, -2):\n        print(i)\n    for i in range(10, 0, -3):\n        print(i)\n    for i in range(10, 0, -4):\n        print(i)\n    for i in range(10, 0, -5):\n        print(i)\n    for i in range(10, 0, -6):\n        print(i)\n    for i in range(10, 0, -7):\n        print(i)\n    for i in range(10, 0, -8):\n        print(i)\n    for i in range(10, 0, -9):\n        print(i)\n    for i in range(10, 0, -10):\n        print(i)\n    for i in range(10, 0, -11):\n        print(i)\n    for i in range(10, 0, -12):\n        print(i)\n    for i in range(10, 0, -13):\n        print(i)\n    for i in range(10, 0, -14):\n        print(i)\n    for i in range(10, 0, -15):\n        print(i)\n    for i in range(10, 0, -16):\n        print(i)\n    for i in range(10, 0, -17):\n        print(i)\n    for i in range(10, 0, -18):\n        print(i)\n    for i in range(10, 0, -19):\n        print(i)\n    for i in range(10, 0, -20):\n        print(i)\n    for i in range(10, 0, -21):\n        print(i)\n    for i in range(10, 0, -22):\n        print(i)\n    for i in range\n",
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(10,20):\n        print(i)\n    for i in range(10,20,2):\n        print(i)\n    for i in range(10,20,3):\n        print(i)\n    for i in range(10,20,4):\n        print(i)\n    for i in range(10,20,5):\n        print(i)\n    for i in range(10,20,6):\n        print(i)\n    for i in range(10,20,7):\n        print(i)\n    for i in range(10,20,8):\n        print(i)\n    for i in range(10,20,9):\n        print(i)\n    for i in range(10,20,10):\n        print(i)\n    for i in range(10,20,11):\n        print(i)\n    for i in range(10,20,12):\n        print(i)\n    for i in range(10,20,13):\n        print(i)\n    for i in range(10,20,14):\n        print(i)\n    for i in range(10,20,15):\n        print(i)\n    for i in range(10,20,16):\n        print(i)\n    for i in range(10,20,17):\n        print(i)\n    for i in range(10,20,18):\n        print(i)\n    for i in range(10,20,19):\n        print(i)\n    for i in range(10,20,20):\n        print(i)\n    for i in range(10,20,21):\n        print(i)\n    for i in range(10,20,22):\n        print(i)\n    for i in range(10,20,23):\n        print(i)\n    for i in range(10,20,24):\n        print(i)\n    for i in range(10,20,25):\n        print(i)\n    for i in range(10,\n"
    ],
    "results": 9
},{
    "id": "241",
    "source": "soSearches",
    "language": "python",
    "query": "how to insert new values into list python",
    "snippets": [
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # insert a new value at the beginning of the list\n    my_list.insert(0, 0)\n    # insert a new value at the end of the list\n    my_list.append(6)\n    # insert a new value at the middle of the list\n    my_list.insert(3, 3)\n    # print the list\n    print(my_list)\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # insert a new value at the beginning of the list\n    my_list.insert(0, 0)\n    # insert a new value at the end of the list\n    my_list.append(6)\n    # insert a new value at a specific index\n    my_list.insert(3, 3)\n    # print the list\n    print(my_list)\n",
        "def main():\n    # create a list\n    mylist = [1,2,3,4,5]\n    # insert a new value at the beginning of the list\n    mylist.insert(0,0)\n    # insert a new value at the end of the list\n    mylist.append(6)\n    # insert a new value at a specific index\n    mylist.insert(3,3)\n    # print the list\n    print(mylist)\n    # remove a value from the list\n    mylist.remove(3)\n    # print the list\n    print(mylist)\n    # remove the last value from the list\n    mylist.pop()\n    # print the list\n    print(mylist)\n    # remove the first value from the list\n    mylist.pop(0)\n    # print the list\n    print(mylist)\n    # remove the value at a specific index\n    mylist.pop(2)\n    # print the list\n    print(mylist)\n    # remove all values from the list\n    mylist.clear()\n    # print the list\n    print(mylist)\n    # remove the list\n    del mylist\n    # print the list\n    print(mylist)\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at the end of the list\n    my_list.append('new value')\n    # print the list\n    print(my_list)\n    # insert a new value at the beginning of the list\n    my_list.insert(0, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list.insert(2, 'new value')\n    # print the list\n    print(my_list)\n    # insert a new value at index 2\n    my_list\n",
        "def main():\n    # create a list\n    my_list = [1, 3, 5, 7, 9, 11]\n    # insert a new value at the beginning of the list\n    my_list.insert(0, 0)\n    # insert a new value at the end of the list\n    my_list.append(13)\n    # insert a new value in the middle of the list\n    my_list.insert(5, 8)\n    # print the list\n    print(my_list)\n    # print the length of the list\n    print(len(my_list))\n    # print the value at index 5\n    print(my_list[5])\n    # print the value at index 4\n    print(my_list[4])\n    # print the value at index 3\n    print(my_list[3])\n    # print the value at index 2\n    print(my_list[2])\n    # print the value at index 1\n    print(my_list[1])\n    # print the value at index 0\n    print(my_list[0])\n    # print the value at index 6\n    print(my_list[6])\n    # print the value at index 7\n    print(my_list[7])\n    # print the value at index 8\n    print(my_list[8])\n    # print the value at index 9\n    print(my_list[9])\n    # print the value at index 10\n    print(my_list[10])\n    # print the value at index 11\n    print(my_list[11])\n    # print the value at index 12\n    print(my_list[12])\n    # print the value at index 13\n    print(my_list[13])\n    # print the value at index 14\n    print(my_list[14])\n    # print the value at index 15\n    print(my_list[15])\n    # print the value at index 16\n    print(my_list[16])\n    # print the value at index 17\n    print(my_list[17])\n    # print the value at index 18\n    print(my_list[18])\n    # print the\n"
    ],
    "results": 10
},{
    "id": "242",
    "source": "soSearches",
    "language": "python",
    "query": "how to blit text in multiple lines in python",
    "snippets": [
        "def draw_text(text, font, surface, x, y):\n    textobj = font.render(text, 1, (0, 0, 0))\n    textrect = textobj.get_rect()\n    textrect.topleft = (x, y)\n    surface.blit(textobj, textrect)\n",
        "def main():\n    import pygame\n    import sys\n    from pygame.locals import *\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Blit Text')\n    font = pygame.font.Font(None, 36)\n    text = font.render('Hello World!', 1, (10, 80, 120))\n    textpos = text.get_rect()\n    textpos.centerx = screen.get_rect().centerx\n    textpos.centery = screen.get_rect().centery / 2\n    while True:\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                pygame.quit()\n                sys.exit()\n        screen.blit(text, textpos)\n        pygame.display.update()\n",
        "def main():\n    import pygame\n    import sys\n    from pygame.locals import *\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Blit Text')\n    font = pygame.font.Font(None, 36)\n    text = font.render(\"This is a test\", 1, (10, 10, 10))\n    textpos = text.get_rect()\n    textpos.centerx = screen.get_rect().centerx\n    textpos.centery = screen.get_rect().centery\n    screen.blit(text, textpos)\n    pygame.display.flip()\n    while True:\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                pygame.quit()\n                sys.exit()\n            elif event.type == KEYDOWN:\n                if event.key == K_ESCAPE:\n                    pygame.quit()\n                    sys.exit()\n        pygame.display.update()\n",
        "def main():\n    import pygame\n    import sys\n    from pygame.locals import *\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Blit Text')\n    font = pygame.font.Font(None, 36)\n    text = font.render('Hello World!', 1, (10, 80, 250))\n    textpos = text.get_rect()\n    textpos.centerx = screen.get_rect().centerx\n    textpos.centery = screen.get_rect().centery / 2\n    screen.blit(text, textpos)\n    pygame.display.flip()\n    while True:\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                pygame.quit()\n                sys.exit()\n        pygame.display.update()\n",
        "def main():\n    import pygame\n    import sys\n    from pygame.locals import *\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    clock = pygame.time.Clock()\n    font = pygame.font.Font(None, 36)\n    text = font.render(\"This is a test\", True, (255, 255, 255))\n    textpos = text.get_rect()\n    textpos.centerx = screen.get_rect().centerx\n    textpos.centery = screen.get_rect().centery\n    while True:\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                pygame.quit()\n                sys.exit()\n        screen.fill((0, 0, 0))\n        screen.blit(text, textpos)\n        pygame.display.update()\n        clock.tick(60)\n",
        "def draw_text(screen, text, size, x, y):\n    font = pygame.font.Font(None, size)\n    text_surface = font.render(text, True, (255, 255, 255))\n    text_rect = text_surface.get_rect()\n    text_rect.center = (x, y)\n    screen.blit(text_surface, text_rect)\n"
    ],
    "results": 9
},{
    "id": "243",
    "source": "soSearches",
    "language": "python",
    "query": "how to make simple calculator in python",
    "snippets": [
        "def add(a, b):\n    return a + b\n"
    ],
    "results": 10
},{
    "id": "244",
    "source": "soSearches",
    "language": "python",
    "query": "how to divide a phrase in python",
    "snippets": [
        "def divide_phrase(phrase, divider):\n    \"\"\"\n    divide a phrase in python\n    \"\"\"\n    return phrase.split(divider)\n",
        "def divide_phrase(phrase, divider):\n    \"\"\"\n    divide a phrase in python\n    :param phrase: string\n    :param divider: string\n    :return: list\n    \"\"\"\n    return phrase.split(divider)\n",
        "def divide_phrase(phrase, divider):\n    \"\"\"\n    divide a phrase in python\n    :param phrase: string\n    :param divider: string\n    :return: list of strings\n    \"\"\"\n    return phrase.split(divider)\n",
        "def divide_phrase(phrase, divider):\n    return phrase.split(divider)\n",
        "def divide_phrase(phrase, divisor):\n    \"\"\"\n    Divide a phrase in python\n    \"\"\"\n    return phrase.split(divisor)\n",
        "def divide_phrase(phrase, divisor):\n    \"\"\"\n    Divide a phrase in a list of phrases, each one with the same length.\n    \"\"\"\n    if divisor == 0:\n        raise ValueError(\"divisor cannot be 0\")\n    if len(phrase) % divisor != 0:\n        raise ValueError(\"phrase length is not divisible by divisor\")\n    return [phrase[i:i+divisor] for i in range(0, len(phrase), divisor)]\n",
        "def divide(phrase, divisor):\n    \"\"\"\n    divide a phrase in two parts\n    :param phrase: string\n    :param divisor: string\n    :return: list of two strings\n    \"\"\"\n    return phrase.split(divisor)\n"
    ],
    "results": 10
},{
    "id": "245",
    "source": "soSearches",
    "language": "python",
    "query": "how to stop python running",
    "snippets": [
        "def main():\n    print(\"This program is designed to stop the program\")\n    print(\"when you press ctrl+c\")\n    try:\n        while True:\n            print(\"Hello World\")\n    except KeyboardInterrupt:\n        print(\"\\n Goodbye\")\n        exit()\n",
        "def main():\n    print(\"This program is to be used to calculate the area of a circle\")\n    print(\"Enter the radius of the circle\")\n    radius = float(input())\n    area = 3.14 * radius * radius\n    print(\"The area of the circle is\", area)\n",
        "def main():\n    print(\"This program is to be used to calculate the area of a triangle\")\n    print(\"Please enter the length of the base\")\n    base = float(input())\n    print(\"Please enter the length of the height\")\n    height = float(input())\n    area = 0.5 * base * height\n    print(\"The area of the triangle is\", area)\n    print(\"Thank you for using this program\")\n",
        "def main():\n    print(\"This program is to stop the program\")\n    try:\n        while True:\n            print(\"Press ctrl+c to stop\")\n            time.sleep(1)\n    except KeyboardInterrupt:\n        print(\"\\nThe program is stopped\")\n        return\n    except Exception as e:\n        print(e)\n        return\n",
        "def main():\n    print(\"This program is designed to stop the program\")\n    print(\"when you press Ctrl-C\")\n    try:\n        while True:\n            print(\"Hello!\")\n            time.sleep(5)\n    except KeyboardInterrupt:\n        print(\"\\nProgram stopped by user\")\n        sys.exit()\n",
        "def main():\n    print(\"This program is to demotate an infinite loop.\")\n    counter = 0\n    while counter < 10:\n        print(counter)\n        counter += 1\n    input(\"\\nPress the enter key to exit.\")\n",
        "def main():\n    print(\"This is a main function\")\n    return 0\n",
        "def main():\n    print(\"This program is to learn how to stop a program\")\n    print(\"Hit CTRL-C now\")\n    while True:\n        try:\n            for i in range(10):\n                print(i)\n        except KeyboardInterrupt:\n            print(\"\\n Program stopped by user\")\n            break\n    print(\"Program ended normally\")\n"
    ],
    "results": 8
},{
    "id": "246",
    "source": "soSearches",
    "language": "python",
    "query": "how to read another file python",
    "snippets": [
        "def main():\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n",
        "def main():\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n",
        "def main():\n    with open('data.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n"
    ],
    "results": 9
},{
    "id": "247",
    "source": "soSearches",
    "language": "python",
    "query": "how to randomly select a string and use it in an if statement in python",
    "snippets": [
        "def main():\n    # create a list of strings\n    my_list = [\"hello\", \"world\", \"how\", \"are\", \"you\"]\n    # randomly select a string from the list\n    random_string = random.choice(my_list)\n    # print the string\n    print(random_string)\n    # if the string is \"hello\"\n    if random_string == \"hello\":\n        # print \"hello\"\n        print(\"hello\")\n    # if the string is \"world\"\n    elif random_string == \"world\":\n        # print \"world\"\n        print(\"world\")\n    # if the string is \"how\"\n    elif random_string == \"how\":\n        # print \"how\"\n        print(\"how\")\n    # if the string is \"are\"\n    elif random_string == \"are\":\n        # print \"are\"\n        print(\"are\")\n    # if the string is \"you\"\n    elif random_string == \"you\":\n        # print \"you\"\n        print(\"you\")\n    # if the string is not \"hello\", \"world\", \"how\", \"are\", or \"you\"\n    else:\n        # print \"I don't know\"\n        print(\"I don't know\")\n",
        "def main():\n    # create a list of strings\n    my_list = [\"hello\", \"world\", \"how\", \"are\", \"you\"]\n    # randomly select a string from the list\n    random_string = random.choice(my_list)\n    # print the string\n    print(random_string)\n    # if the string is \"hello\"\n    if random_string == \"hello\":\n        # print a message\n        print(\"hello world\")\n    # if the string is \"world\"\n    if random_string == \"world\":\n        # print a message\n        print(\"hello world\")\n    # if the string is \"how\"\n    if random_string == \"how\":\n        # print a message\n        print(\"how are you\")\n    # if the string is \"are\"\n    if random_string == \"are\":\n        # print a message\n        print(\"how are you\")\n    # if the string is \"you\"\n    if random_string == \"you\":\n        # print a message\n        print(\"how are you\")\n    # if the string is not \"hello\", \"world\", \"how\", \"are\", or \"you\"\n    if random_string != \"hello\" and random_string != \"world\" and random_string != \"how\" and random_string != \"are\" and random_string != \"you\":\n        # print a message\n        print(\"I don't know what you are talking about\")\n",
        "def main():\n    # generate a random number between 1 and 10\n    random_number = random.randint(1, 10)\n    # generate a random string\n    random_string = random.choice(['apple', 'banana', 'pear', 'orange'])\n    # print the random number\n    print('The random number is:', random_number)\n    # print the random string\n    print('The random string is:', random_string)\n    # if the random number is greater than 5\n    if random_number > 5:\n        # print the random string\n        print('The random number is greater than 5')\n    # if the random number is less than 5\n    else:\n        # print the random string\n        print('The random number is less than 5')\n    # if the random string is equal to 'apple'\n    if random_string == 'apple':\n        # print the random number\n        print('The random string is apple')\n    # if the random string is equal to 'banana'\n    elif random_string == 'banana':\n        # print the random number\n        print('The random string is banana')\n    # if the random string is equal to 'pear'\n    elif random_string == 'pear':\n        # print the random number\n        print('The random string is pear')\n    # if the random string is equal to 'orange'\n    elif random_string == 'orange':\n        # print the random number\n        print('The random string is orange')\n    # if the random string is not equal to 'apple', 'banana', 'pear', or 'orange'\n    else:\n        # print the random number\n        print('The random string is not apple, banana, pear, or orange')\n    # if the random number is greater than 5 and the random string is equal to 'apple'\n    if random_number > 5 and random_string == 'apple':\n        # print the random number\n        print('The random number is greater than 5 and the random string is apple')\n    # if the random number is greater than 5 and the random string is equal to 'banana'\n    elif random_number > 5 and random_string == 'banana':\n",
        "def main():\n    # create a list of strings\n    strings = [\"hello\", \"world\", \"how\", \"are\", \"you\"]\n    # randomly select a string\n    random_string = random.choice(strings)\n    # if the string is \"hello\"\n    if random_string == \"hello\":\n        # print \"hello\"\n        print(\"hello\")\n    # if the string is \"world\"\n    elif random_string == \"world\":\n        # print \"world\"\n        print(\"world\")\n    # if the string is \"how\"\n    elif random_string == \"how\":\n        # print \"how\"\n        print(\"how\")\n    # if the string is \"are\"\n    elif random_string == \"are\":\n        # print \"are\"\n        print(\"are\")\n    # if the string is \"you\"\n    elif random_string == \"you\":\n        # print \"you\"\n        print(\"you\")\n    # if the string is not \"hello\", \"world\", \"how\", \"are\", or \"you\"\n    else:\n        # print \"I don't know\"\n        print(\"I don't know\")\n",
        "def main():\n    # generate a random number between 1 and 6\n    roll = random.randint(1,6)\n    # if the roll is 1,2,3,4,5,6\n    if roll == 1:\n        print(\"You rolled a 1\")\n    elif roll == 2:\n        print(\"You rolled a 2\")\n    elif roll == 3:\n        print(\"You rolled a 3\")\n    elif roll == 4:\n        print(\"You rolled a 4\")\n    elif roll == 5:\n        print(\"You rolled a 5\")\n    elif roll == 6:\n        print(\"You rolled a 6\")\n    else:\n        print(\"You rolled a\", roll)\n    print(\"You rolled a\", roll)\n    # if the roll is 1,2,3,4,5,6\n    if roll == 1:\n        print(\"You rolled a 1\")\n    elif roll == 2:\n        print(\"You rolled a 2\")\n    elif roll == 3:\n        print(\"You rolled a 3\")\n    elif roll == 4:\n        print(\"You rolled a 4\")\n    elif roll == 5:\n        print(\"You rolled a 5\")\n    elif roll == 6:\n        print(\"You rolled a 6\")\n    else:\n        print(\"You rolled a\", roll)\n    print(\"You rolled a\", roll)\n    # if the roll is 1,2,3,4,5,6\n    if roll == 1:\n        print(\"You rolled a 1\")\n    elif roll == 2:\n        print(\"You rolled a 2\")\n    elif roll == 3:\n        print(\"You rolled a 3\")\n    elif roll == 4:\n        print(\"You rolled a 4\")\n    elif roll == 5:\n        print(\"You rolled a 5\")\n    elif roll == 6:\n        print(\"You rolled a 6\")\n    else:\n        print(\"You rolled a\", roll)\n    print(\"You rolled a\", roll)\n    # if the roll is 1,2,3,4,5,6\n    if roll == 1:\n        print(\"You rolled a 1\")\n    elif roll == 2:\n",
        "def main():\n    # create a list of strings\n    my_list = [\"Hello\", \"World\", \"How\", \"Are\", \"You\"]\n    # randomly select a string from the list\n    random_string = random.choice(my_list)\n    # print the string\n    print(random_string)\n    # if the string is \"Hello\"\n    if random_string == \"Hello\":\n        # print \"Hello\"\n        print(\"Hello\")\n    # if the string is \"World\"\n    elif random_string == \"World\":\n        # print \"World\"\n        print(\"World\")\n    # if the string is \"How\"\n    elif random_string == \"How\":\n        # print \"How\"\n        print(\"How\")\n    # if the string is \"Are\"\n    elif random_string == \"Are\":\n        # print \"Are\"\n        print(\"Are\")\n    # if the string is \"You\"\n    elif random_string == \"You\":\n        # print \"You\"\n        print(\"You\")\n    # if the string is not \"Hello\", \"World\", \"How\", \"Are\", or \"You\"\n    else:\n        # print \"I don't know\"\n        print(\"I don't know\")\n",
        "def main():\n    # create a list of strings\n    my_list = [\"hello\", \"world\", \"this\", \"is\", \"a\", \"list\"]\n    # randomly select a string\n    random_string = random.choice(my_list)\n    # print the string\n    print(random_string)\n    # if the string is \"hello\"\n    if random_string == \"hello\":\n        # print \"hello\"\n        print(\"hello\")\n    # if the string is \"world\"\n    elif random_string == \"world\":\n        # print \"world\"\n        print(\"world\")\n    # if the string is \"this\"\n    elif random_string == \"this\":\n        # print \"this\"\n        print(\"this\")\n    # if the string is \"is\"\n    elif random_string == \"is\":\n        # print \"is\"\n        print(\"is\")\n    # if the string is \"a\"\n    elif random_string == \"a\":\n        # print \"a\"\n        print(\"a\")\n    # if the string is \"list\"\n    elif random_string == \"list\":\n        # print \"list\"\n        print(\"list\")\n    # if the string is not \"hello\", \"world\", \"this\", \"is\", \"a\", or \"list\"\n    else:\n        # print \"not a string in my_list\"\n        print(\"not a string in my_list\")\n",
        "def main():\n    # create a list of strings\n    my_list = [\"Hello\", \"world\", \"this\", \"is\", \"a\", \"list\"]\n    # randomly select a string from the list\n    random_string = random.choice(my_list)\n    # print the string\n    print(random_string)\n    # if the string is \"Hello\"\n    if random_string == \"Hello\":\n        # print the string\n        print(random_string)\n    # if the string is \"world\"\n    if random_string == \"world\":\n        # print the string\n        print(random_string)\n    # if the string is \"this\"\n    if random_string == \"this\":\n        # print the string\n        print(random_string)\n    # if the string is \"is\"\n    if random_string == \"is\":\n        # print the string\n        print(random_string)\n    # if the string is \"a\"\n    if random_string == \"a\":\n        # print the string\n        print(random_string)\n    # if the string is \"list\"\n    if random_string == \"list\":\n        # print the string\n        print(random_string)\n    # if the string is not \"Hello\" or \"world\" or \"this\" or \"is\" or \"a\" or \"list\"\n    if random_string != \"Hello\" and random_string != \"world\" and random_string != \"this\" and random_string != \"is\" and random_string != \"a\" and random_string != \"list\":\n        # print the string\n        print(random_string)\n",
        "def main():\n    # create a list of strings\n    list_of_strings = [\"hello\", \"world\", \"this\", \"is\", \"a\", \"test\"]\n    # randomly select a string from the list\n    random_string = random.choice(list_of_strings)\n    # print the string\n    print(random_string)\n    # if the string is \"hello\"\n    if random_string == \"hello\":\n        # print \"hello\"\n        print(\"hello\")\n    # if the string is \"world\"\n    elif random_string == \"world\":\n        # print \"world\"\n        print(\"world\")\n    # if the string is \"this\"\n    elif random_string == \"this\":\n        # print \"this\"\n        print(\"this\")\n    # if the string is \"is\"\n    elif random_string == \"is\":\n        # print \"is\"\n        print(\"is\")\n    # if the string is \"a\"\n    elif random_string == \"a\":\n        # print \"a\"\n        print(\"a\")\n    # if the string is \"test\"\n    elif random_string == \"test\":\n        # print \"test\"\n        print(\"test\")\n    # if the string is not \"hello\", \"world\", \"this\", \"is\", \"a\", or \"test\"\n    else:\n        # print \"not a string\"\n        print(\"not a string\")\n"
    ],
    "results": 9
},{
    "id": "248",
    "source": "soSearches",
    "language": "python",
    "query": "how to allow a user to create a matrix in python",
    "snippets": [
        "def create_matrix(rows, columns):\n    matrix = []\n    for i in range(rows):\n        matrix.append([])\n        for j in range(columns):\n            matrix[i].append(0)\n    return matrix\n",
        "def create_matrix(rows, columns):\n    matrix = []\n    for i in range(rows):\n        matrix.append([0] * columns)\n    return matrix\n",
        "def main():\n    print(\"This program allows you to create a matrix in python\")\n    rows = int(input(\"How many rows do you want in your matrix? \"))\n    columns = int(input(\"How many columns do you want in your matrix? \"))\n    matrix = []\n    for i in range(rows):\n        matrix.append([])\n        for j in range(columns):\n            matrix[i].append(int(input(\"Enter a number: \")))\n    print(\"The matrix is: \")\n    for i in range(rows):\n        for j in range(columns):\n            print(matrix[i][j], end=\" \")\n        print()\n"
    ],
    "results": 10
},{
    "id": "249",
    "source": "soSearches",
    "language": "python",
    "query": "how to find the object type in python",
    "snippets": [
        "def main():\n    x = 5\n    print(type(x))\n    y = 5.0\n    print(type(y))\n    z = \"Hello\"\n    print(type(z))\n    a = [1, 2, 3]\n    print(type(a))\n    b = (1, 2, 3)\n    print(type(b))\n    c = {1, 2, 3}\n    print(type(c))\n    d = {1: \"one\", 2: \"two\", 3: \"three\"}\n    print(type(d))\n    e = range(0, 10)\n    print(type(e))\n    f = open(\"test.txt\", \"r\")\n    print(type(f))\n    g = f.read()\n    print(type(g))\n    h = f.close()\n    print(type(h))\n    i = f.closed\n    print(type(i))\n    j = f.mode\n    print(type(j))\n    k = f.name\n    print(type(k))\n    l = f.newlines\n    print(type(l))\n    m = f.softspace\n    print(type(m))\n    n = f.tell()\n    print(type(n))\n    o = f.write(\"test\")\n    print(type(o))\n    p = f.flush()\n    print(type(p))\n    q = f.fileno()\n    print(type(q))\n    r = f.isatty()\n    print(type(r))\n    s = f.readable()\n    print(type(s))\n    t = f.seekable()\n    print(type(t))\n    u = f.writable()\n    print(type(u))\n    v = f.closed\n    print(type(v))\n    w = f.encoding\n    print(type(w))\n    x = f.errors\n    print(type(x))\n    y = f.newlines\n    print(type(y))\n    z = f.buffer\n    print(type(z))\n    a = f.raw\n",
        "def main():\n    x = 5\n    print(type(x))\n    y = 5.0\n    print(type(y))\n    z = \"Hello\"\n    print(type(z))\n    a = [1, 2, 3]\n    print(type(a))\n    b = (1, 2, 3)\n    print(type(b))\n    c = {1, 2, 3}\n    print(type(c))\n    d = {1: \"one\", 2: \"two\", 3: \"three\"}\n    print(type(d))\n    e = range(0, 10)\n    print(type(e))\n    f = open(\"myfile.txt\")\n    print(type(f))\n    g = (1, 2, 3)\n    print(g[0])\n    print(g[1])\n    print(g[2])\n    print(g[-1])\n    print(g[-2])\n    print(g[-3])\n    print(g[0:3])\n    print(g[:3])\n    print(g[3:])\n    print(g[3:5])\n    print(g[::2])\n    print(g[::-1])\n    print(g[::-2])\n    print(g[::3])\n    print(g[::-3])\n    print(g[::-4])\n    print(g[::-5])\n    print(g[::-6])\n    print(g[::-7])\n    print(g[::-8])\n    print(g[::-9])\n    print(g[::-10])\n    print(g[::-11])\n    print(g[::-12])\n    print(g[::-13])\n    print(g[::-14])\n    print(g[::-15])\n    print(g[::-16])\n    print(g[::-17])\n    print(g[::-18])\n    print(g[::-19])\n    print(g[::-20])\n    print(g[::-21])\n    print(\n",
        "def main():\n    x = 5\n    print(type(x))\n    x = \"Hello\"\n    print(type(x))\n    x = 5.5\n    print(type(x))\n    x = True\n    print(type(x))\n    x = None\n    print(type(x))\n    x = [1, 2, 3]\n    print(type(x))\n    x = (1, 2, 3)\n    print(type(x))\n    x = {'a': 1, 'b': 2}\n    print(type(x))\n    x = range(5)\n    print(type(x))\n    x = open('test.txt', 'r')\n    print(type(x))\n    x = open('test.txt', 'w')\n    print(type(x))\n    x = open('test.txt', 'a')\n    print(type(x))\n    x = open('test.txt', 'r+')\n    print(type(x))\n    x = open('test.txt', 'w+')\n    print(type(x))\n    x = open('test.txt', 'a+')\n    print(type(x))\n    x = open('test.txt', 'rb')\n    print(type(x))\n    x = open('test.txt', 'wb')\n    print(type(x))\n    x = open('test.txt', 'ab')\n    print(type(x))\n    x = open('test.txt', 'rb+')\n    print(type(x))\n    x = open('test.txt', 'wb+')\n    print(type(x))\n    x = open('test.txt', 'ab+')\n    print(type(x))\n    x = open('test.txt', 'rt')\n    print(type(x))\n    x = open('test.txt', 'wt')\n    print(type(x))\n    x = open('test.txt', 'at')\n    print(type(x))\n    x = open('test.txt', 'rt+')\n    print(type(x))\n    x = open('test.\n",
        "def main():\n    x = 5\n    print(type(x))\n    y = \"Hello\"\n    print(type(y))\n    z = 1.234\n    print(type(z))\n    a = True\n    print(type(a))\n    b = None\n    print(type(b))\n    c = [1, 2, 3]\n    print(type(c))\n    d = (1, 2, 3)\n    print(type(d))\n    e = {'name': 'John', 'age': '35'}\n    print(type(e))\n    f = range(10)\n    print(type(f))\n    g = set()\n    print(type(g))\n    h = frozenset()\n    print(type(h))\n    i = collections.defaultdict(int)\n    print(type(i))\n    j = collections.OrderedDict()\n    print(type(j))\n    k = collections.namedtuple('person', 'name age')\n    print(type(k))\n    l = collections.deque()\n    print(type(l))\n    m = collections.Counter()\n    print(type(m))\n    n = collections.ChainMap()\n    print(type(n))\n    o = collections.UserDict()\n    print(type(o))\n    p = collections.UserList()\n    print(type(p))\n    q = collections.UserString()\n    print(type(q))\n    r = collections.deque([1, 2, 3])\n    print(type(r))\n    s = collections.Counter([1, 2, 3])\n    print(type(s))\n    t = collections.ChainMap({'a': 1, 'b': 2})\n    print(type(t))\n    u = collections.UserDict({'a': 1, 'b': 2})\n    print(type(u))\n    v = collections.UserList([1, 2, 3])\n    print(type(v))\n    w = collections.UserString('hello')\n    print(type(w))\n    x = collections.deque([1, 2\n",
        "def main():\n    x = 5\n    print(type(x))\n    x = \"hello\"\n    print(type(x))\n    x = 5.5\n    print(type(x))\n    x = True\n    print(type(x))\n    x = None\n    print(type(x))\n    x = [1, 2, 3]\n    print(type(x))\n    x = {1, 2, 3}\n    print(type(x))\n    x = (1, 2, 3)\n    print(type(x))\n    x = range(5)\n    print(type(x))\n    x = open(\"test.txt\", \"w\")\n    print(type(x))\n    x = open(\"test.txt\", \"r\")\n    print(type(x))\n    x = open(\"test.txt\", \"a\")\n    print(type(x))\n    x = open(\"test.txt\", \"r+\")\n    print(type(x))\n    x = open(\"test.txt\", \"w+\")\n    print(type(x))\n    x = open(\"test.txt\", \"a+\")\n    print(type(x))\n    x = open(\"test.txt\", \"r+\")\n    print(type(x))\n    x = open(\"test.txt\", \"w+\")\n    print(type(x))\n    x = open(\"test.txt\", \"a+\")\n    print(type(x))\n    x = open(\"test.txt\", \"r+\")\n    print(type(x))\n    x = open(\"test.txt\", \"w+\")\n    print(type(x))\n    x = open(\"test.txt\", \"a+\")\n    print(type(x))\n    x = open(\"test.txt\", \"r+\")\n    print(type(x))\n    x = open(\"test.txt\", \"w+\")\n    print(type(x))\n    x = open(\"test.txt\", \"a+\")\n    print(type(x))\n    x = open(\"test.txt\", \"r+\")\n    print(type(x))\n    x = open(\"\n",
        "def main():\n    a = 1\n    b = 1.1\n    c = \"hello\"\n    d = [1, 2, 3]\n    e = (1, 2, 3)\n    f = {1, 2, 3}\n    g = {1: \"a\", 2: \"b\", 3: \"c\"}\n    h = set([1, 2, 3])\n    i = frozenset([1, 2, 3])\n    j = range(10)\n    k = zip([1, 2, 3], [4, 5, 6])\n    l = {1, 2, 3}\n    m = frozenset([1, 2, 3])\n    n = range(10)\n    o = zip([1, 2, 3], [4, 5, 6])\n    p = {1, 2, 3}\n    q = frozenset([1, 2, 3])\n    r = range(10)\n    s = zip([1, 2, 3], [4, 5, 6])\n    t = {1, 2, 3}\n    u = frozenset([1, 2, 3])\n    v = range(10)\n    w = zip([1, 2, 3], [4, 5, 6])\n    x = {1, 2, 3}\n    y = frozenset([1, 2, 3])\n    z = range(10)\n    aa = zip([1, 2, 3], [4, 5, 6])\n    bb = {1, 2, 3}\n    cc = frozenset([1, 2, 3])\n    dd = range(10)\n    ee = zip([1, 2, 3], [4, 5, 6])\n    ff = {1, 2, 3}\n    gg = frozenset([1, 2, 3])\n    hh = range(10)\n    ii = zip([1, 2, 3], [4, 5, 6])\n    jj = {1, 2, 3}\n    kk = frozenset([1, 2, 3])\n    ll = range(10)\n    mm = zip([1, 2, 3], [4, 5, 6])\n",
        "def main():\n    print(type(1))\n    print(type(1.0))\n    print(type(True))\n    print(type('string'))\n    print(type(None))\n    print(type(print))\n    print(type(main))\n    print(type(type))\n    print(type(object))\n    print(type(list))\n    print(type(tuple))\n    print(type(set))\n    print(type(dict))\n    print(type(frozenset))\n    print(type(range))\n    print(type(open))\n    print(type(complex))\n    print(type(buffer))\n    print(type(memoryview))\n    print(type(bytearray))\n    print(type(bytes))\n    print(type(str))\n    print(type(unicode))\n    print(type(int))\n    print(type(float))\n    print(type(bool))\n    print(type(None))\n    print(type(print))\n    print(type(main))\n    print(type(type))\n    print(type(object))\n    print(type(list))\n    print(type(tuple))\n    print(type(set))\n    print(type(dict))\n    print(type(frozenset))\n    print(type(range))\n    print(type(open))\n    print(type(complex))\n    print(type(buffer))\n    print(type(memoryview))\n    print(type(bytearray))\n    print(type(bytes))\n    print(type(str))\n    print(type(unicode))\n    print(type(int))\n    print(type(float))\n    print(type(bool))\n    print(type(None))\n    print(type(print))\n    print(type(main))\n    print(type(type))\n    print(type(object))\n    print(type(list))\n    print(type(tuple))\n    print(type(set))\n    print(type(dict))\n    print(type(frozenset))\n    print(type(range))\n",
        "def main():\n    # create a list of objects\n    a = [1, 2, 3]\n    b = [1, 2, 3]\n    c = a\n    print(a == b)\n    print(a is b)\n    print(a is c)\n    print(a == c)\n    print(a is not b)\n    print(a is not c)\n    print(a != b)\n    print(a != c)\n    print(a < b)\n    print(a > b)\n    print(a <= b)\n    print(a >= b)\n    print(a < c)\n    print(a > c)\n    print(a <= c)\n    print(a >= c)\n    print(a <=> b)\n    print(a <=> c)\n    print(a <=> a)\n    print(a <=> None)\n    print(a <=> 0)\n    print(a <=> \"\")\n    print(a <=> [])\n    print(a <=> {})\n    print(a <=> set())\n    print(a <=> frozenset())\n    print(a <=> range(0))\n    print(a <=> range(1))\n    print(a <=> range(2))\n    print(a <=> range(3))\n    print(a <=> range(4))\n    print(a <=> range(5))\n    print(a <=> range(6))\n    print(a <=> range(7))\n    print(a <=> range(8))\n    print(a <=> range(9))\n    print(a <=> range(10))\n    print(a <=> range(11))\n    print(a <=> range(12))\n    print(a <=> range(13))\n    print(a <=> range(14))\n    print(a <=> range(15))\n    print(a <=> range(16))\n    print(a <=> range(17))\n    print(a <=> range(18))\n    print(a <=> range(19))\n    print(a <=> range(20))\n    print(a <=> range(\n",
        "def main():\n    # create a list of objects\n    objects = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # create a list of strings\n    strings = [\"hello\", \"world\"]\n    # create a list of tuples\n    tuples = [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10)]\n    # create a list of dictionaries\n    dictionaries = [{\"name\": \"John\", \"age\": 30}, {\"name\": \"Jane\", \"age\": 28}]\n    # create a list of lists\n    lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]\n    # create a list of sets\n    sets = [{1, 2, 3}, {4, 5, 6}, {7, 8, 9}, {10, 11, 12}]\n    # create a list of booleans\n    booleans = [True, False, True, False]\n    # create a list of floats\n    floats = [1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10]\n    # create a list of complex numbers\n    complex_numbers = [1 + 2j, 3 + 4j, 5 + 6j, 7 + 8j, 9 + 10j]\n    # create a list of functions\n    functions = [lambda x: x + 1, lambda x: x + 2, lambda x: x + 3, lambda x: x + 4, lambda x: x + 5]\n    # create a list of classes\n    classes = [MyClass, MyClass, MyClass, MyClass, MyClass]\n    # create a list of modules\n    modules = [module1, module2, module3, module4, module5]\n    # create a list of files\n    files = [open(\"test.txt\", \"r\"), open(\"test.txt\", \"r\"), open(\"test.txt\", \"r\"), open(\"test.txt\", \"r\"), open(\"test.txt\", \"r\")]\n    # create\n",
        "def main():\n    # create a list of objects\n    a = [1, 2, 3]\n    b = [1, 2, 3]\n    c = b\n    d = a + b\n    e = d[:]\n    f = d[:]\n    g = d[:]\n    h = d[:]\n    i = d[:]\n    j = d[:]\n    k = d[:]\n    l = d[:]\n    m = d[:]\n    n = d[:]\n    o = d[:]\n    p = d[:]\n    q = d[:]\n    r = d[:]\n    s = d[:]\n    t = d[:]\n    u = d[:]\n    v = d[:]\n    w = d[:]\n    x = d[:]\n    y = d[:]\n    z = d[:]\n    print(\"a:\", type(a))\n    print(\"b:\", type(b))\n    print(\"c:\", type(c))\n    print(\"d:\", type(d))\n    print(\"e:\", type(e))\n    print(\"f:\", type(f))\n    print(\"g:\", type(g))\n    print(\"h:\", type(h))\n    print(\"i:\", type(i))\n    print(\"j:\", type(j))\n    print(\"k:\", type(k))\n    print(\"l:\", type(l))\n    print(\"m:\", type(m))\n    print(\"n:\", type(n))\n    print(\"o:\", type(o))\n    print(\"p:\", type(p))\n    print(\"q:\", type(q))\n    print(\"r:\", type(r))\n    print(\"s:\", type(s))\n    print(\"t:\", type(t))\n    print(\"u:\", type(u))\n    print(\"v:\", type(v))\n    print(\"w:\", type(w))\n    print(\"x:\", type(x))\n    print(\"y:\", type(y))\n    print(\"z:\", type(z))\n"
    ],
    "results": 10
},{
    "id": "250",
    "source": "soSearches",
    "language": "python",
    "query": "how to return nothing from an if statement in python",
    "snippets": [
        "def is_prime(n):\n    if n == 1:\n        return False\n    for x in range(2, n):\n        if n % x == 0:\n            return False\n    else:\n        return True\n",
        "def is_even(num):\n    if num % 2 == 0:\n        return True\n    else:\n        return False\n",
        "def main():\n    if True:\n        return\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"This won't print\"\n    print(\"This will print\")\n    return \"This will print\"\n    print(\"This won't print\")\n    return \"\n",
        "def f():\n    if True:\n        return\n    print(\"Hello\")\n",
        "def main():\n    if True:\n        return\n    print(\"Hello World\")\n    return\n",
        "def main():\n    if True:\n        return\n    print(\"Hello World\")\n",
        "def my_function():\n    return\n",
        "def my_function():\n    pass\n",
        "def my_function():\n    return None\n",
        "def my_function():\n    return\n    print(\"Hello\")\n"
    ],
    "results": 10
},{
    "id": "251",
    "source": "soSearches",
    "language": "python",
    "query": "[python] how to make fram",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def frame(width, height):\n    for i in range(height):\n        if i == 0 or i == height - 1:\n            print('+' + '-' * width + '+')\n        else:\n            print('|' + ' ' * width + '|')\n",
        "def frame(text):\n    return '*' * (len(text) + 4) + '\\n* ' + text + ' *\\n' + '*' * (len(text) + 4)\n",
        "def fram(text, width=80, height=24, fill=' '):\n    \"\"\"\n    Return a string of ASCII characters that look like a frame.\n    \"\"\"\n    if width < 2 or height < 2:\n        return ''\n    if width < len(text):\n        text = text[:width]\n    if height < len(text):\n        text = text[:height]\n    if fill == ' ':\n        fill = ' '\n    else:\n        fill = '*'\n    frame = fill * width\n    frame += '\\n'\n    for i in range(height - 2):\n        frame += fill + text + fill + '\\n'\n    frame += fill * width\n    return frame\n"
    ],
    "results": 5
},{
    "id": "252",
    "source": "soSearches",
    "language": "python",
    "query": "how to turn a varible into a list in python",
    "snippets": [
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # print the list\n    print(my_list)\n    # print the list in reverse\n    print(my_list[::-1])\n    # print the list in reverse\n    print(my_list[::-2])\n    # print the list in reverse\n    print(my_list[::-3])\n    # print the list in reverse\n    print(my_list[::-4])\n    # print the list in reverse\n    print(my_list[::-5])\n    # print the list in reverse\n    print(my_list[::-6])\n    # print the list in reverse\n    print(my_list[::-7])\n    # print the list in reverse\n    print(my_list[::-8])\n    # print the list in reverse\n    print(my_list[::-9])\n    # print the list in reverse\n    print(my_list[::-10])\n    # print the list in reverse\n    print(my_list[::-11])\n    # print the list in reverse\n    print(my_list[::-12])\n    # print the list in reverse\n    print(my_list[::-13])\n    # print the list in reverse\n    print(my_list[::-14])\n    # print the list in reverse\n    print(my_list[::-15])\n    # print the list in reverse\n    print(my_list[::-16])\n    # print the list in reverse\n    print(my_list[::-17])\n    # print the list in reverse\n    print(my_list[::-18])\n    # print the list in reverse\n    print(my_list[::-19])\n    # print the list in reverse\n    print(my_list[::-20])\n    # print the list in reverse\n    print(my_list[::-21])\n    # print the list in reverse\n    print(my_list[::-22])\n    # print the list in reverse\n    print(my_list[::-23])\n",
        "def main():\n    # create a list of numbers\n    numbers = [1, 2, 3, 4, 5]\n    # turn the list into a string\n    print(str(numbers))\n    # turn the list into a string with commas\n    print(str(numbers)[1:-1])\n    # turn the list into a string with commas and a space\n    print(str(numbers)[1:-1].replace(',', ', '))\n    # turn the list into a string with commas and a space and a newline\n    print(str(numbers)[1:-1].replace(',', ', ').replace('[', '\\n[').replace(']', '\\n]'))\n    # turn the list into a string with commas and a space and a newline and a tab\n    print(str(numbers)[1:-1].replace(',', ', ').replace('[', '\\n\\t[').replace(']', '\\n\\t]'))\n    # turn the list into a string with commas and a space and a newline and a tab and a quote\n    print(str(numbers)[1:-1].replace(',', ', ').replace('[', '\\n\\t[\"').replace(']', '\"]'))\n    # turn the list into a string with commas and a space and a newline and a tab and a quote and a comma\n    print(str(numbers)[1:-1].replace(',', ', ').replace('[', '\\n\\t[\"').replace(']', '\"],'))\n    # turn the list into a string with commas and a space and a newline and a tab and a quote and a comma and a space\n    print(str(numbers)[1:-1].replace(',', ', ').replace('[', '\\n\\t[\"').replace(']', '\"],').replace('\"', ' \"'))\n    # turn the list into a string with commas and a space and a newline and a tab and a quote and a comma and a space and a newline\n    print(str(numbers)[1:-1].replace(',', ', ').replace('[', '\\n\\t[\"').\n",
        "def main():\n    # create a list of numbers\n    numbers = [1, 2, 3, 4, 5]\n    # turn the list into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n    print(numbers)\n    # turn the integer into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n    print(numbers)\n    # turn the integer into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n    print(numbers)\n    # turn the integer into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n    print(numbers)\n    # turn the integer into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n",
        "def main():\n    # create a list of numbers\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # turn the list into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n    print(numbers)\n    # turn the integer into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n    print(numbers)\n    # turn the integer into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n    print(numbers)\n    # turn the integer into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers[0])\n    # print the integer\n    print(numbers)\n    # turn the integer into a string\n    numbers = str(numbers)\n    # print the string\n    print(numbers)\n    # turn the string into a list\n    numbers = numbers.split(',')\n    # print the list\n    print(numbers)\n    # turn the list into an integer\n    numbers = int(numbers\n"
    ],
    "results": 9
},{
    "id": "253",
    "source": "soSearches",
    "language": "python",
    "query": "how to draw 1/x graph in python",
    "snippets": [
        "def draw_graph(x, y):\n    import matplotlib.pyplot as plt\n    plt.plot(x, y)\n    plt.show()\n",
        "def draw_graph(x):\n    for i in range(x):\n        print(' ' * (x - i) + '*' * (i * 2 + 1))\n    for i in range(x):\n        print(' ' * (i + 1) + '*' * (x - i - 1))\n"
    ],
    "results": 10
},{
    "id": "254",
    "source": "soSearches",
    "language": "python",
    "query": "how to create a login system in python",
    "snippets": [
        "def login():\n    username = input(\"Enter your username: \")\n    password = input(\"Enter your password: \")\n    if username == \"admin\" and password == \"password\":\n        print(\"You are logged in.\")\n    else:\n        print(\"Incorrect username or password.\")\n        login()\n",
        "def login():\n    username = input(\"Enter your username: \")\n    password = input(\"Enter your password: \")\n    if username == \"admin\" and password == \"password\":\n        return True\n    else:\n        return False\n",
        "def login():\n    username = input(\"Username: \")\n    password = input(\"Password: \")\n    if username == \"admin\" and password == \"password\":\n        return True\n    else:\n        return False\n",
        "def login():\n    username = input(\"Enter your username: \")\n    password = input(\"Enter your password: \")\n    if username == \"admin\" and password == \"password\":\n        print(\"You have successfully logged in.\")\n    else:\n        print(\"Your username or password is incorrect.\")\n        login()\n",
        "def login():\n    username = input(\"Username: \")\n    password = input(\"Password: \")\n    if username == \"admin\" and password == \"password\":\n        print(\"Welcome\")\n    else:\n        print(\"Wrong username or password\")\n        login()\n",
        "def login():\n    username = input(\"Enter your username: \")\n    password = input(\"Enter your password: \")\n    if username == \"admin\" and password == \"password\":\n        return \"Welcome!\"\n    else:\n        return \"Wrong username or password\"\n",
        "def login():\n    username = input(\"Enter your username: \")\n    password = input(\"Enter your password: \")\n    if username == \"admin\" and password == \"password\":\n        return print(\"You are logged in.\")\n    else:\n        return print(\"Wrong username or password.\")\n",
        "def login():\n    username = input(\"Username: \")\n    password = input(\"Password: \")\n    if username == \"admin\" and password == \"password\":\n        return \"Welcome!\"\n    else:\n        return \"Access denied\"\n"
    ],
    "results": 10
},{
    "id": "255",
    "source": "soSearches",
    "language": "python",
    "query": "how to print prime numbers in python with for and while loops with length",
    "snippets": [
        "def is_prime(n):\n    if n == 1:\n        return False\n    for x in range(2, n):\n        if n % x == 0:\n            return False\n    else:\n        return True\n",
        "def prime_numbers(n):\n    for i in range(2, n):\n        for j in range(2, i):\n            if i % j == 0:\n                break\n        else:\n            print(i)\n    while True:\n        n = int(input(\"Enter a number: \"))\n        if n == 0:\n            break\n        prime_numbers(n)\n",
        "def prime_numbers(n):\n    for i in range(2, n):\n        for j in range(2, i):\n            if i % j == 0:\n                break\n        else:\n            print(i)\n",
        "def prime_numbers(n):\n    for i in range(2, n):\n        for j in range(2, i):\n            if i % j == 0:\n                break\n        else:\n            print(i)\n    while n > 2:\n        for i in range(2, n):\n            if n % i == 0:\n                break\n        else:\n            print(n)\n            n -= 1\n    return\n",
        "def prime_numbers(n):\n    for i in range(2, n):\n        for j in range(2, i):\n            if i % j == 0:\n                break\n        else:\n            print(i)\n    while n > 0:\n        for i in range(2, n):\n            if n % i == 0:\n                break\n        else:\n            print(n)\n        n -= 1\n"
    ],
    "results": 10
},{
    "id": "256",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert dict to int python",
    "snippets": [
        "def convert_dict_to_int(d):\n    return {k: int(v) for k, v in d.items()}\n",
        "def dict_to_int(d):\n    return int(''.join(map(str, d.values())), 2)\n",
        "def convert_dict_to_int(d):\n    return int(str(d).replace('{', '').replace('}', '').replace(',', ''))\n",
        "def convert_dict_to_int(d):\n    return int(str(d).replace('{','').replace('}','').replace(':',' ').replace(',',' ').replace('\\'',' ').replace(' ',''))\n"
    ],
    "results": 10
},{
    "id": "257",
    "source": "soSearches",
    "language": "python",
    "query": "how to build an app with python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    print(\"Hello World\")\n"
    ],
    "results": 10
},{
    "id": "258",
    "source": "soSearches",
    "language": "python",
    "query": "how to call button link in html from python",
    "snippets": [
        "def button_link():\n    print(\"<a href='/'>Home</a>\")\n    print(\"<a href='/about'>About</a>\")\n    print(\"<a href='/contact'>Contact</a>\")\n    print(\"<a href='/blog'>Blog</a>\")\n    print(\"<a href='/login'>Login</a>\")\n    print(\"<a href='/logout'>Logout</a>\")\n    print(\"<a href='/register'>Register</a>\")\n    print(\"<a href='/admin'>Admin</a>\")\n    print(\"<a href='/user'>User</a>\")\n    print(\"<a href='/user/profile'>Profile</a>\")\n    print(\"<a href='/user/settings'>Settings</a>\")\n    print(\"<a href='/user/password'>Password</a>\")\n    print(\"<a href='/user/delete'>Delete</a>\")\n    print(\"<a href='/user/create'>Create</a>\")\n    print(\"<a href='/user/update'>Update</a>\")\n    print(\"<a href='/user/read'>Read</a>\")\n    print(\"<a href='/user/delete'>Delete</a>\")\n    print(\"<a href='/user/create'>Create</a>\")\n    print(\"<a href='/user/update'>Update</a>\")\n    print(\"<a href='/user/read'>Read</a>\")\n    print(\"<a href='/user/delete'>Delete</a>\")\n    print(\"<a href='/user/create'>Create</a>\")\n    print(\"<a href='/user/update'>Update</a>\")\n    print(\"<a href='/user/read'>Read</a>\")\n    print(\"<a href='/user/delete'>Delete</a>\")\n    print(\"<a href='/user/create'>Create</a>\")\n    print(\"<a href='/user/update'>Update</a>\")\n    print(\"<a href='/user/read'>Read</a>\")\n    print(\"<a href='\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Test</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h1>Test</h1>\")\n    print(\"<p>This is a test</p>\")\n    print(\"<p>\")\n    print(\"<a href=\\\"http://www.google.com\\\">Google</a>\")\n    print(\"</p>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<body>\")\n    print(\"<button onclick=\\\"location.href='http://www.google.com'\\\">Click Me</button>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Page Title</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h1>This is a heading</h1>\")\n    print(\"<p>This is a paragraph.</p>\")\n    print(\"<a href=\\\"http://www.google.com\\\">Google</a>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<head>\")\n    print(\"<title>Hello Word</title>\")\n    print(\"</head>\")\n    print(\"<body>\")\n    print(\"<h1>Hello Word</h1>\")\n    print(\"<p>This is a paragraph.</p>\")\n    print(\"<a href='http://www.google.com'>Click here to go to Google</a>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<body>\")\n    print(\"<button onclick='myFunction()'>Click me</button>\")\n    print(\"<p id='demo'></p>\")\n    print(\"<script>\")\n    print(\"function myFunction() {\")\n    print(\"document.getElementById('demo').innerHTML = 'Hello World!';\")\n    print(\"}\")\n    print(\"</script>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def main():\n    print(\"<html>\")\n    print(\"<body>\")\n    print(\"<h1>Hello World</h1>\")\n    print(\"<p>This is my first python program</p>\")\n    print(\"<button onclick=\\\"location.href='http://www.google.com'\\\">Click me to go to google</button>\")\n    print(\"</body>\")\n    print(\"</html>\")\n",
        "def button_link():\n    print(\"<a href='http://www.google.com'>Click Here</a>\")\n",
        "def button_link():\n    print(\"<a href='http://www.google.com'>Click Me</a>\")\n"
    ],
    "results": 10
},{
    "id": "259",
    "source": "soSearches",
    "language": "python",
    "query": "how to add a none to a dictionary in python 2",
    "snippets": [
        "def add_none(d):\n    d[None] = None\n    return d\n",
        "def add_none(d):\n    d['None'] = None\n    return d\n"
    ],
    "results": 8
},{
    "id": "260",
    "source": "soSearches",
    "language": "python",
    "query": "how to code to split an image to  n parts in python",
    "snippets": [
        "def split_image(image, n):\n    width, height = image.size\n    new_width = width // n\n    new_height = height // n\n    for i in range(n):\n        for j in range(n):\n            new_image = image.crop((i * new_width, j * new_height, (i + 1) * new_width, (j + 1) * new_height))\n            new_image.save(f'{i}_{j}.jpg')\n",
        "def split_image(image, n):\n    width, height = image.size\n    part_width = width // n\n    part_height = height // n\n    for i in range(n):\n        for j in range(n):\n            box = (j * part_width, i * part_height, (j + 1) * part_width, (i + 1) * part_height)\n            yield image.crop(box)\n",
        "def split_image(image, n):\n    width, height = image.size\n    new_width = width // n\n    new_height = height // n\n    for i in range(n):\n        for j in range(n):\n            new_image = image.crop((i * new_width, j * new_height, (i + 1) * new_width, (j + 1) * new_height))\n            new_image.save('{}-{}.jpg'.format(i, j))\n    return 'done'\n",
        "def split_image(image, n):\n    width, height = image.size\n    new_width = width // n\n    new_height = height // n\n    for i in range(n):\n        for j in range(n):\n            new_image = image.crop((i * new_width, j * new_height, (i + 1) * new_width, (j + 1) * new_height))\n            new_image.save(\"{}_{}.png\".format(i, j))\n",
        "def split_image(img, n):\n    w, h = img.size\n    w_part = w // n\n    h_part = h // n\n    for i in range(n):\n        for j in range(n):\n            img.crop((i * w_part, j * h_part, (i + 1) * w_part, (j + 1) * h_part)).save(str(i) + '_' + str(j) + '.jpg')\n",
        "def split_image(image, n):\n    \"\"\"\n    Split an image into n parts\n    \"\"\"\n    width, height = image.size\n    sub_width = width // n\n    sub_height = height // n\n    for i in range(n):\n        for j in range(n):\n            box = (j * sub_width, i * sub_height, (j + 1) * sub_width, (i + 1) * sub_height)\n            yield image.crop(box)\n",
        "def split_image(image, n):\n    width, height = image.size\n    new_width = width / n\n    new_height = height / n\n    for i in range(n):\n        for j in range(n):\n            box = (j * new_width, i * new_height, (j + 1) * new_width, (i + 1) * new_height)\n            yield image.crop(box)\n",
        "def split_image(image, n):\n    width, height = image.size\n    size = (width // n, height // n)\n    image_list = []\n    for i in range(n):\n        for j in range(n):\n            box = (i * size[0], j * size[1], (i + 1) * size[0], (j + 1) * size[1])\n            image_list.append(image.crop(box))\n    return image_list\n"
    ],
    "results": 10
},{
    "id": "261",
    "source": "soSearches",
    "language": "python",
    "query": "how ton append items into an array in python",
    "snippets": [
        "def main():\n    # create an empty array\n    my_list = []\n    # append items to the array\n    my_list.append(1)\n    my_list.append(2)\n    my_list.append(3)\n    my_list.append(4)\n    my_list.append(5)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(6)\n    # print the array\n    print(my_list)\n    # append an item to the beginning of the array\n    my_list.insert(0, 0)\n    # print the array\n    print(my_list)\n    # append an item to the middle of the array\n    my_list.insert(3, 3.5)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(7)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(8)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(9)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(10)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(11)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(12)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(13)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append(14)\n    # print the array\n    print(my_list)\n    # append an item to the end\n",
        "def main():\n    # create an array\n    my_list = [1, 2, 3]\n    # append an item to the end of the array\n    my_list.append(4)\n    # print the array\n    print(my_list)\n    # append multiple items to the end of the array\n    my_list.append(5, 6, 7)\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([8, 9, 10])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([11, 12, 13])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([14, 15, 16])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([17, 18, 19])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([20, 21, 22])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([23, 24, 25])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([26, 27, 28])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([29, 30, 31])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([32, 33, 34])\n    # print the array\n    print(my_list)\n    # append an item to the end of the array\n    my_list.append([35, 36, 37])\n    # print the array\n    print(my_list)\n",
        "def main():\n    # create an array\n    my_list = [1, 2, 3]\n    # append an item to the end of the array\n    my_list.append(4)\n    # print the array\n    print(my_list)\n    # append multiple items to the end of the array\n    my_list.append(5, 6, 7)\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([8, 9, 10])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([11, 12, 13])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([14, 15, 16])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([17, 18, 19])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([20, 21, 22])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([23, 24, 25])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([26, 27, 28])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([29, 30, 31])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([32, 33, 34])\n    # print the array\n    print(my_list)\n    # append an array to the end of the array\n    my_list.append([35, 36, 37])\n    # print the array\n    print(my_list)\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3]\n    # append 4 to the end of the list\n    my_list.append(4)\n    # print the list\n    print(my_list)\n    # append 5 to the end of the list\n    my_list.append(5)\n    # print the list\n    print(my_list)\n    # append 6 to the end of the list\n    my_list.append(6)\n    # print the list\n    print(my_list)\n    # append 7 to the end of the list\n    my_list.append(7)\n    # print the list\n    print(my_list)\n    # append 8 to the end of the list\n    my_list.append(8)\n    # print the list\n    print(my_list)\n    # append 9 to the end of the list\n    my_list.append(9)\n    # print the list\n    print(my_list)\n    # append 10 to the end of the list\n    my_list.append(10)\n    # print the list\n    print(my_list)\n    # append 11 to the end of the list\n    my_list.append(11)\n    # print the list\n    print(my_list)\n    # append 12 to the end of the list\n    my_list.append(12)\n    # print the list\n    print(my_list)\n    # append 13 to the end of the list\n    my_list.append(13)\n    # print the list\n    print(my_list)\n    # append 14 to the end of the list\n    my_list.append(14)\n    # print the list\n    print(my_list)\n    # append 15 to the end of the list\n    my_list.append(15)\n    # print the list\n    print(my_list)\n    # append 16 to the end of the list\n    my_list.append(16)\n    # print the list\n    print(my_list)\n    # append 17 to the end of the list\n    my_list.append(17)\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3]\n    # append an item to the end of the list\n    mylist.append(4)\n    # print the list\n    print(mylist)\n    # append multiple items to the end of the list\n    mylist.append(5, 6, 7)\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([8, 9, 10])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([11, 12, 13])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([14, 15, 16])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([17, 18, 19])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([20, 21, 22])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([23, 24, 25])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([26, 27, 28])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([29, 30, 31])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([32, 33, 34])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist.append([35, 36, 37])\n    # print the list\n    print(mylist)\n    # append an entire list to the end of the list\n    mylist\n",
        "def append_to_list(lst, value):\n    lst.append(value)\n    return lst\n",
        "def append_item(array, item):\n    array.append(item)\n    return array\n",
        "def append_to_array(array, item):\n    array.append(item)\n    return array\n"
    ],
    "results": 10
},{
    "id": "262",
    "source": "soSearches",
    "language": "python",
    "query": "[python] how to extract month of date data",
    "snippets": [
        "def get_month(date):\n    return date.split('-')[1]\n",
        "def extract_month(date):\n    return date[5:7]\n"
    ],
    "results": 10
},{
    "id": "263",
    "source": "soSearches",
    "language": "python",
    "query": "how to draw charts python 2.7",
    "snippets": [
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n    plt.plot(x, y)\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    plt.plot([1,2,3,4])\n    plt.ylabel('some numbers')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    y = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n    plt.plot(x, y)\n    plt.title('My first graph!')\n    plt.xlabel('x')\n    plt.ylabel('y')\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    # create some data\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n    # create a figure\n    plt.figure(figsize=(8, 6))\n    # create a plot\n    plt.plot(x, y)\n    # show the plot\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    # create some data\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n    # create a figure\n    plt.figure(figsize=(8, 4))\n    # create a subplot\n    plt.subplot(111)\n    # plot the data\n    plt.plot(x, y)\n    # show the plot\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n\n    # create some data\n    x = np.arange(0, 10, 0.1)\n    y = np.sin(x)\n\n    # create a figure\n    plt.figure(1)\n\n    # create a subplot\n    plt.subplot(211)\n\n    # plot the data\n    plt.plot(x, y)\n\n    # create a subplot\n    plt.subplot(212)\n\n    # plot the data\n    plt.plot(x, y)\n\n    # show the plot\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    plt.plot([1,2,3,4], [10,20,30,40])\n    plt.show()\n    plt.plot([1,2,3,4], [10,20,30,40], 'ro')\n    plt.show()\n    plt.plot([1,2,3,4], [10,20,30,40], 'r--')\n    plt.show()\n    plt.plot([1,2,3,4], [10,20,30,40], 'b^')\n    plt.show()\n    plt.plot([1,2,3,4], [10,20,30,40], 'g-.')\n    plt.show()\n    plt.plot([1,2,3,4], [10,20,30,40], 'y--', [1,2,3,4], [10,20,30,40], 'r^')\n    plt.show()\n    plt.plot([1,2,3,4], [10,20,30,40], 'y--', [1,2,3,4], [10,20,30,40], 'r^', [1,2,3,4], [10,20,30,40], 'b^')\n    plt.show()\n    plt.plot([1,2,3,4], [10,20,30,40], 'y--', [1,2,3,4], [10,20,30,40], 'r^', [1,2,3,4], [10,20,30,40], 'b^', [1,2,3,4], [10,20,30,40], 'g-.')\n    plt.show()\n    plt.plot([1,2,3,4], [10,20,30,40], 'y--', [1,2,3,4], [10,20,30,40], 'r^', [1,2,3,4], [10,20,30,40], 'b^', [1,2\n"
    ],
    "results": 10
},{
    "id": "264",
    "source": "soSearches",
    "language": "python",
    "query": "how to define a function that can change a array in python",
    "snippets": [
        "def change_array(array):\n    array[0] = \"new value\"\n    return array\n",
        "def change_array(array):\n    array[0] = \"new string\"\n    return array\n",
        "def change(arr):\n    arr[0] = \"python\"\n    arr[1] = \"is\"\n    arr[2] = \"awesome\"\n    arr[3] = \"and\"\n    arr[4] = \"I\"\n    arr[5] = \"love\"\n    arr[6] = \"it\"\n    arr[7] = \"a\"\n    arr[8] = \"lot\"\n    arr[9] = \"!\"\n    return arr\n",
        "def change_array(arr):\n    arr[0] = 'new'\n    arr[1] = 'new'\n    arr[2] = 'new'\n    return arr\n",
        "def change(arr):\n    arr[0] = 'c'\n    arr[1] = 'a'\n    arr[2] = 't'\n    arr[3] = 'o'\n    arr[4] = 'g'\n    arr[5] = 'o'\n    arr[6] = 'd'\n    arr[7] = '!'\n    return arr\n",
        "def change_array(array):\n    array[0] = 'python'\n    array[1] = 'java'\n    array[2] = 'kotlin'\n    array[3] = 'javascript'\n    return array\n",
        "def change_array(array):\n    array[0] = 'new string'\n    return array\n"
    ],
    "results": 10
},{
    "id": "265",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert .wav file to spectrogram in python 3",
    "snippets": [
        "def wav_to_spectrogram(wav_file):\n    import librosa\n    import librosa.display\n    import matplotlib.pyplot as plt\n    y, sr = librosa.load(wav_file)\n    D = librosa.stft(y)\n    S = np.abs(D)\n    librosa.display.specshow(librosa.amplitude_to_db(S, ref=np.max), y_axis='log', x_axis='time')\n    plt.title('Power spectrogram')\n    plt.colorbar(format='%+2.0f dB')\n    plt.tight_layout()\n    plt.show()\n    return S\n",
        "def wav_to_spectrogram(wav_file):\n    import numpy as np\n    import matplotlib.pyplot as plt\n    from scipy.io import wavfile\n    from scipy import signal\n    from scipy.fftpack import fft, fftfreq\n    from scipy.signal import hamming\n    from scipy.fftpack import rfft, irfft\n    from scipy.signal import get_window\n    from scipy.signal import hann\n    from scipy.signal import blackman\n    from scipy.signal import welch\n    from scipy.signal import cwt\n    from scipy.signal import sosfilt\n    from scipy.signal import sosfiltfilt\n    from scipy.signal import butter\n    from scipy.signal import lfilter\n    from scipy.signal import freqz\n    from scipy.signal import butter2sos\n    from scipy.signal import lfilter_zi\n    from scipy.signal import sos2zpk\n    from scipy.signal import zpk2sos\n    from scipy.signal import zpk2tf\n    from scipy.signal import tf2sos\n    from scipy.signal import tf2zpk\n    from scipy.signal import freqz_zpk\n    from scipy.signal import freqz_sos\n    from scipy.signal import lti\n    from scipy.signal import zpk2tf\n    from scipy.signal import tf2zpk\n    from scipy.signal import zpk2sos\n    from scipy.signal import sos2zpk\n    from scipy.signal import sos2tf\n    from scipy.signal import tf2sos\n    from scipy.signal import tf2zpk\n    from scipy.signal import zpk2tf\n    from sc\n",
        "def wav_to_spectrogram(wav_file):\n    import librosa\n    import librosa.display\n    import matplotlib.pyplot as plt\n    y, sr = librosa.load(wav_file)\n    S = librosa.feature.melspectrogram(y=y, sr=sr, n_mels=128)\n    plt.figure(figsize=(10, 5))\n    librosa.display.specshow(librosa.power_to_db(S, ref=np.max), y_axis='mel', fmax=8000, x_axis='time')\n    plt.colorbar(format='%+2.0f dB')\n    plt.title('Mel spectrogram')\n    plt.tight_layout()\n    plt.show()\n    return S\n",
        "def wav_to_spectrogram(wav_file):\n    import librosa\n    import librosa.display\n    import matplotlib.pyplot as plt\n    y, sr = librosa.load(wav_file)\n    D = librosa.stft(y)\n    S = np.abs(D)\n    log_S = librosa.amplitude_to_db(S)\n    plt.figure(figsize=(12, 4))\n    librosa.display.specshow(log_S, sr=sr, x_axis='time', y_axis='log')\n    plt.colorbar()\n    plt.title('Power spectrogram')\n    plt.tight_layout()\n    plt.show()\n    return log_S\n",
        "def wav_to_spectrogram(wav_file, spectrogram_file):\n    import librosa\n    import librosa.display\n    y, sr = librosa.load(wav_file)\n    S = librosa.feature.melspectrogram(y=y, sr=sr)\n    librosa.display.specshow(librosa.power_to_db(S, ref=np.max), y_axis='mel', fmax=8000)\n    plt.savefig(spectrogram_file)\n    plt.close()\n    return spectrogram_file\n",
        "def wav_to_spectrogram(wav_file, spectrogram_file):\n    import librosa\n    import librosa.display\n    y, sr = librosa.load(wav_file)\n    S = librosa.feature.melspectrogram(y=y, sr=sr)\n    librosa.display.specshow(librosa.power_to_db(S, ref=np.max), y_axis='mel', x_axis='time')\n    plt.savefig(spectrogram_file)\n    plt.close()\n    return spectrogram_file\n",
        "def wav2spectrogram(wav_file, spectrogram_file):\n    import numpy as np\n    import matplotlib.pyplot as plt\n    from scipy.io import wavfile\n    from scipy import signal\n    from scipy.fftpack import fft\n    from scipy.fftpack import fftfreq\n    from scipy.fftpack import fftshift\n    from scipy.fftpack import ifft\n    from scipy.fftpack import ifftshift\n    from scipy.fftpack import rfft\n    from scipy.fftpack import irfft\n    from scipy.fftpack import dct\n    from scipy.fftpack import idct\n    from scipy.fftpack import rfftfreq\n    from scipy.fftpack import rfftfreq\n    from scipy.fftpack import rfft\n    from scipy.fftpack import irfft\n    from scipy.fftpack import hfft\n    from scipy.fftpack import ihfft\n    from scipy.fftpack import hfftfreq\n    from scipy.fftpack import hfftfreq\n    from scipy.fftpack import hfft\n    from scipy.fftpack import ihfft\n    from scipy.fftpack import dst\n    from scipy.fftpack import idst\n    from scipy.fftpack import dst_type\n    from scipy.fftpack import idst_type\n    from scipy.fftpack import dst_param\n    from scipy.fftpack import idst_param\n    from scipy.fftpack import next_fast_len\n    from scipy.fftpack import next_fast_len_core\n    from scipy.fftpack import next_fast_len_max\n    from scipy.fftpack import next_fast_len_max_val\n    from scipy.fftpack import next_fast_len\n",
        "def wav_to_spectrogram(wav_file, spectrogram_file):\n    import librosa\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import librosa.display\n    y, sr = librosa.load(wav_file)\n    D = librosa.stft(y)\n    S = np.abs(D)\n    librosa.display.specshow(librosa.amplitude_to_db(S, ref=np.max), y_axis='log', x_axis='time')\n    plt.title('Power spectrogram')\n    plt.colorbar(format='%+2.0f dB')\n    plt.tight_layout()\n    plt.savefig(spectrogram_file)\n    plt.close()\n    return spectrogram_file\n",
        "def wav2spectrogram(wav_file, spectrogram_file):\n    import librosa\n    import librosa.display\n    y, sr = librosa.load(wav_file)\n    S = librosa.feature.melspectrogram(y, sr=sr, n_mels=128)\n    librosa.display.specshow(librosa.power_to_db(S, ref=np.max), y_axis='mel', x_axis='time')\n    plt.savefig(spectrogram_file)\n    plt.close()\n    return spectrogram_file\n"
    ],
    "results": 9
},{
    "id": "266",
    "source": "soSearches",
    "language": "python",
    "query": "how to sort dictionary by weekdays in python",
    "snippets": [
        "def sort_dict(d):\n    return sorted(d.items(), key=lambda x: x[1])\n",
        "def sort_dict_by_weekdays(dict):\n    return {k: v for k, v in sorted(dict.items(), key=lambda item: item[1])}\n",
        "def sort_dict_by_weekdays(dict_to_sort):\n    return {key: value for key, value in sorted(dict_to_sort.items(), key=lambda item: item[1])}\n",
        "def sort_dict(dict):\n    return sorted(dict.items(), key=lambda x: x[1])\n",
        "def sort_dict_by_weekdays(d):\n    return sorted(d.items(), key=lambda x: x[1])\n"
    ],
    "results": 10
},{
    "id": "267",
    "source": "soSearches",
    "language": "python",
    "query": "how to print function in python",
    "snippets": [
        "def print_function():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n"
    ],
    "results": 1
},{
    "id": "268",
    "source": "soSearches",
    "language": "python",
    "query": "how to create error matrix in python",
    "snippets": [
        "def error_matrix(A, B):\n    if not isinstance(A, list) or not isinstance(B, list):\n        raise TypeError(\"A and B must be list\")\n    if len(A) != len(B):\n        raise ValueError(\"A and B must be of same length\")\n    for i in A:\n        if not isinstance(i, int):\n            raise TypeError(\"A must be a list of int\")\n    for i in B:\n        if not isinstance(i, int):\n            raise TypeError(\"B must be a list of int\")\n    return [[abs(A[i] - B[i]) for i in range(len(A))]]\n",
        "def error_matrix(A, B):\n    if len(A) != len(B):\n        return None\n    else:\n        error_matrix = []\n        for i in range(len(A)):\n            error_matrix.append([])\n            for j in range(len(B)):\n                error_matrix[i].append(A[i] - B[j])\n        return error_matrix\n",
        "def error_matrix(A, B):\n    \"\"\"\n    A: numpy.ndarray of shape (n, m)\n    B: numpy.ndarray of shape (n, m)\n    Returns: numpy.ndarray of shape (m, n, n)\n    \"\"\"\n    return np.linalg.norm(A - B, axis=2)\n",
        "def error_matrix(A, B):\n    \"\"\"\n    A: numpy.ndarray of shape (n, m)\n    B: numpy.ndarray of shape (n, m)\n    Returns: numpy.ndarray of shape (n, n, m)\n    \"\"\"\n    return np.linalg.norm(A - B, axis=2)\n",
        "def error_matrix(A, B):\n    \"\"\"\n    A: numpy.ndarray of shape (n, m)\n    B: numpy.ndarray of shape (n, m)\n    Returns: the error matrix of shape (n, n)\n    \"\"\"\n    return A - B\n",
        "def error_matrix(A, B):\n    \"\"\"\n    A: numpy.ndarray of shape (n, m)\n    B: numpy.ndarray of shape (n, m)\n    Returns: C: numpy.ndarray of shape (n, n)\n    \"\"\"\n    if not isinstance(A, np.ndarray) or not isinstance(B, np.ndarray):\n        raise TypeError(\"A and B must be numpy.ndarray\")\n    if len(A.shape) != 2 or len(B.shape) != 2:\n        raise TypeError(\"A and B must be 2D\")\n    if A.shape[1] != B.shape[1]:\n        raise ValueError(\"A and B must have the same number of columns\")\n    if A.shape[0] != B.shape[0]:\n        raise ValueError(\"A and B must have the same number of rows\")\n    C = np.zeros((A.shape[0], A.shape[0]))\n    for i in range(A.shape[0]):\n        for j in range(A.shape[0]):\n            C[i][j] = np.linalg.norm(A[i] - B[j])\n    return C\n",
        "def error_matrix(A, B):\n    \"\"\"\n    A: a list of lists representing a matrix\n    B: a list of lists representing a matrix\n    return: a list of lists representing a matrix\n    \"\"\"\n    # your code here\n    if len(A) != len(B):\n        return None\n    else:\n        if len(A[0]) != len(B[0]):\n            return None\n        else:\n            error_matrix = []\n            for i in range(len(A)):\n                error_matrix.append([])\n                for j in range(len(A[0])):\n                    error_matrix[i].append(A[i][j] - B[i][j])\n            return error_matrix\n",
        "def error_matrix(A, B):\n    \"\"\"\n    A: is a list of lists\n    B: is a list of lists\n    \"\"\"\n    if not isinstance(A, list) or not isinstance(B, list):\n        raise TypeError(\"A and B must be list\")\n    if not isinstance(A[0], list) or not isinstance(B[0], list):\n        raise TypeError(\"A and B must be list of lists\")\n    if len(A) != len(B):\n        raise ValueError(\"A and B must be of same size\")\n    if len(A[0]) != len(B[0]):\n        raise ValueError(\"A and B must be of same size\")\n    for i in range(len(A)):\n        if len(A[i]) != len(B[i]):\n            raise ValueError(\"A and B must be of same size\")\n    error_matrix = []\n    for i in range(len(A)):\n        error_matrix.append([])\n        for j in range(len(A[i])):\n            error_matrix[i].append(A[i][j] - B[i][j])\n    return error_matrix\n",
        "def error_matrix(A, B):\n    \"\"\"\n    A: list of lists\n    B: list of lists\n    return: list of lists\n    \"\"\"\n    if not A or not B:\n        return []\n    if len(A[0]) != len(B[0]):\n        return []\n    error_matrix = []\n    for i in range(len(A)):\n        error_matrix.append([])\n        for j in range(len(B[0])):\n            error_matrix[i].append(A[i][j] - B[i][j])\n    return error_matrix\n",
        "def create_error_matrix(data, labels):\n    \"\"\"\n    Create a matrix of errors for a given data and labels\n    \"\"\"\n    # create a matrix of zeros\n    error_matrix = np.zeros((len(labels), len(labels)))\n    # loop over the data\n    for i in range(len(data)):\n        # get the prediction\n        prediction = predict(data[i])\n        # get the index of the prediction\n        index = labels.index(prediction)\n        # get the index of the actual value\n        actual_index = labels.index(data[i][-1])\n        # add 1 to the error matrix at the index of the prediction\n        error_matrix[index][actual_index] += 1\n    # return the error matrix\n    return error_matrix\n"
    ],
    "results": 10
},{
    "id": "269",
    "source": "soSearches",
    "language": "python",
    "query": "how to validate data input python",
    "snippets": [
        "def main():\n    try:\n        num = int(input(\"Enter a number: \"))\n        print(num)\n    except ValueError:\n        print(\"Invalid input.\")\n    except KeyboardInterrupt:\n        print(\"\\nProgram interrupted by user.\")\n    except:\n        print(\"Something went wrong.\")\n    finally:\n        print(\"Executing finally clause.\")\n",
        "def main():\n    # get input\n    name = input(\"What is your name? \")\n    age = int(input(\"How old are you? \"))\n    # validate input\n    if age < 0:\n        print(\"Error: age must be positive\")\n        return\n    elif age > 150:\n        print(\"Error: age must be less than 150\")\n        return\n    else:\n        print(\"{0} is {1} years old\".format(name, age))\n",
        "def main():\n    # get input\n    try:\n        num1 = int(input(\"Enter a number: \"))\n        num2 = int(input(\"Enter another number: \"))\n    except ValueError:\n        print(\"Invalid input.\")\n        return\n    # add numbers\n    print(num1 + num2)\n    # subtract numbers\n    print(num1 - num2)\n    # multiply numbers\n    print(num1 * num2)\n    # divide numbers\n    print(num1 / num2)\n    # modulus\n    print(num1 % num2)\n    # exponent\n    print(num1 ** num2)\n    # floor division\n    print(num1 // num2)\n    # absolute value\n    print(abs(num1))\n    # round number\n    print(round(num1))\n    # square root\n    print(num1 ** 0.5)\n    # ceiling\n    print(ceil(num1))\n    # floor\n    print(floor(num1))\n    # exponent\n    print(exp(num1))\n    # logarithm\n    print(log(num1))\n    # natural logarithm\n    print(log10(num1))\n    # sinusoidal\n    print(sin(num1))\n    # cosinusoidal\n    print(cos(num1))\n    # tangent\n    print(tan(num1))\n    # arcsinus\n    print(asin(num1))\n    # arccosinus\n    print(acos(num1))\n    # arctangent\n    print(atan(num1))\n    # hyperbolic sinusoidal\n    print(sinh(num1))\n    # hyperbolic cosinusoidal\n    print(cosh(num1))\n    # hyperbolic tangent\n    print(tanh(num1))\n    # hyperbolic arcsinus\n    print(asinh(num1))\n    # hyperbolic arccosinus\n    print(acosh(num1))\n    # hyperbolic arctangent\n    print(atanh(num1))\n    # inverse sinusoidal\n    print\n",
        "def main():\n    # get input\n    try:\n        num1 = int(input(\"Enter a number: \"))\n        num2 = int(input(\"Enter another number: \"))\n    except ValueError:\n        print(\"Invalid input.\")\n        return\n    # add numbers\n    print(num1 + num2)\n    # subtract numbers\n    print(num1 - num2)\n    # multiply numbers\n    print(num1 * num2)\n    # divide numbers\n    print(num1 / num2)\n    # modulus\n    print(num1 % num2)\n    # exponent\n    print(num1 ** num2)\n    # floor division\n    print(num1 // num2)\n    # absolute value\n    print(abs(num1))\n    # square root\n    print(num1 ** 0.5)\n    # round number\n    print(round(num1))\n    # ceiling number\n    print(ceil(num1))\n    # floor number\n    print(floor(num1))\n    # exponent\n    print(pow(num1, num2))\n    # square root\n    print(sqrt(num1))\n    # logarithm\n    print(log(num1))\n    # logarithm base 10\n    print(log10(num1))\n    # sinus\n    print(sin(num1))\n    # cosinus\n    print(cos(num1))\n    # tangens\n    print(tan(num1))\n    # arcsinus\n    print(asin(num1))\n    # arccosinus\n    print(acos(num1))\n    # arctangens\n    print(atan(num1))\n    # arctangens\n    print(atan2(num1, num2))\n    # hyperbolic sinus\n    print(sinh(num1))\n    # hyperbolic cosinus\n    print(cosh(num1))\n    # hyperbolic tangens\n    print(tanh(num1))\n    # hyperbolic arcsinus\n    print(asinh(num1))\n    # hyperbolic arccosinus\n    print(ac\n",
        "def main():\n    try:\n        age = int(input(\"How old are you? \"))\n        print(age)\n    except ValueError:\n        print(\"Invalid age\")\n    except KeyboardInterrupt:\n        print(\"\\n\\nBye!\")\n    except:\n        print(\"Something went wrong\")\n    finally:\n        print(\"\\n\\n\")\n",
        "def main():\n    try:\n        num = int(input(\"Enter a number: \"))\n        print(num)\n    except ValueError:\n        print(\"Invalid input.\")\n",
        "def main():\n    # get input from user\n    number = int(input(\"Enter a number: \"))\n    # validate input\n    if number < 0:\n        print(\"Number is negative\")\n    elif number == 0:\n        print(\"Number is zero\")\n    else:\n        print(\"Number is positive\")\n    # call the function\n    main()\n",
        "def main():\n    # get input from user\n    number = int(input(\"Enter a number: \"))\n    # validate input\n    if number < 0:\n        print(\"Number is negative\")\n    elif number == 0:\n        print(\"Number is zero\")\n    else:\n        print(\"Number is positive\")\n",
        "def main():\n    # get input from user\n    try:\n        num1 = int(input(\"Enter a number: \"))\n        num2 = int(input(\"Enter another number: \"))\n        print(num1 / num2)\n    except ValueError:\n        print(\"Invalid input.\")\n    except ZeroDivisionError:\n        print(\"Cannot divide by zero.\")\n    except Exception:\n        print(\"Unknown error.\")\n    finally:\n        print(\"Executing finally clause.\")\n    print(\"Executing after try/except.\")\n",
        "def main():\n    # get input from user\n    num1 = float(input(\"Enter a number: \"))\n    num2 = float(input(\"Enter another number: \"))\n    # calculate and display result\n    result = num1 + num2\n    print(\"The result is\", result)\n    # call the function again\n    main()\n"
    ],
    "results": 10
},{
    "id": "270",
    "source": "soSearches",
    "language": "python",
    "query": "how to validate money python",
    "snippets": [
        "def validate_money(money):\n    if money.isdigit():\n        return True\n    else:\n        return False\n",
        "def main():\n    money = float(input(\"Enter the amount of money: \"))\n    print(\"The amount of money is: \", money)\n    if money >= 0:\n        print(\"The amount of money is valid\")\n    else:\n        print(\"The amount of money is invalid\")\n",
        "def main():\n    money = float(input(\"Enter the amount of money: \"))\n    print(\"The amount of money is: \", money)\n    print(\"The amount of money is: \", format(money, \".2f\"))\n    print(\"The amount of money is: \", format(money, \".3f\"))\n    print(\"The amount of money is: \", format(money, \".4f\"))\n    print(\"The amount of money is: \", format(money, \".5f\"))\n    print(\"The amount of money is: \", format(money, \".6f\"))\n    print(\"The amount of money is: \", format(money, \".7f\"))\n    print(\"The amount of money is: \", format(money, \".8f\"))\n    print(\"The amount of money is: \", format(money, \".9f\"))\n    print(\"The amount of money is: \", format(money, \".10f\"))\n    print(\"The amount of money is: \", format(money, \".11f\"))\n    print(\"The amount of money is: \", format(money, \".12f\"))\n    print(\"The amount of money is: \", format(money, \".13f\"))\n    print(\"The amount of money is: \", format(money, \".14f\"))\n    print(\"The amount of money is: \", format(money, \".15f\"))\n    print(\"The amount of money is: \", format(money, \".16f\"))\n    print(\"The amount of money is: \", format(money, \".17f\"))\n    print(\"The amount of money is: \", format(money, \".18f\"))\n    print(\"The amount of money is: \", format(money, \".19f\"))\n    print(\"The amount of money is: \", format(money, \".20f\"))\n    print(\"The amount of money is: \", format(money, \".21f\"))\n    print(\"The amount of money is: \", format(money, \".22f\"))\n    print(\"The amount of money is: \", format(money, \".23f\"))\n    print(\"The amount of money is: \", format(money, \".24f\"))\n    print(\"The amount of money is: \", format(money, \".25f\"))\n    print(\"The amount of money is: \", format\n",
        "def main():\n    money = float(input(\"Enter the amount of money: \"))\n    if money >= 0:\n        print(\"You have entered a positive amount of money.\")\n    else:\n        print(\"You have entered a negative amount of money.\")\n",
        "def main():\n    money = float(input(\"Enter the amount of money: \"))\n    print(\"The amount of money is: \", money)\n    if money >= 0:\n        print(\"The amount of money is positive\")\n    else:\n        print(\"The amount of money is negative\")\n    if money == 0:\n        print(\"The amount of money is zero\")\n    else:\n        print(\"The amount of money is not zero\")\n    if money > 0:\n        print(\"The amount of money is positive\")\n    else:\n        print(\"The amount of money is negative\")\n    if money < 0:\n        print(\"The amount of money is negative\")\n    else:\n        print(\"The amount of money is positive\")\n    if money >= 0 and money != 0:\n        print(\"The amount of money is positive and not zero\")\n    else:\n        print(\"The amount of money is negative or zero\")\n    if money > 0 or money != 0:\n        print(\"The amount of money is positive or not zero\")\n    else:\n        print(\"The amount of money is negative\")\n    if money >= 0 and money < 0:\n        print(\"The amount of money is positive and negative\")\n    else:\n        print(\"The amount of money is positive or zero\")\n    if money > 0 or money < 0:\n        print(\"The amount of money is positive or negative\")\n    else:\n        print(\"The amount of money is zero\")\n    if money > 0 and money < 0:\n        print(\"The amount of money is positive and negative\")\n    else:\n        print(\"The amount of money is positive or zero\")\n    if money > 0 and money < 0:\n        print(\"The amount of money is positive and negative\")\n    else:\n        print(\"The amount of money is positive or zero\")\n    if money > 0 and money < 0:\n        print(\"The amount of money is positive and negative\")\n    else:\n        print(\"The amount of money is positive or zero\")\n    if money > 0 and money < 0:\n        print(\"The amount of money is positive and negative\")\n    else:\n        print(\"The amount of money is positive or zero\")\n    if money > 0 and money <\n",
        "def main():\n    try:\n        money = float(input(\"Enter a money: \"))\n        if money < 0:\n            raise ValueError\n        print(\"Valid money\")\n    except ValueError:\n        print(\"Invalid money\")\n    except Exception as e:\n        print(e)\n    finally:\n        print(\"End\")\n",
        "def main():\n    try:\n        money = float(input(\"Enter a money: \"))\n        if money < 0:\n            raise ValueError(\"Money must be greater than 0\")\n        print(\"Money is valid\")\n    except ValueError as err:\n        print(err)\n    finally:\n        print(\"End of program\")\n",
        "def main():\n    print(\"This program checks to see if your money is valid\")\n    print()\n    money = int(input(\"How much money do you have? \"))\n    print()\n    if money >= 0:\n        print(\"You have $\", money, \"in your account.\")\n    else:\n        print(\"You have $\", money, \"in your account.\")\n    print()\n    print(\"Thank you for using this program.\")\n"
    ],
    "results": 10
},{
    "id": "271",
    "source": "soSearches",
    "language": "python",
    "query": "how to call datetime t imestamp in python",
    "snippets": [
        "def main():\n    print(datetime.datetime.now())\n    print(datetime.datetime.now().timestamp())\n    print(datetime.datetime.now().timestamp() * 1000)\n    print(datetime.datetime.now().timestamp() * 1000000)\n    print(datetime.datetime.now().timestamp() * 1000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000)\n    print(datetime.datetime.now().\n",
        "def main():\n    print(datetime.datetime.now())\n    print(datetime.datetime.now().timestamp())\n    print(datetime.datetime.now().timestamp() * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000)\n    print(datetime.datetime.now().timestamp() * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 *\n",
        "def main():\n    print(datetime.datetime.now())\n    print(datetime.datetime.now().timestamp())\n    print(datetime.datetime.now().timestamp() * 1000)\n    print(datetime.datetime.now().timestamp() * 1000000)\n    print(datetime.datetime.now().timestamp() * 1000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000\n",
        "def main():\n    print(datetime.datetime.now())\n    print(datetime.datetime.now().timestamp())\n    print(datetime.datetime.now().timestamp() * 1000)\n    print(datetime.datetime.now().timestamp() * 1000000)\n    print(datetime.datetime.now().timestamp() * 1000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 10000000000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 100000000000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp() * 1000000000000000000000000000000000000000000000000000000)\n    print(datetime.datetime.now().timestamp()\n"
    ],
    "results": 10
},{
    "id": "272",
    "source": "soSearches",
    "language": "python",
    "query": "how to ignore a given words in the input sentence python",
    "snippets": [
        "def ignore_words(sentence, words):\n    for word in words:\n        sentence = sentence.replace(word, \"\")\n    return sentence\n",
        "def ignore_words(sentence, words_to_ignore):\n    # your code here\n    words = sentence.split()\n    for word in words_to_ignore:\n        if word in words:\n            words.remove(word)\n    return ' '.join(words)\n",
        "def ignore_words(sentence, words_to_ignore):\n    for word in words_to_ignore:\n        sentence = sentence.replace(word, \"\")\n    return sentence\n",
        "def ignore_words(sentence, words):\n    for word in words:\n        sentence = sentence.replace(word, '')\n    return sentence\n",
        "def ignore_words(sentence, words_to_ignore):\n    # your code here\n    # split the sentence into words\n    words = sentence.split()\n    # loop over the words\n    for word in words:\n        # if the word is in the list of words to ignore,\n        # remove it from the list of words\n        if word in words_to_ignore:\n            words.remove(word)\n    # return the joined sentence\n    return ' '.join(words)\n",
        "def ignore_words(sentence, words_to_ignore):\n    # your code here\n    # split the sentence into a list of words\n    # iterate over the list of words\n    # if the current word is in the list of words to ignore,\n    # continue to the next word\n    # otherwise, add the word to the list of words to return\n    # return the list of words to return\n    words_to_return = []\n    for word in sentence.split():\n        if word not in words_to_ignore:\n            words_to_return.append(word)\n    return words_to_return\n"
    ],
    "results": 10
},{
    "id": "273",
    "source": "soSearches",
    "language": "python",
    "query": "how to install sentimental in python",
    "snippets": [
        "def sentiment(sentence):\n    from nltk.sentiment.vader import SentimentIntensityAnalyzer\n    analyzer = SentimentIntensityAnalyzer()\n    score = analyzer.polarity_scores(sentence)\n    if score['compound'] >= 0.05:\n        return 'Positive'\n    elif score['compound'] <= -0.05:\n        return 'Negative'\n    else:\n        return 'Neutral'\n",
        "def sentiment(text):\n    from textblob import TextBlob\n    return TextBlob(text).sentiment.polarity\n",
        "def sentiment(sentence):\n    from textblob import TextBlob\n    blob = TextBlob(sentence)\n    return blob.sentiment.polarity\n",
        "def sentiment_analysis(sentence):\n    from textblob import TextBlob\n    return TextBlob(sentence).sentiment.polarity\n",
        "def sentiment_analysis(sentence):\n    from nltk.sentiment.vader import SentimentIntensityAnalyzer\n    sid = SentimentIntensityAnalyzer()\n    return sid.polarity_scores(sentence)\n",
        "def sentiment_analysis(text):\n    from textblob import TextBlob\n    return TextBlob(text).sentiment.polarity\n",
        "def sentiment(sentence):\n    from textblob import TextBlob\n    return TextBlob(sentence).sentiment.polarity\n"
    ],
    "results": 10
},{
    "id": "274",
    "source": "soSearches",
    "language": "python",
    "query": "python how to remove comma from end of row",
    "snippets": [
        "def remove_comma(row):\n    return row.rstrip(',')\n",
        "def remove_comma(row):\n    return row[:-1]\n"
    ],
    "results": 10
},{
    "id": "275",
    "source": "soSearches",
    "language": "python",
    "query": "how to end python",
    "snippets": [
        "def main():\n    print(\"This is the main function\")\n    print(\"This is the end of the program\")\n",
        "def main():\n    print(\"This is the main function\")\n    print(\"This is the end of the program\")\n    return\n",
        "def main():\n    print(\"Hello World\")\n    print(\"This is my first program\")\n    print(\"This is my second program\")\n    print(\"This is my third program\")\n    print(\"This is my fourth program\")\n    print(\"This is my fifth program\")\n    print(\"This is my sixth program\")\n    print(\"This is my seventh program\")\n    print(\"This is my eighth program\")\n    print(\"This is my ninth program\")\n    print(\"This is my tenth program\")\n    print(\"This is my eleventh program\")\n    print(\"This is my twelfth program\")\n    print(\"This is my thirteenth program\")\n    print(\"This is my fourteenth program\")\n    print(\"This is my fifteenth program\")\n    print(\"This is my sixteenth program\")\n    print(\"This is my seventeenth program\")\n    print(\"This is my eighteenth program\")\n    print(\"This is my nineteenth program\")\n    print(\"This is my twentieth program\")\n    print(\"This is my twenty-first program\")\n    print(\"This is my twenty-second program\")\n    print(\"This is my twenty-third program\")\n    print(\"This is my twenty-fourth program\")\n    print(\"This is my twenty-fifth program\")\n    print(\"This is my twenty-sixth program\")\n    print(\"This is my twenty-seventh program\")\n    print(\"This is my twenty-eighth program\")\n    print(\"This is my twenty-ninth program\")\n    print(\"This is my thirtieth program\")\n    print(\"This is my thirty-first program\")\n    print(\"This is my thirty-second program\")\n    print(\"This is my thirty-third program\")\n    print(\"This is my thirty-fourth program\")\n    print(\"This is my thirty-fifth program\")\n    print(\"This is my thirty-sixth program\")\n    print(\"This is my thirty-seventh program\")\n    print(\"This is my thirty-eighth program\")\n    print(\"This is my thirty-ninth program\")\n    print(\"This is my fourty-first program\")\n    print(\"This is my fourty-second program\")\n    print(\"This is my fourty-third program\")\n    print(\"This is my\n",
        "def main():\n    print(\"This is the main function\")\n    print(\"I'm going to end the program now\")\n    print(\"Goodbye!\")\n    return 0\n"
    ],
    "results": 5
},{
    "id": "276",
    "source": "soSearches",
    "language": "python",
    "query": "how to format for loop results python",
    "snippets": [
        "def main():\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:<3d} {2:<4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:^3d} {2:^4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:=3d} {2:=4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:!<3d} {2:!<4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:!>3d} {2:!>4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:!^3d} {2:!^4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:!=3d} {2:!=4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1\n",
        "def main():\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:<3d} {2:<4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:^3d} {2:^4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print(\"\\n\")\n    for i\n",
        "def main():\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:<3d} {2:<4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:^3d} {2:^4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i,i**2,i**3))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:\n",
        "def main():\n    for i in range(1, 11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1, 11):\n        print(\"{0:2d} {1:<3d} {2:<4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1, 11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1, 11):\n        print(\"{0:2d} {1:^3d} {2:^4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1, 11):\n        print(\"{0:2d} {1:=3d} {2:=4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1, 11):\n        print(\"{0:2d} {1:!<3d} {2:!<4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1, 11):\n        print(\"{0:2d} {1:!>3d} {2:!>4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1, 11):\n        print(\"{0:2d} {1:!^3d} {2:!^4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1, 11):\n        print(\"{0:2d} {1:!=3d} {2:!=4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in\n",
        "def main():\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i,i*i*i))\n    print(\"===================================================\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i,i*i*i))\n    print(\"===================================================\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i,i*i*i))\n    print(\"===================================================\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i,i*i*i))\n    print(\"===================================================\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i,i*i*i))\n    print(\"===================================================\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i,i*i*i))\n    print(\"===================================================\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i,i*i*i))\n    print(\"===================================================\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i,i*i*i))\n    print(\"===================================================\")\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i,i*i\n",
        "def main():\n    for i in range(1,11):\n        print(\"{0:2d} {1:3d} {2:4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:<3d} {2:<4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:>3d} {2:>4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:^3d} {2:^4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:=3d} {2:=4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:!=3d} {2:!=4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:#3d} {2:#4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:?3d} {2:?4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2d} {1:!3d} {2:!4d}\".format(i, i*i, i*i*i))\n    print()\n    for i in range(1,11):\n",
        "def main():\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(1,11):\n        print(\"{0:2} {1:3} {2:4}\".format(i,i*i,i*i*i))\n    print()\n    for i in range(\n"
    ],
    "results": 10
},{
    "id": "277",
    "source": "soSearches",
    "language": "python",
    "query": "how to calculate correlation in python",
    "snippets": [
        "def correlation(x, y):\n    n = len(x)\n    sum_x = sum(x)\n    sum_y = sum(y)\n    sum_xy = sum([x[i] * y[i] for i in range(n)])\n    sum_x_sq = sum([x[i] * x[i] for i in range(n)])\n    sum_y_sq = sum([y[i] * y[i] for i in range(n)])\n    return (n * sum_xy - sum_x * sum_y) / \\\n        sqrt((n * sum_x_sq - sum_x * sum_x) * \\\n             (n * sum_y_sq - sum_y * sum_y))\n",
        "def correlation(x, y):\n    n = len(x)\n    x_mean = sum(x) / n\n    y_mean = sum(y) / n\n    x_var = sum([(x_i - x_mean) ** 2 for x_i in x])\n    y_var = sum([(y_i - y_mean) ** 2 for y_i in y])\n    x_y_cov = sum([(x_i - x_mean) * (y_i - y_mean) for x_i, y_i in zip(x, y)])\n    return x_y_cov / (x_var * y_var) ** 0.5\n",
        "def correlation(x, y):\n    n = len(x)\n    x_mean = sum(x) / n\n    y_mean = sum(y) / n\n    x_var = sum([(x_i - x_mean) ** 2 for x_i in x])\n    y_var = sum([(y_i - y_mean) ** 2 for y_i in y])\n    xy_cov = sum([(x_i - x_mean) * (y_i - y_mean) for x_i, y_i in zip(x, y)])\n    return xy_cov / (x_var * y_var) ** 0.5\n",
        "def correlation(x, y):\n    n = len(x)\n    x_mean = sum(x) / n\n    y_mean = sum(y) / n\n    x_var = sum([(x_i - x_mean)**2 for x_i in x])\n    y_var = sum([(y_i - y_mean)**2 for y_i in y])\n    xy_cov = sum([(x_i - x_mean) * (y_i - y_mean) for x_i, y_i in zip(x, y)])\n    return xy_cov / (x_var * y_var)\n",
        "def corr(x, y):\n    n = len(x)\n    x_mean = sum(x) / n\n    y_mean = sum(y) / n\n    x_var = sum([(x_i - x_mean) ** 2 for x_i in x])\n    y_var = sum([(y_i - y_mean) ** 2 for y_i in y])\n    xy_cov = sum([(x_i - x_mean) * (y_i - y_mean) for x_i, y_i in zip(x, y)])\n    return xy_cov / (x_var * y_var) ** 0.5\n",
        "def correlation(x, y):\n    n = len(x)\n    x_mean = sum(x) / n\n    y_mean = sum(y) / n\n    x_var = sum([(x[i] - x_mean) ** 2 for i in range(n)])\n    y_var = sum([(y[i] - y_mean) ** 2 for i in range(n)])\n    xy_cov = sum([(x[i] - x_mean) * (y[i] - y_mean) for i in range(n)])\n    return xy_cov / (x_var * y_var) ** 0.5\n",
        "def correlation(x, y):\n    n = len(x)\n    x_mean = sum(x) / n\n    y_mean = sum(y) / n\n    x_var = sum([(x[i] - x_mean) ** 2 for i in range(n)])\n    y_var = sum([(y[i] - y_mean) ** 2 for i in range(n)])\n    xy_cov = sum([(x[i] - x_mean) * (y[i] - y_mean) for i in range(n)])\n    return xy_cov / (x_var * y_var)\n",
        "def correlation(x, y):\n    n = len(x)\n    x_mean, y_mean = sum(x) / n, sum(y) / n\n    x_var, y_var = sum([(x_i - x_mean) ** 2 for x_i in x]) / (n - 1), sum([(y_i - y_mean) ** 2 for y_i in y]) / (n - 1)\n    cov = sum([(x_i - x_mean) * (y_i - y_mean) for x_i, y_i in zip(x, y)]) / (n - 1)\n    return cov / (x_var * y_var) ** 0.5\n",
        "def correlation(x, y):\n    n = len(x)\n    mean_x, mean_y = sum(x) / n, sum(y) / n\n    sigma_x, sigma_y = sum((x[i] - mean_x) ** 2 for i in range(n)) / n, sum((y[i] - mean_y) ** 2 for i in range(n)) / n\n    return sum((x[i] - mean_x) * (y[i] - mean_y) for i in range(n)) / (sigma_x * sigma_y)\n",
        "def correlation(x, y):\n    n = len(x)\n    x_mean = sum(x) / n\n    y_mean = sum(y) / n\n    x_sub = [x_i - x_mean for x_i in x]\n    y_sub = [y_i - y_mean for y_i in y]\n    x_pow = [x_i ** 2 for x_i in x_sub]\n    y_pow = [y_i ** 2 for y_i in y_sub]\n    x_y = [x_i * y_i for x_i, y_i in zip(x_sub, y_sub)]\n    r_num = sum(x_y)\n    r_den = (sum(x_pow) * sum(y_pow)) ** 0.5\n    r = r_num / r_den\n    return r\n"
    ],
    "results": 10
},{
    "id": "278",
    "source": "soSearches",
    "language": "python",
    "query": "how to draw a line using opencv python programming",
    "snippets": [
        "def main():\n    import cv2\n    import numpy as np\n    img = np.zeros((512,512,3), np.uint8)\n    cv2.line(img, (0,0), (img.shape[1], img.shape[0]), (255,0,0), 3)\n    cv2.imshow(\"image\", img)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    import cv2\n    import numpy as np\n    img = np.zeros((512,512,3), np.uint8)\n    cv2.line(img, (0,0), (img.shape[1], img.shape[0]), (0,255,0), 3)\n    cv2.imshow(\"Line\", img)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    # import the opencv module\n    import cv2\n    # create a black image\n    img = np.zeros((512,512,3), np.uint8)\n    # draw a line\n    cv2.line(img, (0,0), (511,511), (255,0,0), 5)\n    # draw a rectangle\n    cv2.rectangle(img, (384,0), (510,128), (0,255,0), 3)\n    # draw a circle\n    cv2.circle(img, (447,63), 63, (0,0,255), -1)\n    # draw a polygon\n    pts = np.array([[10,5],[20,30],[70,20],[50,10]], np.int32)\n    pts = pts.reshape((-1,1,2))\n    cv2.polylines(img, [pts], True, (0,255,255))\n    # draw a text\n    font = cv2.FONT_HERSHEY_SIMPLEX\n    cv2.putText(img, 'OpenCV', (10,500), font, 4, (255,255,255), 2, cv2.LINE_AA)\n    # show the image\n    cv2.imshow('image', img)\n    # wait for a key to be pressed\n    cv2.waitKey(0)\n    # destroy all windows\n    cv2.destroyAllWindows()\n",
        "def main():\n    # create a black image\n    img = np.zeros((512,512,3), np.uint8)\n    # draw a diagonal line\n    cv2.line(img, (0,0), (511,511), (255,0,0), 5)\n    # draw a line from (0,0) to (511,511) with thickness 5\n    cv2.line(img, (0,0), (511,511), (255,0,0), 5)\n    # draw a line from (0,511) to (511,0) with thickness 5\n    cv2.line(img, (0,511), (511,0), (255,0,0), 5)\n    # display the image\n    cv2.imshow(\"image\", img)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    # create a black image\n    img = np.zeros((512,512,3), np.uint8)\n    # draw a diagonal line\n    cv2.line(img, (0,0), (511,511), (255,0,0), 5)\n    cv2.imshow(\"image\", img)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    # import the necessary packages\n    import cv2\n    import numpy as np\n    # load the image\n    image = cv2.imread(\"images/input.jpg\")\n    # create a black image with the same dimensions as our loaded image\n    blank = np.zeros((image.shape[0], image.shape[1], 3))\n    # draw a red line on the black image\n    cv2.line(blank, (0, 0), (image.shape[1], image.shape[0]), (0, 0, 255), 10)\n    # draw a green line on the black image\n    cv2.line(blank, (0, image.shape[0]), (image.shape[1], 0), (0, 255, 0), 10)\n    # draw a blue line on the black image\n    cv2.line(blank, (image.shape[1], 0), (0, image.shape[0]), (255, 0, 0), 10)\n    # draw a yellow line on the black image\n    cv2.line(blank, (image.shape[1], image.shape[0]), (0, 0), (0, 255, 255), 10)\n    # show the image\n    cv2.imshow(\"Lines\", blank)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    # import the necessary packages\n    import cv2\n    import numpy as np\n    # load the image\n    image = cv2.imread(\"images/input.jpg\")\n    # create a black image with the same dimensions as our loaded image\n    blank = np.zeros((image.shape[0], image.shape[1], 3))\n    # draw a red line on the black image\n    cv2.line(blank, (0, 0), (image.shape[1], image.shape[0]), (0, 0, 255), 10)\n    # draw a green line on the black image\n    cv2.line(blank, (0, image.shape[0]), (image.shape[1], 0), (0, 255, 0), 10)\n    # draw a blue line on the black image\n    cv2.line(blank, (image.shape[1], 0), (0, image.shape[0]), (255, 0, 0), 10)\n    # draw a cyan line on the black image\n    cv2.line(blank, (image.shape[1], image.shape[0]), (0, 0), (255, 255, 0), 10)\n    # draw a magenta line on the black image\n    cv2.line(blank, (0, image.shape[0]), (image.shape[1], 0), (255, 0, 255), 10)\n    # draw a yellow line on the black image\n    cv2.line(blank, (0, 0), (image.shape[1], image.shape[0]), (0, 255, 255), 10)\n    # draw a white line on the black image\n    cv2.line(blank, (image.shape[1], 0), (0, image.shape[0]), (255, 255, 255), 10)\n    # show the image\n    cv2.imshow(\"Lines\", blank)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    # import the necessary packages\n    import cv2\n\n    # load the image\n    image = cv2.imread(\"images/input.jpg\")\n\n    # draw a line\n    cv2.line(image, (0,0), (150,150), (255,255,255), 15)\n\n    # display the image\n    cv2.imshow(\"Image\", image)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n",
        "def main():\n    # import the necessary packages\n    import cv2\n    import numpy as np\n    # load the image\n    image = cv2.imread(\"../images/input.jpg\")\n    # create a black image with the same dimensions as our loaded image\n    blank = np.zeros((image.shape[0], image.shape[1], 3), np.uint8)\n    # draw a line\n    cv2.line(blank, (0, 0), (200, 200), (255, 255, 255), 5)\n    # draw a rectangle\n    cv2.rectangle(blank, (10, 10), (100, 100), (255, 255, 255), 5)\n    # draw a circle\n    cv2.circle(blank, (50, 50), 50, (255, 255, 255), 5)\n    # draw a polygon\n    pts = np.array([[10, 5], [20, 30], [70, 20], [50, 10]], np.int32)\n    pts = pts.reshape((-1, 1, 2))\n    cv2.polylines(blank, [pts], True, (255, 255, 255))\n    # add text to our image\n    cv2.putText(blank, \"OPENCV\", (10, 500), cv2.FONT_HERSHEY_SIMPLEX, 4, (255, 255, 255), 10)\n    # display the image\n    cv2.imshow(\"Image\", blank)\n    # wait for a key to be pressed\n    cv2.waitKey(0)\n    # close all open windows\n    cv2.destroyAllWindows()\n",
        "def main():\n    # import the necessary packages\n    import cv2\n    import numpy as np\n\n    # load the image\n    image = cv2.imread(\"images/input.jpg\")\n\n    # draw a line\n    cv2.line(image, (0,0), (150,150), (255,255,255), 15)\n\n    # display the image\n    cv2.imshow(\"Image\", image)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n"
    ],
    "results": 10
},{
    "id": "279",
    "source": "soSearches",
    "language": "python",
    "query": "how to use python to talk to agilent power meter",
    "snippets": [
        "def main():\n    import agilent_power_meter\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import csv\n    import pandas as pd\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.style as style\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.backends.backend_agg as plt_agg\n    import matplotlib.backends.backend_tkagg as plt_tkagg\n    import matplotlib.backends.backend_qt5agg as plt_qt5agg\n    import matplotlib.backends.backend_qt4agg as plt_qt4agg\n    import matplotlib.backends.backend_webagg as plt_webagg\n    import matplotlib.backends.backend_ps as plt_ps\n    import matplotlib.backends.backend_svg as plt_svg\n    import matplotlib.backends.backend_pgf as plt_pgf\n    import matplotlib.backends.backend_cairo as plt_cairo\n    import matplotlib.backends.backend_template as plt_template\n    import matplotlib.backends.backend_emf as plt_emf\n    import matplotlib.backends.backend_null as plt_null\n    import matplotlib.backends.backend_tkagg as plt_tkagg\n    import matplotlib.backends.backend_wxagg as plt_wxagg\n    import matplotlib.backends.backend_qt4agg as plt_qt4agg\n    import matplotlib.backends.backend_\n",
        "def main():\n    import agilent_power_meter\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import configparser\n    import pdb\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import configparser\n    import pdb\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import configparser\n    import pdb\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import configparser\n    import pdb\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import configparser\n    import pdb\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import configparser\n    import pdb\n    import csv\n    import pand\n",
        "def main():\n    import agilent_power_meter\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import signal\n    import subprocess\n    import shlex\n    import re\n    import csv\n    import pandas as pd\n    import pickle\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import signal\n    import subprocess\n    import shlex\n    import re\n    import csv\n    import pandas as pd\n    import pickle\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import signal\n    import subprocess\n    import shlex\n    import re\n    import csv\n    import pandas as pd\n    import pickle\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import signal\n    import subprocess\n    import shlex\n    import re\n    import csv\n    import pandas as pd\n    import pickle\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import datetime\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import signal\n    import subprocess\n    import shlex\n    import re\n    import csv\n    import pandas as pd\n    import pickle\n    import matplotlib.pyplot as pl\n",
        "def main():\n    import agilent_power_meter\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import csv\n    import pandas as pd\n    import itertools\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.backends.backend_pdf as pdffigures\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_pgf as pgf\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_template as template\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_gtkagg as gtkagg\n    import matplotlib.backends.backend_wxagg as wxagg\n    import matplotlib.backends.backend_cocoaagg as cocoaagg\n    import matplotlib.backends.backend_emf as emf\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.\n",
        "def main():\n    import agilent_power_meter\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime as dt\n    import sys\n    import os\n    import glob\n    import re\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime as dt\n    import sys\n    import os\n    import glob\n    import re\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime as dt\n    import sys\n    import os\n    import glob\n    import re\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime as dt\n    import sys\n    import os\n    import glob\n    import re\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime as dt\n    import sys\n    import os\n    import glob\n    import re\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime as dt\n    import sys\n    import\n",
        "def main():\n    import agilent_power_meter\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import pickle\n    import csv\n    import pandas as pd\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import pickle\n    import csv\n    import pandas as pd\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import pickle\n    import csv\n    import pandas as pd\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import pickle\n    import csv\n    import pandas as pd\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import pickle\n    import csv\n    import pandas as pd\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import datetime\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import traceback\n    import pickle\n    import csv\n    import pandas as pd\n    import\n",
        "def main():\n    import agilent_power_meter as agpm\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import csv\n    import pandas as pd\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.gridspec as gridspec\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as\n",
        "def main():\n    import agilent_power_meter\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import sys\n    import os\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import csv\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n    import matplotlib.dates as mdates\n    import matplotlib.pyplot as plt\n    import matplotlib.ticker as ticker\n"
    ],
    "results": 8
},{
    "id": "280",
    "source": "soSearches",
    "language": "python",
    "query": "how to minimize list based on element attribute python",
    "snippets": [
        "def min_list(lst, attr):\n    min_val = lst[0][attr]\n    for i in lst:\n        if i[attr] < min_val:\n            min_val = i[attr]\n    return min_val\n",
        "def min_list(lst, attr):\n    min_val = min(lst, key=lambda x: x[attr])\n    return min_val\n",
        "def min_list(list_of_numbers, attribute):\n    min_value = list_of_numbers[0][attribute]\n    for i in list_of_numbers:\n        if i[attribute] < min_value:\n            min_value = i[attribute]\n    return min_value\n",
        "def min_list(lst, attr):\n    min_val = None\n    for i in lst:\n        if min_val is None or getattr(i, attr) < getattr(min_val, attr):\n            min_val = i\n    return min_val\n",
        "def min_list(list_of_lists, attribute):\n    \"\"\"\n    :param list_of_lists: list of lists\n    :param attribute: attribute to minimize\n    :return: list of lists with minimized attribute\n    \"\"\"\n    return sorted(list_of_lists, key=lambda x: x[attribute])\n",
        "def min_list(list1, attribute):\n    list2 = []\n    for i in list1:\n        list2.append(i[attribute])\n    return min(list2)\n",
        "def min_list(list_of_lists, attr):\n    \"\"\"\n    :param list_of_lists: list of lists\n    :param attr: attribute to minimize\n    :return: list of lists with minimized attribute\n    \"\"\"\n    return sorted(list_of_lists, key=lambda x: x[attr])\n"
    ],
    "results": 10
},{
    "id": "281",
    "source": "soSearches",
    "language": "python",
    "query": "how to compare two numbers in a list in python",
    "snippets": [
        "def compare(list1, list2):\n    if list1[0] > list2[0]:\n        return 1\n    elif list1[0] < list2[0]:\n        return -1\n    else:\n        return 0\n",
        "def compare(a, b):\n    if a > b:\n        return 1\n    elif a < b:\n        return -1\n    else:\n        return 0\n",
        "def compare(list):\n    if list[0] > list[1]:\n        return list[0]\n    else:\n        return list[1]\n",
        "def compare(a, b):\n    if a > b:\n        return 1\n    elif a == b:\n        return 0\n    else:\n        return -1\n",
        "def compare(list1, list2):\n    if list1[0] > list2[0]:\n        return True\n    else:\n        return False\n"
    ],
    "results": 10
},{
    "id": "282",
    "source": "soSearches",
    "language": "python",
    "query": "how to read from file python",
    "snippets": [
        "def read_file(filename):\n    with open(filename, 'r') as f:\n        return f.read()\n",
        "def main():\n    # open file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n",
        "def main():\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open('lines.txt', 'r')\n    # read file\n    for line in infile:\n        print(line, end='')\n    # close file\n    infile.close()\n    # open file\n    infile = open\n",
        "def main():\n    # open the file for reading\n    # r = read, w = write, a = append, r+ = read and write\n    infile = open('lines.txt', 'r')\n    # read the file\n    # readline() = read one line\n    # readlines() = read all lines\n    # read() = read all lines and return as a string\n    # print(infile.readline())\n    # print(infile.readlines())\n    # print(infile.read())\n    # close the file\n    infile.close()\n    # open the file for writing\n    outfile = open('lines.txt', 'w')\n    outfile.write('This is a test\\n')\n    outfile.write('This is another test\\n')\n    outfile.close()\n    # open the file for appending\n    outfile = open('lines.txt', 'a')\n    outfile.write('This is a test\\n')\n    outfile.write('This is another test\\n')\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('lines.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    # write to the file\n    outfile.write('This is a test\\n')\n    outfile.write('This is another test\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('lines.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    # write to the file\n    outfile.write('This is a test\\n')\n    outfile.write('This is another test\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('lines.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    # write to the file\n    outfile.write('This is a test\\n')\n    outfile.write('This is another test\\n')\n    #\n",
        "def main():\n    # open the file for reading\n    read_file = open(\"read_file.txt\", \"r\")\n\n    # read the file\n    print(read_file.read())\n\n    # close the file\n    read_file.close()\n",
        "def main():\n    # open the file for reading\n    # r = read, w = write, a = append, r+ = read and write\n    infile = open('myfile.txt', 'r')\n    # read the file\n    # readline() = read one line\n    # readlines() = read all lines\n    # read() = read all\n    # print(infile.readline())\n    # print(infile.readlines())\n    # print(infile.read())\n    # close the file\n    infile.close()\n    # open the file for writing\n    outfile = open('myfile.txt', 'w')\n    # write to the file\n    outfile.write('Hello World!')\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open('myfile.txt', 'a')\n    # write to the file\n    outfile.write('\\nHello World!')\n    # close the file\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # write to the file\n    outfile.write('\\nHello World!')\n    # close the file\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    # close the file\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    # close the file\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    # close the file\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # read the file\n    print(outfile.read())\n",
        "def main():\n    # open the file for reading\n    # r = read, w = write, a = append, r+ = read and write\n    infile = open('myfile.txt', 'r')\n    # read the file\n    # readline() = read one line\n    # readlines() = read all lines\n    # read() = read all\n    # print(infile.readline())\n    # print(infile.readlines())\n    # print(infile.read())\n    # close the file\n    infile.close()\n    # open the file for writing\n    outfile = open('myfile.txt', 'w')\n    # write to the file\n    outfile.write('This is a test\\n')\n    outfile.write('This is another line\\n')\n    outfile.close()\n    # open the file for appending\n    outfile = open('myfile.txt', 'a')\n    # write to the file\n    outfile.write('This is a test\\n')\n    outfile.write('This is another line\\n')\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # write to the file\n    outfile.write('This is a test\\n')\n    outfile.write('This is another line\\n')\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # read the file\n    print(outfile.read())\n    outfile.close()\n    # open the file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    # read the\n",
        "def main():\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n\n    # read the file's contents\n    # readline() reads a single line\n    line = infile.readline()\n    while line != '':\n        print(line)\n        line = infile.readline()\n    infile.close()\n",
        "def main():\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file's contents\n    # readline() returns a string\n    # readline() returns a blank string when there is no more data to read\n    line = infile.readline()\n    while line != '':\n        print(line)\n        line = infile.readline()\n    # close the file\n    infile.close()\n    print('Done reading file.')\n"
    ],
    "results": 10
},{
    "id": "283",
    "source": "soSearches",
    "language": "python",
    "query": "how to do columns in python",
    "snippets": [
        "def main():\n    print(\"This program illustrates a chaotic function\")\n    x = eval(input(\"Enter a number between 0 and 1: \"))\n    for i in range(10):\n        x = 3.9 * x * (1 - x)\n        print(x)\n",
        "def main():\n    # create a list of lists\n    data = [['apples', 'oranges', 'cherries', 'banana'],\n            ['Alice', 'Bob', 'Carol', 'David'],\n            ['dogs', 'cats', 'moose', 'goose']]\n    # print the data\n    print(data)\n    # print the data in a table\n    printTable(data)\n    # print the data in a table with each column right-aligned\n    printTable(data, True)\n    # print the data in a table with each column centered\n    printTable(data, False, True)\n    # print the data in a table with each column right-aligned and centered\n    printTable(data, True, True)\n    # print the data in a table with each column right-aligned and centered and with a custom width\n    printTable(data, True, True, 10)\n    # print the data in a table with each column right-aligned and centered and with a custom width and with a custom separator\n    printTable(data, True, True, 10, '*')\n    # print the data in a table with each column right-aligned and centered and with a custom width and with a custom separator and with a custom header\n    printTable(data, True, True, 10, '*', ['col1', 'col2', 'col3', 'col4'])\n    # print the data in a table with each column right-aligned and centered and with a custom width and with a custom separator and with a custom header and with a custom footer\n    printTable(data, True, True, 10, '*', ['col1', 'col2', 'col3', 'col4'], ['footer1', 'footer2', 'footer3', 'footer4'])\n    # print the data in a table with each column right-aligned and centered and with a custom width and with a custom separator and with a custom header and with a custom footer and with a custom alignment\n    printTable(data, True, True, 10, '*', ['col1', 'col2', 'col3', 'col4'], ['footer1', 'footer2', 'footer3',\n",
        "def main():\n    # create a list of lists\n    data = [['apples', 'oranges', 'cherries', 'banana'],\n            ['Alice', 'Bob', 'Carol', 'David'],\n            ['dogs', 'cats', 'moose', 'goose']]\n    # print the data\n    print(data)\n    # print the data in a table\n    printTable(data)\n    # print the data in a table with each column right-aligned\n    printTable(data, rightAlign=True)\n    # print the data in a table with each column centered\n    printTable(data, center=True)\n    # print the data in a table with each column right-aligned and centered\n    printTable(data, rightAlign=True, center=True)\n    # print the data in a table with each column right-aligned and centered\n    printTable(data, rightAlign=True, center=True, header=True)\n    # print the data in a table with each column right-aligned and centered\n    printTable(data, rightAlign=True, center=True, header=True,\n               headerSeparator='*')\n    # print the data in a table with each column right-aligned and centered\n    printTable(data, rightAlign=True, center=True, header=True,\n               headerSeparator='*', separator='-')\n    # print the data in a table with each column right-aligned and centered\n    printTable(data, rightAlign=True, center=True, header=True,\n               headerSeparator='*', separator='-',\n               headerFormat='{:^10}')\n    # print the data in a table with each column right-aligned and centered\n    printTable(data, rightAlign=True, center=True, header=True,\n               headerSeparator='*', separator='-',\n               headerFormat='{:^10}', format='{:^10}')\n    # print the data in a table with each column right-aligned and centered\n    printTable(data, rightAlign=True, center=True, header=True,\n               headerSeparator='*', separator\n",
        "def main():\n    # create a list of lists\n    data = [['Joe', 'Doe', '\n",
        "def main():\n    # create a list of strings\n    my_list = [\"\n",
        "def main():\n    # create a list of strings\n    names = ['ray', 'joe', 'jane', 'jim', 'jessie', 'jimmy']\n    # create a list of numbers\n    numbers = [1, 2, 3, 4, 5, 6]\n    # create a list of tuples\n    names_numbers = list(zip(names, numbers))\n    # print the list of tuples\n    print(names_numbers)\n    # unzip the list of tuples\n    names, numbers = zip(*names_numbers)\n    # print the list of names\n    print(names)\n    # print the list of numbers\n    print(numbers)\n    # create a list of strings\n    names = ['ray', 'joe', 'jane', 'jim', 'jessie', 'jimmy']\n    # create a list of numbers\n    numbers = [1, 2, 3, 4, 5, 6]\n    # create a list of tuples\n    names_numbers = list(zip(names, numbers))\n    # print the list of tuples\n    print(names_numbers)\n    # unzip the list of tuples\n    names, numbers = zip(*names_numbers)\n    # print the list of names\n    print(names)\n    # print the list of numbers\n    print(numbers)\n    # create a list of strings\n    names = ['ray', 'joe', 'jane', 'jim', 'jessie', 'jimmy']\n    # create a list of numbers\n    numbers = [1, 2, 3, 4, 5, 6]\n    # create a list of tuples\n    names_numbers = list(zip(names, numbers))\n    # print the list of tuples\n    print(names_numbers)\n    # unzip the list of tuples\n    names, numbers = zip(*names_numbers)\n    # print the list of names\n    print(names)\n    # print the list of numbers\n    print(numbers)\n    # create a list of strings\n    names = ['ray', 'joe', 'jane', 'jim', 'j\n"
    ],
    "results": 7
},{
    "id": "284",
    "source": "soSearches",
    "language": "python",
    "query": "how to make every other char upper case in python string",
    "snippets": [
        "def upper_case(string):\n    new_string = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            new_string += string[i].upper()\n        else:\n            new_string += string[i]\n    return new_string\n",
        "def main():\n    s = \"this is a string\"\n    print(s.upper())\n    print(s.lower())\n    print(s.capitalize())\n    print(s.title())\n    print(s.swapcase())\n    print(s.count('i'))\n    print(s.find('i'))\n    print(s.find('i', 3))\n    print(s.find('i', 3, 10))\n    print(s.find('i', 3, 10, 4))\n    print(s.rfind('i'))\n    print(s.rfind('i', 3))\n    print(s.rfind('i', 3, 10))\n    print(s.rfind('i', 3, 10, 4))\n    print(s.index('i'))\n    print(s.index('i', 3))\n    print(s.index('i', 3, 10))\n    print(s.index('i', 3, 10, 4))\n    print(s.rindex('i'))\n    print(s.rindex('i', 3))\n    print(s.rindex('i', 3, 10))\n    print(s.rindex('i', 3, 10, 4))\n    print(s.startswith('this'))\n    print(s.startswith('this', 0, 4))\n    print(s.startswith('this', 0, 4, True))\n    print(s.endswith('string'))\n    print(s.endswith('string', 0, len(s) - 6))\n    print(s.endswith('string', 0, len(s) - 6, True))\n    print(s.center(20, '*'))\n    print(s.center(20, '*', True))\n    print(s.ljust(20, '*'))\n    print(s.ljust(20, '*', True))\n    print(s.rjust(20, '*'))\n    print(s.rjust(20, '*', True))\n    print(s.strip())\n    print(s.strip('i'\n",
        "def upper_case(string):\n    return string.upper()\n"
    ],
    "results": 9
},{
    "id": "285",
    "source": "soSearches",
    "language": "python",
    "query": "how to make a txt file into a list in python",
    "snippets": [
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # open the file\n    outfile = open(\"test.txt\", \"w\")\n    # write the list to the file\n    outfile.write(str(data))\n    # close the file\n    outfile.close()\n",
        "def main():\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n    # close the file\n    infile.close()\n    # split the file into a list\n    words = words.split()\n    # print the list\n    print(words)\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n    # close the file\n    infile.close()\n    # split the file into a list\n    words = words.split()\n    # print the list\n    print(words)\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n    # close the file\n    infile.close()\n    # split the file into a list\n    words = words.split()\n    # print the list\n    print(words)\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n    # close the file\n    infile.close()\n    # split the file into a list\n    words = words.split()\n    # print the list\n    print(words)\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n    # close the file\n    infile.close()\n    # split the file into a list\n    words = words.split()\n    # print the list\n    print(words)\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n    # close the file\n    infile.close()\n    # split the file into a list\n    words = words.split()\n    # print the list\n    print(words)\n    # open the file\n    infile = open(\"words.txt\", \"r\")\n    # read the file\n    words = infile.read()\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # split the file into a list\n    data = data.split()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        lines = f.readlines()\n    for line in lines:\n        print(line)\n    print(lines)\n    print(lines[0])\n    print(lines[1])\n    print(lines[2])\n    print(lines[3])\n    print(lines[4])\n    print(lines[5])\n    print(lines[6])\n    print(lines[7])\n    print(lines[8])\n    print(lines[9])\n    print(lines[10])\n    print(lines[11])\n    print(lines[12])\n    print(lines[13])\n    print(lines[14])\n    print(lines[15])\n    print(lines[16])\n    print(lines[17])\n    print(lines[18])\n    print(lines[19])\n    print(lines[20])\n    print(lines[21])\n    print(lines[22])\n    print(lines[23])\n    print(lines[24])\n    print(lines[25])\n    print(lines[26])\n    print(lines[27])\n    print(lines[28])\n    print(lines[29])\n    print(lines[30])\n    print(lines[31])\n    print(lines[32])\n    print(lines[33])\n    print(lines[34])\n    print(lines[35])\n    print(lines[36])\n    print(lines[37])\n    print(lines[38])\n    print(lines[39])\n    print(lines[40])\n    print(lines[41])\n    print(lines[42])\n    print(lines[43])\n    print(lines[44])\n    print(lines[45])\n    print(lines[46])\n    print(lines[47])\n    print(lines[48])\n    print(lines[49])\n    print(lines[50])\n    print(lines[51])\n    print(lines[52])\n    print(lines[53])\n    print(lines[54])\n    print(lines[55])\n    print(lines[\n",
        "def main():\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the list\n    print(data)\n    # open the file\n    infile = open('test.txt', 'r')\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        lines = f.readlines()\n    for line in lines:\n        print(line)\n    print(lines)\n    print(type(lines))\n    print(len(lines))\n    print(lines[0])\n    print(lines[1])\n    print(lines[2])\n    print(lines[3])\n    print(lines[4])\n    print(lines[5])\n    print(lines[6])\n    print(lines[7])\n    print(lines[8])\n    print(lines[9])\n    print(lines[10])\n    print(lines[11])\n    print(lines[12])\n    print(lines[13])\n    print(lines[14])\n    print(lines[15])\n    print(lines[16])\n    print(lines[17])\n    print(lines[18])\n    print(lines[19])\n    print(lines[20])\n    print(lines[21])\n    print(lines[22])\n    print(lines[23])\n    print(lines[24])\n    print(lines[25])\n    print(lines[26])\n    print(lines[27])\n    print(lines[28])\n    print(lines[29])\n    print(lines[30])\n    print(lines[31])\n    print(lines[32])\n    print(lines[33])\n    print(lines[34])\n    print(lines[35])\n    print(lines[36])\n    print(lines[37])\n    print(lines[38])\n    print(lines[39])\n    print(lines[40])\n    print(lines[41])\n    print(lines[42])\n    print(lines[43])\n    print(lines[44])\n    print(lines[45])\n    print(lines[46])\n    print(lines[47])\n    print(lines[48])\n    print(lines[49])\n    print(lines[50])\n    print(lines[51])\n    print(lines[52])\n    print(lines[53])\n    print(lines[\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        lines = f.readlines()\n    print(lines)\n    for line in lines:\n        print(line)\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        lines = f.readlines()\n    for line in lines:\n        print(line)\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        lines = f.readlines()\n    for line in lines:\n        print(line.strip())\n"
    ],
    "results": 10
},{
    "id": "286",
    "source": "soSearches",
    "language": "python",
    "query": "how to check my python version using command",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    print(\"Hello World\")\n    print(\"Python version: {}\".format(sys.version))\n"
    ],
    "results": 8
},{
    "id": "287",
    "source": "soSearches",
    "language": "python",
    "query": "how to upgrade setuptools python 3.6",
    "snippets": [
        "def main():\n    print(\"hello world\")\n",
        "def main():\n    print(\"Hello World\")\n",
        "def main():\n    print(\"Hello, world!\")\n",
        "def main():\n    pass\n"
    ],
    "results": 10
},{
    "id": "288",
    "source": "soSearches",
    "language": "python",
    "query": "how to call elements on lists in python",
    "snippets": [
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # print the list\n    print(my_list)\n    # print the first element\n    print(my_list[0])\n    # print the last element\n    print(my_list[-1])\n    # print the second element\n    print(my_list[1])\n    # print the second to last element\n    print(my_list[-2])\n    # print the third element\n    print(my_list[2])\n    # print the third to last element\n    print(my_list[-3])\n    # print the fourth element\n    print(my_list[3])\n    # print the fourth to last element\n    print(my_list[-4])\n    # print the fifth element\n    print(my_list[4])\n    # print the fifth to last element\n    print(my_list[-5])\n    # print the sixth element\n    print(my_list[5])\n    # print the sixth to last element\n    print(my_list[-6])\n    # print the seventh element\n    print(my_list[6])\n    # print the seventh to last element\n    print(my_list[-7])\n    # print the eighth element\n    print(my_list[7])\n    # print the eighth to last element\n    print(my_list[-8])\n    # print the ninth element\n    print(my_list[8])\n    # print the ninth to last element\n    print(my_list[-9])\n    # print the tenth element\n    print(my_list[9])\n    # print the tenth to last element\n    print(my_list[-10])\n    # print the eleventh element\n    print(my_list[10])\n    # print the eleventh to last element\n    print(my_list[-11])\n    # print the twelfth element\n    print(my_list[11])\n    # print the twelfth to last element\n    print(my_list[-12])\n    # print the thirteenth element\n    print(my\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # print the list\n    print(my_list)\n    # print the first element\n    print(my_list[0])\n    # print the last element\n    print(my_list[-1])\n    # print the third element\n    print(my_list[2])\n    # print the second from last element\n    print(my_list[-2])\n    # print the second element from the end\n    print(my_list[-3])\n    # print the second element from the end\n    print(my_list[-4])\n    # print the second element from the end\n    print(my_list[-5])\n    # print the second element from the end\n    print(my_list[-6])\n    # print the second element from the end\n    print(my_list[-7])\n    # print the second element from the end\n    print(my_list[-8])\n    # print the second element from the end\n    print(my_list[-9])\n    # print the second element from the end\n    print(my_list[-10])\n    # print the second element from the end\n    print(my_list[-11])\n    # print the second element from the end\n    print(my_list[-12])\n    # print the second element from the end\n    print(my_list[-13])\n    # print the second element from the end\n    print(my_list[-14])\n    # print the second element from the end\n    print(my_list[-15])\n    # print the second element from the end\n    print(my_list[-16])\n    # print the second element from the end\n    print(my_list[-17])\n    # print the second element from the end\n    print(my_list[-18])\n    # print the second element from the end\n    print(my_list[-19])\n    # print the second element from the end\n    print(my_list[-20])\n    # print the second element from the end\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # print the list\n    print(my_list)\n    # print the first element\n    print(my_list[0])\n    # print the last element\n    print(my_list[-1])\n    # print the second to last element\n    print(my_list[-2])\n    # print the second element\n    print(my_list[1])\n    # print the third element\n    print(my_list[2])\n    # print the fourth element\n    print(my_list[3])\n    # print the fifth element\n    print(my_list[4])\n    # print the sixth element\n    print(my_list[5])\n    # print the seventh element\n    print(my_list[6])\n    # print the eighth element\n    print(my_list[7])\n    # print the ninth element\n    print(my_list[8])\n    # print the tenth element\n    print(my_list[9])\n    # print the eleventh element\n    print(my_list[10])\n    # print the twelfth element\n    print(my_list[11])\n    # print the thirteenth element\n    print(my_list[12])\n    # print the fourteenth element\n    print(my_list[13])\n    # print the fifteenth element\n    print(my_list[14])\n    # print the sixteenth element\n    print(my_list[15])\n    # print the seventeenth element\n    print(my_list[16])\n    # print the eighteenth element\n    print(my_list[17])\n    # print the nineteenth element\n    print(my_list[18])\n    # print the twentieth element\n    print(my_list[19])\n    # print the twenty-first element\n    print(my_list[20])\n    # print the twenty-second element\n    print(my_list[21])\n    # print the twenty-third element\n    print(my_list[22])\n    # print the twenty-fourth element\n    print(my_list[\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # print the list\n    print(my_list)\n    # print the first element\n    print(my_list[0])\n    # print the last element\n    print(my_list[-1])\n    # print the third element\n    print(my_list[2])\n    # print the second from last element\n    print(my_list[-2])\n    # print the first three elements\n    print(my_list[0:3])\n    # print the last three elements\n    print(my_list[-3:])\n    # print the second element from the start to the third from the end\n    print(my_list[1:3])\n    # print the second element from the end to the third from the start\n    print(my_list[-3:-1])\n    # print the first two elements from the start to the end\n    print(my_list[:2])\n    # print the first two elements from the end to the start\n    print(my_list[-2:])\n    # print the first two elements from the start to the end\n    print(my_list[:])\n    # print the last two elements from the start to the end\n    print(my_list[:-2])\n    # print the last two elements from the end to the start\n    print(my_list[-2:])\n    # print the first two elements from the start to the end\n    print(my_list[:])\n    # print the last two elements from the start to the end\n    print(my_list[:-2])\n    # print the last two elements from the end to the start\n    print(my_list[-2:])\n    # print the first two elements from the start to the end\n    print(my_list[:])\n    # print the last two elements from the start to the end\n    print(my_list[:-2])\n    # print the last two elements from the end to the start\n    print(my_list[-2:])\n    # print the first two elements from the start to the end\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # print the first element\n    print(my_list[0])\n    # print the last element\n    print(my_list[-1])\n    # print the second element\n    print(my_list[1])\n    # print the second to last element\n    print(my_list[-2])\n    # print the third element\n    print(my_list[2])\n    # print the third to last element\n    print(my_list[-3])\n    # print the fourth element\n    print(my_list[3])\n    # print the fourth to last element\n    print(my_list[-4])\n    # print the fifth element\n    print(my_list[4])\n    # print the fifth to last element\n    print(my_list[-5])\n    # print the sixth element\n    print(my_list[5])\n    # print the sixth to last element\n    print(my_list[-6])\n    # print the seventh element\n    print(my_list[6])\n    # print the seventh to last element\n    print(my_list[-7])\n    # print the eighth element\n    print(my_list[7])\n    # print the eighth to last element\n    print(my_list[-8])\n    # print the ninth element\n    print(my_list[8])\n    # print the ninth to last element\n    print(my_list[-9])\n    # print the tenth element\n    print(my_list[9])\n    # print the tenth to last element\n    print(my_list[-10])\n    # print the eleventh element\n    print(my_list[10])\n    # print the eleventh to last element\n    print(my_list[-11])\n    # print the twelfth element\n    print(my_list[11])\n    # print the twelfth to last element\n    print(my_list[-12])\n    # print the thirteenth element\n    print(my_list[12])\n    # print the thirteenth to\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # print the list\n    print(my_list)\n    # print the first element of the list\n    print(my_list[0])\n    # print the last element of the list\n    print(my_list[-1])\n    # print the second element of the list\n    print(my_list[1])\n    # print the second to last element of the list\n    print(my_list[-2])\n    # print the third element of the list\n    print(my_list[2])\n    # print the third to last element of the list\n    print(my_list[-3])\n    # print the fourth element of the list\n    print(my_list[3])\n    # print the fourth to last element of the list\n    print(my_list[-4])\n    # print the fifth element of the list\n    print(my_list[4])\n    # print the fifth to last element of the list\n    print(my_list[-5])\n    # print the sixth element of the list\n    print(my_list[5])\n    # print the sixth to last element of the list\n    print(my_list[-6])\n    # print the seventh element of the list\n    print(my_list[6])\n    # print the seventh to last element of the list\n    print(my_list[-7])\n    # print the eighth element of the list\n    print(my_list[7])\n    # print the eighth to last element of the list\n    print(my_list[-8])\n    # print the ninth element of the list\n    print(my_list[8])\n    # print the ninth to last element of the list\n    print(my_list[-9])\n    # print the tenth element of the list\n    print(my_list[9])\n    # print the tenth to last element of the list\n    print(my_list[-10])\n    # print the eleventh element of the list\n    print(my_list[10])\n    # print the eleventh to last element of\n",
        "def main():\n    # create a list of items\n    shopping_list = ['eggs', 'milk', 'bread', 'apples', 'oranges', 'bananas']\n    # print the list\n    print(shopping_list)\n    # print the first item in the list\n    print(shopping_list[0])\n    # print the second item in the list\n    print(shopping_list[1])\n    # print the third item in the list\n    print(shopping_list[2])\n    # print the fourth item in the list\n    print(shopping_list[3])\n    # print the fifth item in the list\n    print(shopping_list[4])\n    # print the sixth item in the list\n    print(shopping_list[5])\n    # print the seventh item in the list\n    print(shopping_list[6])\n    # print the eighth item in the list\n    print(shopping_list[7])\n    # print the ninth item in the list\n    print(shopping_list[8])\n    # print the tenth item in the list\n    print(shopping_list[9])\n    # print the eleventh item in the list\n    print(shopping_list[10])\n    # print the twelfth item in the list\n    print(shopping_list[11])\n    # print the thirteenth item in the list\n    print(shopping_list[12])\n    # print the fourteenth item in the list\n    print(shopping_list[13])\n    # print the fifteenth item in the list\n    print(shopping_list[14])\n    # print the sixteenth item in the list\n    print(shopping_list[15])\n    # print the seventeenth item in the list\n    print(shopping_list[16])\n    # print the eighteenth item in the list\n    print(shopping_list[17])\n    # print the nineteenth item in the list\n    print(shopping_list[18])\n    # print the twentieth item in the list\n    print(shopping_list[19])\n    # print the twenty-first item in the list\n    print(sh\n",
        "def main():\n    # create a list of items\n    shopping_list = ['milk', 'eggs', 'bread', 'chicken', 'soda']\n    # print the list\n    print(shopping_list)\n    # print the first item in the list\n    print(shopping_list[0])\n    # print the last item in the list\n    print(shopping_list[-1])\n    # print the third item in the list\n    print(shopping_list[2])\n    # print the third item in the list\n    print(shopping_list[2:])\n    # print the third item in the list\n    print(shopping_list[2:4])\n    # print the third item in the list\n    print(shopping_list[:4])\n    # print the third item in the list\n    print(shopping_list[1:4])\n    # print the third item in the list\n    print(shopping_list[1:])\n    # print the third item in the list\n    print(shopping_list[:])\n    # print the third item in the list\n    print(shopping_list[::2])\n    # print the third item in the list\n    print(shopping_list[::-1])\n    # print the third item in the list\n    print(shopping_list[::-2])\n    # print the third item in the list\n    print(shopping_list[::-3])\n    # print the third item in the list\n    print(shopping_list[::-4])\n    # print the third item in the list\n    print(shopping_list[::-5])\n    # print the third item in the list\n    print(shopping_list[::-6])\n    # print the third item in the list\n    print(shopping_list[::-7])\n    # print the third item in the list\n    print(shopping_list[::-8])\n    # print the third item in the list\n    print(shopping_list[::-9])\n    # print the third item in the list\n    print(shopping_list[::-10])\n"
    ],
    "results": 9
},{
    "id": "289",
    "source": "soSearches",
    "language": "python",
    "query": "how to get image file from html at python",
    "snippets": [
        "def get_image_from_html(html):\n    import re\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import os\n    import sys\n    import time\n    import random\n    import string\n    import socket\n    import http.client\n    import httplib2\n    import requests\n    import json\n    import base64\n    import io\n    import PIL.Image\n    import PIL.ImageDraw\n    import PIL.ImageFont\n    import PIL.ImageFilter\n    import PIL.ImageOps\n    import PIL.ImageChops\n    import PIL.ImageEnhance\n    import PIL.ImageColor\n    import PIL.ImageDraw\n    import PIL.ImageFont\n    import PIL.ImageFilter\n    import PIL.ImageOps\n    import PIL.ImageEnhance\n    import PIL.ImageColor\n    import PIL.ImageDraw\n    import PIL.ImageFont\n    import PIL.ImageFilter\n    import PIL.ImageOps\n    import PIL.ImageEnhance\n    import PIL.ImageColor\n    import PIL.ImageDraw\n    import PIL.ImageFont\n    import PIL.ImageFilter\n    import PIL.ImageOps\n    import PIL.ImageEnhance\n    import PIL.ImageColor\n    import PIL.ImageDraw\n    import PIL.ImageFont\n    import PIL.ImageFilter\n    import PIL.ImageOps\n    import PIL.ImageEnhance\n    import PIL.ImageColor\n    import PIL.ImageDraw\n    import PIL.ImageFont\n    import PIL.ImageFilter\n    import PIL.ImageOps\n    import PIL.ImageEnhance\n    import PIL.ImageColor\n    import PIL.ImageDraw\n    import PIL.ImageFont\n    import PIL.ImageFilter\n    import PIL.ImageOps\n    import PIL.ImageEnhance\n    import PIL.ImageColor\n    import PIL.ImageDraw\n    import PIL.ImageFont\n    import PIL.ImageFilter\n    import PIL.ImageOps\n    import PIL.ImageEnhance\n    import PIL.Image\n",
        "def get_image_from_html(html):\n    import re\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import os\n    import sys\n    import time\n    import random\n    import string\n    import requests\n    from bs4 import BeautifulSoup\n    from PIL import Image\n    from io import BytesIO\n    from PIL import Image\n\n    # get image url\n    soup = BeautifulSoup(html, 'html.parser')\n    img_url = soup.find('img')['src']\n    # get image name\n    img_name = img_url.split('/')[-1]\n    # get image data\n    img_data = requests.get(img_url).content\n    # save image\n    with open(img_name, 'wb') as handler:\n        handler.write(img_data)\n    # return image name\n    return img_name\n",
        "def get_image_from_html(html):\n    import re\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import os\n    import time\n    import random\n    import requests\n    import bs4\n    import sys\n    import io\n    import gzip\n    import zlib\n    import json\n    import lxml\n    import lxml.html\n    import lxml.etree\n    import lxml.html.clean\n    import lxml.html.source\n    import lxml.html.source.lxml\n    import lxml.html.source.lxml.html\n    import lxml.html.source.lxml.html.body\n    import lxml.html.source.lxml.html.body.div\n    import lxml.html.source.lxml.html.body.div.div\n    import lxml.html.source.lxml.html.body.div.div.div\n    import lxml.html.source.lxml.html.body.div.div.div.div\n    import lxml.html.source.lxml.html.body.div.div.div.div.div\n    import lxml.html.source.lxml.html.body.div.div.div.div.div.div\n    import lxml.html.source.lxml.html.body.div.div.div.div.div.div.div\n    import lxml.html.source.lxml.html.body.div.div.div.div.div.div.div.div\n    import lxml.html.source.lxml.html.body.div.div.div.div.div.div.div.div.div\n    import lxml.html.source.lxml.html.body.div.div.div.div.div.div.div.div.div.div\n    import lxml.html.source.lxml.html.body.div.div.div\n",
        "def get_image_from_html(html):\n    import re\n    import requests\n    import io\n    from PIL import Image\n    from bs4 import BeautifulSoup\n    soup = BeautifulSoup(html, 'html.parser')\n    img_tag = soup.find('img')\n    img_url = img_tag.get('src')\n    img_data = requests.get(img_url).content\n    img = Image.open(io.BytesIO(img_data))\n    return img\n",
        "def get_image_from_html(html):\n    import re\n    import requests\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    from bs4 import BeautifulSoup\n    from PIL import Image\n    from io import BytesIO\n    from PIL import Image\n\n    soup = BeautifulSoup(html, 'html.parser')\n    img_tags = soup.find_all('img')\n    for img_tag in img_tags:\n        img_url = img_tag.get('src')\n        if img_url is not None:\n            img_url = urllib.parse.urljoin(html, img_url)\n            img_data = requests.get(img_url).content\n            img = Image.open(BytesIO(img_data))\n            img.save('image.jpg')\n            return img\n    return None\n",
        "def get_image_url(html):\n    import re\n    reg = r'src=\"(.+?\\.jpg)\"'\n    image_url = re.findall(reg, html)\n    return image_url\n",
        "def get_image_url(html):\n    import re\n    reg = r'<img src=\"(.*?)\"'\n    image_url = re.findall(reg, html)\n    return image_url\n"
    ],
    "results": 7
},{
    "id": "290",
    "source": "soSearches",
    "language": "python",
    "query": "how to get lan & longtitude wih python",
    "snippets": [
        "def get_location():\n    import requests\n    import json\n    url = 'http://ip-api.com/json'\n    r = requests.get(url)\n    j = json.loads(r.text)\n    return j['query']\n",
        "def get_location():\n    import requests\n    import json\n    url = 'http://ip-api.com/json'\n    r = requests.get(url)\n    j = json.loads(r.text)\n    return j['city'], j['lat'], j['lon']\n",
        "def get_location():\n    import requests\n    import json\n    url = 'http://ip-api.com/json'\n    r = requests.get(url)\n    j = json.loads(r.text)\n    return j['lat'], j['lon']\n",
        "def get_lan_longtitude():\n    import requests\n    import json\n    url = 'http://ip-api.com/json'\n    r = requests.get(url)\n    j = json.loads(r.text)\n    return j['lat'], j['lon']\n",
        "def get_lan_longtitude():\n    import urllib.request\n    import json\n    url = 'http://ip-api.com/json'\n    response = urllib.request.urlopen(url)\n    data = json.loads(response.read())\n    return data['lat'], data['lon']\n",
        "def get_lan_longtitude():\n    import requests\n    import json\n    url = 'https://ipapi.co/json/'\n    response = requests.get(url)\n    data = json.loads(response.text)\n    return data['latitude'], data['longitude']\n"
    ],
    "results": 8
},{
    "id": "291",
    "source": "soSearches",
    "language": "python",
    "query": "how to ask questions on python",
    "snippets": [
        "def main():\n    print(\"How old are you?\")\n    age = input()\n    print(\"How tall are you?\")\n    height = input()\n    print(\"How much do you weigh?\")\n    weight = input()\n\n    print(\"So you're %r old, %r tall and %r heavy.\" % (age, height, weight))\n",
        "def main():\n    print(\"How old are you?\")\n    age = input()\n    print(\"How tall are you?\")\n    height = input()\n    print(\"How much do you weigh?\")\n    weight = input()\n\n    print(\"So, you're %r old, %r tall and %r heavy.\" % (\n        age, height, weight))\n",
        "def main():\n    print(\"How old are you?\")\n    age = int(input())\n    print(\"How tall are you?\")\n    height = int(input())\n    print(\"How much do you weigh?\")\n    weight = int(input())\n\n    print(f\"So, you're {age} old, {height} tall and {weight} heavy.\")\n",
        "def main():\n    print(\"How old are you?\", end=' ')\n    age = input()\n    print(\"How tall are you?\", end=' ')\n    height = input()\n    print(\"How much do you weigh?\", end=' ')\n    weight = input()\n\n    print(f\"So you're {age} old, {height} tall and {weight} heavy.\")\n",
        "def main():\n    print(\"How old are you?\")\n    age = int(input())\n    print(\"How tall are you?\")\n    height = int(input())\n    print(\"How much do you weigh?\")\n    weight = int(input())\n    print(\"So you're %r old, %r tall and %r heavy.\" % (age, height, weight))\n"
    ],
    "results": 10
},{
    "id": "292",
    "source": "soSearches",
    "language": "python",
    "query": "how to use for loop python",
    "snippets": [
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(10):\n        print(i, end=\" \")\n    for i in range(10):\n        print(i, end=\"\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in range(10):\n        print(i, end=\"\\n\")\n    for i in range(10):\n        print(i, end=\"\\t\")\n    for i in\n",
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(10,20):\n        print(i)\n    for i in range(10,20,2):\n        print(i)\n    for i in range(10,20,3):\n        print(i)\n    for i in range(10,20,4):\n        print(i)\n    for i in range(10,20,5):\n        print(i)\n    for i in range(10,20,6):\n        print(i)\n    for i in range(10,20,7):\n        print(i)\n    for i in range(10,20,8):\n        print(i)\n    for i in range(10,20,9):\n        print(i)\n    for i in range(10,20,10):\n        print(i)\n    for i in range(10,20,11):\n        print(i)\n    for i in range(10,20,12):\n        print(i)\n    for i in range(10,20,13):\n        print(i)\n    for i in range(10,20,14):\n        print(i)\n    for i in range(10,20,15):\n        print(i)\n    for i in range(10,20,16):\n        print(i)\n    for i in range(10,20,17):\n        print(i)\n    for i in range(10,20,18):\n        print(i)\n    for i in range(10,20,19):\n        print(i)\n    for i in range(10,20,20):\n        print(i)\n    for i in range(10,20,21):\n        print(i)\n    for i in range(10,20,22):\n        print(i)\n    for i in range(10,20,23):\n        print(i)\n    for i in range(10,20,24):\n        print(i)\n    for i in range(10,20,25):\n        print(i)\n    for i in range(10,\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    for i in range(1,10,2):\n        print(i)\n    for i in range(10,0,-1):\n        print(i)\n    for i in range(10,0,-2):\n        print(i)\n    for i in range(10,0,-3):\n        print(i)\n    for i in range(10,0,-4):\n        print(i)\n    for i in range(10,0,-5):\n        print(i)\n    for i in range(10,0,-6):\n        print(i)\n    for i in range(10,0,-7):\n        print(i)\n    for i in range(10,0,-8):\n        print(i)\n    for i in range(10,0,-9):\n        print(i)\n    for i in range(10,0,-10):\n        print(i)\n    for i in range(10,0,-11):\n        print(i)\n    for i in range(10,0,-12):\n        print(i)\n    for i in range(10,0,-13):\n        print(i)\n    for i in range(10,0,-14):\n        print(i)\n    for i in range(10,0,-15):\n        print(i)\n    for i in range(10,0,-16):\n        print(i)\n    for i in range(10,0,-17):\n        print(i)\n    for i in range(10,0,-18):\n        print(i)\n    for i in range(10,0,-19):\n        print(i)\n    for i in range(10,0,-20):\n        print(i)\n    for i in range(10,0,-21):\n        print(i)\n    for i in range(10,0,-22):\n        print(i)\n    for i in range(10,0,-23):\n        print(i)\n    for i in range(10,0,-24):\n        print(i)\n    for i in\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    print(\"\\n\")\n    for i in range(1,10,2):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-1):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-2):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-3):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-4):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-5):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-6):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-7):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-8):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-9):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-10):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-11):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-12):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-13):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-14):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-15):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-16):\n        print(i)\n    print(\"\\n\")\n    for i in range(10,0,-17):\n        print(i)\n    print(\"\\n\")\n    for i in\n",
        "def main():\n    for i in range(1,10):\n        print(i)\n    for i in range(1,10):\n        print(i,end=\" \")\n    for i in range(1,10):\n        print(i,end=\"\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\")\n    for i in range(1,10):\n        print(i,end=\"\\n\")\n    for i in range(1,10):\n        print(i,end=\"\\t\n"
    ],
    "results": 7
},{
    "id": "293",
    "source": "soSearches",
    "language": "python",
    "query": "how to define a package in python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def add(a, b):\n    return a + b\n",
        "def main():\n    print(\"Hello World\")\n",
        "def main():\n    print(\"hello world\")\n"
    ],
    "results": 10
},{
    "id": "294",
    "source": "soSearches",
    "language": "python",
    "query": "how to built a matrix in python",
    "snippets": [
        "def matrix(n):\n    matrix = []\n    for i in range(n):\n        matrix.append([])\n        for j in range(n):\n            matrix[i].append(0)\n    return matrix\n",
        "def matrix_create(m, n):\n    matrix = []\n    for i in range(m):\n        matrix.append([])\n        for j in range(n):\n            matrix[i].append(0)\n    return matrix\n",
        "def matrix_multiplication(m_a, m_b):\n    if len(m_a[0]) != len(m_b):\n        return None\n    if len(m_a) != len(m_b[0]):\n        return None\n    result = []\n    for i in range(len(m_a)):\n        result.append([])\n        for j in range(len(m_b[0])):\n            result[i].append(0)\n            for k in range(len(m_b)):\n                result[i][j] += m_a[i][k] * m_b[k][j]\n    return result\n",
        "def matrix_multiplication(m_a, m_b):\n    if len(m_a[0]) != len(m_b):\n        return None\n    if len(m_a) != len(m_b[0]):\n        return None\n    new_matrix = []\n    for i in range(len(m_a)):\n        new_matrix.append([])\n        for j in range(len(m_b[0])):\n            new_matrix[i].append(0)\n            for k in range(len(m_b)):\n                new_matrix[i][j] += m_a[i][k] * m_b[k][j]\n    return new_matrix\n",
        "def matrix_multiplication(m_a, m_b):\n    if not isinstance(m_a, list):\n        raise TypeError(\"m_a must be a list\")\n    if not isinstance(m_b, list):\n        raise TypeError(\"m_b must be a list\")\n    if len(m_a) == 0 or len(m_a[0]) == 0:\n        raise ValueError(\"m_a can't be empty\")\n    if len(m_b) == 0 or len(m_b[0]) == 0:\n        raise ValueError(\"m_b can't be empty\")\n    if len(m_a[0]) != len(m_b):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a) != len(m_b[0]):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a[0]) != len(m_b[0]):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a) != len(m_b):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a) != len(m_b):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a) != len(m_b):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a) != len(m_b):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a) != len(m_b):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a) != len(m_b):\n        raise ValueError(\"m_a and m_b must be valid for multiplication\")\n    if len(m_a) != len(m_b):\n        raise ValueError(\"m_a and m_b must be valid for\n",
        "def matrix_multiplication(m_a, m_b):\n    if len(m_a[0]) != len(m_b):\n        return None\n    else:\n        m_c = []\n        for i in range(len(m_a)):\n            m_c.append([])\n            for j in range(len(m_b[0])):\n                m_c[i].append(0)\n                for k in range(len(m_b)):\n                    m_c[i][j] += m_a[i][k] * m_b[k][j]\n        return m_c\n"
    ],
    "results": 10
},{
    "id": "295",
    "source": "soSearches",
    "language": "python",
    "query": "how to automaticly move obstacles python",
    "snippets": [
        "def move_obstacle(obstacle, direction):\n    if direction == \"left\":\n        obstacle[0] -= 1\n    elif direction == \"right\":\n        obstacle[0] += 1\n    elif direction == \"up\":\n        obstacle[1] += 1\n    elif direction == \"down\":\n        obstacle[1] -= 1\n    return obstacle\n",
        "def move_obstacles(obstacles, delta_x, delta_y):\n    for obstacle in obstacles:\n        obstacle[0] += delta_x\n        obstacle[1] += delta_y\n    return obstacles\n",
        "def move_obstacles(obstacles, target):\n    for obstacle in obstacles:\n        obstacle[0] += target[0]\n        obstacle[1] += target[1]\n    return obstacles\n",
        "def move_obstacles(obstacles, velocity):\n    for obstacle in obstacles:\n        obstacle[0] += velocity\n    return obstacles\n",
        "def main():\n    import time\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import random\n    import math\n    import sys\n    import os\n    import cv2\n    import csv\n    import time\n    import pandas as pd\n    import scipy.misc\n    import scipy.ndimage\n    import scipy.signal\n    import scipy.stats\n    import scipy.weave\n    import scipy.fftpack\n    import scipy.integrate\n    import scipy.optimize\n    import scipy.cluster\n    import scipy.spatial\n    import scipy.sparse\n    import scipy.linalg\n    import scipy.interpolate\n    import scipy.ndimage\n    import scipy.io\n    import scipy.odr\n    import scipy.interpolate\n    import scipy.linalg\n    import scipy.ndimage\n    import scipy.optimize\n    import scipy.signal\n    import scipy.weave\n    import scipy.cluster\n    import scipy.spatial\n    import scipy.sparse\n    import scipy.fftpack\n    import scipy.integrate\n    import scipy.io\n    import scipy.interpolate\n    import scipy.linalg\n    import scipy.ndimage\n    import scipy.optimize\n    import scipy.signal\n    import scipy.weave\n    import scipy.cluster\n    import scipy.spatial\n    import scipy.sparse\n    import scipy.fftpack\n    import scipy.integrate\n    import scipy.io\n    import scipy.interpolate\n    import scipy.linalg\n    import scipy.ndimage\n    import scipy.optimize\n    import scipy.signal\n    import scipy.weave\n    import sc\n",
        "def move_obstacles(obstacles, delta_x, delta_y):\n    \"\"\"\n    Move the obstacles by the given amount.\n    \"\"\"\n    for obstacle in obstacles:\n        obstacle[0] += delta_x\n        obstacle[1] += delta_y\n    return obstacles\n",
        "def main():\n    import time\n    import pyautogui\n    import random\n    import os\n    import sys\n    import subprocess\n    import threading\n    import tkinter as tk\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.font\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext\n    import tkinter.colorchooser\n    import tkinter.tix as tix\n    import tkinter.constants\n    import tkinter.ttk as ttk\n    import tkinter.font\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.tix as tix\n    import tkinter.constants\n    import tkinter.ttk as ttk\n    import tkinter.font\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.tix as tix\n    import tkinter.constants\n    import tkinter.ttk as ttk\n    import tkinter.font\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.tix as tix\n    import tkinter.constants\n    import tkinter.ttk as ttk\n    import tkinter.font\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.tix as tix\n    import tkinter.constants\n    import tkinter.ttk as ttk\n    import tkinter.font\n    import tkinter.messagebox\n    import tkinter\n"
    ],
    "results": 10
},{
    "id": "296",
    "source": "soSearches",
    "language": "python",
    "query": "how to add bot version in discord bot python",
    "snippets": [
        "def get_version():\n    return \"1.0.0\"\n",
        "def main():\n    import discord\n    import asyncio\n    import os\n    import random\n    import time\n    import datetime\n    import sys\n    import json\n    import requests\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import re\n    import aiohttp\n    import async_timeout\n    import youtube_dl\n    import spotify\n    import spotipy\n    import spotipy.util as util\n    import spotipy.oauth2 as oauth2\n    import spotipy.client as client\n    import spotipy.client as spotipy\n    import spotipy.oauth2 as oauth2\n    import spotipy.util as util\n    import spotipy.client as client\n    import spotipy.client as spotipy\n    import spotipy.oauth2 as oauth2\n    import spotipy.util as util\n    import spotipy.client as client\n    import spotipy.client as spotipy\n    import spotipy.oauth2 as oauth2\n    import spotipy.util as util\n    import spotipy.client as client\n    import spotipy.client as spotipy\n    import spotipy.oauth2 as oauth2\n    import spotipy.util as util\n    import spotipy.client as client\n    import spotipy.client as spotipy\n    import spotipy.oauth2 as oauth2\n    import spotipy.util as util\n    import spotipy.client as client\n    import spotipy.client as spotipy\n    import spotipy.oauth2 as oauth2\n    import spotipy.util as util\n    import spotipy.client as client\n    import spotipy.client as spotipy\n    import spotipy.oauth2 as oauth2\n    import spotipy.util as util\n    import spotipy.client as client\n    import spotipy.client as spotipy\n    import spotipy.oauth2\n"
    ],
    "results": 3
},{
    "id": "297",
    "source": "soSearches",
    "language": "python",
    "query": "how to do unbuffered text io in python 3.6",
    "snippets": [
        "def unbuffered_text_io():\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n",
        "def unbuffered_text_io():\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n",
        "def unbuffered_text_io():\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0\n",
        "def unbuffered_text_io():\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line ish()\n",
        "def unbuffered_input(prompt):\n    sys.stdout.write(prompt)\n    sys.stdout.flush()\n    return sys.stdin.readline()\n",
        "def unbuffered_text_io():\n    with open('/tmp/test.txt', 'w') as f:\n        f.write('hello world')\n    with open('/tmp/test.txt', 'r') as f:\n        print(f.read())\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line)\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\n')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\r')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\r\\n')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\r\\n')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\r\\n')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\r\\n')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\r\\n')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\r\\n')\n    with open('/tmp/tent.txt', 'r') as f:\n        for line in f:\n            print(line, end='\\r\\n')\n    wit  openf'/tmp/test.txt', 'r': as f:\n        for line in f:\n            print(line, end='\\\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n    print()    print('\\n')\n    with open('/etc/passwd', 'r', buffering=0\n\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/pa\n",
        "def unbuffered_input(prompt):\n    sys.stden('unbuffered_text_io.txt', 'r') as f:\n        for lino iu f:\n            printtline, end=.')\n",
        "def write(prompt)io():\n    with open('/tmp/test.txt', 'w') as f:\n        f.write('hello\\n')\n        f.write('world\\n')\n        f.write('!\\n')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            prnt(line, end='')\n    with pen('/tmp/test\n    sys.stdout.flush()\n    return sys.stdin.readline()\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in\n",
        "def unbuffered_text_io():\n    with open('/tmp/test.txt', 'w') as f:\n        for i in range(10):\n            f.write('line {}\\n'.format(i))\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(\n",
        "def unbuffered_text_io():\n    with open('unbuffered_text_io.txt', 'w') as f:\n        for i in range(10):\n            f.write('line {}\\n'.format(i))\n    with open('unbuffered_text_io.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n",
        "def unbuffered_text_io():\n    with open('/tmp/test.txt', 'w') as f:\n        f.write('hello\\n')\n        f.write('world\\n')\n        f.write('!\\n')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line insswd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print('\\n')\n    with open('/etc/passwd', 'r') as f:\n        for line in f:\n            print(line, end='')\n",
        "def unbuffered_text_io():\n    with open('/etc/passwd', 'r', buffering=0) as f:\n        for line in f:\n            print(line, end='')\n",
        "def unbuffered_print(s):\n    sys.stdout.write(s)\n    sys.stdout.flush()\n",
        "def unbuffered_text_io():\n    with open('/tmp/test.txt', 'w') as f:\n        for i in range(10):\n            f.write('line {}\\n'.format(i))\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    with open('/tmp/test.txt', 'r') as f:\n        for line in f:\n            print(\n",
        "def unbuffered_text_io():\n    with open('unbuffered_text_io.txt', 'w') as f:\n        for i in range(10):\n            f.write('line {}\\n'.format(i))\n    with open('unbuffered_text_io.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n",
        "def unbuffered_input(prompt):\n    \"\"\"\n    unbuffered_input(prompt) -> string\n\n    Reads a string from the user, without buffering.\n    \"\"\"\n    sys.stdout.write(prompt)\n    sys.stdout.flush()\n    return sys.stdin.readline().rstrip()\n"
    ],
    "results": 10
},{
    "id": "298",
    "source": "soSearches",
    "language": "python",
    "query": "how to add a return to a string in python",
    "snippets": [
        "def add_string(string1, string2):\n    return string1 + string2\n"
    ],
    "results": 10
},{
    "id": "299",
    "source": "soSearches",
    "language": "python",
    "query": "given the input how to solve tribbonacci using python",
    "snippets": [
        "def tribbonacci(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        return tribbonacci(n-1) + tribbonacci(n-2) + tribbonacci(n-3)\n",
        "def tribbonacci(n):\n    a, b, c = 0, 1, 1\n    for i in range(n):\n        a, b, c = b, c, a + b + c\n    return a\n",
        "def tribbonacci(n):\n    a, b, c = 0, 1, 1\n    for i in range(n):\n        a, b, c = b, c, a + b + c\n    return c\n"
    ],
    "results": 10
},{
    "id": "300",
    "source": "soSearches",
    "language": "python",
    "query": "how to write texts in python break line",
    "snippets": [],
    "results": 0
},{
    "id": "301",
    "source": "soSearches",
    "language": "python",
    "query": "how to connect a string in python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    s = \"Hello World\"\n    print(s[0])\n    print(s[1])\n    print(s[2])\n    print(s[3])\n    print(s[4])\n    print(s[5])\n    print(s[6])\n    print(s[7])\n    print(s[8])\n    print(s[9])\n    print(s[10])\n    print(s[11])\n    print(s[12])\n    print(s[13])\n    print(s[14])\n    print(s[15])\n    print(s[16])\n    print(s[17])\n    print(s[18])\n    print(s[19])\n    print(s[20])\n    print(s[21])\n    print(s[22])\n    print(s[23])\n    print(s[24])\n    print(s[25])\n    print(s[26])\n    print(s[27])\n    print(s[28])\n    print(s[29])\n    print(s[30])\n    print(s[31])\n    print(s[32])\n    print(s[33])\n    print(s[34])\n    print(s[35])\n    print(s[36])\n    print(s[37])\n    print(s[38])\n    print(s[39])\n    print(s[40])\n    print(s[41])\n    print(s[42])\n    print(s[43])\n    print(s[44])\n    print(s[45])\n    print(s[46])\n    print(s[47])\n    print(s[48])\n    print(s[49])\n    print(s[50])\n    print(s[51])\n    print(s[52])\n    print(s[53])\n    print(s[54])\n    print(s[55])\n    print(s[56])\n    print(s[57])\n    print(s[58])\n    print(s[59])\n    print(s[60])\n",
        "def main():\n    # create a string\n    my_string = \"Hello World\"\n    # print the string\n    print(my_string)\n    # print the string using indexing\n    print(my_string[0])\n    print(my_string[1])\n    print(my_string[2])\n    print(my_string[3])\n    print(my_string[4])\n    print(my_string[5])\n    print(my_string[6])\n    print(my_string[7])\n    print(my_string[8])\n    print(my_string[9])\n    print(my_string[10])\n    print(my_string[11])\n    print(my_string[12])\n    print(my_string[13])\n    print(my_string[14])\n    print(my_string[15])\n    print(my_string[16])\n    print(my_string[17])\n    print(my_string[18])\n    print(my_string[19])\n    print(my_string[20])\n    print(my_string[21])\n    print(my_string[22])\n    print(my_string[23])\n    print(my_string[24])\n    print(my_string[25])\n    print(my_string[26])\n    print(my_string[27])\n    print(my_string[28])\n    print(my_string[29])\n    print(my_string[30])\n    print(my_string[31])\n    print(my_string[32])\n    print(my_string[33])\n    print(my_string[34])\n    print(my_string[35])\n    print(my_string[36])\n    print(my_string[37])\n    print(my_string[38])\n    print(my_string[39])\n    print(my_string[40])\n    print(my_string[41])\n    print(my_string[42])\n    print(my_string[43])\n    print(my_string[44])\n    print(my_string[\n",
        "def main():\n    print(\"Hello World\")\n    print(\"Hello\" + \" World\")\n    print(\"Hello\" + \" \" + \"World\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\n",
        "def main():\n    # create a string\n    my_string = \"Hello World\"\n    # print the string\n    print(my_string)\n    # print the string using index\n    print(my_string[0])\n    print(my_string[1])\n    print(my_string[2])\n    print(my_string[3])\n    print(my_string[4])\n    print(my_string[5])\n    print(my_string[6])\n    print(my_string[7])\n    print(my_string[8])\n    print(my_string[9])\n    print(my_string[10])\n    print(my_string[11])\n    print(my_string[12])\n    print(my_string[13])\n    print(my_string[14])\n    print(my_string[15])\n    print(my_string[16])\n    print(my_string[17])\n    print(my_string[18])\n    print(my_string[19])\n    print(my_string[20])\n    print(my_string[21])\n    print(my_string[22])\n    print(my_string[23])\n    print(my_string[24])\n    print(my_string[25])\n    print(my_string[26])\n    print(my_string[27])\n    print(my_string[28])\n    print(my_string[29])\n    print(my_string[30])\n    print(my_string[31])\n    print(my_string[32])\n    print(my_string[33])\n    print(my_string[34])\n    print(my_string[35])\n    print(my_string[36])\n    print(my_string[37])\n    print(my_string[38])\n    print(my_string[39])\n    print(my_string[40])\n    print(my_string[41])\n    print(my_string[42])\n    print(my_string[43])\n    print(my_string[44])\n    print(my_string[45\n",
        "def main():\n    print(\"Hello World\")\n    print(\"Hello\" + \" \" + \"World\")\n    print(\"Hello\" * 3)\n    print(\"Hello\" + \" \" + \"World\" * 3)\n    print(\"Hello\" * 3 + \" \" + \"World\")\n    print(\"Hello\" + \" \" + \"World\" * 3 + \" \" + \"Again\")\n    print(\"Hello\" * 3 + \" \" + \"World\" * 3 + \" \" + \"Again\")\n    print(\"Hello\" + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3)\n    print(\"Hello\" * 3 + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3)\n    print(\"Hello\" + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\")\n    print(\"Hello\" * 3 + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\")\n    print(\"Hello\" + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3)\n    print(\"Hello\" * 3 + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3)\n    print(\"Hello\" + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\")\n    print(\"Hello\" * 3 + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\")\n    print(\"Hello\" + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3)\n    print(\"Hello\" * 3 + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3)\n    print(\"Hello\" + \" \" + \"World\" * 3 + \" \" + \"Again\" * 3 + \" \" + \"Again\" * 3 + \"\n",
        "def main():\n    print(\"Hello World\")\n    print(\"Hello\" + \" World\")\n    print(\"Hello \" + \"World\")\n    print(\"Hello\" + \" \" + \"World\")\n    print(\"Hello\" + \" World\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\")\n    print(\"Hello\" + \" World\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\")\n    print(\"Hello\" + \" World\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" World\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" \" + \"World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print(\"Hello\" + \" World\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\" + \"!\")\n    print\n"
    ],
    "results": 8
},{
    "id": "302",
    "source": "soSearches",
    "language": "python",
    "query": "how to get the last character in string in python",
    "snippets": [
        "def last_char(s):\n    return s[-1]\n",
        "def get_last_char(s):\n    return s[-1]\n",
        "def get_last_char(string):\n    return string[-1]\n"
    ],
    "results": 10
},{
    "id": "303",
    "source": "soSearches",
    "language": "python",
    "query": "how to check file properties in python",
    "snippets": [
        "def main():\n    # check if file exists\n    if os.path.isfile(\"test.txt\"):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    # check if file is a file\n    if os.path.isfile(\"test.txt\"):\n        print(\"File is a file\")\n    else:\n        print(\"File is not a file\")\n    # check if file is a directory\n    if os.path.isdir(\"test.txt\"):\n        print(\"File is a directory\")\n    else:\n        print(\"File is not a directory\")\n    # check if file is a symbolic link\n    if os.path.islink(\"test.txt\"):\n        print(\"File is a symbolic link\")\n    else:\n        print(\"File is not a symbolic link\")\n    # check if file is readable\n    if os.access(\"test.txt\", os.R_OK):\n        print(\"File is readable\")\n    else:\n        print(\"File is not readable\")\n    # check if file is writable\n    if os.access(\"test.txt\", os.W_OK):\n        print(\"File is writable\")\n    else:\n        print(\"File is not writable\")\n    # check if file is executable\n    if os.access(\"test.txt\", os.X_OK):\n        print(\"File is executable\")\n    else:\n        print(\"File is not executable\")\n    # check if file is owned by user\n    if os.access(\"test.txt\", os.F_OK):\n        print(\"File is owned by user\")\n    else:\n        print(\"File is not owned by user\")\n    # check if file is owned by group\n    if os.access(\"test.txt\", os.F_OK):\n        print(\"File is owned by group\")\n    else:\n        print(\"File is not owned by group\")\n    # check if file is owned by others\n    if os.access(\"test.txt\", os.F_OK):\n        print(\"File is owned by others\")\n    else:\n        print(\"File is not owned by others\")\n    # check if file is setuid\n    if os.\n",
        "def check_file(file_name):\n    import os\n    if os.path.isfile(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.exists(file\n",
        "def check_file(file_name):\n    import os\n    if os.path.exists(file_name):\n        print(\"File exists\")\n    else:\n        print(\"File does not exist\")\n    if os.path.isfile(file_name):\n        print(\"File is a file\")\n    else:\n        print(\"File is not a file\")\n    if os.path.isdir(file_name):\n        print(\"File is a directory\")\n    else:\n        print(\"File is not a directory\")\n    if os.path.islink(file_name):\n        print(\"File is a link\")\n    else:\n        print(\"File is not a link\")\n    if os.path.ismount(file_name):\n        print(\"File is a mount point\")\n    else:\n        print(\"File is not a mount point\")\n    if os.path.getsize(file_name):\n        print(\"File is not empty\")\n    else:\n        print(\"File is empty\")\n    if os.path.getmtime(file_name):\n        print(\"File was modified\")\n    else:\n        print(\"File was not modified\")\n    if os.path.getatime(file_name):\n        print(\"File was accessed\")\n    else:\n        print(\"File was not accessed\")\n    if os.path.getctime(file_name):\n        print(\"File was created\")\n    else:\n        print(\"File was not created\")\n    if os.path.getsize(file_name):\n        print(\"File is not empty\")\n    else:\n        print(\"File is empty\")\n    if os.path.getmtime(file_name):\n        print(\"File was modified\")\n    else:\n        print(\"File was not modified\")\n    if os.path.getatime(file_name):\n        print(\"File was accessed\")\n    else:\n        print(\"File was not accessed\")\n    if os.path.getctime(file_name):\n        print(\"File was created\")\n    else:\n        print(\"File was not created\")\n    if os.path.getsize(file_name):\n        print\n",
        "def check_file(file_name):\n    try:\n        f = open(file_name)\n        f.close()\n    except FileNotFoundError:\n        print(\"File not found\")\n    else:\n        print(\"File found\")\n    finally:\n        print(\"Executing finally\")\n",
        "def check_file_properties(file_name):\n    \"\"\"\n    check file properties\n    :param file_name:\n    :return:\n    \"\"\"\n    file_name = file_name.strip()\n    if file_name == \"\":\n        print(\"file name is empty\")\n        return\n    if not os.path.isfile(file_name):\n        print(\"file name is not a file\")\n        return\n    if not os.access(file_name, os.R_OK):\n        print(\"file name is not readable\")\n        return\n    if not os.access(file_name, os.W_OK):\n        print(\"file name is not writable\")\n        return\n    if not os.access(file_name, os.X_OK):\n        print(\"file name is not executable\")\n        return\n    print(\"file name is valid\")\n    return\n",
        "def check_file(file_name):\n    try:\n        file = open(file_name, 'r')\n        file.close()\n        print(\"File exists\")\n    except FileNotFoundError:\n        print(\"File does not exist\")\n    except Exception as e:\n        print(e)\n",
        "def main():\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # check if the file is closed\n    print(f.closed)\n    # check if the file is opened\n    print(f.mode)\n    # check if the file is readable\n    print(f.readable())\n    # check if the file is writable\n    print(f.writable())\n    # check if the file is seekable\n    print(f.seekable())\n    # close the file\n    f.close()\n    # check if the file is closed\n    print(f.closed)\n    # check if the file is opened\n    print(f.mode)\n    # check if the file is readable\n    print(f.readable())\n    # check if the file is writable\n    print(f.writable())\n    # check if the file is seekable\n    print(f.seekable())\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # check if the file is closed\n    print(f.closed)\n    # check if the file is opened\n    print(f.mode)\n    # check if the file is readable\n    print(f.readable())\n    # check if the file is writable\n    print(f.writable())\n    # check if the file is seekable\n    print(f.seekable())\n    # close the file\n    f.close()\n    # check if the file is closed\n    print(f.closed)\n    # check if the file is opened\n    print(f.mode)\n    # check if the file is readable\n    print(f.readable())\n    # check if the file is writable\n    print(f.writable())\n    # check if the file is seekable\n    print(f.seekable())\n    # open a file\n    f = open(\"test.txt\", \"r\")\n    # check if the file is closed\n    print(f.closed)\n    # check if the file is opened\n    print(f.mode)\n    # check if the file is readable\n    print(f.readable())\n    # check if the file is writ\n",
        "def check_file_properties(file_name):\n    \"\"\"\n    Check file properties\n    \"\"\"\n    print(\"File name: {}\".format(file_name))\n    print(\"Size: {} bytes\".format(os.path.getsize(file_name)))\n    print(\"Last modified: {}\".format(time.ctime(os.path.getmtime(file_name))))\n    print(\"Created: {}\".format(time.ctime(os.path.getctime(file_name))))\n    print(\"Last accessed: {}\".format(time.ctime(os.path.getatime(file_name))))\n    print(\"Last changed: {}\".format(time.ctime(os.path.getmtime(file_name))))\n    print(\"File permissions: {}\".format(oct(os.stat(file_name).st_mode)))\n    print(\"File owner: {}\".format(pwd.getpwuid(os.stat(file_name).st_uid).pw_name))\n    print(\"File group: {}\".format(grp.getgrgid(os.stat(file_name).st_gid).gr_name))\n    print(\"File type: {}\".format(os.path.isfile(file_name)))\n    print(\"File is a directory: {}\".format(os.path.isdir(file_name)))\n    print(\"File is a symbolic link: {}\".format(os.path.islink(file_name)))\n    print(\"File is a socket: {}\".format(os.path.isfifo(file_name)))\n    print(\"File is a block device: {}\".format(os.path.isdir(file_name)))\n    print(\"File is a character device: {}\".format(os.path.isdir(file_name)))\n    print(\"File is executable: {}\".format(os.access(file_name, os.X_OK)))\n    print(\"File is readable: {}\".format(os.access(file_name, os.R_OK)))\n    print(\"File is writable: {}\".format(os.access(file_name, os.W_OK)))\n    print(\"File is executable by\n",
        "def main():\n    filename = input(\"Enter a filename: \")\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"bytes long\")\n    infile.close()\n    infile = open(filename, 'r')\n    print(\"The file is\", infile.mode, \"and is\", infile.tell(), \"\n"
    ],
    "results": 9
},{
    "id": "304",
    "source": "soSearches",
    "language": "python",
    "query": "how to determine if a set contains a string python",
    "snippets": [
        "def main():\n    s = set(['a', 'b', 'c'])\n    print('s =', s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'d\\' in s =', 'd' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'d\\' not in s =', 'd' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\\'a\\' in s =', 'a' in s)\n    print('\\'a\\' not in s =', 'a' not in s)\n    print('\n",
        "def main():\n    s = set(['a', 'b', 'c'])\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('set([\\'a\\', \\'b\\', \\'c\\'])' in s)\n    print('set([\\'d\\', \\'e\\', \\'f\\'])' in s)\n    print('set([\\'a\\', \\'b\\', \\'c\\'])' not in s)\n    print('set([\\'d\\', \\'e\\', \\'f\\'])' not in s)\n    print('set([\\'a\\', \\'b\\', \\'c\\'])' == s)\n    print('set([\\'d\\', \\'e\\', \\'f\\'])' == s)\n    print('set([\\'a\\', \\'b\\', \\'c\\'])' != s)\n    print('set([\\'d\\', \\'e\\', \\'f\\'])' != s)\n    print('set([\\'a\\', \\'b\\', \\'c\\'])' == set(['a', 'b', 'c']))\n    print('set([\\'d\\', \\'e\\', \\'f\\'])' == set(['d', 'e', 'f']))\n    print('set([\\'a\\', \\'b\\', \\'c\\'])' != set(['a', 'b', 'c']))\n    print('set([\\'d\\', \\'e\\', \\'f\\'])' != set(['d', 'e', 'f']))\n    print('set([\\'a\\', \\'b\\', \\'c\\'])' == set(['a', 'b', 'c']))\n    print('set([\\'d\\', \\'e\\', \\'f\\'])' == set(['d', 'e', 'f']))\n    print('set([\\'a\\', \\'b\\', \\'c\\'])' != set(['a', 'b', 'c']))\n    print('set([\\'d\\', \\'e\\', \\'f\\'])' != set(['d\n",
        "def main():\n    s = set(['a', 'b', 'c'])\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s)\n    print\n",
        "def main():\n    s = set(['a', 'b', 'c'])\n    print('a' in s)\n    print('d' in s)\n    print('a' not in s)\n    print('d' not in s)\n    print('a' in s, 'd' in s, 'a' not in s, 'd' not in s)\n    print('a' in s or 'd' in s)\n    print('a' in s and 'd' in s)\n    print('a' in s and 'd' not in s)\n    print('a' not in s and 'd' in s)\n    print('a' not in s or 'd' in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s or 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s and 'd' not in s)\n    print('a' not in s or '\n",
        "def is_in(set, string):\n    if string in set:\n        return True\n    else:\n        return False\n",
        "def is_in(a, b):\n    if a in b:\n        return True\n    else:\n        return False\n",
        "def is_in(set_, string):\n    if string in set_:\n        return True\n    else:\n        return False\n",
        "def main():\n    # create a set\n    my_set = set(['a', 'b', 'c', 'd'])\n    # create a string\n    my_string = 'abcd'\n    # determine if the set contains the string\n    if my_set.issuperset(my_string):\n        print('The set contains the string')\n    else:\n        print('The set does not contain the string')\n    # determine if the set contains the string\n    if my_set.issubset(my_string):\n        print('The set contains the string')\n    else:\n        print('The set does not contain the string')\n    # determine if the set contains the string\n    if my_set.isdisjoint(my_string):\n        print('The set does not contain the string')\n    else:\n        print('The set contains the string')\n    # determine if the set contains the string\n    if my_set.isdisjoint(my_string):\n        print('The set does not contain the string')\n    else:\n        print('The set contains the string')\n    # determine if the set contains the string\n    if my_set.isdisjoint(my_string):\n        print('The set does not contain the string')\n    else:\n        print('The set contains the string')\n    # determine if the set contains the string\n    if my_set.isdisjoint(my_string):\n        print('The set does not contain the string')\n    else:\n        print('The set contains the string')\n    # determine if the set contains the string\n    if my_set.isdisjoint(my_string):\n        print('The set does not contain the string')\n    else:\n        print('The set contains the string')\n    # determine if the set contains the string\n    if my_set.isdisjoint(my_string):\n        print('The set does not contain the string')\n    else:\n        print('The set contains the string')\n    # determine if the set contains the string\n    if my_set.isdisjoint(my_string):\n        print('The set does not contain the string')\n"
    ],
    "results": 10
},{
    "id": "305",
    "source": "soSearches",
    "language": "python",
    "query": "how to call a function repeatedly in python programming",
    "snippets": [
        "def fibonacci(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)\n",
        "def fib(n):\n    a, b = 0, 1\n    while a < n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\n",
        "def fib(n):\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return a\n",
        "def fib(n):\n    a, b = 0, 1\n    while b < n:\n        print(b, end=' ')\n        a, b = b, a + b\n    print()\n",
        "def add(a, b):\n    return a + b\n",
        "def print_hello():\n    print(\"Hello\")\n    print(\"World\")\n    print(\"!\")\n",
        "def my_function():\n    print(\"Hello from a function\")\n    return\n"
    ],
    "results": 10
},{
    "id": "306",
    "source": "soSearches",
    "language": "python",
    "query": "how to extract .gpx data with python",
    "snippets": [
        "def main():\n    import xml.etree.ElementTree as ET\n    import os\n    import glob\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import datetime\n    import time\n    import math\n    import csv\n    import sys\n    import argparse\n    import re\n    import os.path\n    import shutil\n    import subprocess\n    import glob\n    import gpxpy\n    import gpxpy.gpx\n    import gpxpy.geo\n    import gpxpy.parser\n    import gpxpy.gpxfield\n    import gpxpy.gpxfield_extractor\n    import gpxpy.gpxfield_extractor.gpxfield_extractor\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception_extended\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception_extended_extended\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception_extended_extended_extended\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception_extended_extended_extended_extended\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception_extended_extended_extended_extended_extended\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception_extended_extended_extended_extended_extended_extended\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception_extended_extended_extended_extended_extended_extended_extended\n    import gpxpy.gpxfield_extractor.gpxfield_extractor_exception_extended_extended_extended_extended_extended_extended_extended_\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import os\n    import sys\n    import argparse\n    import gpxpy\n    import gpxpy.gpx\n    import gpxpy.parser\n    import gpxpy.gpxfield\n    import gpxpy.gpxfieldtype\n    import gpxpy.gpxfile\n    import gpxpy.gpxfiletype\n    import gpxpy.gpxnamespace\n    import gpxpy.gpxnamespacefield\n    import gpxpy.gpxnamespacefieldtype\n    import gpxpy.gpxnamespacefile\n    import gpxpy.gpxnamespacefiletype\n    import gpxpy.gpxnamespacetype\n    import gpxpy.gpxpoint\n    import gpxpy.gpxpointtype\n    import gpxpy.gpxsegment\n    import gpxpy.gpxsegmenttype\n    import gpxpy.gpxtrack\n    import gpxpy.gpxtracktype\n    import gpxpy.gpxwaypoint\n    import gpxpy.gpxwaypointtype\n    import gpxpy.gpxwaypointextension\n    import gpxpy.gpxwaypointextensiontype\n    import gpxpy.gpxwaypointextensionnamespace\n    import gpxpy.gpxwaypointextensionnamespacefield\n    import gpxpy.gpxwaypointextensionnamespacefieldtype\n    import gpxpy.gpxwaypointextensionnamespacefile\n    import gpxpy.gpxwaypointextensionnamespacefiletype\n    import gpxpy.gpxwaypointextensionnamespacetype\n    import gpxpy.gpxwaypointextensionnamespacevalue\n    import gpxpy.gpxwaypointextensionnamespacevaluetype\n    import gpxpy.gpxwaypointextensionnamespacevaluefield\n    import gpxpy.gpxwaypointextensionnamespacevaluefieldtype\n    import gpxpy.gpxwaypointextensionnamespacevaluefile\n    import gpxpy.gpxwaypointextensionnamespacevaluefiletype\n    import gpxpy.gpxwaypointextensionnamespace\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import os\n    import sys\n    import argparse\n    import gpxpy\n    import gpxpy.gpx\n    import gpxpy.parser\n    import gpxpy.gpxfield\n    import gpxpy.gpxfield_extensions\n    import gpxpy.gpxfield_types\n    import gpxpy.gpxfield_types.gpxfield_types_base\n    import gpxpy.gpxfield_types.gpxfield_types_base.gpxfield_type_base\n    import gpxpy.gpxfield_types.gpxfield_types_base.gpxfield_type_base_with_extensions\n    import gpxpy.gpxfield_types.gpxfield_types_base.gpxfield_type_base_with_extensions.gpxfield_type_base_with_extensions_with_extensions\n    import gpxpy.gpxfield_types.gpxfield_types_base.gpxfield_type_base_with_extensions.gpxfield_type_base_with_extensions_with_extensions.gpxfield_type_base_with_extensions_with_extensions_with_extensions\n    import gpxpy.gpxfield_types.gpxfield_types_base.gpxfield_type_base_with_extensions.gpxfield_type_base_with_extensions_with_extensions.gpxfield_type_base_with_extensions_with_extensions_with_extensions.gpxfield_type_base_with_extensions_with_extensions_with_extensions_with_extensions\n    import gpxpy.gpxfield_types.gpxfield_types_base.gpxfield_type_base_with_extensions.gpxfield_type_base_with_extensions_with_extensions.gpxfield_type_base_with_extensions_with_extensions_with_extensions.gpxfield_type_base_with_extensions_with_extensions_with_extensions_with_extensions.gpxfield\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import os\n    import sys\n    import argparse\n    parser = argparse.ArgumentParser(description='Extract .gpx data with python')\n    parser.add_argument('-f', '--file', help='file to extract', required=True)\n    parser.add_argument('-o', '--output', help='output file', required=True)\n    args = parser.parse_args()\n    if not os.path.isfile(args.file):\n        print('File not found')\n        sys.exit(1)\n    tree = ET.parse(args.file)\n    root = tree.getroot()\n    for child in root:\n        if child.tag == '{http://www.topografix.com/GPX/1/1}trk':\n            for trkpt in child:\n                if trkpt.tag == '{http://www.topografix.com/GPX/1/1}trkpt':\n                    lat = trkpt.attrib['lat']\n                    lon = trkpt.attrib['lon']\n                    print(lat, lon)\n                    with open(args.output, 'a') as f:\n                        f.write(lat + ',' + lon + '\\n')\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import os\n    import sys\n    import argparse\n    import datetime\n    import time\n    import math\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.collections as mcollections\n    import matplotlib.text as mtext\n    import matplotlib.image as mimage\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.backends.backend_pdf as plt_pdf\n    import matplotlib.backends.backend_svg as plt_svg\n    import matplotlib.backends.backend_agg as plt_agg\n    import matplotlib.backends.backend_tkagg as plt_tkagg\n    import matplotlib.backends.backend_webagg as plt_webagg\n    import matplotlib.backends.backend_ps as plt_ps\n    import matplotlib.backends.backend_pgf as plt_pgf\n    import matplotlib.backends.backend_mpl as plt_mpl\n    import matplotlib.backends.backend_qt4agg as plt_qt4agg\n    import matplotlib.backends.backend_qt5agg as plt_qt5agg\n    import matplotlib.backends.backend_gtk3 as plt_gtk3\n    import matplotlib.backends.backend_gtk3cairo as plt_gtk3cairo\n    import matplotlib.backends.backend_gtk3agg as plt_gtk3agg\n    import matplotlib.backends.backend_tkagg as plt_tkagg\n    import matplotlib.backends\n",
        "def main():\n    import xml.etree.ElementTree as ET\n    import os\n    import sys\n    import argparse\n    import datetime\n    import time\n    import math\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.patches as mpatches\n    import matplotlib.lines as mlines\n    import matplotlib.collections as mcollections\n    import matplotlib.patches as mpatches\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.image as mpimg\n    import matplotlib.pyplot as plt\n    import matplotlib.cm as cm\n",
        "def main():\n    import os\n    import xml.etree.ElementTree as ET\n    import argparse\n    import sys\n    import re\n    import datetime\n    import time\n    import math\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.colors as colors\n    import matplotlib.cm as cmx\n    import matplotlib.gridspec as gridspec\n    import matplotlib.font_manager as font_manager\n    import matplotlib.style as style\n    import matplotlib.patches as mpatches\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.colors as colors\n    import matplotlib.cm as cmx\n    import matplotlib.gridspec as gridspec\n    import matplotlib.font_manager as font_manager\n    import matplotlib.style as style\n    import matplotlib.patches as mpatches\n    import matplotlib.image as mpimg\n    import matplotlib.gridspec as gridspec\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.colors as colors\n    import matplotlib.cm\n"
    ],
    "results": 7
},{
    "id": "307",
    "source": "soSearches",
    "language": "python",
    "query": "python how to use conda  traceback (most recent call last)",
    "snippets": [
        "def main():\n    try:\n        print(\"try\")\n        raise Exception(\"error\")\n    except Exception as e:\n        print(\"except\")\n        raise e\n    finally:\n        print(\"finally\")\n    print(\"end\")\n",
        "def f():\n    try:\n        1/0\n    except ZeroDivisionError:\n        import traceback\n        traceback.print_exc()\n",
        "def f():\n    try:\n        1/0\n    except ZeroDivisionError:\n        import sys\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_name)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_filename)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_firstlineno)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_varnames)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_freevars)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_cellvars)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_name)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_filename)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_firstlineno)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_varnames)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_freevars)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_cellvars)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_name)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_filename)\n        print(sys.exc_info()[2].tb_frame.f_back.f_code.co_firstlineno)\n        print(sys.exc_\n",
        "def f():\n    try:\n        1/0\n    except ZeroDivisionError:\n        import traceback\n        traceback.print_exc()\n        print(traceback.format_exc())\n        print(traceback.format_exception(ZeroDivisionError, 1, None))\n        print(traceback.format_exception_only(ZeroDivisionError, 1))\n        print(traceback.format_tb(None))\n        print(traceback.format_tb(None, 1))\n        print(traceback.format_tb(None, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))\n        print(traceback.format_tb(None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n",
        "def f():\n    try:\n        1/0\n    except Exception as e:\n        print(e)\n        raise\n",
        "def f():\n    try:\n        1/0\n    except ZeroDivisionError:\n        import traceback\n        traceback.print_exc()\n        print('traceback.print_exc()')\n        traceback.print_stack()\n        print('traceback.print_stack()')\n        traceback.print_tb(sys.exc_info()[2])\n        print('traceback.print_tb(sys.exc_info()[2])')\n        traceback.print_tb(sys.exc_info()[2], file=sys.stdout)\n        print('traceback.print_tb(sys.exc_info()[2], file=sys.stdout)')\n        traceback.print_tb(sys.exc_info()[2], limit=1, file=sys.stdout)\n        print('traceback.print_tb(sys.exc_info()[2], limit=1, file=sys.stdout)')\n        traceback.print_tb(sys.exc_info()[2], limit=1, file=sys.stdout, tb_offset=1)\n        print('traceback.print_tb(sys.exc_info()[2], limit=1, file=sys.stdout, tb_offset=1)')\n        traceback.print_tb(sys.exc_info()[2], limit=1, file=sys.stdout, tb_offset=1, with_filenames=True)\n        print('traceback.print_tb(sys.exc_info()[2], limit=1, file=sys.stdout, tb_offset=1, with_filenames=True)')\n        traceback.print_tb(sys.exc_info()[2], limit=1, file=sys.stdout, tb_offset=1, with_filenames=True, with_linenumbers=True)\n        print('traceback.print_tb(sys.exc_info()[2], limit=1, file=sys.stdout, tb_offset=1, with_filenames=True, with_linen\n",
        "def f():\n    try:\n        1/0\n    except ZeroDivisionError:\n        import traceback\n        traceback.print_exc()\n        print('traceback.print_exc()')\n        print('traceback.print_exc(file=sys.stdout)')\n        traceback.print_exc(file=sys.stdout)\n        print('traceback.print_exc(limit=1)')\n        traceback.print_exc(limit=1)\n        print('traceback.print_exc(limit=1, file=sys.stdout)')\n        traceback.print_exc(limit=1, file=sys.stdout)\n        print('traceback.print_exc(limit=1, file=sys.stdout, chain=True)')\n        traceback.print_exc(limit=1, file=sys.stdout, chain=True)\n        print('traceback.print_exc(limit=1, file=sys.stdout, chain=True, ctx=None)')\n        traceback.print_exc(limit=1, file=sys.stdout, chain=True, ctx=None)\n        print('traceback.print_exc(limit=1, file=sys.stdout, chain=True, ctx=None, indent=\\'  \\')')\n        traceback.print_exc(limit=1, file=sys.stdout, chain=True, ctx=None, indent='  ')\n        print('traceback.print_exc(limit=1, file=sys.stdout, chain=True, ctx=None, indent=\\'  \\', tb_offset=0)')\n        traceback.print_exc(limit=1, file=sys.stdout, chain=True, ctx=None, indent='  ', tb_offset=0)\n        print('traceback.print_exc(limit=1, file=sys.stdout, chain=True, ctx=None, indent=\\'  \\', tb_offset=0, context=5)')\n        traceback.print_exc(limit=1, file=sys.stdout, chain=True, ctx=None,\n",
        "def f1():\n    f2()\n"
    ],
    "results": 10
},{
    "id": "308",
    "source": "soSearches",
    "language": "python",
    "query": "how to write data in excael file by python",
    "snippets": [
        "def main():\n    # open a file for writing\n    f = open(\"test.txt\", \"w\")\n    # write some lines of data to the file\n    for i in range(10):\n        f.write(\"This is line \" + str(i) + \"\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n",
        "def main():\n    # open a file for writing\n    f = open(\"test.txt\", \"w\")\n    # write some lines of data to the file\n    for i in range(10):\n        f.write(\"This is line %d\\n\" % (i+1))\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n",
        "def main():\n    # open a file for writing\n    f = open('myfile.txt', 'w')\n    # write some lines of data to the file\n    for i in range(10):\n        f.write('This is line {}\\n'.format(i+1))\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open('myfile.txt', 'r')\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for appending\n    f = open('myfile.txt', 'a')\n    # write some lines of data to the file\n    for i in range(10):\n        f.write('This is line {}\\n'.format(i+1))\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open('myfile.txt', 'r')\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n",
        "def main():\n    # open a file for writing\n    f = open(\"test.txt\", \"w\")\n    # write some lines of data to the file\n    f.write(\"Line 1\\n\")\n    f.write(\"Line 2\\n\")\n    f.write(\"Line 3\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for appending\n    f = open(\"test.txt\", \"a\")\n    # write some more data to the file\n    f.write(\"Line 4\\n\")\n    f.write(\"Line 5\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f\n",
        "def main():\n    # open a file for writing\n    f = open(\"test.txt\", \"w\")\n    # write some lines of data to the file\n    f.write(\"Hello World!\\n\")\n    f.write(\"This is my first file\\n\")\n    f.write(\"and this is the second line\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for appending\n    f = open(\"test.txt\", \"a\")\n    # write some more data to the file\n    f.write(\"This is the third line\\n\")\n    f.write(\"This is the fourth line\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f\n",
        "def main():\n    # open a file for writing\n    # default mode is 'w'\n    # default encoding is 'utf-8'\n    f = open('test.txt', 'w')\n    # write some lines of data to file\n    for i in range(10):\n        f.write('This is line {}\\n'.format(i+1))\n    # close the file\n    f.close()\n    # open the file back up and read the contents\n    f = open('test.txt', 'r')\n    print(f.read())\n    f.close()\n    # open the file back up and read the contents\n    f = open('test.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    # open the file back up and read the contents\n    f = open('test.txt', 'r')\n    # read the entire file into a single string\n    data = f.read()\n    print(data)\n    f.close()\n    # open the file back up and read the contents\n    f = open('test.txt', 'r')\n    # read the entire file into a list of strings\n    data = f.readlines()\n    print(data)\n    f.close()\n    # open the file back up and read the contents\n    f = open('test.txt', 'r')\n    # read the entire file into a list of strings\n    data = f.readlines()\n    # remove the trailing newline characters\n    data = [line.rstrip() for line in data]\n    print(data)\n    f.close()\n    # open the file back up and read the contents\n    f = open('test.txt', 'r')\n    # read the entire file into a list of strings\n    data = f.readlines()\n    # remove the trailing newline characters\n    data = [line.rstrip() for line in data]\n    # reverse the list of strings\n    data.reverse()\n    # write the data back to the file\n    f = open('test.txt', 'w')\n    for line in data:\n        f.write(line + '\n",
        "def main():\n    # open a file for writing\n    # default mode is 'w'\n    # default encoding is 'utf-8'\n    f = open('test.txt', 'w')\n    # write some lines of data to file\n    for i in range(10):\n        f.write('This is line %d\\n' % (i + 1))\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open('test.txt', 'r')\n    # read the entire file into memory\n    data = f.read()\n    print(data)\n    # close the file\n    f.close()\n    # open the file for appending\n    f = open('test.txt', 'a')\n    # write some lines of data to file\n    for i in range(10):\n        f.write('This is line %d\\n' % (i + 1))\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open('test.txt', 'r')\n    # read the entire file into memory\n    data = f.read()\n    print(data)\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open('test.txt', 'r')\n    # read the entire file into memory\n    data = f.readlines()\n    print(data)\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open('test.txt', 'r')\n    # read the entire file into memory\n    data = f.readline()\n    print(data)\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open('test.txt', 'r')\n    # read the entire file into memory\n    data = f.readline()\n    print(data)\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open('test.txt', 'r')\n    # read the entire file into memory\n    data = f.readline()\n    print(data)\n    # close\n"
    ],
    "results": 9
},{
    "id": "309",
    "source": "soSearches",
    "language": "python",
    "query": "how to turn list object into a string python",
    "snippets": [
        "def list_to_string(list_object):\n    string = \"\"\n    for i in list_object:\n        string += i\n    return string\n",
        "def list_to_string(list_object):\n    string = ''\n    for i in list_object:\n        string += i\n    return string\n",
        "def list_to_string(list_object):\n    return ''.join(list_object)\n"
    ],
    "results": 10
},{
    "id": "310",
    "source": "soSearches",
    "language": "python",
    "query": "how to range in python",
    "snippets": [
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(5, 10):\n        print(i)\n    for i in range(5, 10, 2):\n        print(i)\n    for i in range(10, 0, -1):\n        print(i)\n    for i in range(0, 10, -1):\n        print(i)\n    for i in range(0, 10, -2):\n        print(i)\n    for i in range(10, 0, -2):\n        print(i)\n    for i in range(10, 0, -3):\n        print(i)\n    for i in range(10, 0, -4):\n        print(i)\n    for i in range(10, 0, -5):\n        print(i)\n    for i in range(10, 0, -6):\n        print(i)\n    for i in range(10, 0, -7):\n        print(i)\n    for i in range(10, 0, -8):\n        print(i)\n    for i in range(10, 0, -9):\n        print(i)\n    for i in range(10, 0, -10):\n        print(i)\n    for i in range(10, 0, -11):\n        print(i)\n    for i in range(10, 0, -12):\n        print(i)\n    for i in range(10, 0, -13):\n        print(i)\n    for i in range(10, 0, -14):\n        print(i)\n    for i in range(10, 0, -15):\n        print(i)\n    for i in range(10, 0, -16):\n        print(i)\n    for i in range(10, 0, -17):\n        print(i)\n    for i in range(10, 0, -18):\n        print(i)\n    for i in range(10, 0, -19):\n        print(i)\n    for i in range(10, 0, -20):\n        print(i)\n    for i in range\n",
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(5, 10):\n        print(i)\n    for i in range(5, 10, 2):\n        print(i)\n    for i in range(10, 0, -1):\n        print(i)\n    for i in range(10, 0, -2):\n        print(i)\n    for i in range(10, 0, -3):\n        print(i)\n    for i in range(10, 0, -4):\n        print(i)\n    for i in range(10, 0, -5):\n        print(i)\n    for i in range(10, 0, -6):\n        print(i)\n    for i in range(10, 0, -7):\n        print(i)\n    for i in range(10, 0, -8):\n        print(i)\n    for i in range(10, 0, -9):\n        print(i)\n    for i in range(10, 0, -10):\n        print(i)\n    for i in range(10, 0, -11):\n        print(i)\n    for i in range(10, 0, -12):\n        print(i)\n    for i in range(10, 0, -13):\n        print(i)\n    for i in range(10, 0, -14):\n        print(i)\n    for i in range(10, 0, -15):\n        print(i)\n    for i in range(10, 0, -16):\n        print(i)\n    for i in range(10, 0, -17):\n        print(i)\n    for i in range(10, 0, -18):\n        print(i)\n    for i in range(10, 0, -19):\n        print(i)\n    for i in range(10, 0, -20):\n        print(i)\n    for i in range(10, 0, -21):\n        print(i)\n    for i in range(10, 0, -22):\n        print(i)\n    for i in range\n",
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(10, 20):\n        print(i)\n    for i in range(10, 20, 2):\n        print(i)\n    for i in range(10, 20, -2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n        print(i)\n    for i in range(10, -20, 2):\n        print(i)\n    for i in range(10, -20, -2):\n",
        "def main():\n    for i in range(10):\n        print(i)\n    for i in range(10,20):\n        print(i)\n    for i in range(10,20,2):\n        print(i)\n    for i in range(10,20,3):\n        print(i)\n    for i in range(10,20,4):\n        print(i)\n    for i in range(10,20,5):\n        print(i)\n    for i in range(10,20,6):\n        print(i)\n    for i in range(10,20,7):\n        print(i)\n    for i in range(10,20,8):\n        print(i)\n    for i in range(10,20,9):\n        print(i)\n    for i in range(10,20,10):\n        print(i)\n    for i in range(10,20,11):\n        print(i)\n    for i in range(10,20,12):\n        print(i)\n    for i in range(10,20,13):\n        print(i)\n    for i in range(10,20,14):\n        print(i)\n    for i in range(10,20,15):\n        print(i)\n    for i in range(10,20,16):\n        print(i)\n    for i in range(10,20,17):\n        print(i)\n    for i in range(10,20,18):\n        print(i)\n    for i in range(10,20,19):\n        print(i)\n    for i in range(10,20,20):\n        print(i)\n    for i in range(10,20,21):\n        print(i)\n    for i in range(10,20,22):\n        print(i)\n    for i in range(10,20,23):\n        print(i)\n    for i in range(10,20,24):\n        print(i)\n    for i in range(10,20,25):\n        print(i)\n    for i in range(10,\n",
        "def main():\n    for i in range(1, 10):\n        print(i)\n    for i in range(1, 10, 2):\n        print(i)\n    for i in range(10, 0, -1):\n        print(i)\n    for i in range(10, 0, -2):\n        print(i)\n    for i in range(10, 0, -3):\n        print(i)\n    for i in range(10, 0, -4):\n        print(i)\n    for i in range(10, 0, -5):\n        print(i)\n    for i in range(10, 0, -6):\n        print(i)\n    for i in range(10, 0, -7):\n        print(i)\n    for i in range(10, 0, -8):\n        print(i)\n    for i in range(10, 0, -9):\n        print(i)\n    for i in range(10, 0, -10):\n        print(i)\n    for i in range(10, 0, -11):\n        print(i)\n    for i in range(10, 0, -12):\n        print(i)\n    for i in range(10, 0, -13):\n        print(i)\n    for i in range(10, 0, -14):\n        print(i)\n    for i in range(10, 0, -15):\n        print(i)\n    for i in range(10, 0, -16):\n        print(i)\n    for i in range(10, 0, -17):\n        print(i)\n    for i in range(10, 0, -18):\n        print(i)\n    for i in range(10, 0, -19):\n        print(i)\n    for i in range(10, 0, -20):\n        print(i)\n    for i in range(10, 0, -21):\n        print(i)\n    for i in range(10, 0, -22):\n        print(i)\n    for i in range(10, 0, -23):\n        print(i)\n"
    ],
    "results": 9
},{
    "id": "311",
    "source": "soSearches",
    "language": "python",
    "query": "how to draw a line using coordinates using turtle in python",
    "snippets": [
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    brad.pensize(5)\n    brad.penup()\n    brad.goto(-100,0)\n    brad.pendown()\n    brad.goto(100,0)\n    brad.penup()\n    brad.goto(0,-100)\n    brad.pendown()\n    brad.goto(0,100)\n    brad.penup()\n    brad.goto(0,0)\n    brad.pendown()\n    brad.goto(100,100)\n    brad.penup()\n    brad.goto(-100,-100)\n    brad.pendown()\n    brad.goto(100,-100)\n    brad.penup()\n    brad.goto(-100,100)\n    brad.pendown()\n    brad.goto(100,100)\n    brad.penup()\n    brad.goto(-100,-100)\n    brad.pendown()\n    brad.goto(100,-100)\n    brad.penup()\n    brad.goto(-100,100)\n    brad.pendown()\n    brad.goto(100,100)\n    brad.penup()\n    brad.goto(-100,-100)\n    brad.pendown()\n    brad.goto(100,-100)\n    brad.penup()\n    brad.goto(-100,100)\n    brad.pendown()\n    brad.goto(100,100)\n    brad.penup()\n    brad.goto(-100,-100)\n    brad.pendown()\n    brad.goto(100,-100)\n    brad.penup()\n    brad.goto(-100,100)\n    brad.pendown\n",
        "def main():\n    import turtle\n    window = turtle.Screen()\n    window.bgcolor(\"red\")\n    brad = turtle.Turtle()\n    brad.shape(\"turtle\")\n    brad.color(\"yellow\")\n    brad.speed(2)\n    brad.pensize(5)\n    brad.penup()\n    brad.goto(-200, 0)\n    brad.pendown()\n    brad.goto(200, 0)\n    brad.penup()\n    brad.goto(0, 200)\n    brad.pendown()\n    brad.goto(0, -200)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pendown()\n    brad.goto(0, 0)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pendown()\n    brad.goto(0, 0)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pendown()\n    brad.goto(0, 0)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pendown()\n    brad.goto(0, 0)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pendown()\n    brad.goto(0, 0)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pendown()\n    brad.goto(0, 0)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pendown()\n    brad.goto(0, 0)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pendown()\n    brad.goto(0, 0)\n    brad.penup()\n    brad.goto(0, 0)\n    brad.pend\n"
    ],
    "results": 2
},{
    "id": "312",
    "source": "soSearches",
    "language": "python",
    "query": "how to add dictionarys on python",
    "snippets": [
        "def main():\n    d = {'a':1, 'b':2, 'c':3}\n    print(d['a'])\n    d['d'] = 4\n    print(d['d'])\n    print(d)\n    d['a'] = 0\n    print(d)\n    del d['b']\n    print(d)\n    print('c' in d)\n    print('e' in d)\n    print(d.get('e'))\n    print(d.get('e', -1))\n    print(d.pop('c'))\n    print(d)\n    print(d.popitem())\n    print(d)\n    d.clear()\n    print(d)\n",
        "def main():\n    # create a dictionary\n    dict1 = {'name': 'Zara', 'age': 7}\n    dict2 = {'name': 'Mahnaz', 'age': 27}\n    dict3 = {'name': 'Abida', 'age': 27}\n    dict4 = {'name': 'Ayan', 'age': 27}\n    dict5 = {'name': 'Ayan', 'age': 27}\n    dict6 = {'name': 'Ayan', 'age': 27}\n    dict7 = {'name': 'Ayan', 'age': 27}\n    dict8 = {'name': 'Ayan', 'age': 27}\n    dict9 = {'name': 'Ayan', 'age': 27}\n    dict10 = {'name': 'Ayan', 'age': 27}\n    dict11 = {'name': 'Ayan', 'age': 27}\n    dict12 = {'name': 'Ayan', 'age': 27}\n    dict13 = {'name': 'Ayan', 'age': 27}\n    dict14 = {'name': 'Ayan', 'age': 27}\n    dict15 = {'name': 'Ayan', 'age': 27}\n    dict16 = {'name': 'Ayan', 'age': 27}\n    dict17 = {'name': 'Ayan', 'age': 27}\n    dict18 = {'name': 'Ayan', 'age': 27}\n    dict19 = {'name': 'Ayan', 'age': 27}\n    dict20 = {'name': 'Ayan', 'age': 27}\n    dict21 = {'name': 'Ayan', 'age': 27}\n    dict22 = {'name': 'Ayan', 'age': 27}\n    dict23 = {'name': 'Ayan', 'age': 27}\n    dict24 = {'name': 'Ayan', 'age': 27}\n    dict25 = {'name': 'Ayan', 'age': 27}\n    dict26 = {'name': 'Ayan', 'age': 27}\n    dict27 = {'name': 'Ayan', 'age': 27}\n    dict28\n",
        "def main():\n    # create a dictionary\n    d = {'a':1, 'b':2, 'c':3}\n    print(d['a'])\n    print(d['b'])\n    print(d['c'])\n    # add a new key\n    d['d'] = 4\n    print(d['d'])\n    # add a new key and value\n    d['e'] = 5\n    print(d['e'])\n    # add a new key and value\n    d['f'] = 6\n    print(d['f'])\n    # add a new key and value\n    d['g'] = 7\n    print(d['g'])\n    # add a new key and value\n    d['h'] = 8\n    print(d['h'])\n    # add a new key and value\n    d['i'] = 9\n    print(d['i'])\n    # add a new key and value\n    d['j'] = 10\n    print(d['j'])\n    # add a new key and value\n    d['k'] = 11\n    print(d['k'])\n    # add a new key and value\n    d['l'] = 12\n    print(d['l'])\n    # add a new key and value\n    d['m'] = 13\n    print(d['m'])\n    # add a new key and value\n    d['n'] = 14\n    print(d['n'])\n    # add a new key and value\n    d['o'] = 15\n    print(d['o'])\n    # add a new key and value\n    d['p'] = 16\n    print(d['p'])\n    # add a new key and value\n    d['q'] = 17\n    print(d['q'])\n    # add a new key and value\n    d['r'] = 18\n    print(d['r'])\n    # add a new key and value\n    d['s'] = 19\n    print(d['s'])\n    # add a new key and value\n    d['t'] = 20\n    print(d['t'])\n    # add\n",
        "def main():\n    # create a new dictionary\n    new_dict = {'name': 'John', 'age': '30', 'city': 'New York'}\n    # add a new key-value pair\n    new_dict['phone'] = '555-5555'\n    # print out the dictionary\n    print(new_dict)\n    # print out the value for the 'phone' key\n    print(new_dict['phone'])\n    # print out the keys of the dictionary\n    print(new_dict.keys())\n    # print out the values of the dictionary\n    print(new_dict.values())\n    # print out if the 'city' key is in the dictionary\n    print('city' in new_dict)\n    # print out the number of items in the dictionary\n    print(len(new_dict))\n    # delete the 'age' key-value pair\n    del new_dict['age']\n    # print out the dictionary\n    print(new_dict)\n    # create a dictionary from a sequence of key-value pairs\n    new_dict = dict(name='John', age='30', city='New York')\n    # print out the dictionary\n    print(new_dict)\n    # create a dictionary from a mapping object\n    new_dict = dict(zip(['name', 'age', 'city'], ['John', '30', 'New York']))\n    # print out the dictionary\n    print(new_dict)\n    # create a dictionary from a dictionary\n    new_dict = dict(new_dict)\n    # print out the dictionary\n    print(new_dict)\n    # create a dictionary from an iterable of key-value pairs\n    new_dict = dict([('name', 'John'), ('age', '30'), ('city', 'New York')])\n    # print out the dictionary\n    print(new_dict)\n    # create a dictionary from a set\n    new_dict = dict(name='John', age='30', city='New York')\n    # print out the dictionary\n    print(new_dict)\n    # create a dictionary from a sequence of key-value pairs\n    new_dict = dict([('name', 'John'), ('age\n",
        "def main():\n    # create a dictionary\n    d = dict()\n    # add key/value pairs\n    d['a'] = 1\n    d['b'] = 2\n    d['c'] = 3\n    # print the dictionary\n    print(d)\n    # print the value of a\n    print(d['a'])\n    # print the value of b\n    print(d['b'])\n    # print the value of c\n    print(d['c'])\n    # print the value of d\n    print(d['d'])\n    # print the value of e\n    print(d['e'])\n    # print the value of f\n    print(d['f'])\n    # print the value of g\n    print(d['g'])\n    # print the value of h\n    print(d['h'])\n    # print the value of i\n    print(d['i'])\n    # print the value of j\n    print(d['j'])\n    # print the value of k\n    print(d['k'])\n    # print the value of l\n    print(d['l'])\n    # print the value of m\n    print(d['m'])\n    # print the value of n\n    print(d['n'])\n    # print the value of o\n    print(d['o'])\n    # print the value of p\n    print(d['p'])\n    # print the value of q\n    print(d['q'])\n    # print the value of r\n    print(d['r'])\n    # print the value of s\n    print(d['s'])\n    # print the value of t\n    print(d['t'])\n    # print the value of u\n    print(d['u'])\n    # print the value of v\n    print(d['v'])\n    # print the value of w\n    print(d['w'])\n    # print the value of x\n    print(d['x'])\n    # print the value of y\n    print(d['y'])\n    # print the value of z\n    print(d['z'\n",
        "def main():\n    # create a new dictionary\n    d = dict()\n    # add key-value pairs\n    d['a'] = 'alpha'\n    d['b'] = 'beta'\n    d['c'] = 'charlie'\n    # print out the dictionary\n    print(d)\n    # print out the value associated with key 'b'\n    print(d['b'])\n    # print out the keys of the dictionary\n    print(d.keys())\n    # print out the values of the dictionary\n    print(d.values())\n    # print out the key-value pairs of the dictionary\n    print(d.items())\n    # print out the number of key-value pairs in the dictionary\n    print(len(d))\n    # print out the value associated with key 'a'\n    print(d.get('a'))\n    # print out the value associated with key 'd'\n    print(d.get('d'))\n    # print out the value associated with key 'd'\n    print(d.get('d', 'not found'))\n    # print out the value associated with key 'd'\n    print(d.get('d', 'not found'))\n    # print out the value associated with key 'd'\n    print(d.get('d', not_found='not found'))\n    # print out the value associated with key 'd'\n    print(d.get('d', not_found='not found'))\n    # print out the value associated with key 'd'\n    print(d.get('d', not_found='not found'))\n    # print out the value associated with key 'd'\n    print(d.get('d', not_found='not found'))\n    # print out the value associated with key 'd'\n    print(d.get('d', not_found='not found'))\n    # print out the value associated with key 'd'\n    print(d.get('d', not_found='not found'))\n    # print out the value associated with key 'd'\n    print(d.get('d', not_found='not found'))\n    # print out the value\n",
        "def main():\n    dict1 = {'name': 'joe', 'age': '20'}\n    dict2 = {'name': 'joe', 'age': '20'}\n    dict3 = {'name': 'joe', 'age': '20'}\n    dict4 = {'name': 'joe', 'age': '20'}\n    dict5 = {'name': 'joe', 'age': '20'}\n    dict6 = {'name': 'joe', 'age': '20'}\n    dict7 = {'name': 'joe', 'age': '20'}\n    dict8 = {'name': 'joe', 'age': '20'}\n    dict9 = {'name': 'joe', 'age': '20'}\n    dict10 = {'name': 'joe', 'age': '20'}\n    dict11 = {'name': 'joe', 'age': '20'}\n    dict12 = {'name': 'joe', 'age': '20'}\n    dict13 = {'name': 'joe', 'age': '20'}\n    dict14 = {'name': 'joe', 'age': '20'}\n    dict15 = {'name': 'joe', 'age': '20'}\n    dict16 = {'name': 'joe', 'age': '20'}\n    dict17 = {'name': 'joe', 'age': '20'}\n    dict18 = {'name': 'joe', 'age': '20'}\n    dict19 = {'name': 'joe', 'age': '20'}\n    dict20 = {'name': 'joe', 'age': '20'}\n    dict21 = {'name': 'joe', 'age': '20'}\n    dict22 = {'name': 'joe', 'age': '20'}\n    dict23 = {'name': 'j\n",
        "def main():\n    # create a dictionary\n    dict1 = {'name': 'Zara', 'age': 7, 'class': 'First'}\n    # add new element to dictionary\n    dict1['school'] = 'DPS School'\n    # print the dictionary\n    print(dict1)\n    # print the dictionary keys\n    print(dict1.keys())\n    # print the dictionary values\n    print(dict1.values())\n    # print the dictionary items\n    print(dict1.items())\n    # print the dictionary length\n    print(len(dict1))\n    # print the dictionary length\n    print(len(dict1.keys()))\n    # print the dictionary length\n    print(len(dict1.values()))\n    # print the dictionary length\n    print(len(dict1.items()))\n    # print the dictionary length\n    print(len(dict1.items()[0]))\n    # print the dictionary length\n    print(len(dict1.items()[0][0]))\n    # print the dictionary length\n    print(len(dict1.items()[0][1]))\n    # print the dictionary length\n    print(len(dict1.items()[0][2]))\n    # print the dictionary length\n    print(len(dict1.items()[0][3]))\n    # print the dictionary length\n    print(len(dict1.items()[0][4]))\n    # print the dictionary length\n    print(len(dict1.items()[0][5]))\n    # print the dictionary length\n    print(len(dict1.items()[0][6]))\n    # print the dictionary length\n    print(len(dict1.items()[0][7]))\n    # print the dictionary length\n    print(len(dict1.items()[0][8]))\n    # print the dictionary length\n    print(len(dict1.items()[0][9]))\n    # print the dictionary length\n    print(len(dict1.items()[0][10]))\n    # print the dictionary length\n    print(len(dict1.items()[0][11]))\n",
        "def main():\n    dic = {'name': 'John', 'age': '30', 'city': 'New York'}\n    print(dic)\n    dic['name'] = 'Jane'\n    print(dic)\n    dic['phone'] = '555-5555'\n    print(dic)\n    print(dic.keys())\n    print(dic.values())\n    print(dic.items())\n    for key in dic.keys():\n        print(key)\n    for value in dic.values():\n        print(value)\n    for key, value in dic.items():\n        print(key, value)\n    if 'name' in dic:\n        print('name is in the dictionary')\n    if 'phone' not in dic:\n        print('phone is not in the dictionary')\n    dic.pop('phone')\n    print(dic)\n    dic.popitem()\n    print(dic)\n    dic.clear()\n    print(dic)\n    dic = {'name': 'John', 'age': '30', 'city': 'New York'}\n    print(dic)\n    del dic['age']\n    print(dic)\n    dic = {'name': 'John', 'age': '30', 'city': 'New York'}\n    print(dic)\n    del dic\n    print(dic)\n    dic = {'name': 'John', 'age': '30', 'city': 'New York'}\n    print(dic)\n    del dic['name']\n    print(dic)\n    dic = {'name': 'John', 'age': '30', 'city': 'New York'}\n    print(dic)\n    del dic['name']\n    print(dic)\n    dic = {'name': 'John', 'age': '30', 'city': 'New York'}\n    print(dic)\n    del dic['name']\n    print(dic)\n    dic = {'name': 'John', 'age': '30', 'city': '\n",
        "def main():\n    # create a new dictionary\n    my_dict = {'name': 'john', 'age': '27'}\n    # add new key-value pair\n    my_dict['city'] = 'beijing'\n    # print the new dictionary\n    print(my_dict)\n    # delete a key-value pair\n    del my_dict['age']\n    print(my_dict)\n    # print the keys of the dictionary\n    print(my_dict.keys())\n    # print the values of the dictionary\n    print(my_dict.values())\n    # print the key-value pairs of the dictionary\n    print(my_dict.items())\n    # check if the key exists\n    if 'name' in my_dict:\n        print('name is in the dictionary')\n    # check if the value exists\n    if 'beijing' in my_dict.values():\n        print('beijing is in the dictionary')\n    # check if the key-value pair exists\n    if ('name', 'john') in my_dict.items():\n        print('name is john')\n    # check if the key-value pair exists\n    if ('age', '27') in my_dict.items():\n        print('age is 27')\n    # check if the key-value pair exists\n    if ('city', 'beijing') in my_dict.items():\n        print('city is beijing')\n    # check if the key-value pair exists\n    if ('city', 'beijing') not in my_dict.items():\n        print('city is not beijing')\n    # check if the key-value pair exists\n    if ('name', 'john') not in my_dict.items():\n        print('name is not john')\n    # check if the key-value pair exists\n    if ('age', '27') not in my_dict.items():\n        print('age is not 27')\n    # check if the key-value pair exists\n    if ('name', 'john') not in my_dict.items():\n        print('name is not john')\n    # check if the key-value pair exists\n    if ('age', '27') not in my_dict.items():\n"
    ],
    "results": 10
},{
    "id": "313",
    "source": "soSearches",
    "language": "python",
    "query": "how to subtract 30% in python",
    "snippets": [
        "def main():\n    price = float(input(\"Enter the price: \"))\n    discount = float(input(\"Enter the discount: \"))\n    discount_price = price - (price * discount / 100)\n    print(\"The discount price is: \", discount_price)\n",
        "def main():\n    price = float(input(\"Enter price: \"))\n    discount = float(input(\"Enter discount: \"))\n    discount_price = price - (price * discount / 100)\n    print(\"Discount price: \", discount_price)\n",
        "def main():\n    print(\"This program subtracts 30% from a number\")\n    number = int(input(\"Enter a number: \"))\n    print(\"The number is\", number)\n    print(\"The number minus 30% is\", number * 0.7)\n",
        "def main():\n    price = float(input(\"Enter the price: \"))\n    tax = float(input(\"Enter the tax: \"))\n    discount = float(input(\"Enter the discount: \"))\n    total = price + (price * tax) - (price * discount)\n    print(\"The total is: \", total)\n",
        "def main():\n    price = float(input(\"Enter price: \"))\n    tax = price * 0.30\n    total = price + tax\n    print(\"Price: \", price)\n    print(\"Tax: \", tax)\n    print(\"Total: \", total)\n",
        "def main():\n    price = float(input(\"Enter the price: \"))\n    discount = float(input(\"Enter the discount: \"))\n    discount_amount = price * discount / 100\n    total_price = price - discount_amount\n    print(\"The total price is: \", total_price)\n",
        "def main():\n    price = float(input(\"Enter the price: \"))\n    discount = price * 0.3\n    print(\"The discount is: \", discount)\n    print(\"The new price is: \", price - discount)\n",
        "def main():\n    price = float(input(\"Enter the price: \"))\n    discount = price * 0.3\n    total = price - discount\n    print(\"The total is: \", total)\n",
        "def main():\n    price = float(input(\"Enter the price: \"))\n    discount = float(input(\"Enter the discount: \"))\n    discount_price = price * (1 - discount)\n    print(\"The discount price is: \", discount_price)\n"
    ],
    "results": 10
},{
    "id": "314",
    "source": "soSearches",
    "language": "python",
    "query": "how to sign in ebay using python",
    "snippets": [
        "def main():\n    # get the username and password\n    username = input(\"Enter your username: \")\n    password = input(\"Enter your password: \")\n    # create a session\n    session = requests.Session()\n    # get the login page\n    response = session.get(\"https://signin.ebay.com/\")\n    # parse the html\n    tree = html.fromstring(response.text)\n    # get the authenticity_token\n    authenticity_token = tree.xpath(\"//input[@name=' authenticity_token']/@value\")[0]\n    # get the form data\n    form_data = {\n        \"authenticity_token\": authenticity_token,\n        \"user_login\": username,\n        \"user_password\": password,\n        \"login_submit\": \"Sign in\"\n    }\n    # post the data\n    response = session.post(\"https://signin.ebay.com/\", data=form_data)\n    # check if we are logged in\n    if \"Sign out\" in response.text:\n        print(\"You are logged in!\")\n    else:\n        print(\"You are not logged in!\")\n",
        "def main():\n    # get the user name and password\n    username = input(\"Enter your username: \")\n    password = input(\"Enter your password: \")\n    # create a session\n    session = requests.Session()\n    # get the login page\n    login_page = session.get(\"https://signin.ebay.com/signin/start\")\n    # get the authenticity_token\n    authenticity_token = login_page.html.find(\"input\", {\"name\": \" authenticity_token\"})[\"value\"]\n    # create the payload\n    payload = {\n        \"authenticity_token\": authenticity_token,\n        \"login\": username,\n        \"password\": password,\n        \"persistent\": \"1\",\n        \"signin\": \"Sign in\"\n    }\n    # post the login page\n    login_page = session.post(\"https://signin.ebay.com/signin/start\", data=payload)\n    # get the login page\n    login_page = session.get(\"https://signin.ebay.com/signin/start\")\n    # get the authenticity_token\n    authenticity_token = login_page.html.find(\"input\", {\"name\": \" authenticity_token\"})[\"value\"]\n    # create the payload\n    payload = {\n        \"authenticity_token\": authenticity_token,\n        \"login\": username,\n        \"password\": password,\n        \"persistent\": \"1\",\n        \"signin\": \"Sign in\"\n    }\n    # post the login page\n    login_page = session.post(\"https://signin.ebay.com/signin/start\", data=payload)\n    # get the login page\n    login_page = session.get(\"https://signin.ebay.com/signin/start\")\n    # get the authenticity_token\n    authenticity_token = login_page.html.find(\"input\", {\"name\": \" authenticity_token\"})[\"value\"]\n    # create the payload\n    payload = {\n        \"authenticity_token\": authenticity_token,\n        \"login\": username,\n        \"password\": password,\n        \"persistent\": \"1\",\n        \"signin\": \"Sign\n",
        "def main():\n    import requests\n    import json\n    import getpass\n    import time\n    import sys\n    import os\n    import re\n    import argparse\n    from bs4 import BeautifulSoup\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    from selenium.webdriver.firefox.options import Options\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n    from selenium.webdriver.firefox.firefox_binary import FirefoxBinary\n    from selenium.webdriver.firefox.firefox_profile import FirefoxProfile\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    from selenium.webdriver.firefox.options import Options\n    from selenium.webdriver.common.action_chains import ActionChains\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selen\n",
        "def main():\n    import sys\n    import os\n    import time\n    import argparse\n    import getpass\n    import requests\n    import json\n    import re\n    import urllib3\n    from bs4 import BeautifulSoup\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    from selenium.webdriver.common.by import By\n    from selenium.webdriver.support.ui import WebDriverWait\n    from selenium.webdriver.support import expected_conditions as EC\n    from selenium.common.exceptions import TimeoutException\n    from selenium.common.exceptions import NoSuchElementException\n    from selenium.common.exceptions import WebDriverException\n    from selenium.common.exceptions import ElementNotVisibleException\n    from selenium.common.exceptions import ElementNotInteractableException\n    from selenium.common.exceptions import ElementClickInterceptedException\n    from selenium.common.exceptions import ElementNotSelectableException\n    from selenium.common.exceptions import ElementNotVisibleException\n    from selenium.common.exceptions import ElementNotInteractableException\n    from selenium.common.exceptions import ElementNotSelectableException\n    from selenium.common.exceptions import ElementNotVisibleException\n    from selenium.common.exceptions import ElementNotInteractableException\n    from selenium.common.exceptions import ElementNotSelectableException\n    from selenium.common.exceptions import ElementNotVisibleException\n    from selenium.common.exceptions import ElementNotInteractableException\n    from selenium.common.exceptions import ElementNotSelectableException\n    from selenium.common.exceptions import ElementNotVisibleException\n    from selenium.common.exceptions import ElementNotInteractableException\n    from selenium.common.exceptions import ElementNotSelectableException\n    from selenium.common.exceptions import ElementNotVisibleException\n    from selenium.common.exceptions import ElementNotInteractableException\n    from selenium.common.exceptions import Element\n"
    ],
    "results": 4
},{
    "id": "315",
    "source": "soSearches",
    "language": "python",
    "query": "how to open ant text file in python",
    "snippets": [
        "def main():\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n",
        "def main():\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.read()\n    # close the file\n    infile.close()\n    # print the text\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readlines()\n    # close the file\n    infile.close()\n    # print the text\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the text\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the text\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the text\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the text\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the text\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the\n",
        "def main():\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readlines()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open(\"ant.txt\", \"r\")\n    # read the file\n    ant_text = infile.readline()\n    # close the\n",
        "def main():\n    # open the file\n    infile = open('ant.txt', 'r')\n    # read the file\n    ant_text = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open('ant.txt', 'r')\n    # read the file\n    ant_text = infile.readlines()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open('ant.txt', 'r')\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open('ant.txt', 'r')\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open('ant.txt', 'r')\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open('ant.txt', 'r')\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open('ant.txt', 'r')\n    # read the file\n    ant_text = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(ant_text)\n    # open the file\n    infile = open('ant.txt', 'r')\n    # read the file\n    ant_text = infile.readline()\n    # close the\n",
        "def main():\n    # open file\n    infile = open(\"ant.txt\", \"r\")\n    # read file\n    ant_text = infile.read()\n    # close file\n    infile.close()\n    # print text\n    print(ant_text)\n    # open file\n    infile = open(\"ant.txt\", \"r\")\n    # read file\n    ant_text = infile.read()\n    # close file\n    infile.close()\n    # print text\n    print(ant_text)\n    # open file\n    infile = open(\"ant.txt\", \"r\")\n    # read file\n    ant_text = infile.read()\n    # close file\n    infile.close()\n    # print text\n    print(ant_text)\n    # open file\n    infile = open(\"ant.txt\", \"r\")\n    # read file\n    ant_text = infile.read()\n    # close file\n    infile.close()\n    # print text\n    print(ant_text)\n    # open file\n    infile = open(\"ant.txt\", \"r\")\n    # read file\n    ant_text = infile.read()\n    # close file\n    infile.close()\n    # print text\n    print(ant_text)\n    # open file\n    infile = open(\"ant.txt\", \"r\")\n    # read file\n    ant_text = infile.read()\n    # close file\n    infile.close()\n    # print text\n    print(ant_text)\n    # open file\n    infile = open(\"ant.txt\", \"r\")\n    # read file\n    ant_text = infile.read()\n    # close file\n    infile.close()\n    # print text\n    print(ant_text)\n    # open file\n    infile = open(\"ant.txt\", \"r\")\n    # read file\n    ant_text = infile.read()\n    # close file\n    infile.close()\n    # print text\n    print(ant_text)\n    # open file\n    infile = open(\"ant.txt\", \"\n",
        "def main():\n    # open the file for reading\n    infile = open('ant.txt', 'r')\n    # read the file's contents\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file's contents\n    print(contents)\n    # open the file for writing\n    outfile = open('ant.txt', 'w')\n    # write to the file\n    outfile.write('Ants go marching one by one\\n')\n    outfile.write('In the East\\n')\n    outfile.write('On the ground\\n')\n    outfile.write('Ants go marching one by one\\n')\n    outfile.write('In the West\\n')\n    outfile.write('On the ground\\n')\n    outfile.close()\n    # open the file for reading\n    infile = open('ant.txt', 'r')\n    # read the file's contents\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file's contents\n    print(contents)\n"
    ],
    "results": 10
},{
    "id": "316",
    "source": "soSearches",
    "language": "python",
    "query": "how to bind keyboard event in python tkinter",
    "snippets": [
        "def key_press(event):\n    print(\"pressed\", event.char)\n    if event.char == 'q':\n        root.destroy()\n",
        "def key_press(event):\n    print(\"pressed\", event.char)\n",
        "def key_event(event):\n    print(\"pressed\", repr(event.char))\n",
        "def key_pressed(event):\n    print(\"pressed\", repr(event.char))\n"
    ],
    "results": 10
},{
    "id": "317",
    "source": "soSearches",
    "language": "python",
    "query": "how to check whether each column is null or not in python",
    "snippets": [
        "def check_null(df):\n    for col in df.columns:\n        print(col, df[col].isnull().sum())\n",
        "def check_null(df):\n    for col in df.columns:\n        if df[col].isnull().sum() > 0:\n            print(col)\n            print(df[col].isnull().sum())\n            print('\\n')\n",
        "def check_null(df):\n    for col in df.columns:\n        print(col, df[col].isnull().sum())\n    return df\n",
        "def check_null(df, col):\n    return df[col].isnull().sum()\n"
    ],
    "results": 10
},{
    "id": "318",
    "source": "soSearches",
    "language": "python",
    "query": "how to calculate the reaccurance of number in array in python",
    "snippets": [
        "def reaccurance(array):\n    reaccurance = {}\n    for i in array:\n        if i in reaccurance:\n            reaccurance[i] += 1\n        else:\n            reaccurance[i] = 1\n    return reaccurance\n",
        "def reaccurance(array):\n    reac = {}\n    for i in array:\n        if i in reac:\n            reac[i] += 1\n        else:\n            reac[i] = 1\n    return reac\n",
        "def reaccurance(array):\n    result = {}\n    for i in array:\n        if i in result:\n            result[i] += 1\n        else:\n            result[i] = 1\n    return result\n",
        "def reaccurance(arr):\n    reac = {}\n    for i in arr:\n        if i in reac:\n            reac[i] += 1\n        else:\n            reac[i] = 1\n    return reac\n",
        "def reccurence(array):\n    result = {}\n    for i in array:\n        if i in result:\n            result[i] += 1\n        else:\n            result[i] = 1\n    return result\n",
        "def reaccurance(array):\n    count = 0\n    for i in range(len(array)):\n        for j in range(i+1, len(array)):\n            if array[i] == array[j]:\n                count += 1\n    return count\n",
        "def reaccurance(arr):\n    dic = {}\n    for i in arr:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    return dic\n"
    ],
    "results": 10
},{
    "id": "319",
    "source": "soSearches",
    "language": "python",
    "query": "how to get method names in a python class",
    "snippets": [
        "def get_method_names(obj):\n    return [method_name for method_name in dir(obj) if callable(getattr(obj, method_name))]\n",
        "def get_method_names(obj):\n    return [method for method in dir(obj) if callable(getattr(obj, method))]\n",
        "def get_method_names(cls):\n    return [method for method in dir(cls) if callable(getattr(cls, method))]\n"
    ],
    "results": 10
},{
    "id": "320",
    "source": "soSearches",
    "language": "python",
    "query": "python how to read all images in a folder",
    "snippets": [
        "def read_images(path):\n    import os\n    import numpy as np\n    from PIL import Image\n    images = []\n    for filename in os.listdir(path):\n        if filename.endswith(\".png\"):\n            img = Image.open(path + filename)\n            img = np.array(img)\n            images.append(img)\n    return images\n",
        "def read_images(path):\n    import os\n    import numpy as np\n    from PIL import Image\n    images = []\n    for filename in os.listdir(path):\n        if filename.endswith(\".jpg\"):\n            img = Image.open(path + filename)\n            img = np.array(img)\n            images.append(img)\n    return images\n",
        "def read_images(path):\n    from PIL import Image\n    import os\n    images = []\n    for filename in os.listdir(path):\n        if filename.endswith(\".jpg\"):\n            img = Image.open(path + filename)\n            images.append(img)\n    return images\n",
        "def read_images(path):\n    import os\n    import numpy as np\n    from PIL import Image\n    images = []\n    for filename in os.listdir(path):\n        img = Image.open(path + filename)\n        img = np.array(img)\n        images.append(img)\n    return images\n",
        "def main():\n    import os\n    import numpy as np\n    import cv2\n    import matplotlib.pyplot as plt\n    import matplotlib.image as mpimg\n    from skimage.color import rgb2gray\n    from skimage.transform import resize\n    from skimage.feature import hog\n    from skimage.io import imread\n    from skimage.io import imshow\n    from skimage.io import show\n    from skimage.io import imread_collection\n    from skimage.io import imshow_collection\n    from skimage.io import show_collection\n    from skimage.io import load_collection\n    from skimage.io import use_plugin\n    from skimage.io import reset_plugins\n    from skimage.io import imsave\n    from skimage.io import imread_collection\n    from skimage.io import imshow_collection\n    from skimage.io import show_collection\n    from skimage.io import load_collection\n    from skimage.io import use_plugin\n    from skimage.io import reset_plugins\n    from skimage.io import imsave\n    from skimage.io import imread_collection\n    from skimage.io import imshow_collection\n    from skimage.io import show_collection\n    from skimage.io import load_collection\n    from skimage.io import use_plugin\n    from skimage.io import reset_plugins\n    from skimage.io import imsave\n    from skimage.io import imread_collection\n    from skimage.io import imshow_collection\n    from skimage.io import show_collection\n    from skimage.io import load_collection\n    from skimage.io import use_plugin\n    from skimage.io import reset_plugins\n    from skimage.io import imsave\n    from skimage.io import imread_collection\n    from skimage.io import imshow_collection\n    from skimage.io import show_collection\n    from skimage.io import load_collection\n    from skimage.io import use_plugin\n    from skimage.io import reset_plugins\n    from skimage.io import imsave\n    from skimage.io import im\n"
    ],
    "results": 10
},{
    "id": "321",
    "source": "soSearches",
    "language": "python",
    "query": "how to append  of objects into a list in python",
    "snippets": [
        "def main():\n    # create a list\n    mylist = [1, 2, 3, 4, 5]\n    # append an object to the list\n    mylist.append(6)\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([7, 8, 9])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([10, 11, 12])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([13, 14, 15])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([16, 17, 18])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([19, 20, 21])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([22, 23, 24])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([25, 26, 27])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([28, 29, 30])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([31, 32, 33])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([34, 35, 36])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([37, 38, 39])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([40, 41, 42])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([43, 44, 45])\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3, 4, 5]\n    # append an object to the list\n    mylist.append(6)\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([7, 8, 9])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append((10, 11, 12))\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({13, 14, 15})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({16, 17, 18})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({19, 20, 21})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({22, 23, 24})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({25, 26, 27})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({28, 29, 30})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({31, 32, 33})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({34, 35, 36})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({37, 38, 39})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({40, 41, 42})\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append({43, 44, 45})\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3, 4, 5]\n    # append an object to the list\n    mylist.append(6)\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([7, 8, 9])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append((10, 11, 12))\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([13, 14, 15])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([16, 17, 18])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([19, 20, 21])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([22, 23, 24])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([25, 26, 27])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([28, 29, 30])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([31, 32, 33])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([34, 35, 36])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([37, 38, 39])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([40, 41, 42])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([43, 44, 45])\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3]\n    # append an object to the list\n    mylist.append(4)\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([5, 6, 7])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([8, 9, 10])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([11, 12, 13])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([14, 15, 16])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([17, 18, 19])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([20, 21, 22])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([23, 24, 25])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([26, 27, 28])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([29, 30, 31])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([32, 33, 34])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([35, 36, 37])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([38, 39, 40])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([41, 42, 43])\n    # print the\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5]\n    # append an object to the list\n    my_list.append(6)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append([7, 8, 9])\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append((10, 11, 12))\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append({13, 14, 15})\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append('hello')\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(16)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(17)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(18)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(19)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(20)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(21)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(22)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(23)\n    # print the list\n    print(my_list)\n    # append another list to the list\n    my_list.append(24)\n    # print the list\n    print(my_list\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3]\n    # append a new item to the list\n    mylist.append(4)\n    # print the list\n    print(mylist)\n    # append multiple items to the list\n    mylist.extend([5, 6, 7])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([[8, 9, 10]])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([[11, 12, 13], [14, 15, 16]])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([17, 18, 19])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([[20, 21, 22], [23, 24, 25]])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([26, 27, 28])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([[29, 30, 31], [32, 33, 34]])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([35, 36, 37])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([[38, 39, 40], [41, 42, 43]])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([44, 45, 46])\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.extend([[47, 48, 49], [50, 51, 52]])\n    # print the list\n    print(mylist)\n    # append\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3]\n    # append a new item to the list\n    my_list.append(4)\n    # print the list\n    print(my_list)\n    # add another list to the end of the list\n    my_list.extend([5, 6, 7])\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append([8, 9, 10])\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append(11)\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append([12, 13, 14])\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append(15)\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append([16, 17, 18])\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append(19)\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append([20, 21, 22])\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append(23)\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append([24, 25, 26])\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append(27)\n    # print the list\n    print(my_list)\n    # add a new item to the list\n    my_list.append([28, 29, 30])\n    # print the list\n    print(my_list)\n    # add a\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3]\n    # append a new object to the list\n    mylist.append(4)\n    # print the list\n    print(mylist)\n    # append a list to the list\n    mylist.append([5, 6, 7])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([8, 9, 10])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([11, 12, 13])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([14, 15, 16])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([17, 18, 19])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([20, 21, 22])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([23, 24, 25])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([26, 27, 28])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([29, 30, 31])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([32, 33, 34])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([35, 36, 37])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([38, 39, 40])\n    # print the list\n    print(mylist)\n    # append another list to the list\n    mylist.append([41, 42, 43])\n    # print the\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3]\n    # append a new element\n    mylist.append(4)\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append([5, 6, 7])\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append((8, 9, 10))\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({11, 12, 13})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({14, 15, 16})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({17, 18, 19})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({20, 21, 22})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({23, 24, 25})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({26, 27, 28})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({29, 30, 31})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({32, 33, 34})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({35, 36, 37})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({38, 39, 40})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({41, 42, 43})\n    # print the list\n    print(mylist)\n    # append another list\n    mylist.append({44, 45, 46})\n    # print the list\n    print(mylist)\n"
    ],
    "results": 10
},{
    "id": "322",
    "source": "soSearches",
    "language": "python",
    "query": "python how to find an object's location",
    "snippets": [
        "def find_location(obj, lst):\n    for i in range(len(lst)):\n        if obj in lst[i]:\n            return i\n    return -1\n",
        "def find_location(obj, lst):\n    for i in range(len(lst)):\n        if obj in lst[i]:\n            return i\n    return None\n",
        "def find_object(obj, list):\n    for i in range(len(list)):\n        if list[i] == obj:\n            return i\n    return None\n",
        "def find_obj(obj, contents):\n    for i in range(len(contents)):\n        if contents[i] == obj:\n            return i\n    return None\n",
        "def main():\n    # create a list of items\n    items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get a reference to the last item in the list\n    last_item = items[-1]\n    # get the index of the last item in the list\n    last_item_index = items.index(last_item)\n    # print the index of the last item\n    print(\"The index of the last item in the list is {}\".format(last_item_index))\n    # get a reference to the first item in the list\n    first_item = items[0]\n    # get the index of the first item in the list\n    first_item_index = items.index(first_item)\n    # print the index of the first item\n    print(\"The index of the first item in the list is {}\".format(first_item_index))\n    # get a reference to the middle item in the list\n    middle_item = items[len(items) // 2]\n    # get the index of the middle item in the list\n    middle_item_index = items.index(middle_item)\n    # print the index of the middle item\n    print(\"The index of the middle item in the list is {}\".format(middle_item_index))\n    # get a reference to the item in the list at index 3\n    item_at_index_3 = items[3]\n    # get the index of the item in the list at index 3\n    item_at_index_3_index = items.index(item_at_index_3)\n    # print the index of the item in the list at index 3\n    print(\"The index of the item in the list at index 3 is {}\".format(item_at_index_3_index))\n    # get a reference to the item in the list at index -3\n    item_at_index_minus_3 = items[-3]\n    # get the index of the item in the list at index -3\n    item_at_index_minus_3_index = items.index(item_at_index_minus_3)\n    # print the index of the item in\n",
        "def main():\n    # create a list of items\n    items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get a reference to the first item in the list\n    first_item = items[0]\n    # get a reference to the last item in the list\n    last_item = items[-1]\n    # get a reference to the second item in the list\n    second_item = items[1]\n    # get a reference to the third item in the list\n    third_item = items[2]\n    # get a reference to the fourth item in the list\n    fourth_item = items[3]\n    # get a reference to the fifth item in the list\n    fifth_item = items[4]\n    # get a reference to the sixth item in the list\n    sixth_item = items[5]\n    # get a reference to the seventh item in the list\n    seventh_item = items[6]\n    # get a reference to the eighth item in the list\n    eighth_item = items[7]\n    # get a reference to the ninth item in the list\n    ninth_item = items[8]\n    # get a reference to the tenth item in the list\n    tenth_item = items[9]\n    # print the value of the first item\n    print(\"The first item in the list is:\", first_item)\n    # print the value of the last item\n    print(\"The last item in the list is:\", last_item)\n    # print the value of the second item\n    print(\"The second item in the list is:\", second_item)\n    # print the value of the third item\n    print(\"The third item in the list is:\", third_item)\n    # print the value of the fourth item\n    print(\"The fourth item in the list is:\", fourth_item)\n    # print the value of the fifth item\n    print(\"The fifth item in the list is:\", fifth_item)\n    # print the value of the sixth item\n    print(\"The sixth item in the list is:\", sixth_item)\n    # print the value of the seventh item\n    print(\"The seventh item in the list is\n",
        "def main():\n    # create a list of items\n    items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get a reference to the last item in the list\n    last_item = items[-1]\n    # get the index of the last item in the list\n    last_item_index = items.index(last_item)\n    # get the index of the first item in the list\n    first_item_index = items.index(items[0])\n    # get the index of the second item in the list\n    second_item_index = items.index(items[1])\n    # get the index of the third item in the list\n    third_item_index = items.index(items[2])\n    # get the index of the fourth item in the list\n    fourth_item_index = items.index(items[3])\n    # get the index of the fifth item in the list\n    fifth_item_index = items.index(items[4])\n    # get the index of the sixth item in the list\n    sixth_item_index = items.index(items[5])\n    # get the index of the seventh item in the list\n    seventh_item_index = items.index(items[6])\n    # get the index of the eighth item in the list\n    eighth_item_index = items.index(items[7])\n    # get the index of the ninth item in the list\n    ninth_item_index = items.index(items[8])\n    # get the index of the tenth item in the list\n    tenth_item_index = items.index(items[9])\n    # print the results\n    print(\"The index of the last item is: {}\".format(last_item_index))\n    print(\"The index of the first item is: {}\".format(first_item_index))\n    print(\"The index of the second item is: {}\".format(second_item_index))\n    print(\"The index of the third item is: {}\".format(third_item_index))\n    print(\"The index of the fourth item is: {}\".format(fourth_item_index))\n    print(\"The\n",
        "def main():\n    # create a list of strings\n    cities = [\"New York City\", \"Los Angeles\", \"Chicago\", \"Mountain View\", \"Atlanta\"]\n    # create a variable to hold the index of the city\n    index = 0\n    # create a loop to print out the index and city\n    while index < len(cities):\n        print(\"{} is in index {}\".format(cities[index], index))\n        index += 1\n    # create a variable to hold the city to find\n    city = \"Los Angeles\"\n    # create a loop to find the index of the city\n    for i in range(len(cities)):\n        if cities[i] == city:\n            print(\"{} is in index {}\".format(city, i))\n            break\n    # create a variable to hold the city to find\n    city = \"Tokyo\"\n    # create a loop to find the index of the city\n    for i in range(len(cities)):\n        if cities[i] == city:\n            print(\"{} is in index {}\".format(city, i))\n            break\n    # create a variable to hold the city to find\n    city = \"New York City\"\n    # create a loop to find the index of the city\n    for i in range(len(cities)):\n        if cities[i] == city:\n            print(\"{} is in index {}\".format(city, i))\n            break\n    # create a variable to hold the city to find\n    city = \"Mountain View\"\n    # create a loop to find the index of the city\n    for i in range(len(cities)):\n        if cities[i] == city:\n            print(\"{} is in index {}\".format(city, i))\n            break\n    # create a variable to hold the city to find\n    city = \"Atlanta\"\n    # create a loop to find the index of the city\n    for i in range(len(cities)):\n        if cities[i] == city:\n            print(\"{} is in index {}\".format(city, i))\n            break\n    # create a variable to hold the city to find\n    city = \"Chicago\n"
    ],
    "results": 10
},{
    "id": "323",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert string to integers in python",
    "snippets": [
        "def main():\n    string = \"12345\"\n    print(int(string))\n    print(int(string, base=8))\n    print(int(string, base=16))\n    print(int(string, base=2))\n    print(int(string, base=10))\n    print(int(string, base=0))\n    print(int(string, base=2))\n    print(int(string, base=10))\n    print(int(string, base=16))\n    print(int(string, base=8))\n    print(int(string, base=0))\n    print(int(string, base=2))\n    print(int(string, base=10))\n    print(int(string, base=16))\n    print(int(string, base=8))\n    print(int(string, base=0))\n    print(int(string, base=2))\n    print(int(string, base=10))\n    print(int(string, base=16))\n    print(int(string, base=8))\n    print(int(string, base=0))\n    print(int(string, base=2))\n    print(int(string, base=10))\n    print(int(string, base=16))\n    print(int(string, base=8))\n    print(int(string, base=0))\n    print(int(string, base=2))\n    print(int(string, base=10))\n    print(int(string, base=16))\n    print(int(string, base=8))\n    print(int(string, base=0))\n    print(int(string, base=2))\n    print(int(string, base=10))\n    print(int(string, base=16))\n    print(int(string, base=8))\n    print(int(string, base=0))\n    print(int(string, base=2))\n    print(int(string, base=10))\n    print(int(string, base=16))\n    print(int(string, base=8))\n    print(int(string, base=0))\n",
        "def main():\n    # string to integer\n    print(int(\"123\"))\n    print(int(\"12345\"))\n    print(int(\"1234567\"))\n    print(int(\"123456789\"))\n    print(int(\"1234567890123456789\"))\n    print(int(\"12345678901234567890123456789\"))\n    print(int(\"123456789012345678901234567890123456789\"))\n    print(int(\"1234567890123456789012345678901234567890123456789\"))\n    print(int(\"12345678901234567890123456789012345678901234567890123456789\"))\n    print(int(\"123456789012345678901234567890123456789012345678901234567890123456789\"))\n    print(int(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789\"))\n    print(int(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\"))\n    print(int(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\"))\n    print(int(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\"))\n    print(int(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\"))\n",
        "def main():\n    # convert string to integer\n    # int(string)\n    # int(string, base)\n    # base is the base of the number\n    # base can be 2, 8, 10, 16\n    # if base is not specified, it is 10\n    # if base is not valid, it will raise an error\n    # if base is 10, it will convert to an integer\n    # if base is 2, it will convert to a binary number\n    # if base is 8, it will convert to an octal number\n    # if base is 16, it will convert to a hexadecimal number\n    # if base is not 10, it will convert to a string\n    # if base is 10, it will convert to a string\n    # if base is 2, it will convert to a string\n    # if base is 8, it will convert to a string\n    # if base is 16, it will convert to a string\n    # if base is not 10, it will convert to a string\n    # if base is 10, it will convert to a string\n    # if base is 2, it will convert to a string\n    # if base is 8, it will convert to a string\n    # if base is 16, it will convert to a string\n    # if base is not 10, it will convert to a string\n    # if base is 10, it will convert to a string\n    # if base is 2, it will convert to a string\n    # if base is 8, it will convert to a string\n    # if base is 16, it will convert to a string\n    # if base is not 10, it will convert to a string\n    # if base is 10, it will convert to a string\n    # if base is 2, it will convert to a string\n    # if base is 8, it will convert to a string\n    # if base is 16, it will convert to a string\n    # if base is not 10, it will convert to a string\n    # if base is 10, it will convert to a string\n    # if base is 2, it will convert to a string\n    # if base is 8, it will convert to a string\n    # if base is 16, it will convert to a string\n    # if base is not\n",
        "def main():\n    # convert string to integer\n    # int(string)\n    # int(string, base)\n    # base is the base of the number\n    # base can be 2, 8, 10, 16\n    # 2 is binary\n    # 8 is octal\n    # 10 is decimal\n    # 16 is hexadecimal\n    print(int(\"10\"))\n    print(int(\"10\", 2))\n    print(int(\"10\", 8))\n    print(int(\"10\", 10))\n    print(int(\"10\", 16))\n    print(int(\"10\", 36))\n    print(int(\"10\", 37))\n    print(int(\"10\", -2))\n    print(int(\"10\", -8))\n    print(int(\"10\", -10))\n    print(int(\"10\", -16))\n    print(int(\"10\", -36))\n    print(int(\"10\", -37))\n    print(int(\"10\", 0))\n    print(int(\"10\", 1))\n    print(int(\"10\", 2))\n    print(int(\"10\", 3))\n    print(int(\"10\", 4))\n    print(int(\"10\", 5))\n    print(int(\"10\", 6))\n    print(int(\"10\", 7))\n    print(int(\"10\", 8))\n    print(int(\"10\", 9))\n    print(int(\"10\", 10))\n    print(int(\"10\", 11))\n    print(int(\"10\", 12))\n    print(int(\"10\", 13))\n    print(int(\"10\", 14))\n    print(int(\"10\", 15))\n    print(int(\"10\", 16))\n    print(int(\"10\", 17))\n    print(int(\"10\", 18))\n    print(int(\"10\", 19))\n    print(int(\"10\", 20))\n    print(int(\"10\", 21))\n    print(int(\"10\", 22))\n    print(int(\"10\", 23))\n    print(int(\"10\", 24))\n    print(int(\"10\", 25))\n    print(int(\"10\", 26))\n    print(int(\"10\", 27))\n    print(int(\"10\", 28\n",
        "def main():\n    # convert string to integer\n    # use int() function\n    # int(string)\n    # int(string, base)\n    # base is the base of the number\n    # base is 10 by default\n    # if base is not 10, it will convert to base 16\n    # if base is not 10, it will convert to base 8\n    # if base is not 10, it will convert to base 2\n    # if base is not 10, it will convert to base 36\n    # if base is not 10, it will convert to base 64\n    # if base is not 10, it will convert to base 128\n    # if base is not 10, it will convert to base 256\n    # if base is not 10, it will convert to base 1024\n    # if base is not 10, it will convert to base 2048\n    # if base is not 10, it will convert to base 4096\n    # if base is not 10, it will convert to base 8192\n    # if base is not 10, it will convert to base 16384\n    # if base is not 10, it will convert to base 32768\n    # if base is not 10, it will convert to base 65536\n    # if base is not 10, it will convert to base 131072\n    # if base is not 10, it will convert to base 262144\n    # if base is not 10, it will convert to base 524288\n    # if base is not 10, it will convert to base 1048576\n    # if base is not 10, it will convert to base 2097152\n    # if base is not 10, it will convert to base 4194304\n    # if base is not 10, it will convert to base 8388608\n    # if base is not 10, it will convert to base 16777216\n    # if base is not 10, it will convert to base 33554432\n    # if base is not 10, it will convert to base 67108864\n    # if base is not 10, it will convert to base 134217728\n    # if base is not 10, it will convert to base 268435456\n    # if base is not 10, it will convert to base 536870912\n    # if base is not 10,\n",
        "def main():\n    # convert string to integer\n    # int(string)\n    # int(string, base)\n    # int(string, base, errors)\n    # int(string, base, errors, *, base=0)\n    # int(string, base, errors, *, base=0, allow_underscores=False)\n    # int(string, base, errors, *, base=0, allow_underscores=False, allow_trailing_underscore=False)\n    # int(string, base, errors, *, base=0, allow_underscores=False, allow_trailing_underscore=False, allow_sign=False)\n    # int(string, base, errors, *, base=0, allow_underscores=False, allow_trailing_underscore=False, allow_sign=False, allow_leading_zeroes=False)\n    # int(string, base, errors, *, base=0, allow_underscores=False, allow_trailing_underscore=False, allow_sign=False, allow_leading_zeroes=False, allow_trailing_zeroes=False)\n    # int(string, base, errors, *, base=0, allow_underscores=False, allow_trailing_underscore=False, allow_sign=False, allow_leading_zeroes=False, allow_trailing_zeroes=False, force_sign=False)\n    # int(string, base, errors, *, base=0, allow_underscores=False, allow_trailing_underscore=False, allow_sign=False, allow_leading_zeroes=False, allow_trailing_zeroes=False, force_sign=False, force_trailing_zeroes=False)\n    # int(string, base, errors, *, base=0, allow_underscores=False, allow_trailing_underscore=False, allow_sign=False, allow_leading_zeroes=False, allow_trailing_zeroes=False, force_sign=False, force_trailing_zeroes=False, allow_space=False)\n    # int(string, base, errors,\n",
        "def main():\n    # convert string to integer\n    # int(string)\n    # int(string, base)\n    # int(string, base, error)\n    # int(string, base, error, allow_underscores)\n    # int(string, base, error, allow_underscores, allow_trailing_junk)\n    # int(string, base, error, allow_underscores, allow_trailing_junk,\n    #     allow_sign)\n    # int(string, base, error, allow_underscores, allow_trailing_junk,\n    #     allow_sign, allow_leading_zeros)\n    # int(string, base, error, allow_underscores, allow_trailing_junk,\n    #     allow_sign, allow_leading_zeros, allow_trailing_zeros)\n    # int(string, base, error, allow_underscores, allow_trailing_junk,\n    #     allow_sign, allow_leading_zeros, allow_trailing_zeros,\n    #     allow_exponent)\n    # int(string, base, error, allow_underscores, allow_trailing_junk,\n    #     allow_sign, allow_leading_zeros, allow_trailing_zeros,\n    #     allow_exponent, allow_sign_exponent)\n    # int(string, base, error, allow_underscores, allow_trailing_junk,\n    #     allow_sign, allow_leading_zeros, allow_trailing_zeros,\n    #     allow_exponent, allow_sign_exponent, allow_sign_exponent_prefix)\n    # int(string, base, error, allow_underscores, allow_trailing_junk,\n    #     allow_sign, allow_leading_zeros, allow_trailing_zeros,\n    #     allow_exponent, allow_sign_exponent, allow_sign_exponent_prefix,\n    #     allow_sign_exponent_suffix)\n    # int(string, base, error, allow_underscores, allow_\n"
    ],
    "results": 7
},{
    "id": "324",
    "source": "soSearches",
    "language": "python",
    "query": "how to write python script for howering on an element",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    import time\n    import sys\n    import os\n    import subprocess\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import re\n    import json\n    import requests\n    import urllib3\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n",
        "def main():\n    import time\n    import os\n    import sys\n    import subprocess\n    import argparse\n    import logging\n    import logging.handlers\n    import datetime\n    import pytz\n    import re\n    import json\n    import requests\n    import urllib3\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import\n",
        "def main():\n    import time\n    import random\n    import webbrowser\n    import os\n    import sys\n    import pyperclip\n    import pyautogui\n    import subprocess\n    import tkinter as tk\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.font\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext\n    import tkinter.toplevel\n    import tkinter.ttk\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.font\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext\n    import tkinter.toplevel\n    import tkinter.ttk\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.font\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext\n    import tkinter.toplevel\n    import tkinter.ttk\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.font\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext\n    import tkinter.toplevel\n    import tkinter.ttk\n    import tkinter.messagebox\n    import tkinter.filedialog\n    import tkinter.simpledialog\n    import tkinter.colorchooser\n    import tkinter.font\n    import tkinter.ttk as ttk\n    import tkinter.scrolledtext\n    import tkinter.toplevel\n    import tkinter.tt\n"
    ],
    "results": 4
},{
    "id": "325",
    "source": "soSearches",
    "language": "python",
    "query": "how to print to screen in python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    print(\"Hello World\")\n    print(\"This is a test\")\n    print(\"This is another test\")\n    print(\"This is a third test\")\n    print(\"This is a fourth test\")\n    print(\"This is a fifth test\")\n    print(\"This is a sixth test\")\n    print(\"This is a seventh test\")\n    print(\"This is an eighth test\")\n    print(\"This is a ninth test\")\n    print(\"This is a tenth test\")\n    print(\"This is a eleventh test\")\n    print(\"This is a twelfth test\")\n    print(\"This is a thirteenth test\")\n    print(\"This is a fourteenth test\")\n    print(\"This is a fifteenth test\")\n    print(\"This is a sixteenth test\")\n    print(\"This is a seventeenth test\")\n    print(\"This is an eighteenth test\")\n    print(\"This is a nineteenth test\")\n    print(\"This is a twentieth test\")\n    print(\"This is a twenty-first test\")\n    print(\"This is a twenty-second test\")\n    print(\"This is a twenty-third test\")\n    print(\"This is a twenty-fourth test\")\n    print(\"This is a twenty-fifth test\")\n    print(\"This is a twenty-sixth test\")\n    print(\"This is a twenty-seventh test\")\n    print(\"This is a twenty-eighth test\")\n    print(\"This is a twenty-ninth test\")\n    print(\"This is a thirtieth test\")\n    print(\"This is a thirty-first test\")\n    print(\"This is a thirty-second test\")\n    print(\"This is a thirty-third test\")\n    print(\"This is a thirty-fourth test\")\n    print(\"This is a thirty-fifth test\")\n    print(\"This is a thirty-sixth test\")\n    print(\"This is a thirty-seventh test\")\n    print(\"This is a thirty-eighth test\")\n    print(\"This is a thirty-ninth test\")\n    print(\"This is a fourty-first test\")\n    print(\"This is a fourty-second test\")\n    print(\"This is a fourty-third test\")\n    print(\"This is a fourty\n"
    ],
    "results": 10
},{
    "id": "326",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert bytes into hex in python",
    "snippets": [
        "def bytes_to_hex(b):\n    return ''.join([\"%02x\" % x for x in b])\n",
        "def bytes_to_hex(b):\n    return ''.join([\"%02x\" % x for x in b]).strip()\n",
        "def bytes_to_hex(bytes):\n    return ''.join([\"%02x\" % b for b in bytes])\n",
        "def bytes_to_hex(b):\n    return ''.join([\"%02X\" % x for x in b]).strip()\n",
        "def hex_convert(bytes_data):\n    return bytes_data.hex()\n",
        "def hex_convert(b):\n    return b.hex()\n"
    ],
    "results": 10
},{
    "id": "327",
    "source": "soSearches",
    "language": "python",
    "query": "python how to change directory in the command line",
    "snippets": [
        "def main():\n    import os\n    os.chdir('/Users/jessica/Desktop/python_for_data_science')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/Users/jessica/Desktop/python_for_data_science/python_for_data_science_notes')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/Users/jessica/Desktop/python_for_data_science/python_for_data_science_notes/chapter_10')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/Users/jessica/Desktop/python_for_data_science/python_for_data_science_notes/chapter_10/10_1')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/Users/jessica/Desktop/python_for_data_science/python_for_data_science_notes/chapter_10/10_2')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/Users/jessica/Desktop/python_for_data_science/python_for_data_science_notes/chapter_10/10_3')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/Users/jessica/Desktop/python_for_data_science/python_for_data_science_notes/chapter_10/10_4')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/Users/jessica/Desktop/python_for_data_science/python_for_data_science_notes/chapter_10/10_5')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/Users/jessica/Desktop/python_for_data_science/python_for_data_science_notes/chapter\n",
        "def main():\n    import os\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8f8f8f8f\n",
        "def main():\n    import os\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-b8b8b8b8b\n",
        "def main():\n    import os\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f7f8f8f8f\n",
        "def main():\n    import os\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b8/data/')\n    print(os.getcwd())\n    print(os.listdir())\n    os.chdir('/home/student-02-f8b8f8b8b\n",
        "def main():\n    import os\n    os.chdir('/home/student-02-a8f8f8f8f8f8/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            for line in f:\n                if 'kind' in line.lower():\n                    print(line, end='')\n                    break\n    print('\\n')\n    os.chdir('/home/student-02-a8f8f8f8f8f8/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            for line in f:\n                if 'kind' in line.lower():\n                    print(line, end='')\n                    break\n    print('\\n')\n    os.chdir('/home/student-02-a8f8f8f8f8f8/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            for line in f:\n                if 'kind' in line.lower():\n                    print(line, end='')\n                    break\n    print('\\n')\n    os.chdir('/home/student-02-a8f8f8f8f8f8/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            for line in f:\n                if 'kind' in line.lower():\n                    print(line, end='')\n                    break\n    print('\\n')\n    os.chdir('/home/student-02-a8f8f8f8f8f8/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            for line in f:\n                if 'kind' in line.lower():\n                    print\n",
        "def main():\n    print(os.getcwd())\n    os.chdir('/home/student-03-c8f8f8f8f8f8/supplier-data/descriptions')\n    print(os.getcwd())\n    for filename in os.listdir('.'):\n        if filename.endswith('.txt'):\n            print(filename)\n            os.rename(filename, filename.replace('-', '_').replace(' ', '_'))\n    print(os.getcwd())\n    os.chdir('/home/student-03-c8f8f8f8f8f8/supplier-data/descriptions')\n    print(os.getcwd())\n    for filename in os.listdir('.'):\n        if filename.endswith('.txt'):\n            print(filename)\n            os.rename(filename, filename.replace('-', '_').replace(' ', '_'))\n    print(os.getcwd())\n    os.chdir('/home/student-03-c8f8f8f8f8f8/supplier-data/descriptions')\n    print(os.getcwd())\n    for filename in os.listdir('.'):\n        if filename.endswith('.txt'):\n            print(filename)\n            os.rename(filename, filename.replace('-', '_').replace(' ', '_'))\n    print(os.getcwd())\n    os.chdir('/home/student-03-c8f8f8f8f8f8/supplier-data/descriptions')\n    print(os.getcwd())\n    for filename in os.listdir('.'):\n        if filename.endswith('.txt'):\n            print(filename)\n            os.rename(filename, filename.replace('-', '_').replace(' ', '_'))\n    print(os.getcwd())\n    os.chdir('/home/student-03-c8f8f8f8f8f8/supplier-data/descriptions')\n    print\n",
        "def main():\n    import os\n    os.chdir('/home/student-02-b4f8f8f8f8d9/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        if filename.endswith('.txt'):\n            print(filename)\n            with open(filename) as f:\n                for line in f:\n                    if ':' in line:\n                        print(line, end='')\n",
        "def main():\n    import os\n    os.chdir('/home/student-03-b7f8f8c8f8d8/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            for line in f:\n                if 'kind' in line.lower():\n                    print(line)\n                    break\n",
        "def main():\n    import os\n    os.chdir('/home/student-03-8b8f8f8d9c9d/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            print(f.read())\n            print('\\n')\n    os.chdir('/home/student-03-8b8f8f8d9c9d/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            print(f.read())\n            print('\\n')\n    os.chdir('/home/student-03-8b8f8f8d9c9d/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            print(f.read())\n            print('\\n')\n    os.chdir('/home/student-03-8b8f8f8d9c9d/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            print(f.read())\n            print('\\n')\n    os.chdir('/home/student-03-8b8f8f8d9c9d/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            print(f.read())\n            print('\\n')\n    os.chdir('/home/student-03-8b8f8f8d9c9d/supplier-data/descriptions')\n    for filename in os.listdir('.'):\n        print(filename)\n        with open(filename) as f:\n            print(f.read())\n            print('\\n')\n    os.chdir('/home/student-03-8b8f8\n"
    ],
    "results": 10
},{
    "id": "328",
    "source": "soSearches",
    "language": "python",
    "query": "how to get all possible permutations of a list’s elements? python",
    "snippets": [
        "def permutations(lst):\n    if len(lst) == 1:\n        return [lst]\n    else:\n        perms = []\n        for i in range(len(lst)):\n            x = lst[i]\n            rest = lst[:i] + lst[i+1:]\n            for p in permutations(rest):\n                perms.append([x] + p)\n        return perms\n",
        "def permutations(lst):\n    if len(lst) <= 1:\n        return [lst]\n    else:\n        l = []\n        for i in range(len(lst)):\n            m = lst[i]\n            remlst = lst[:i] + lst[i+1:]\n            for p in permutations(remlst):\n                l.append([m] + p)\n        return l\n",
        "def permutations(lst):\n    if len(lst) <= 1:\n        return [lst]\n    perms = []\n    for i, l in enumerate(lst):\n        lst_copy = lst.copy()\n        lst_copy.pop(i)\n        for p in permutations(lst_copy):\n            perms.append([l] + p)\n    return perms\n",
        "def permutations(lst):\n    if len(lst) <= 1:\n        return [lst]\n    else:\n        perms = []\n        for i, l in enumerate(lst):\n            for p in permutations(lst[:i] + lst[i+1:]):\n                perms.append([l] + p)\n        return perms\n",
        "def permutations(lst):\n    if len(lst) <= 1:\n        return [lst]\n    perms = []\n    for i, l in enumerate(lst):\n        for p in permutations(lst[:i] + lst[i+1:]):\n            perms.append([l] + p)\n    return perms\n",
        "def permutations(lst):\n    if len(lst) <= 1:\n        return [lst]\n    perms = []\n    for i, el in enumerate(lst):\n        rest = lst[:i] + lst[i+1:]\n        for p in permutations(rest):\n            perms.append([el] + p)\n    return perms\n",
        "def permutations(lst):\n    if len(lst) <= 1:\n        return [lst]\n    return [lst[i:]] + [lst[:i]] + permutations(lst[:i] + lst[i + 1:])\n"
    ],
    "results": 10
},{
    "id": "329",
    "source": "soSearches",
    "language": "python",
    "query": "how to filter address of a folder in python",
    "snippets": [
        "def filter_address(address):\n    if address.startswith('/'):\n        return address\n    else:\n        return '/' + address\n",
        "def filter_address(address):\n    return address.split('/')[-1]\n"
    ],
    "results": 10
},{
    "id": "330",
    "source": "soSearches",
    "language": "python",
    "query": "how to extract a number from string in python",
    "snippets": [
        "def extract_number(string):\n    number = ''\n    for char in string:\n        if char.isdigit():\n            number += char\n        else:\n            break\n    return int(number)\n",
        "def extract_number(string):\n    number = ''\n    for char in string:\n        if char.isdigit():\n            number += char\n    return int(number)\n",
        "def extract_number(string):\n    number = ''\n    for char in string:\n        if char.isdigit():\n            number += char\n    return number\n",
        "def extract_number(string):\n    import re\n    return re.findall(r'\\d+', string)\n",
        "def extract_number(string):\n    number = ''\n    for i in string:\n        if i.isdigit():\n            number += i\n    return number\n",
        "def extract_number(string):\n    \"\"\"\n    extract a number from string\n    \"\"\"\n    import re\n    number = re.findall(r'\\d+', string)\n    return number[0]\n",
        "def extract_number(string):\n    try:\n        return int(string)\n    except ValueError:\n        return None\n",
        "def extract_number(string):\n    \"\"\"\n    Extract a number from a string.\n    \"\"\"\n    import re\n    number = re.findall(r'\\d+', string)\n    return number\n",
        "def extract_number(string):\n    \"\"\"\n    Extract a number from a string\n    \"\"\"\n    import re\n    number = re.findall(r'\\d+', string)\n    return number\n"
    ],
    "results": 10
},{
    "id": "331",
    "source": "soSearches",
    "language": "python",
    "query": "how to find the differences between current date and other date in python",
    "snippets": [
        "def diff_date(date1, date2):\n    date1 = datetime.strptime(date1, \"%Y-%m-%d\")\n    date2 = datetime.strptime(date2, \"%Y-%m-%d\")\n    return abs((date2 - date1).days)\n",
        "def diff_date(date1, date2):\n    date1 = datetime.strptime(date1, \"%Y-%m-%d\")\n    date2 = datetime.strptime(date2, \"%Y-%m-%d\")\n    return (date2 - date1).days\n",
        "def diff_date(date):\n    import datetime\n    today = datetime.date.today()\n    diff = today - date\n    return diff.days\n",
        "def main():\n    import datetime\n    import time\n    import calendar\n    import sys\n    import os\n    import argparse\n    import subprocess\n    import re\n    import shutil\n    import glob\n    import fnmatch\n    import pprint\n    import logging\n    import logging.handlers\n    import traceback\n    import collections\n    import itertools\n    import functools\n    import operator\n    import math\n    import csv\n    import json\n    import xml.etree.ElementTree as ET\n    import xml.dom.minidom as minidom\n    import xml.sax.saxutils as saxutils\n    import xml.dom.ext.reader.Sax2.fromDom as fromDom\n    import xml.dom.ext.reader.Sax2.fromFile as fromFile\n    import xml.dom.ext.reader.Sax2.fromString as fromString\n    import xml.dom.ext.reader.Sax2.fromStream as fromStream\n    import xml.dom.ext.reader.Sax2.fromFileNS as fromFileNS\n    import xml.dom.ext.reader.Sax2.fromStringNS as fromStringNS\n    import xml.dom.ext.reader.Sax2.fromStreamNS as fromStreamNS\n    import xml.dom.ext.reader.Sax2.fromDomNS as fromDomNS\n    import xml.dom.ext.reader.Sax2.fromFileNS as fromFileNS\n    import xml.dom.ext.reader.Sax2.fromStringNS as fromStringNS\n    import xml.dom.ext.reader.Sax2.fromStreamNS as fromStreamNS\n    import xml.dom.ext.reader.Sax2.fromFileNS as fromFileNS\n    import xml.dom.ext.reader.Sax2.fromStringNS as fromStringNS\n    import xml.dom.ext.reader.Sax2.fromStreamNS as fromStreamNS\n    import xml.dom.ext.reader.Sax2.fromDomNS as fromDomNS\n    import xml.dom.ext.reader.Sax2.fromFileNS as fromFileNS\n    import xml.dom.ext.reader.Sax2.fromStringNS as fromStringNS\n    import xml.\n",
        "def main():\n    import datetime\n    import time\n    import calendar\n    import sys\n    import os\n    import argparse\n    import re\n    import subprocess\n    import logging\n    import logging.handlers\n    import traceback\n    import getpass\n    import shutil\n    import json\n    import csv\n    import collections\n    import math\n    import random\n    import string\n    import itertools\n    import functools\n    import operator\n    import copy\n    import pickle\n    import inspect\n    import types\n    import pdb\n    import pprint\n    import cProfile\n    import tempfile\n    import webbrowser\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import http.client\n    import http.server\n    import socketserver\n    import xmlrpc.client\n    import xmlrpc.server\n    import jsonrpc.client\n    import jsonrpc.server\n    import http.client\n    import http.server\n    import socketserver\n    import xmlrpc.client\n    import xmlrpc.server\n    import jsonrpc.client\n    import jsonrpc.server\n    import http.client\n    import http.server\n    import socketserver\n    import xmlrpc.client\n    import xmlrpc.server\n    import jsonrpc.client\n    import jsonrpc.server\n    import http.client\n    import http.server\n    import socketserver\n    import xmlrpc.client\n    import xmlrpc.server\n    import jsonrpc.client\n    import jsonrpc.server\n    import http.client\n    import http.server\n    import socketserver\n    import xmlrpc.client\n    import xmlrpc.server\n    import jsonrpc.client\n    import jsonrpc.server\n    import http.client\n    import http.server\n    import socketserver\n    import xmlrpc.client\n    import xmlrpc.server\n    import jsonrpc.client\n    import jsonrpc.server\n    import http.client\n    import http.\n",
        "def main():\n    import datetime\n    import time\n    import calendar\n    import sys\n    import os\n    import re\n    import subprocess\n    import shutil\n    import glob\n    import getopt\n    import math\n    import numpy\n    import scipy\n    import matplotlib\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.cbook as cbook\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.mlab as mlab\n    import matplotlib.font_manager as font_manager\n    import matplotlib.ticker as ticker\n    import matplotlib.axis as maxis\n    import matplotlib.image as mimage\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.mlab as mlab\n    import matplotlib.font_manager as font_manager\n    import matplotlib.ticker as ticker\n    import matplotlib.axis as maxis\n    import matplotlib.image as mimage\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.lines as mlines\n    import matplotlib.patches as mpatches\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.mlab as mlab\n    import matplotlib.\n"
    ],
    "results": 10
},{
    "id": "332",
    "source": "soSearches",
    "language": "python",
    "query": "how to import multiple modulesin python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def main():\n    import sys\n    import os\n    import math\n    print(sys.path)\n    print(os.getcwd())\n    print(math.pi)\n    print(math.e)\n    print(math.sqrt(25))\n    print(math.sin(math.pi/2))\n    print(math.cos(math.pi/2))\n    print(math.tan(math.pi/2))\n    print(math.asin(math.sin(math.pi/2)))\n    print(math.acos(math.cos(math.pi/2)))\n    print(math.atan(math.tan(math.pi/2)))\n    print(math.atan2(1,1))\n    print(math.degrees(math.pi))\n    print(math.radians(180))\n    print(math.hypot(3,4))\n    print(math.sinh(math.pi/2))\n    print(math.cosh(math.pi/2))\n    print(math.tanh(math.pi/2))\n    print(math.asinh(math.sinh(math.pi/2)))\n    print(math.acosh(math.cosh(math.pi/2)))\n    print(math.atanh(math.tanh(math.pi/2)))\n    print(math.log(math.e))\n    print(math.log10(math.e))\n    print(math.log1p(math.e))\n    print(math.exp(math.e))\n    print(math.expm1(math.e))\n    print(math.erf(math.e))\n    print(math.erfc(math.e))\n    print(math.gamma(math.e))\n    print(math.lgamma(math.e))\n    print(math.ceil(math.e))\n    print(math.floor(math.e))\n    print(math.trunc(math.e))\n    print(math.sqrt(math.e))\n    print(math.isnan(math.e))\n    print(math.\n",
        "def main():\n    import sys\n    import os\n    import time\n    import random\n    import math\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.image as mpimg\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.text as mtext\n    import matplotlib.ticker as ticker\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.colorbar as colorbar\n    import matplotlib.gridspec as gridspec\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_gtkagg as gtkagg\n    import matplotlib.backends.backend_wxagg as wxagg\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_template as template\n    import matplotlib.backends.backend_emf as emf\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_pgf as pgf\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_template as template\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.\n",
        "def main():\n    import sys\n    import os\n    import time\n    import random\n    import math\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import matplotlib.text as text\n    import matplotlib.font_manager as font_manager\n    import matplotlib.ticker as ticker\n    import matplotlib.cbook as cbook\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_pgf as pgf\n    import matplotlib.backends.backend_gtk3agg as gtk3agg\n    import matplotlib.backends.backend_gtk3cairo as gtk3cairo\n    import matplotlib.backends.backend_gtkagg as gtkagg\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_cocoaagg as cocoaagg\n    import matplotlib.backends.backend_emf as emf\n    import matplotlib.\n",
        "def main():\n    import sys\n    import os\n    import random\n    import time\n    import datetime\n    import math\n    import cmath\n    import numpy\n    import scipy\n    import matplotlib\n    import matplotlib.pyplot as plt\n    import pandas\n    import sympy\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n    import scipy as sp\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    import sympy as sym\n    import numpy as np\n"
    ],
    "results": 6
},{
    "id": "333",
    "source": "soSearches",
    "language": "python",
    "query": "how to get numpy module in python",
    "snippets": [
        "def main():\n    import numpy as np\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__all__)\n    print(np.__doc__)\n    print(np.__name__)\n    print(np.__author__)\n    print(np.__author__)\n    print(np.__copyright__)\n    print(np.__license__)\n    print(np.__loader__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached__)\n    print(np.__spec__)\n    print(np.__debug__)\n    print(np.__file__)\n    print(np.__cached\n",
        "def main():\n    import numpy as np\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n",
        "def main():\n    import numpy as np\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__name__)\n    print(np.__package__)\n    print(np.__loader__)\n    print(np.__spec__)\n    print(np.__cached__)\n    print(np.__file__)\n    print(np.__builtin__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__spec__)\n    print(np.__file__)\n    print(np.__builtin__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__spec__)\n    print(np.__file__)\n    print(np.__builtin__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__spec__)\n    print(np.__file__)\n    print(np.__builtin__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__spec__)\n    print(np.__file__)\n    print(np.__builtin__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__spec__)\n    print(np.__file__)\n    print(np.__builtin__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__spec__)\n    print(np.__file__)\n    print(np.__builtin__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__spec__)\n    print(np.__file__)\n    print(np.__builtin__)\n    print(np.__cached__)\n    print\n",
        "def main():\n    import numpy as np\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__author__)\n    print(np.__credits__)\n    print(np.__license__)\n    print(np.__copyright__)\n    print(np.__status__)\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__author__)\n    print(np.__credits__)\n    print(np.__license__)\n    print(np.__copyright__)\n    print(np.__status__)\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__author__)\n    print(np.__credits__)\n    print(np.__license__)\n    print(np.__copyright__)\n    print(np.__status__)\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__author__)\n    print(np.__credits__)\n    print(np.__license__)\n    print(np.__copyright__)\n    print(np.__status__)\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__author__)\n    print(np.__credits__)\n    print(np.__license__)\n",
        "def main():\n    import numpy as np\n    print(np.__version__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__spec__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__debug__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__spec__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__debug__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__spec__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__debug__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__spec__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__debug__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__spec__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__debug__)\n    print(np.__doc__)\n    print(np.__all__)\n    print(np.__file__)\n    print(np.__path__)\n    print(np.__spec__)\n    print(np.__cached__)\n    print(np.__loader__)\n    print(np.__debug__)\n    print(np.__doc__)\n    print(\n",
        "def main():\n    import numpy as np\n    a = np.array([1, 2, 3, 4, 5])\n    print(a)\n    print(a.shape)\n    print(a.dtype)\n    print(a.ndim)\n    print(a.itemsize)\n    print(a.size)\n    print(a.nbytes)\n    print(a.data)\n    print(a.flags)\n    print(a.strides)\n    print(a\n"
    ],
    "results": 8
},{
    "id": "334",
    "source": "soSearches",
    "language": "python",
    "query": "how to create a report in python",
    "snippets": [
        "def main():\n    # create a list of strings\n    names = ['John', 'Paul', 'George', 'Ringo']\n    # create a list of integers\n    numbers = [1, 2, 3, 4]\n    # create a list of floats\n    floats = [1.1, 2.2, 3.3, 4.4]\n    # create a list of mixed data types\n    mixed = [1, 'two', 3.0, 'four']\n    # create a list of lists\n    nested = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    # create a list of tuples\n    tuples = [(1, 2, 3), (4, 5, 6), (7, 8, 9)]\n    # create a list of dictionaries\n    dictionaries = [{'name': 'John', 'age': 30}, {'name': 'Paul', 'age': 35}, {'name': 'George', 'age': 40}, {'name': 'Ringo', 'age': 45}]\n    # create a list of functions\n    functions = [lambda x: x + 1, lambda x: x * 2, lambda x: x ** 3]\n    # create a list of classes\n    classes = [Person('John', 30), Person('Paul', 35), Person('George', 40), Person('Ringo', 45)]\n    # create a list of objects\n    objects = [Object('John', 30), Object('Paul', 35), Object('George', 40), Object('Ringo', 45)]\n    # create a list of booleans\n    booleans = [True, False, True, False]\n    # create a list of None\n    none = [None, None, None, None]\n    # create a list of bytes\n    bytes = [b'John', b'Paul', b'George', b'Ringo']\n    # create a list of bytes\n    bytes = [b'John', b'Paul', b'George', b'Ringo']\n    # create a list of strings\n    strings = ['John', 'Paul', 'George', 'Ringo']\n    # create a list of strings\n    strings = ['John', 'Paul\n",
        "def main():\n    # create a list of strings\n    my_list = [\"hello\", \"world\", \"how\", \"are\", \"you\"]\n    # create a list of integers\n    my_list2 = [1, 2, 3, 4, 5]\n    # create a list of floats\n    my_list3 = [1.1, 2.2, 3.3, 4.4, 5.5]\n    # create a list of mixed data types\n    my_list4 = [\"hello\", 1, 2.2, True, 5]\n    # create a list of mixed data types\n    my_list5 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list6 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list7 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list8 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list9 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list10 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list11 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list12 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list13 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list14 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list15 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list16 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n    my_list17 = [1, 2, 3, 4, 5]\n    # create a list of mixed data types\n",
        "def main():\n    # create a list of strings\n    # each string is a line of text\n    # each string is a paragraph\n    # each paragraph is a list of strings\n    # each list of strings is a list of paragraphs\n    # each list of paragraphs is a list of lists of strings\n    # each list of lists of strings is a list of lists of paragraphs\n    # each list of lists of paragraphs is a list of lists of lists of strings\n    # each list of lists of lists of strings is a list of lists of lists of paragraphs\n    # each list of lists of lists of paragraphs is a list of lists of lists of lists of strings\n    # each list of lists of lists of lists of strings is a list of lists of lists of lists of paragraphs\n    # each list of lists of lists of lists of paragraphs is a list of lists of lists of lists of lists of strings\n    # each list of lists of lists of lists of lists of strings is a list of lists of lists of lists of lists of paragraphs\n    # each list of lists of lists of lists of lists of paragraphs is a list of lists of lists of lists of lists of lists of strings\n    # each list of lists of lists of lists of lists of lists of strings is a list of lists of lists of lists of lists of lists of paragraphs\n    # each list of lists of lists of lists of lists of lists of paragraphs is a list of lists of lists of lists of lists of lists of lists of strings\n    # each list of lists of lists of lists of lists of lists of lists of strings is a list of lists of lists of lists of lists of lists of lists of paragraphs\n    # each list of lists of lists of lists of lists of lists of lists of paragraphs is a list of lists of lists of lists of lists of lists of lists of lists of strings\n    # each list of lists of lists of lists of lists of lists of lists of lists of strings is a list of lists of lists of lists of lists of lists of lists of lists of paragraphs\n    # each list of lists of lists of lists of lists of lists of lists of lists of strings is a list of lists of lists of lists of lists of lists of lists of lists of paragraphs\n    # each list of lists of lists of lists of lists of lists of lists of lists of strings is a list of lists of lists of lists of\n",
        "def main():\n    # create a list of strings\n    names = [\"John\", \"Bob\", \"Mary\", \"Tom\"]\n    # create a list of numbers\n    numbers = [1, 2, 3, 4]\n    # create a list of tuples\n    tuples = [(\"John\", 1), (\"Bob\", 2), (\"Mary\", 3), (\"Tom\", 4)]\n    # create a list of mixed data\n    mixed = [1, \"John\", \"Bob\", 2, \"Mary\", 3, \"Tom\", 4]\n    # create a list of lists\n    lists = [names, numbers, tuples, mixed]\n    # create a list of dictionaries\n    dicts = [{\"name\": \"John\", \"age\": 1}, {\"name\": \"Bob\", \"age\": 2}, {\"name\": \"Mary\", \"age\": 3}, {\"name\": \"Tom\", \"age\": 4}]\n    # create a list of reports\n    reports = [Report(name) for name in names]\n    # create a list of reports with age\n    reports_with_age = [Report(name, age) for name, age in tuples]\n    # create a list of reports with age and name\n    reports_with_age_and_name = [Report(name, age, name) for name, age in tuples]\n    # create a list of reports with age and name and address\n    reports_with_age_and_name_and_address = [Report(name, age, name, \"123 Main St.\") for name, age in tuples]\n    # create a list of reports with age and name and address and phone number\n    reports_with_age_and_name_and_address_and_phone = [Report(name, age, name, \"123 Main St.\", \"555-1212\") for name, age in tuples]\n    # create a list of reports with age and name and address and phone number and email\n    reports_with_age_and_name_and_address_and_phone_and_email = [Report(name, age, name, \"123 Main St.\", \"555-1212\", \"\n",
        "def main():\n    # create a list of strings\n    # each string is a line of the report\n    report_lines = []\n    report_lines.append(\"Daily Report\")\n    report_lines.append(\"\")\n    report_lines.append(\"Name: \" + name)\n    report_lines.append(\"Age: \" + str(age))\n    report_lines.append(\"Job: \" + job)\n    report_lines.append(\"\")\n    report_lines.append(\"Today's date: \" + str(date))\n    report_lines.append(\"\")\n    report_lines.append(\"Your job is to: \" + job_description)\n    report_lines.append(\"\")\n    report_lines.append(\"Today's weather: \" + weather)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's forecast: \" + forecast)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's weather: \" + tomorrow_weather)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's forecast: \" + tomorrow_forecast)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's weather: \" + tomorrow_weather)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's forecast: \" + tomorrow_forecast)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's weather: \" + tomorrow_weather)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's forecast: \" + tomorrow_forecast)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's weather: \" + tomorrow_weather)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's forecast: \" + tomorrow_forecast)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's weather: \" + tomorrow_weather)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's forecast: \" + tomorrow_forecast)\n    report_lines.append(\"\")\n    report_lines.append(\"Tomorrow's weather: \" + tomorrow_weather)\n",
        "def main():\n    # create a list of strings\n    # each string is a line of the report\n    report_lines = []\n    report_lines.append(\"Spam eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report_lines.append(\"Toast and Jam\")\n    report_lines.append(\"Bacon and Eggs\")\n    report_lines.append(\"Ham and Eggs\")\n    report\n",
        "def main():\n    # create a report for a list of students\n    report_header = \"Student Report\"\n    # create a list of students\n    students = [\n        (\"Sally\", \"English\", 70),\n        (\"Bob\", \"Math\", 75),\n        (\"Sue\", \"Biology\", 80),\n        (\"Jane\", \"History\", 90),\n        (\"Joe\", \"Science\", 100),\n    ]\n    # print the header\n    print(report_header)\n    # print the header as a separator\n    print(\"-\" * len(report_header))\n    # print the list of students\n    for student in students:\n        print_student_report(student)\n    # print the footer\n    print(\"-\" * len(report_header))\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n    # print the footer\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n    # print the footer\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n    # print the footer\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n    # print the footer\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n    # print the footer\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n    # print the footer\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n    # print the footer\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n    # print the footer\n    print(\"Finished\")\n    # print the footer as a separator\n    print(\"-\" * len(report_header))\n",
        "def main():\n    # create a report for a store\n    # create a list of items\n    items = [('jacket', 12), ('t-shirt', 10), ('shorts', 8), ('socks', 4)]\n    # create a header for the report\n    header = '{:<20} {:<10}'.format('Item', 'Price')\n    # create a footer for the report\n    footer = '{:<20} {:<10}'.format('Total', '$0.00')\n    # create a report\n    report = '{}\\n{}\\n{}\\n{}'.format(header, *items, footer)\n    # print the report\n    print(report)\n    # create a report for a store\n    # create a list of items\n    items = [('jacket', 12), ('t-shirt', 10), ('shorts', 8), ('socks', 4)]\n    # create a header for the report\n    header = '{:<20} {:<10}'.format('Item', 'Price')\n    # create a footer for the report\n    footer = '{:<20} {:<10}'.format('Total', '$0.00')\n    # create a report\n    report = '{}\\n{}\\n{}\\n{}'.format(header, *items, footer)\n    # print the report\n    print(report)\n    # create a report for a store\n    # create a list of items\n    items = [('jacket', 12), ('t-shirt', 10), ('shorts', 8), ('socks', 4)]\n    # create a header for the report\n    header = '{:<20} {:<10}'.format('Item', 'Price')\n    # create a footer for the report\n    footer = '{:<20} {:<10}'.format('Total', '$0.00')\n    # create a report\n    report = '{}\\n{}\\n{}\\n{}'.format(header, *items, footer)\n    # print the report\n    print(report)\n    # create a report for a store\n    # create a list of items\n    items\n"
    ],
    "results": 8
},{
    "id": "335",
    "source": "soSearches",
    "language": "python",
    "query": "how to remove same columns in dataframe python",
    "snippets": [
        "def remove_same_columns(df):\n    df = df.T\n    df = df.drop_duplicates(keep='first')\n    df = df.T\n    return df\n",
        "def remove_same_columns(df):\n    df = df.T\n    df = df.drop_duplicates()\n    df = df.T\n    return df\n",
        "def remove_same_columns(df):\n    return df.drop_duplicates(subset=df.columns, keep='first')\n",
        "def remove_same_columns(df):\n    return df.drop_duplicates(subset=None, keep='first')\n",
        "def remove_same_columns(df):\n    df.drop(df.columns[[0, 1]], axis=1, inplace=True)\n    return df\n",
        "def remove_same_columns(df):\n    df = df.drop(df.columns[[0, 1]], axis=1)\n    return df\n",
        "def remove_same_columns(df):\n    df = df.loc[:, ~df.columns.duplicated()]\n    return df\n"
    ],
    "results": 10
},{
    "id": "336",
    "source": "soSearches",
    "language": "python",
    "query": "how to substitute a  integer for an alphabet algebric expressionin python",
    "snippets": [
        "def main():\n    a = 'a'\n    b = 'b'\n    c = 'c'\n    d = 'd'\n    e = 'e'\n    f = 'f'\n    g = 'g'\n    h = 'h'\n    i = 'i'\n    j = 'j'\n    k = 'k'\n    l = 'l'\n    m = 'm'\n    n = 'n'\n    o = 'o'\n    p = 'p'\n    q = 'q'\n    r = 'r'\n    s = 's'\n    t = 't'\n    u = 'u'\n    v = 'v'\n    w = 'w'\n    x = 'x'\n    y = 'y'\n    z = 'z'\n    a1 = 'A'\n    b1 = 'B'\n    c1 = 'C'\n    d1 = 'D'\n    e1 = 'E'\n    f1 = 'F'\n    g1 = 'G'\n    h1 = 'H'\n    i1 = 'I'\n    j1 = 'J'\n    k1 = 'K'\n    l1 = 'L'\n    m1 = 'M'\n    n1 = 'N'\n    o1 = 'O'\n    p1 = 'P'\n    q1 = 'Q'\n    r1 = 'R'\n    s1 = 'S'\n    t1 = 'T'\n    u1 = 'U'\n    v1 = 'V'\n    w1 = 'W'\n    x1 = 'X'\n    y1 = 'Y'\n    z1 = 'Z'\n    a2 = 'a'\n    b2 = 'b'\n    c2 = 'c'\n    d2 = 'd'\n    e2 = 'e'\n    f2 = 'f'\n    g2 = 'g'\n    h2 = 'h'\n    i2 = 'i'\n    j2 = 'j'\n    k2 = 'k'\n    l2 = 'l'\n    m2 = 'm'\n    n\n",
        "def main():\n    a = 'a'\n    b = 'b'\n    c = 'c'\n    d = 'd'\n    e = 'e'\n    f = 'f'\n    g = 'g'\n    h = 'h'\n    i = 'i'\n    j = 'j'\n    k = 'k'\n    l = 'l'\n    m = 'm'\n    n = 'n'\n    o = 'o'\n    p = 'p'\n    q = 'q'\n    r = 'r'\n    s = 's'\n    t = 't'\n    u = 'u'\n    v = 'v'\n    w = 'w'\n    x = 'x'\n    y = 'y'\n    z = 'z'\n    a_ = 'A'\n    b_ = 'B'\n    c_ = 'C'\n    d_ = 'D'\n    e_ = 'E'\n    f_ = 'F'\n    g_ = 'G'\n    h_ = 'H'\n    i_ = 'I'\n    j_ = 'J'\n    k_ = 'K'\n    l_ = 'L'\n    m_ = 'M'\n    n_ = 'N'\n    o_ = 'O'\n    p_ = 'P'\n    q_ = 'Q'\n    r_ = 'R'\n    s_ = 'S'\n    t_ = 'T'\n    u_ = 'U'\n    v_ = 'V'\n    w_ = 'W'\n    x_ = 'X'\n    y_ = 'Y'\n    z_ = 'Z'\n    a__ = 'a'\n    b__ = 'b'\n    c__ = 'c'\n    d__ = 'd'\n    e__ = 'e'\n    f__ = 'f'\n    g__ = 'g'\n    h__ = 'h'\n    i__ = 'i'\n    j__ = 'j'\n    k__ = 'k'\n    l__ = 'l'\n    m__ = 'm'\n    n\n",
        "def main():\n    a = 'a'\n    b = 'b'\n    c = 'c'\n    d = 'd'\n    e = 'e'\n    f = 'f'\n    g = 'g'\n    h = 'h'\n    i = 'i'\n    j = 'j'\n    k = 'k'\n    l = 'l'\n    m = 'm'\n    n = 'n'\n    o = 'o'\n    p = 'p'\n    q = 'q'\n    r = 'r'\n    s = 's'\n    t = 't'\n    u = 'u'\n    v = 'v'\n    w = 'w'\n    x = 'x'\n    y = 'y'\n    z = 'z'\n    print(a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z)\n    print(a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z)\n    print(a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z)\n    print(a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z)\n    print(a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z)\n    print(a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p\n",
        "def main():\n    a = 'a'\n    b = 'b'\n    c = 'c'\n    d = 'd'\n    e = 'e'\n    f = 'f'\n    g = 'g'\n    h = 'h'\n    i = 'i'\n    j = 'j'\n    k = 'k'\n    l = 'l'\n    m = 'm'\n    n = 'n'\n    o = 'o'\n    p = 'p'\n    q = 'q'\n    r = 'r'\n    s = 's'\n    t = 't'\n    u = 'u'\n    v = 'v'\n    w = 'w'\n    x = 'x'\n    y = 'y'\n    z = 'z'\n    alpha = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]\n    num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]\n    print('Enter a number between 1 and 26')\n    num = int(input())\n    print('The alphabetic expression is:')\n    print(alpha[num - 1])\n",
        "def main():\n    a = \"a\"\n    b = \"b\"\n    c = \"c\"\n    d = \"d\"\n    e = \"e\"\n    f = \"f\"\n    g = \"g\"\n    h = \"h\"\n    i = \"i\"\n    j = \"j\"\n    k = \"k\"\n    l = \"l\"\n    m = \"m\"\n    n = \"n\"\n    o = \"o\"\n    p = \"p\"\n    q = \"q\"\n    r = \"r\"\n    s = \"s\"\n    t = \"t\"\n    u = \"u\"\n    v = \"v\"\n    w = \"w\"\n    x = \"x\"\n    y = \"y\"\n    z = \"z\"\n    a1 = \"A\"\n    b1 = \"B\"\n    c1 = \"C\"\n    d1 = \"D\"\n    e1 = \"E\"\n    f1 = \"F\"\n    g1 = \"G\"\n    h1 = \"H\"\n    i1 = \"I\"\n    j1 = \"J\"\n    k1 = \"K\"\n    l1 = \"L\"\n    m1 = \"M\"\n    n1 = \"N\"\n    o1 = \"O\"\n    p1 = \"P\"\n    q1 = \"Q\"\n    r1 = \"R\"\n    s1 = \"S\"\n    t1 = \"T\"\n    u1 = \"U\"\n    v1 = \"V\"\n    w1 = \"W\"\n    x1 = \"X\"\n    y1 = \"Y\"\n    z1 = \"Z\"\n    a2 = \"a\"\n    b2 = \"b\"\n    c2 = \"c\"\n    d2 = \"d\"\n    e2 = \"e\"\n    f2 = \"f\"\n    g2 = \"g\"\n    h2 = \"h\"\n    i2 = \"i\"\n    j2 = \"j\"\n    k2 = \"k\"\n    l2 = \"l\"\n    m2 = \"m\"\n    n\n",
        "def main():\n    print(\"This program converts a number to a string of digits.\")\n    print(\"Please enter a number between 1 and 26:\")\n    number = int(input())\n    if number < 1 or number > 26:\n        print(\"Please enter a number between 1 and 26.\")\n        number = int(input())\n    print(\"The number\", number, \"in letters is:\", end=\" \")\n    convert(number)\n    print()\n    print(\"The number\", number, \"in digits is:\", end=\" \")\n    convert2(number)\n    print()\n    print(\"The number\", number, \"in hex is:\", end=\" \")\n    convert3(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert4(number)\n    print()\n    print(\"The number\", number, \"in octal is:\", end=\" \")\n    convert5(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert6(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert7(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert8(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert9(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert10(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert11(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert12(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert13(number)\n    print()\n    print(\"The number\", number, \"in binary is:\", end=\" \")\n    convert14(number)\n    print()\n    print(\"The number\", number\n",
        "def main():\n    print(\"This program converts a number to a string of digits.\")\n    print(\"Please enter a number between 0 and 99:\")\n    num = int(input())\n    if num < 0 or num > 99:\n        print(\"Please enter a number between 0 and 99.\")\n        num = int(input())\n    print(num_to_string(num))\n",
        "def main():\n    print(\"Enter a number: \")\n    num = int(input())\n    print(\"Enter a letter: \")\n    letter = input()\n    print(\"The letter\", letter, \"is\", num)\n"
    ],
    "results": 10
},{
    "id": "337",
    "source": "soSearches",
    "language": "python",
    "query": "how to make python programs excuteble",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n"
    ],
    "results": 8
},{
    "id": "338",
    "source": "soSearches",
    "language": "python",
    "query": "how to write to a csv file python",
    "snippets": [
        "def main():\n    # open the csv file for writing\n    f = open(\"data.csv\", \"w\")\n    # create the csv writer object\n    writer = csv.writer(f)\n    # write the header row\n    writer.writerow((\"name\", \"age\", \"job\"))\n    # write the data rows\n    writer.writerow((\"Bob\", \"20\", \"dev\"))\n    writer.writerow((\"Sue\", \"30\", \"retired\"))\n    writer.writerow((\"Jane\", \"40\", \"dev\"))\n    # close the file\n    f.close()\n    print(\"data.csv written successfully\")\n",
        "def main():\n    # open the csv file for writing\n    f = open(\"data.csv\", \"w\")\n    # create the csv writer object\n    writer = csv.writer(f)\n    # write the header row\n    writer.writerow((\"name\", \"age\", \"job\"))\n    # write the data rows\n    writer.writerow((\"Bob\", \"20\", \"dev\"))\n    writer.writerow((\"Sue\", \"40\", \"retired\"))\n    writer.writerow((\"Jane\", \"50\", \"dev\"))\n    # close the file\n    f.close()\n    print(\"Done\")\n",
        "def main():\n    # open the csv file for writing\n    f = open(\"data.csv\", \"w\")\n    # create the csv writer object\n    writer = csv.writer(f)\n    # write the header row\n    writer.writerow([\"name\", \"age\", \"job\"])\n    # write the data rows\n    writer.writerow([\"Bill\", \"35\", \"programmer\"])\n    writer.writerow([\"Steve\", \"30\", \"gardener\"])\n    writer.writerow([\"John\", \"25\", \"retired\"])\n    # close the file\n    f.close()\n    # open the csv file for reading\n    f = open(\"data.csv\", \"r\")\n    # create the csv reader object\n    reader = csv.reader(f)\n    # read the header row\n    header = next(reader)\n    # read the data rows\n    for row in reader:\n        print(row)\n    # close the file\n    f.close()\n",
        "def main():\n    # open the csv file for writing\n    f = open(\"data.csv\", \"w\")\n    # create the csv writer object\n    writer = csv.writer(f)\n    # write the header row\n    writer.writerow([\"name\", \"age\", \"job\"])\n    # write the data rows\n    writer.writerow([\"Bill\", \"48\", \"Retired\"])\n    writer.writerow([\"Sue\", \"50\", \"Student\"])\n    writer.writerow([\"Jane\", \"52\", \"Retired\"])\n    # close the file\n    f.close()\n    print(\"Data written to file\")\n",
        "def main():\n    # open the csv file for writing\n    f = open(\"data.csv\", \"w\")\n    # create the csv writer object\n    csvwriter = csv.writer(f)\n    # write the header row\n    csvwriter.writerow([\"name\", \"age\", \"job\"])\n    # write the data rows\n    csvwriter.writerow([\"Bob\", \"20\", \"dev\"])\n    csvwriter.writerow([\"Sue\", \"30\", \"art\"])\n    csvwriter.writerow([\"Joe\", \"40\", \"admin\"])\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"data.csv\", \"r\")\n    # create the csv reader object\n    csvreader = csv.reader(f)\n    # read the header row\n    headerrow = next(csvreader)\n    # print the header row data\n    print(headerrow)\n    # read the data rows\n    for row in csvreader:\n        print(row)\n    # close the file\n    f.close()\n",
        "def main():\n    # open the csv file for writing\n    f = open(\"data.csv\", \"w\")\n    # create the csv writer object\n    writer = csv.writer(f)\n    # writerow is a method of the csv writer object\n    writer.writerow([\"spam\", \"eggs\", \"toast\"])\n    writer.writerow([\"bacon\", \"toast\", \"eggs\"])\n    writer.writerow([\"toast\", \"bacon\", \"spam\"])\n    # close the csv file\n    f.close()\n",
        "def write_to_csv(filename, data):\n    with open(filename, 'w') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(data)\n",
        "def main():\n    with open('data.csv', 'w') as f:\n        f.write('name, age, height\\n')\n        f.write('Bob, 20, 6\\'2\"\\n')\n        f.write('Alice, 18, 5\\'4\"\\n')\n        f.write('Joe, 25, 6\\'1\"\\n')\n        f.write('Mary, 19, 5\\'5\"\\n')\n        f.write('John, 21, 5\\'11\"\\n')\n        f.write('Jane, 20, 5\\'7\"\\n')\n        f.write('Mark, 22, 5\\'10\"\\n')\n        f.write('Linda, 21, 5\\'6\"\\n')\n        f.write('Peter, 20, 5\\'9\"\\n')\n        f.write('Sue, 19, 5\\'5\"\\n')\n        f.write('Tom, 21, 5\\'8\"\\n')\n        f.write('Bob, 20, 6\\'2\"\\n')\n        f.write('Alice, 18, 5\\'4\"\\n')\n        f.write('Joe, 25, 6\\'1\"\\n')\n        f.write('Mary, 19, 5\\'5\"\\n')\n        f.write('John, 21, 5\\'11\"\\n')\n        f.write('Jane, 20, 5\\'7\"\\n')\n        f.write('Mark, 22, 5\\'10\"\\n')\n        f.write('Linda, 21, 5\\'6\"\\n')\n        f.write('Peter, 20, 5\\'9\"\\n')\n        f.write('Sue, 19, 5\\'5\"\\n')\n        f.write('Tom, 21, 5\\'8\"\\n')\n        f.write('Bob, 20, 6\\'2\"\\n')\n        f.write('Alice, 18, 5\\'4\"\\n')\n        f.write('Joe, 25, 6\\'1\"\\n')\n        f.write('Mary, 19, 5\\'5\"\\n')\n        f.write('John, 21, 5\\'11\"\\n')\n        f.\n",
        "def main():\n    with open('mydata.csv', 'w') as f:\n        f.write('name,age,height\\n')\n        f.write('joe,12,5.10\\n')\n        f.write('jane,13,5.11\\n')\n        f.write('jim,14,5.12\\n')\n        f.write('jill,15,5.13\\n')\n        f.write('joe,16,5.14\\n')\n        f.write('jane,17,5.15\\n')\n        f.write('jim,18,5.16\\n')\n        f.write('jill,19,5.17\\n')\n        f.write('joe,20,5.18\\n')\n        f.write('jane,21,5.19\\n')\n        f.write('jim,22,5.20\\n')\n        f.write('jill,23,5.21\\n')\n        f.write('joe,24,5.22\\n')\n        f.write('jane,25,5.23\\n')\n        f.write('jim,26,5.24\\n')\n        f.write('jill,27,5.25\\n')\n        f.write('joe,28,5.26\\n')\n        f.write('jane,29,5.27\\n')\n        f.write('jim,30,5.28\\n')\n        f.write('jill,31,5.29\\n')\n        f.write('joe,32,5.30\\n')\n        f.write('jane,33,5.31\\n')\n        f.write('jim,34,5.32\\n')\n        f.write('jill,35,5.33\\n')\n        f.write('joe,36,5.34\\n')\n        f.write('jane,37,5.35\\n')\n        f.write('jim,38,5.36\\n')\n        f.write('jill\n",
        "def main():\n    # create a file object\n    outfile = open(\"data.csv\", \"w\")\n    # write some data to the file\n    outfile.write(\"name, age, job\\n\")\n    outfile.write(\"joe, 20, programmer\\n\")\n    outfile.write(\"jane, 21, retired\\n\")\n    outfile.write(\"jim, 22, student\\n\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"data.csv\", \"r\")\n    # read the data from the file\n    data = infile.read()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n"
    ],
    "results": 10
},{
    "id": "339",
    "source": "soSearches",
    "language": "python",
    "query": "how to read a random word from a txt file in python\\",
    "snippets": [
        "def read_random_word():\n    with open('words.txt', 'r') as f:\n        words = f.readlines()\n    return words[random.randint(0, len(words) - 1)].strip()\n",
        "def read_random_word():\n    with open(\"words.txt\", \"r\") as f:\n        words = f.readlines()\n    return words[random.randint(0, len(words) - 1)].strip()\n",
        "def read_random_word():\n    with open(\"words.txt\") as f:\n        words = f.readlines()\n    return words[random.randint(0, len(words) - 1)].strip()\n",
        "def read_random_word():\n    with open('words.txt', 'r') as f:\n        words = f.readlines()\n        random_word = words[random.randint(0, len(words) - 1)]\n        return random_word.strip()\n",
        "def read_random_word():\n    with open('words.txt') as f:\n        words = f.read().splitlines()\n    return random.choice(words)\n",
        "def main():\n    with open('words.txt', 'r') as f:\n        words = f.readlines()\n    print(words[random.randint(0, len(words) - 1)])\n",
        "def read_random_word():\n    with open('words.txt', 'r') as f:\n        words = f.read().splitlines()\n        random_word = random.choice(words)\n        return random_word\n",
        "def main():\n    with open('words.txt') as f:\n        words = f.read().splitlines()\n    print(words[random.randint(0, len(words) - 1)])\n"
    ],
    "results": 10
},{
    "id": "340",
    "source": "soSearches",
    "language": "python",
    "query": "how to determine someone age in python",
    "snippets": [
        "def age_in_seconds(age):\n    return age * 365 * 24 * 60 * 60\n",
        "def age_in_days(age):\n    return age * 365\n"
    ],
    "results": 10
},{
    "id": "341",
    "source": "soSearches",
    "language": "python",
    "query": "how to make a 3d game on python",
    "snippets": [
        "def main():\n    import pygame\n    import random\n    import math\n    import time\n    import sys\n    from pygame.locals import *\n    from OpenGL.GL import *\n    from OpenGL.GLU import *\n    from OpenGL.GLUT import *\n\n    pygame.init()\n    pygame.display.set_mode((800, 600), OPENGL | DOUBLEBUF)\n    gluPerspective(45, (800/600), 0.1, 50.0)\n    glTranslatef(0.0, 0.0, -5.0)\n    glRotatef(0.0, 0.0, 0.0, 1.0)\n    glClearColor(0.0, 0.0, 0.0, 0.0)\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)\n    glEnable(GL_DEPTH_TEST)\n    glEnable(GL_LIGHTING)\n    glEnable(GL_LIGHT0)\n    glEnable(GL_COLOR_MATERIAL)\n    glEnable(GL_NORMALIZE)\n    glEnable(GL_TEXTURE_2D)\n    glEnable(GL_BLEND)\n    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)\n    glMaterialfv(GL_FRONT, GL_SPECULAR, [0.0, 0.0, 0.0, 1.0])\n    glMaterialfv(GL_FRONT, GL_SHININESS, [0.0])\n    glMaterialfv(GL_FRONT, GL_AMBIENT_AND_DIFFUSE, [0.5, 0.5, 0.5, 1.0])\n    glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 0.0, 0.0, 1.0])\n    glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])\n    glLightfv(GL_LIGHT0, GL_\n",
        "def main():\n    import pygame\n    import math\n    import random\n    import time\n    import sys\n    import os\n    import numpy as np\n    import matplotlib.pyplot as plt\n    from pygame.locals import *\n    from OpenGL.GL import *\n    from OpenGL.GLU import *\n    from OpenGL.GLUT import *\n    from PIL import Image\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageChops\n    from PIL import ImageEnhance\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n    from PIL import ImageOps\n    from PIL import ImageColor\n    from PIL import ImageDraw\n    from PIL import ImageFont\n    from PIL import ImageFilter\n",
        "def main():\n    import pygame\n    import sys\n    import random\n    import math\n    import time\n    import os\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    from mpl_toolkits.mplot3d import Axes3D\n    from matplotlib import cm\n    from matplotlib.ticker import LinearLocator, FormatStrFormatter\n    from matplotlib.colors import ListedColormap\n    from mpl_toolkits.mplot3d.art3d import Poly3DCollection\n    from mpl_toolkits.mplot3d.art3d import Line3DCollection\n    from mpl_toolkits.mplot3d.art3d import Line3DCollection\n    from mpl_toolkits.mplot3d.art3d import Poly3DCollection\n    from mpl_toolkits.mplot3d.art3d import Line3DCollection\n    from mpl_toolkits.mplot3d.art3d import Poly3DCollection\n    from mpl_toolkits.mplot3d.art3d import Line3DCollection\n    from mpl_toolkits.mplot3d.art3d import Poly3DCollection\n    from mpl_toolkits.mplot3d.art3d import Line3DCollection\n    from mpl_toolkits.mplot3d.art3d import Poly3DCollection\n    from mpl_toolkits.mplot3d.art3d import Line3DCollection\n    from mpl_toolkits.mplot3d.art3d import Poly3DCollection\n    from mpl_toolkits.mplot3d.art3d import Line3DCollection\n    from mpl_toolkits.mplot3d.art3d import Poly3DCollection\n    from mpl_toolkits.mplot3d.art3d import Line3DCollection\n    from mpl_toolkits.mplot3d.art3d import Poly3DCollection\n    from mpl_toolkits.mplot3d\n"
    ],
    "results": 3
},{
    "id": "342",
    "source": "soSearches",
    "language": "python",
    "query": "how to format float in panda python",
    "snippets": [
        "def main():\n    print(\"{:.2f}\".format(3.1415926))\n    print(\"{:.3f}\".format(3.1415926))\n    print(\"{:.4f}\".format(3.1415926))\n    print(\"{:.5f}\".format(3.1415926))\n    print(\"{:.6f}\".format(3.1415926))\n    print(\"{:.7f}\".format(3.1415926))\n    print(\"{:.8f}\".format(3.1415926))\n    print(\"{:.9f}\".format(3.1415926))\n    print(\"{:.10f}\".format(3.1415926))\n    print(\"{:.11f}\".format(3.1415926))\n    print(\"{:.12f}\".format(3.1415926))\n    print(\"{:.13f}\".format(3.1415926))\n    print(\"{:.14f}\".format(3.1415926))\n    print(\"{:.15f}\".format(3.1415926))\n    print(\"{:.16f}\".format(3.1415926))\n    print(\"{:.17f}\".format(3.1415926))\n    print(\"{:.18f}\".format(3.1415926))\n    print(\"{:.19f}\".format(3.1415926))\n    print(\"{:.20f}\".format(3.1415926))\n    print(\"{:.21f}\".format(3.1415926))\n    print(\"{:.22f}\".format(3.1415926))\n    print(\"{:.23f}\".format(3.1415926))\n    print(\"{:.24f}\".format(3.1415926))\n    print(\"{:.25f}\".format(3.1415926))\n    print(\"{:.26f}\".format(3.1415926))\n    print(\"{:.27f}\".format(3.1415926))\n    print\n",
        "def main():\n    x = 1.23456789\n    print(format(x, '0.2f'))\n    print(format(x, '0.3f'))\n    print(format(x, '0.4f'))\n    print(format(x, '0.5f'))\n    print(format(x, '0.6f'))\n    print(format(x, '0.7f'))\n    print(format(x, '0.8f'))\n    print(format(x, '0.9f'))\n    print(format(x, '1.0f'))\n    print(format(x, '1.1f'))\n    print(format(x, '1.2f'))\n    print(format(x, '1.3f'))\n    print(format(x, '1.4f'))\n    print(format(x, '1.5f'))\n    print(format(x, '1.6f'))\n    print(format(x, '1.7f'))\n    print(format(x, '1.8f'))\n    print(format(x, '1.9f'))\n    print(format(x, '2.0f'))\n    print(format(x, '2.1f'))\n    print(format(x, '2.2f'))\n    print(format(x, '2.3f'))\n    print(format(x, '2.4f'))\n    print(format(x, '2.5f'))\n    print(format(x, '2.6f'))\n    print(format(x, '2.7f'))\n    print(format(x, '2.8f'))\n    print(format(x, '2.9f'))\n    print(format(x, '3.0f'))\n    print(format(x, '3.1f'))\n    print(format(x, '3.2f'))\n    print(format(x, '3.3f'))\n    print(format(x\n",
        "def main():\n    print(\"{:.2f}\".format(3.14159265))\n    print(\"{:.3f}\".format(3.14159265))\n    print(\"{:.4f}\".format(3.14159265))\n    print(\"{:.5f}\".format(3.14159265))\n    print(\"{:.6f}\".format(3.14159265))\n    print(\"{:.7f}\".format(3.14159265))\n    print(\"{:.8f}\".format(3.14159265))\n    print(\"{:.9f}\".format(3.14159265))\n    print(\"{:.10f}\".format(3.14159265))\n    print(\"{:.11f}\".format(3.14159265))\n    print(\"{:.12f}\".format(3.14159265))\n    print(\"{:.13f}\".format(3.14159265))\n    print(\"{:.14f}\".format(3.14159265))\n    print(\"{:.15f}\".format(3.14159265))\n    print(\"{:.16f}\".format(3.14159265))\n    print(\"{:.17f}\".format(3.14159265))\n    print(\"{:.18f}\".format(3.14159265))\n    print(\"{:.19f}\".format(3.14159265))\n    print(\"{:.20f}\".format(3.14159265))\n    print(\"{:.21f}\".format(3.14159265))\n    print(\"{:.22f}\".format(3.14159265))\n    print(\"{:.23f}\".format(3.14159265))\n    print(\"{:.24f}\".format(3.14159265))\n    print(\"{:.25f}\".format(3.14159265))\n    print(\"{:.26f}\".format(3.14159265))\n    print(\"{:.27f}\".format(3.14159265))\n    print\n"
    ],
    "results": 4
},{
    "id": "343",
    "source": "soSearches",
    "language": "python",
    "query": "how to  clear the screen python prompt",
    "snippets": [
        "def clear():\n    import os\n    os.system('cls' if os.name == 'nt' else 'clear')\n",
        "def clear():\n    import os\n    os.system('clear')\n",
        "def clear_screen():\n    print(\"\\n\" * 100)\n    return\n"
    ],
    "results": 10
},{
    "id": "344",
    "source": "soSearches",
    "language": "python",
    "query": "how to declare 2 set in python",
    "snippets": [
        "def main():\n    set1 = {1, 2, 3, 4, 5}\n    set2 = {4, 5, 6, 7, 8}\n    print(set1 & set2)\n    print(set1 | set2)\n    print(set1 - set2)\n    print(set1 ^ set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set\n",
        "def main():\n    set1 = {1, 2, 3, 4, 5}\n    set2 = {4, 5, 6, 7, 8}\n    print(set1)\n    print(set2)\n    print(set1 & set2)\n    print(set1 | set2)\n    print(set1 - set2)\n    print(set1 ^ set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n    print(set1 > set2)\n    print(set1 <= set2)\n    print(set1 >= set2)\n    print(set1 == set2)\n    print(set1 != set2)\n    print(set1 < set2)\n"
    ],
    "results": 10
},{
    "id": "345",
    "source": "soSearches",
    "language": "python",
    "query": "python how to test if a dictionary is empty",
    "snippets": [
        "def is_empty(d):\n    if d == {}:\n        return True\n    else:\n        return False\n",
        "def is_empty(dictionary):\n    if dictionary == {}:\n        return True\n    else:\n        return False\n",
        "def is_empty(d):\n    return d == {}\n",
        "def is_empty(d):\n    return len(d) == 0\n"
    ],
    "results": 10
},{
    "id": "346",
    "source": "soSearches",
    "language": "python",
    "query": "how to stop funtion after time limit in python",
    "snippets": [
        "def fib(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n",
        "def fib(n):\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return a\n",
        "def main():\n    import time\n    import sys\n    sys.setrecursionlimit(100000)\n    start = time.time()\n    print(fib(100))\n    end = time.time()\n    print(f\"time: {end-start}\")\n",
        "def f(x):\n    return x*x\n",
        "def f(x):\n    return x**2\n"
    ],
    "results": 10
},{
    "id": "347",
    "source": "soSearches",
    "language": "python",
    "query": "ip camera python how to find",
    "snippets": [
        "def find_ip_camera():\n    import requests\n    import json\n    import time\n    import sys\n    import os\n    import re\n    import urllib3\n    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n    #url = 'https://www.ipcamera.com/api/v1/get_cameras'\n    url = 'https://www.ipcamera.com/api/v1/get_cameras?api_key=9c9f8f8f-f8f8-f8f8-f8f8-f8f8f8f8f8f8'\n    #url = 'https://www.ipcamera.com/api/v1/get_cameras?api_key=9c9f8f8f-f8f8-f8f8-f8f8-f8f8f8f8f8f8'\n    #url = 'https://www.ipcamera.com/api/v1/get_cameras?api_key=9c9f8f8f-f8f8-f8f8-f8f8-f8f8f8f8f8f8'\n    #url = 'https://www.ipcamera.com/api/v1/get_cameras?api_key=9c9f8f8f-f8f8-f8f8-f8f8-f8f8f8f8f8f8'\n    #url = 'https://www.ipcamera.com/api/v1/get_cameras?api_key=9c9f8f8f-f8f8-f8f8-f8f8-f8f8f8f8f8f8'\n    #url = 'https://www.ipcamera.com/api/v1/get_cameras?api_key=9c9f8f8f-f8f8-f8f8-f8f8-f8f8f8f8f8f8'\n    #url = 'https://www.\n",
        "def find_ip_camera():\n    import requests\n    import json\n    import time\n    import os\n    import sys\n    import argparse\n    import subprocess\n    import re\n    import urllib3\n    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings()\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n    # Disable SSL warnings\n    requests.packages.urllib3.disable_warn\n"
    ],
    "results": 2
},{
    "id": "348",
    "source": "soSearches",
    "language": "python",
    "query": "python how to declare a dict",
    "snippets": [
        "def main():\n    # declare a dict\n    my_dict = {'name': 'John', 'age': '30', 'city': 'New York'}\n    # print the dict\n    print(my_dict)\n    # print the dict's keys\n    print(my_dict.keys())\n    # print the dict's values\n    print(my_dict.values())\n    # print the dict's items\n    print(my_dict.items())\n    # print the dict's length\n    print(len(my_dict))\n    # print the dict's name key\n    print(my_dict['name'])\n    # print the dict's age key\n    print(my_dict['age'])\n    # print the dict's city key\n    print(my_dict['city'])\n    # print the dict's name key\n    print(my_dict.get('name'))\n    # print the dict's age key\n    print(my_dict.get('age'))\n    # print the dict's city key\n    print(my_dict.get('city'))\n    # print the dict's name key\n    print(my_dict.get('name', 'Not found'))\n    # print the dict's age key\n    print(my_dict.get('age', 'Not found'))\n    # print the dict's city key\n    print(my_dict.get('city', 'Not found'))\n    # print the dict's name key\n    print(my_dict.get('name', 'Not found'))\n    # print the dict's age key\n    print(my_dict.get('age', 'Not found'))\n    # print the dict's city key\n    print(my_dict.get('city', 'Not found'))\n    # print the dict's name key\n    print(my_dict.get('name', 'Not found'))\n    # print the dict's age key\n    print(my_dict.get('age', 'Not found'))\n    # print the dict's city key\n    print(my_dict.get('city', 'Not found'))\n    # print the dict's name key\n    print(my_dict.get\n",
        "def main():\n    # declare a dict\n    my_dict = {'name': 'John', 'age': '30', 'city': 'New York'}\n    # print the dict\n    print(my_dict)\n    # print the value of the dict\n    print(my_dict['name'])\n    # print the value of the dict\n    print(my_dict['age'])\n    # print the value of the dict\n    print(my_dict['city'])\n    # print the value of the dict\n    print(my_dict['name'])\n    # print the value of the dict\n    print(my_dict['age'])\n    # print the value of the dict\n    print(my_dict['city'])\n    # print the value of the dict\n    print(my_dict['name'])\n    # print the value of the dict\n    print(my_dict['age'])\n    # print the value of the dict\n    print(my_dict['city'])\n    # print the value of the dict\n    print(my_dict['name'])\n    # print the value of the dict\n    print(my_dict['age'])\n    # print the value of the dict\n    print(my_dict['city'])\n    # print the value of the dict\n    print(my_dict['name'])\n    # print the value of the dict\n    print(my_dict['age'])\n    # print the value of the dict\n    print(my_dict['city'])\n    # print the value of the dict\n    print(my_dict['name'])\n    # print the value of the dict\n    print(my_dict['age'])\n    # print the value of the dict\n    print(my_dict['city'])\n    # print the value of the dict\n    print(my_dict['name'])\n    # print the value of the dict\n    print(my_dict['age'])\n    # print the value of the dict\n    print(my_dict['city'])\n    # print the value of the dict\n    print(my_dict['name'])\n    # print the value of the dict\n",
        "def main():\n    # declare a dict\n    my_dict = {'name': 'John', 'age': '27'}\n    # print the dict\n    print(my_dict)\n    # print the dict's keys\n    print(my_dict.keys())\n    # print the dict's values\n    print(my_dict.values())\n    # print the dict's items\n    print(my_dict.items())\n    # print the dict's length\n    print(len(my_dict))\n    # print the dict's name\n    print(my_dict['name'])\n    # print the dict's age\n    print(my_dict['age'])\n    # print the dict's name and age\n    print(my_dict['name'], my_dict['age'])\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and age\n    print(my_dict.get('name'), my_dict.get('age'))\n    # print the dict's name and\n",
        "def main():\n    # declare a dict\n    my_dict = {'name': 'Zed', 'age': 36, 'height': 6 * 12 + 2}\n    # print the dict\n    print(my_dict)\n    # print the dict's keys\n    print(my_dict.keys())\n    # print the dict's values\n    print(my_dict.values())\n    # print the dict's items\n    print(my_dict.items())\n    # print the dict's name\n    print(my_dict['name'])\n    # print the dict's age\n    print(my_dict['age'])\n    # print the dict's height\n    print(my_dict['height'])\n    # print the dict's name and age\n    print(my_dict['name'], my_dict['age'])\n    # print the dict's name and height\n    print(my_dict['name'], my_dict['height'])\n    # print the dict's age and height\n    print(my_dict['age'], my_dict['height'])\n    # print the dict's name, age, and height\n    print(my_dict['name'], my_dict['age'], my_dict['height'])\n    # print the dict's name and age\n    print(my_dict['name'], my_dict['age'])\n    # print the dict's name and height\n    print(my_dict['name'], my_dict['height'])\n    # print the dict's age and height\n    print(my_dict['age'], my_dict['height'])\n    # print the dict's name, age, and height\n    print(my_dict['name'], my_dict['age'], my_dict['height'])\n    # print the dict's name and age\n    print(my_dict['name'], my_dict['age'])\n    # print the dict's name and height\n    print(my_dict['name'], my_dict['height'])\n    # print the dict's age and height\n    print(my_dict['age'], my_dict['height'])\n    # print the dict's name, age\n",
        "def main():\n    # declare a dict\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with key and value\n    my_dict = {'name': 'John', 'age': '27'}\n    print(my_dict)\n    # declare a dict with\n",
        "def main():\n    # declare a dict\n    # dict_name = {key:value, key:value, ...}\n    dict_name = {'name':'John', 'age':'30', 'city':'Beijing'}\n    print(dict_name)\n    print(dict_name['name'])\n    print(dict_name['age'])\n    print(dict_name['city'])\n    # add a new key-value pair\n    dict_name['phone'] = '123456789'\n    print(dict_name)\n    # update the value of a key\n    dict_name['age'] = '31'\n    print(dict_name)\n    # delete a key-value pair\n    del dict_name['age']\n    print(dict_name)\n    # check if a key exists\n    if 'age' in dict_name:\n        print('yes')\n    else:\n        print('no')\n    # get the number of key-value pairs\n    print(len(dict_name))\n    # get all the keys\n    print(dict_name.keys())\n    # get all the values\n    print(dict_name.values())\n    # get all the key-value pairs\n    print(dict_name.items())\n    # loop through all the key-value pairs\n    for key, value in dict_name.items():\n        print(key, value)\n    # loop through all the keys\n    for key in dict_name.keys():\n        print(key)\n    # loop through all the values\n    for value in dict_name.values():\n        print(value)\n    # loop through all the key-value pairs\n    for key, value in dict_name.items():\n        print(key, value)\n    # loop through all the key-value pairs\n    for key, value in dict_name.items():\n        print(key, value)\n    # loop through all the key-value pairs\n    for key, value in dict_name.items():\n        print(key, value)\n    # loop through all the key-value pairs\n    for key, value in dict_name.items():\n        print(key\n",
        "def main():\n    # create a dict\n    my_dict = {'name': 'Zed', 'age': 39, 'height': 6 * 12 + 2}\n    print(my_dict)\n    # access the value of the 'name' key\n    print(my_dict['name'])\n    # add a new key-value pair\n    my_dict['city'] = 'SF'\n    print(my_dict)\n    # remove a key-value pair\n    del my_dict['age']\n    print(my_dict)\n    # get the value for a key using get()\n    print(my_dict.get('name'))\n    print(my_dict.get('city'))\n    # get the keys using keys()\n    print(my_dict.keys())\n    # get the values using values()\n    print(my_dict.values())\n    # get the items using items()\n    print(my_dict.items())\n    # check if a key exists in the dictionary using in\n    print('name' in my_dict)\n    print('city' in my_dict)\n    # loop through all the key-value pairs using for loop\n    for key, value in my_dict.items():\n        print(key, value)\n    # loop through all the keys using for loop\n    for key in my_dict:\n        print(key)\n    # loop through all the values using for loop\n    for value in my_dict.values():\n        print(value)\n    # check if a key exists in the dictionary using in\n    if 'name' in my_dict:\n        print('name is a key in the dictionary')\n    # check if a value exists in the dictionary using in\n    if 'Zed' in my_dict.values():\n        print('Zed is a value in the dictionary')\n    # check if a value exists in the dictionary using in\n    if 39 in my_dict.values():\n        print('39 is a value in the dictionary')\n    # check if a value exists in the dictionary using in\n    if 'Zed' in my_dict.values():\n        print('Zed is a value in the dictionary')\n    # check if\n"
    ],
    "results": 7
},{
    "id": "349",
    "source": "soSearches",
    "language": "python",
    "query": "how to make a row  bold  using python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n",
        "def bold(text):\n    return '\\033[1m' + text + '\\033[0m'\n",
        "def bold(text):\n    return \"\\033[1m\" + text + \"\\033[0m\"\n",
        "def main():\n    print(\"This program makes a row bold\")\n    print()\n    print(\"Enter a row of text:\")\n    row = input(\">>> \")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n    print()\n    print(\"The bold row is:\")\n    print(\"\\033[1m\" + row + \"\\033[0m\")\n",
        "def main():\n    print(\"This program makes a row of text bold.\")\n    print()\n\n    # get the text\n    text = input(\"Please enter the text: \")\n\n    # print the text\n    print(\"The text is:\")\n    print(text)\n\n    # print the text in bold\n    print(\"The text in bold is:\")\n    print(\"\\033[1m\" + text + \"\\033[0m\")\n",
        "def main():\n    print(\"This program makes a row of text bold.\")\n    print()\n\n    # get the text\n    text = input(\"Please enter the text: \")\n\n    # display the text with a bold font\n    print(\"\\033[1m\", text, \"\\033[0m\")\n",
        "def main():\n    print(\"This program makes a row bold\")\n    print()\n    print(\"Please enter the row to be bold\")\n    row = int(input(\"Row: \"))\n    print(\"Please enter the column to be bold\")\n    column = int(input(\"Column: \"))\n    print(\"Please enter the number of rows\")\n    rows = int(input(\"Rows: \"))\n    print(\"Please enter the number of columns\")\n    columns = int(input(\"Columns: \"))\n    print()\n    print(\"The row to be bold is: \" + str(row))\n    print(\"The column to be bold is: \" + str(column))\n    print(\"The number of rows is: \" + str(rows))\n    print(\"The number of columns is: \" + str(columns))\n    print()\n    print(\"The row to be bold is: \" + str(row))\n    print(\"The column to be bold is: \" + str(column))\n    print(\"The number of rows is: \" + str(rows))\n    print(\"The number of columns is: \" + str(columns))\n    print()\n    print(\"The row to be bold is: \" + str(row))\n    print(\"The column to be bold is: \" + str(column))\n    print(\"The number of rows is: \" + str(rows))\n    print(\"The number of columns is: \" + str(columns))\n    print()\n    print(\"The row to be bold is: \" + str(row))\n    print(\"The column to be bold is: \" + str(column))\n    print(\"The number of rows is: \" + str(rows))\n    print(\"The number of columns is: \" + str(columns))\n    print()\n    print(\"The row to be bold is: \" + str(row))\n    print(\"The column to be bold is: \" + str(column))\n    print(\"The number of rows is: \" + str(rows))\n    print(\"The number of columns is: \" + str(columns))\n    print()\n    print(\"The row to be bold is: \" + str(row))\n    print(\"The column to be bold is\n"
    ],
    "results": 7
},{
    "id": "350",
    "source": "soSearches",
    "language": "python",
    "query": "how to read next line in file python",
    "snippets": [
        "def read_next_line(file_name):\n    with open(file_name) as f:\n        for line in f:\n            yield line\n",
        "def main():\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end='')\n    print()\n    with open('test.txt', 'r') as f:\n        for line in f:\n            print(line, end\n",
        "def main():\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(line, end='')\n    f.close()\n    print('\\n')\n    f = open('lines.txt', 'r')\n    for line in f:\n        print(\n",
        "def main():\n    with open('/tmp/test.txt', 'r') as f:\n        line = f.readline()\n        while line:\n            print(line)\n            line = f.readline()\n",
        "def main():\n    with open('data.txt', 'r') as f:\n        for line in f:\n            print(line)\n            print(line.strip())\n            print(line.strip().split())\n            print(line.strip().split(' '))\n            print(line.strip().split(' ')[0])\n            print(line.strip().split(' ')[1])\n            print(line.strip().split(' ')[2])\n            print(line.strip().split(' ')[3])\n            print(line.strip().split(' ')[4])\n            print(line.strip().split(' ')[5])\n            print(line.strip().split(' ')[6])\n            print(line.strip().split(' ')[7])\n            print(line.strip().split(' ')[8])\n            print(line.strip().split(' ')[9])\n            print(line.strip().split(' ')[10])\n            print(line.strip().split(' ')[11])\n            print(line.strip().split(' ')[12])\n            print(line.strip().split(' ')[13])\n            print(line.strip().split(' ')[14])\n            print(line.strip().split(' ')[15])\n            print(line.strip().split(' ')[16])\n            print(line.strip().split(' ')[17])\n            print(line.strip().split(' ')[18])\n            print(line.strip().split(' ')[19])\n            print(line.strip().split(' ')[20])\n            print(line.strip().split(' ')[21])\n            print(line.strip().split(' ')[22])\n            print(line.strip().split(' ')[23])\n            print(line.strip().split(' ')[24])\n            print(line.strip().split(' ')[25])\n            print(line.strip().split(' ')[26])\n            print(line.strip().split(' ')[27])\n            print(line.strip().split(' ')[28])\n            print\n",
        "def main():\n    with open('/home/student-02-f8f8f8f8f8/data/words.txt') as f:\n        for line in f:\n            print(line, end='')\n"
    ],
    "results": 7
},{
    "id": "351",
    "source": "soSearches",
    "language": "python",
    "query": "how to check last modified file date in python",
    "snippets": [
        "def get_last_modified(path):\n    import os\n    import time\n    return time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime(os.path.getmtime(path)))\n",
        "def get_last_modified(file_name):\n    import os\n    import time\n    return time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime(os.path.getmtime(file_name)))\n",
        "def get_last_modified_date(file_path):\n    import os\n    import time\n    return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(os.path.getmtime(file_path)))\n",
        "def last_modified(path):\n    import os\n    import time\n    return time.ctime(os.path.getmtime(path))\n",
        "def get_last_modified_date(file_name):\n    import os\n    import time\n    return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(os.path.getmtime(file_name)))\n",
        "def main():\n    import os\n    import time\n    import datetime\n    import argparse\n    parser = argparse.ArgumentParser(description='Check last modified date of file')\n    parser.add_argument('-f', '--file', help='file to check', required=True)\n    args = parser.parse_args()\n    file = args.file\n    if os.path.exists(file):\n        print('File exists')\n        print('Last modified: ' + time.ctime(os.path.getmtime(file)))\n        print('Last accessed: ' + time.ctime(os.path.getatime(file)))\n        print('Created: ' + time.ctime(os.path.getctime(file)))\n        print('Size: ' + str(os.path.getsize(file)))\n        print('File type: ' + str(os.path.isfile(file)))\n        print('Directory: ' + str(os.path.isdir(file)))\n        print('Link: ' + str(os.path.islink(file)))\n        print('Mountpoint: ' + str(os.path.ismount(file)))\n        print('Absolute path: ' + str(os.path.isabs(file)))\n        print('Executable: ' + str(os.path.isfile(file) and os.access(file, os.X_OK)))\n        print('Readable: ' + str(os.path.isfile(file) and os.access(file, os.R_OK)))\n        print('Writable: ' + str(os.path.isfile(file) and os.access(file, os.W_OK)))\n        print('Executable and readable: ' + str(os.path.isfile(file) and os.access(file, os.X_OK and os.R_OK)))\n        print('Executable and writable: ' + str(os.path.isfile(file) and os.access(file, os.X_OK and os.W_OK)))\n        print('Executable, readable and writable: ' + str(os.path.isfile(file) and os\n",
        "def get_last_modified_date(file_name):\n    import os\n    import datetime\n    import time\n    return datetime.datetime.fromtimestamp(os.path.getmtime(file_name))\n",
        "def check_last_modified(path):\n    import os\n    import time\n    import datetime\n    import pytz\n    import pytz.exceptions\n    try:\n        tz = pytz.timezone('Asia/Kolkata')\n        last_modified = os.path.getmtime(path)\n        last_modified_date = datetime.datetime.fromtimestamp(last_modified)\n        last_modified_date = last_modified_date.astimezone(tz)\n        print(last_modified_date)\n    except pytz.exceptions.AmbiguousTimeError:\n        print(\"Ambiguous time error\")\n    except pytz.exceptions.InvalidTimeError:\n        print(\"Invalid time error\")\n    except pytz.exceptions.NonExistentTimeError:\n        print(\"Non existent time error\")\n    except pytz.exceptions.UnknownTimeZoneError:\n        print(\"Unknown time zone error\")\n    except pytz.exceptions.BaseTzInfo.InvalidOverflowError:\n        print(\"Invalid overflow error\")\n    except pytz.exceptions.BaseTzInfo.AmbiguousDstError:\n        print(\"Ambiguous dst error\")\n    except pytz.exceptions.BaseTzInfo.NonExistentDstError:\n        print(\"Non existent dst error\")\n    except pytz.exceptions.BaseTzInfo.InvalidTimeError:\n        print(\"Invalid time error\")\n    except pytz.exceptions.BaseTzInfo.ZoneInfoFileError:\n        print(\"Zone info file error\")\n    except pytz.exceptions.BaseTzInfo.AmbiguousTimeError:\n        print(\"Ambiguous time error\")\n    except pytz.exceptions.BaseTzInfo.InvalidOverflowError:\n        print(\"Invalid overflow error\")\n    except pytz.exceptions.BaseTzInfo.NonExistentTimeError:\n        print(\"Non existent time error\")\n    except pytz.exceptions.BaseTzInfo.ZoneInfoFileError:\n        print(\"Zone info file error\")\n    except pytz.exceptions.BaseTzInfo.AmbiguousTimeError:\n        print(\"Ambiguous time error\")\n",
        "def get_last_modified_file(path):\n    import os\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n    import shutil\n    import subprocess\n    import os.path\n    import fnmatch\n    import time\n    import datetime\n    import glob\n    import re\n    import sys\n"
    ],
    "results": 10
},{
    "id": "352",
    "source": "soSearches",
    "language": "python",
    "query": "how to download pil package for python 3.6 in window",
    "snippets": [
        "def main():\n    print(\"hello world\")\n",
        "def main():\n    import requests\n    import os\n    import shutil\n    import sys\n    import time\n    import zipfile\n    import io\n    import argparse\n    import subprocess\n    import platform\n    import re\n    import json\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urllib.request\n    import urllib.error\n    import urllib.parse\n    import urllib.error\n    import urllib.parse\n    import urll\n",
        "def main():\n    import requests\n    import os\n    import shutil\n    import sys\n    import time\n    import zipfile\n    import io\n    import re\n    import subprocess\n    import glob\n    import platform\n    import argparse\n    import configparser\n    import pkg_resources\n    import pypiwin32\n    import win32com.client\n    import win32com.client.gencache\n    import win32com.client.constants\n    import win32com.client.dynamic\n    import win32com.client.utils\n    import win32com.client.Dispatch\n    import win32com.client.DispatchEx\n    import win32com.client.VARIANT\n    import win32com.client.VARIANT_BOOL\n    import win32com.client.VARIANT_UNKNOWN\n    import win32com.client.VARIANT_DISPATCH\n    import win32com.client.VARIANT_DATE\n    import win32com.client.VARIANT_BSTR\n    import win32com.client.VARIANT_I4\n    import win32com.client.VARIANT_I2\n    import win32com.client.VARIANT_I1\n    import win32com.client.VARIANT_UI1\n    import win32com.client.VARIANT_R4\n    import win32com.client.VARIANT_R8\n    import win32com.client.VARIANT_BOOL\n    import win32com.client.VARIANT_UI2\n    import win32com.client.VARIANT_UI4\n    import win32com.client.VARIANT_UI8\n    import win32com.client.VARIANT_BSTR\n    import win32com.client.VARIANT_DISPATCH\n    import win32com.client.VARIANT_UNKNOWN\n    import win32com.client.VARIANT_DECIMAL\n    import win32com.client.VARIANT_CY\n    import win32com.client.VARIANT_ERROR\n    import win32com.client.VARIANT_BOOL\n    import win32com.client.\n"
    ],
    "results": 4
},{
    "id": "353",
    "source": "soSearches",
    "language": "python",
    "query": "how to send key in selenium using python",
    "snippets": [
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    driver = webdriver.Chrome()\n    driver.get(\"http://www.python.org\")\n    elem = driver.find_element_by_name(\"q\")\n    elem.send_keys(\"pycon\")\n    elem.send_keys(Keys.RETURN)\n    assert \"No results found.\" not in driver.page_source\n    driver.close()\n",
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    driver = webdriver.Firefox()\n    driver.get(\"http://www.python.org\")\n    elem = driver.find_element_by_name(\"q\")\n    elem.send_keys(\"pycon\")\n    elem.send_keys(Keys.RETURN)\n    assert \"No results found.\" not in driver.page_source\n    driver.close()\n",
        "def main():\n    from selenium import webdriver\n    driver = webdriver.Chrome()\n    driver.get(\"https://www.google.com\")\n    driver.find_element_by_name(\"q\").send_keys(\"Selenium\")\n    driver.find_element_by_name(\"btnK\").click()\n    driver.quit()\n",
        "def main():\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n    driver = webdriver.Firefox()\n    driver.get(\"https://www.google.com\")\n    elem = driver.find_element_by_name(\"q\")\n    elem.send_keys(\"seleniumhq\" + Keys.RETURN)\n    assert \"No results found.\" not in driver.page_source\n    driver.close()\n"
    ],
    "results": 10
},{
    "id": "354",
    "source": "soSearches",
    "language": "python",
    "query": "how to check the class of an object python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n"
    ],
    "results": 2
},{
    "id": "355",
    "source": "soSearches",
    "language": "python",
    "query": "how to shorten a string in python",
    "snippets": [
        "def shorten(string):\n    if len(string) > 10:\n        return string[0:10] + '...'\n    else:\n        return string\n",
        "def shorten(string):\n    if len(string) > 10:\n        return string[:10] + '...'\n    else:\n        return string\n",
        "def shorten(string):\n    if len(string) > 10:\n        return string[0:10] + \"...\"\n    else:\n        return string\n",
        "def shorten(string):\n    return string[0:3]\n"
    ],
    "results": 10
},{
    "id": "356",
    "source": "soSearches",
    "language": "python",
    "query": "how to fix python 2.7 pygame no module name pygame",
    "snippets": [
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('My Game')\n    clock = pygame.time.Clock()\n    while True:\n        clock.tick(60)\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n        pygame.display.update()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption(\"My Game\")\n    clock = pygame.time.Clock()\n    keep_going = True\n    while keep_going:\n        clock.tick(60)\n        pygame.display.update()\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                keep_going = False\n            elif event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_ESCAPE:\n                    keep_going = False\n    pygame.quit()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption(\"Hello World\")\n    pygame.display.update()\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n        pygame.display.update()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Hello World')\n    running = True\n    while running:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n        pygame.display.update()\n    pygame.quit()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Hello World')\n    pygame.display.update()\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n    pygame.quit()\n    sys.exit()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Hello World')\n    clock = pygame.time.Clock()\n    running = True\n    while running:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n        screen.fill((0, 0, 0))\n        pygame.display.flip()\n        clock.tick(60)\n    pygame.quit()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('Hello World')\n    pygame.display.update()\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n        pygame.display.update()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption('My Game')\n    done = False\n    while not done:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                done = True\n        pygame.display.update()\n    pygame.quit()\n",
        "def main():\n    import pygame\n    pygame.init()\n    screen = pygame.display.set_mode((640, 480))\n    pygame.display.set_caption(\"Hello World\")\n    pygame.display.update()\n    while True:\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                sys.exit()\n        pygame.display.update()\n    return 0\n",
        "def main():\n    import pygame\n    from pygame.locals import *\n    import sys\n    import time\n    import random\n    import os\n    import math\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.animation as animation\n    import matplotlib.image as mpimg\n    import matplotlib.cm as cm\n    import matplotlib.colors as colors\n    import matplotlib.gridspec as gridspec\n    import matplotlib.ticker as ticker\n    import matplotlib.ticker as ticker\n    import matplotlib.patches as patches\n    import matplotlib.lines as mlines\n    import matplotlib.pyplot as plt\n    import matplotlib.axes as axes\n    import matplotlib.text as text\n    import matplotlib.image as image\n    import matplotlib.figure as figure\n    import matplotlib.animation as animation\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_pdf as pdf\n    import matplotlib.backends.backend_svg as svg\n    import matplotlib.backends.backend_ps as ps\n    import matplotlib.backends.backend_tkagg as tkagg\n    import matplotlib.backends.backend_webagg as webagg\n    import matplotlib.backends.backend_qt4agg as qt4agg\n    import matplotlib.backends.backend_qt5agg as qt5agg\n    import matplotlib.backends.backend_gtk3agg as gtk3agg\n    import matplotlib.backends.backend_gtkagg as gtkagg\n    import matplotlib.backends.backend_wxagg as wxagg\n    import matplotlib.backends.backend_agg as agg\n    import matplotlib.backends.backend_cairo as cairo\n    import matplotlib.backends.backend_emf as emf\n    import matplotlib.backends.backend_pdf as pdf\n    import\n"
    ],
    "results": 10
},{
    "id": "357",
    "source": "soSearches",
    "language": "python",
    "query": "how to find max values from output in python",
    "snippets": [
        "def max_value(list):\n    max = list[0]\n    for i in list:\n        if i > max:\n            max = i\n    return max\n",
        "def max_value(a, b):\n    if a > b:\n        return a\n    else:\n        return b\n",
        "def max_value(t):\n    max_value = t[0]\n    for i in t:\n        if i > max_value:\n            max_value = i\n    return max_value\n",
        "def main():\n    # open the file\n    f = open(\"output.txt\", \"r\")\n    # read the file\n    data = f.read()\n    # close the file\n    f.close()\n    # split the data into lines\n    lines = data.split(\"\\n\")\n    # set the max value to the first value\n    max_value = float(lines[0])\n    # loop through the lines\n    for line in lines:\n        # if the line is not empty\n        if line != \"\":\n            # convert the line to a float\n            value = float(line)\n            # if the value is greater than the max value\n            if value > max_value:\n                # set the max value to the value\n                max_value = value\n    # print the max value\n    print(max_value)\n",
        "def main():\n    # open the file\n    f = open(\"output.txt\", \"r\")\n    # read the file\n    data = f.read()\n    # close the file\n    f.close()\n    # split the data into a list\n    data = data.split()\n    # find the max value\n    max = int(data[0])\n    for i in range(1, len(data)):\n        if int(data[i]) > max:\n            max = int(data[i])\n    # print the max value\n    print(\"The max value is\", max)\n",
        "def main():\n    # open file\n    f = open(\"output.txt\", \"r\")\n    # read file\n    data = f.read()\n    # close file\n    f.close()\n    # split data into lines\n    lines = data.split(\"\\n\")\n    # get max value\n    max_value = max(lines)\n    # print max value\n    print(max_value)\n    # split max value into words\n    words = max_value.split(\" \")\n    # get max value\n    max_value = words[-1]\n    # print max value\n    print(max_value)\n    # split max value into numbers\n    numbers = max_value.split(\".\")\n    # get max value\n    max_value = numbers[-1]\n    # print max value\n    print(max_value)\n    # split max value into numbers\n    numbers = max_value.split(\",\")\n    # get max value\n    max_value = numbers[-1]\n    # print max value\n    print(max_value)\n    # split max value into numbers\n    numbers = max_value.split(\"-\")\n    # get max value\n    max_value = numbers[-1]\n    # print max value\n    print(max_value)\n    # split max value into numbers\n    numbers = max_value.split(\"+\")\n    # get max value\n    max_value = numbers[-1]\n    # print max value\n    print(max_value)\n    # split max value into numbers\n    numbers = max_value.split(\"*\")\n    # get max value\n    max_value = numbers[-1]\n    # print max value\n    print(max_value)\n    # split max value into numbers\n    numbers = max_value.split(\"/\")\n    # get max value\n    max_value = numbers[-1]\n    # print max value\n    print(max_value)\n    # split max value into numbers\n    numbers = max_value.split(\"^\")\n    # get max value\n    max_value = numbers[-1]\n    # print max value\n    print(max_value)\n",
        "def main():\n    print(\"This program finds the largest and smallest number of a list.\")\n    print(\"Enter a list of numbers: \")\n    numlist = eval(input())\n    print(\"The list of numbers is: \", numlist)\n    print(\"The largest number is: \", max(numlist))\n    print(\"The smallest number is: \", min(numlist))\n"
    ],
    "results": 10
},{
    "id": "358",
    "source": "soSearches",
    "language": "python",
    "query": "how to calculate a missing length in python",
    "snippets": [
        "def main():\n    print(\"This program calculates the length of a rectangle.\")\n    width = int(input(\"Please enter the width: \"))\n    height = int(input(\"Please enter the height: \"))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n    print(\"The perimeter of the rectangle is {}\".format(perimeter(width, height)))\n    print(\"Thank you for using this program.\")\n",
        "def main():\n    print(\"This program calculates the length of a rectangle.\")\n    width = int(input(\"Please enter the width: \"))\n    height = int(input(\"Please enter the height: \"))\n    print(\"The area of the rectangle is {} square units.\".format(width * height))\n    print(\"The perimeter of the rectangle is {} units.\".format(2 * (width + height)))\n",
        "def main():\n    print(\"This program calculates the length of a rectangle.\")\n    width = int(input(\"Please enter the width: \"))\n    height = int(input(\"Please enter the height: \"))\n    print(\"The area of the rectangle is {}\".format(width * height))\n    print(\"The perimeter of the rectangle is {}\".format(2 * (width + height)))\n",
        "def main():\n    print(\"This program calculates the length of a rectangle.\")\n    width = int(input(\"Please enter the width: \"))\n    height = int(input(\"Please enter the height: \"))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n    print(\"The perimeter of the rectangle is {}\".format(perimeter(width, height)))\n    print(\"The diagonal of the rectangle is {}\".format(diagonal(width, height)))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n    print(\"The perimeter of the rectangle is {}\".format(perimeter(width, height)))\n    print(\"The diagonal of the rectangle is {}\".format(diagonal(width, height)))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n    print(\"The perimeter of the rectangle is {}\".format(perimeter(width, height)))\n    print(\"The diagonal of the rectangle is {}\".format(diagonal(width, height)))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n    print(\"The perimeter of the rectangle is {}\".format(perimeter(width, height)))\n    print(\"The diagonal of the rectangle is {}\".format(diagonal(width, height)))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n    print(\"The perimeter of the rectangle is {}\".format(perimeter(width, height)))\n    print(\"The diagonal of the rectangle is {}\".format(diagonal(width, height)))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n    print(\"The perimeter of the rectangle is {}\".format(perimeter(width, height)))\n    print(\"The diagonal of the rectangle is {}\".format(diagonal(width, height)))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n    print(\"The perimeter of the rectangle is {}\".format(perimeter(width, height)))\n    print(\"The diagonal of the rectangle is {}\".format(diagonal(width, height)))\n    print(\"The area of the rectangle is {}\".format(area(width, height)))\n",
        "def main():\n    print(\"This program calculates the length of a rectangle.\")\n    width = float(input(\"Please enter the width: \"))\n    height = float(input(\"Please enter the height: \"))\n    area = width * height\n    print(\"The area of the rectangle is: \", area)\n",
        "def main():\n    print(\"This program calculates the length of a rectangle.\")\n    width = int(input(\"Please enter the width: \"))\n    height = int(input(\"Please enter the height: \"))\n    area = width * height\n    print(\"The area of the rectangle is\", area)\n",
        "def missing_length(length, missing):\n    return length - missing\n",
        "def missing_length(length, missing):\n    return length + missing\n"
    ],
    "results": 10
},{
    "id": "359",
    "source": "soSearches",
    "language": "python",
    "query": "how to run commented block of code python",
    "snippets": [
        "def main():\n    print(\"Hello World\")\n    print(\"Hello Again\")\n    print(\"I like typing this.\")\n    print(\"This is fun.\")\n    print('Yay! Printing.')\n    print(\"I'd much rather you 'not'.\")\n    print('I \"said\" do not touch this.')\n"
    ],
    "results": 1
},{
    "id": "360",
    "source": "soSearches",
    "language": "python",
    "query": "how to read a properties file in python",
    "snippets": [
        "def read_properties(filename):\n    properties = {}\n    with open(filename) as f:\n        for line in f:\n            line = line.strip()\n            if line and not line.startswith('#'):\n                k, v = line.split('=')\n                properties[k.strip()] = v.strip()\n    return properties\n",
        "def read_properties(filename):\n    properties = {}\n    with open(filename) as f:\n        for line in f:\n            line = line.strip()\n            if line and not line.startswith('#'):\n                key, value = line.split('=')\n                properties[key] = value\n    return properties\n",
        "def main():\n    # open the file\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # split the data into a list\n    data = data.split()\n    # print the list\n    print(data)\n    # create a dictionary\n    mydict = {}\n    # loop through the list\n    for item in data:\n        # split the item into key and value\n        key, value = item.split(\"=\")\n        # add the key and value to the dictionary\n        mydict[key] = value\n    # print the dictionary\n    print(mydict)\n    # print the value of the key \"name\"\n    print(mydict[\"name\"])\n    # print the value of the key \"age\"\n    print(mydict[\"age\"])\n    # print the value of the key \"city\"\n    print(mydict[\"city\"])\n    # print the value of the key \"state\"\n    print(mydict[\"state\"])\n    # print the value of the key \"zip\"\n    print(mydict[\"zip\"])\n    # print the value of the key \"phone\"\n    print(mydict[\"phone\"])\n    # print the value of the key \"email\"\n    print(mydict[\"email\"])\n    # print the value of the key \"website\"\n    print(mydict[\"website\"])\n    # print the value of the key \"twitter\"\n    print(mydict[\"twitter\"])\n    # print the value of the key \"facebook\"\n    print(mydict[\"facebook\"])\n    # print the value of the key \"instagram\"\n    print(mydict[\"instagram\"])\n    # print the value of the key \"youtube\"\n    print(mydict[\"youtube\"])\n    # print the value of the key \"linkedin\"\n    print(mydict[\"linkedin\"])\n    # print the value of the key \"pinterest\"\n    print(mydict[\"pinterest\"])\n    # print the value of the key \"\n",
        "def main():\n    # open the file\n    infile = open(\"properties.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # print the file\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"properties.txt\", \"r\")\n    # read the file\n    contents = infile.readlines()\n    # print the file\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"properties.txt\", \"r\")\n    # read the file\n    contents = infile.readline()\n    # print the file\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"properties.txt\", \"r\")\n    # read the file\n    contents = infile.readline()\n    # print the file\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"properties.txt\", \"r\")\n    # read the file\n    contents = infile.readline()\n    # print the file\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"properties.txt\", \"r\")\n    # read the file\n    contents = infile.readline()\n    # print the file\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"properties.txt\", \"r\")\n    # read the file\n    contents = infile.readline()\n    # print the file\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file\n    infile = open(\"properties.txt\", \"r\")\n    # read the file\n    contents = infile.readline()\n    # print the file\n    print(contents)\n    # close the file\n    infile.close()\n",
        "def read_properties(filename):\n    props = {}\n    with open(filename, 'rt') as f:\n        for line in f:\n            line = line.strip()\n            if line.startswith('#') or line=='':\n                continue\n            if '=' in line:\n                key, value = line.split('=')\n                props[key.strip()] = value.strip()\n    return props\n",
        "def main():\n    # open the file\n    properties = open(\"properties.txt\", \"r\")\n    # read the file\n    for line in properties:\n        # split the line into a list\n        line = line.split(\"=\")\n        # print the list\n        print(line)\n    # close the file\n    properties.close()\n",
        "def read_properties(filename):\n    properties = {}\n    with open(filename, 'r') as f:\n        for line in f:\n            line = line.strip()\n            if line.startswith('#') or line == '':\n                continue\n            if '=' in line:\n                key, value = line.split('=')\n                properties[key.strip()] = value.strip()\n    return properties\n",
        "def read_properties(filename):\n    properties = {}\n    with open(filename, 'r') as fp:\n        for line in fp:\n            line = line.strip()\n            if line and not line.startswith('#'):\n                k, v = line.split('=')\n                properties[k.strip()] = v.strip()\n    return properties\n",
        "def get_properties(file_name):\n    properties = {}\n    with open(file_name) as f:\n        for line in f:\n            if not line.startswith(\"#\"):\n                if \"=\" in line:\n                    key, value = line.split(\"=\", 1)\n                    properties[key] = value.strip()\n    return properties\n",
        "def main():\n    # open the file\n    infile = open(\"/home/student-02-f8f8b9f9c8/supplier.csv\", \"r\")\n    # read the file\n    records = infile.readlines()\n    # close the file\n    infile.close()\n    # print the number of records\n    print(\"Number of records: \", len(records))\n    # open the file\n    infile = open(\"/home/student-02-f8f8b9f9c8/supplier.csv\", \"r\")\n    # read the file\n    records = infile.readlines()\n    # close the file\n    infile.close()\n    # print the number of records\n    print(\"Number of records: \", len(records))\n    # open the file\n    infile = open(\"/home/student-02-f8f8b9f9c8/supplier.csv\", \"r\")\n    # read the file\n    records = infile.readlines()\n    # close the file\n    infile.close()\n    # print the number of records\n    print(\"Number of records: \", len(records))\n    # open the file\n    infile = open(\"/home/student-02-f8f8b9f9c8/supplier.csv\", \"r\")\n    # read the file\n    records = infile.readlines()\n    # close the file\n    infile.close()\n    # print the number of records\n    print(\"Number of records: \", len(records))\n    # open the file\n    infile = open(\"/home/student-02-f8f8b9f9c8/supplier.csv\", \"r\")\n    # read the file\n    records = infile.readlines()\n    # close the file\n    infile.close()\n    # print the number of records\n    print(\"Number of records: \", len(records))\n    # open the file\n    infile = open(\"/home/student-02-f8f8b9f9c8/supplier.csv\", \"r\")\n    # read the file\n"
    ],
    "results": 10
},{
    "id": "361",
    "source": "soSearches",
    "language": "python",
    "query": "how to plot scatter plot in python",
    "snippets": [
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(1000)\n    y = np.random.randn(1000)\n    plt.scatter(x, y)\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(100)\n    y = np.random.randn(100)\n    plt.scatter(x, y)\n    plt.show()\n",
        "def main():\n    import matplotlib.pyplot as plt\n    import numpy as np\n\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n\n    plt.plot(x, y)\n    plt.show()\n"
    ],
    "results": 10
},{
    "id": "362",
    "source": "soSearches",
    "language": "python",
    "query": "how to read from an external file python",
    "snippets": [
        "def main():\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n",
        "def main():\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile:\n        print(line, end='')\n    # close the file\n    infile.close()\n    print('\\n')\n    # open the file for reading\n    infile = open('lines.txt', 'r')\n    # read the file\n    for line in infile\n",
        "def main():\n    # open the file\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n",
        "def main():\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for writing\n    outfile = open(\"test.txt\", \"w\")\n    # write to the file\n    outfile.write(\"This is a test\")\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open(\"test.txt\", \"a\")\n    # write to the file\n    outfile.write(\"\\nThis is another test\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    contents = infile.readlines()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    contents = infile.readline()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    contents = infile.readline()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    contents = infile.readline()\n    # print the file's contents\n",
        "def main():\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file's contents\n    print(contents)\n    # open the file for writing\n    outfile = open(\"myfile.txt\", \"w\")\n    # write to the file\n    outfile.write(\"Hello World!\")\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open(\"myfile.txt\", \"a\")\n    # write to the file\n    outfile.write(\"\\nHello again!\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file's contents\n    print(contents)\n    # open the file for writing\n    outfile = open(\"myfile.txt\", \"w\")\n    # write to the file\n    outfile.write(\"Hello World!\")\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open(\"myfile.txt\", \"a\")\n    # write to the file\n    outfile.write(\"\\nHello again!\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file's contents\n    print(contents)\n    # open the file for writing\n    outfile = open(\"myfile.txt\", \"w\")\n    # write to the file\n    outfile.write(\"Hello World!\")\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open(\"my\n",
        "def main():\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for writing\n    outfile = open(\"myfile.txt\", \"w\")\n    # write to the file\n    outfile.write(\"This is a test\")\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open(\"myfile.txt\", \"a\")\n    # write to the file\n    outfile.write(\"\\nThis is another test\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.readlines()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.readline()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.readline()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.readline()\n",
        "def main():\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n",
        "def main():\n    # open the file for reading\n    infile = open(\"numbers.txt\", \"r\")\n    # read the file\n    num1 = int(infile.readline())\n    num2 = int(infile.readline())\n    # close the file\n    infile.close()\n    # add the numbers\n    sum = num1 + num2\n    # print the sum\n    print(\"The sum of the numbers is\", sum)\n",
        "def main():\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n    # open the file for writing\n    outfile = open(\"test.txt\", \"w\")\n    # write to the file\n    outfile.write(\"This is a test\")\n    # close the file\n    outfile.close()\n    # open the file for appending\n    outfile = open(\"test.txt\", \"a\")\n    # write to the file\n    outfile.write(\"\\nThis is another test\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(infile.readline())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(infile.readlines())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(infile.readline())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(infile.readline())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(infile.readline())\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open(\"test.\n"
    ],
    "results": 10
},{
    "id": "363",
    "source": "soSearches",
    "language": "python",
    "query": "how to remove double quotes in python strings",
    "snippets": [
        "def remove_double_quotes(s):\n    return s.replace('\"', '')\n",
        "def remove_quotes(s):\n    return s.replace('\"', '')\n"
    ],
    "results": 10
},{
    "id": "364",
    "source": "soSearches",
    "language": "python",
    "query": "how to read inputs from excel sheet using pythong",
    "snippets": [
        "def main():\n    import openpyxl\n    wb = openpyxl.load_workbook('example.xlsx')\n    sheet = wb.get_sheet_by_name('Sheet1')\n    for row in range(1, sheet.max_row + 1):\n        for col in range(1, sheet.max_column + 1):\n            print(sheet.cell(row=row, column=col).value, end=' ')\n        print()\n    print(sheet.max_row)\n    print(sheet.max_column)\n    print(sheet.cell(row=1, column=1).value)\n    print(sheet.cell(row=1, column=2).value)\n    print(sheet.cell(row=1, column=3).value)\n    print(sheet.cell(row=1, column=4).value)\n    print(sheet.cell(row=1, column=5).value)\n    print(sheet.cell(row=1, column=6).value)\n    print(sheet.cell(row=1, column=7).value)\n    print(sheet.cell(row=1, column=8).value)\n    print(sheet.cell(row=1, column=9).value)\n    print(sheet.cell(row=1, column=10).value)\n    print(sheet.cell(row=1, column=11).value)\n    print(sheet.cell(row=1, column=12).value)\n    print(sheet.cell(row=1, column=13).value)\n    print(sheet.cell(row=1, column=14).value)\n    print(sheet.cell(row=1, column=15).value)\n    print(sheet.cell(row=1, column=16).value)\n    print(sheet.cell(row=1, column=17).value)\n    print(sheet.cell(row=1, column=18).value)\n    print(sheet.cell(row=1, column=19).value)\n    print(sheet.cell(row=1, column=20).value)\n    print(sheet.cell(row=\n",
        "def main():\n    import openpyxl\n    wb = openpyxl.load_workbook('example.xlsx')\n    sheet = wb.get_sheet_by_name('Sheet1')\n    # print(sheet['A1'].value)\n    # print(sheet['B1'].value)\n    # print(sheet['C1'].value)\n    # print(sheet['D1'].value)\n    # print(sheet['E1'].value)\n    # print(sheet['F1'].value)\n    # print(sheet['G1'].value)\n    # print(sheet['H1'].value)\n    # print(sheet['I1'].value)\n    # print(sheet['J1'].value)\n    # print(sheet['K1'].value)\n    # print(sheet['L1'].value)\n    # print(sheet['M1'].value)\n    # print(sheet['N1'].value)\n    # print(sheet['O1'].value)\n    # print(sheet['P1'].value)\n    # print(sheet['Q1'].value)\n    # print(sheet['R1'].value)\n    # print(sheet['S1'].value)\n    # print(sheet['T1'].value)\n    # print(sheet['U1'].value)\n    # print(sheet['V1'].value)\n    # print(sheet['W1'].value)\n    # print(sheet['X1'].value)\n    # print(sheet['Y1'].value)\n    # print(sheet['Z1'].value)\n    # print(sheet['AA1'].value)\n    # print(sheet['AB1'].value)\n    # print(sheet['AC1'].value)\n    # print(sheet['AD1'].value)\n    # print(sheet['AE1'].value)\n    # print(sheet['AF1'].value)\n    # print(sheet['AG1'].value)\n    # print(sheet['AH1'].value)\n    # print(sheet['AI\n",
        "def main():\n    import openpyxl\n    wb = openpyxl.load_workbook('example.xlsx')\n    sheet = wb.get_sheet_by_name('Sheet1')\n    print(sheet['A1'].value)\n    print(sheet['B1'].value)\n    print(sheet['C1'].value)\n    print(sheet['D1'].value)\n    print(sheet['A2'].value)\n    print(sheet['B2'].value)\n    print(sheet['C2'].value)\n    print(sheet['D2'].value)\n    print(sheet['A3'].value)\n    print(sheet['B3'].value)\n    print(sheet['C3'].value)\n    print(sheet['D3'].value)\n    print(sheet['A4'].value)\n    print(sheet['B4'].value)\n    print(sheet['C4'].value)\n    print(sheet['D4'].value)\n    print(sheet['A5'].value)\n    print(sheet['B5'].value)\n    print(sheet['C5'].value)\n    print(sheet['D5'].value)\n    print(sheet['A6'].value)\n    print(sheet['B6'].value)\n    print(sheet['C6'].value)\n    print(sheet['D6'].value)\n    print(sheet['A7'].value)\n    print(sheet['B7'].value)\n    print(sheet['C7'].value)\n    print(sheet['D7'].value)\n    print(sheet['A8'].value)\n    print(sheet['B8'].value)\n    print(sheet['C8'].value)\n    print(sheet['D8'].value)\n    print(sheet['A9'].value)\n    print(sheet['B9'].value)\n    print(sheet['C9'].value)\n    print(sheet['D9'].value)\n    print(sheet['A10'].value)\n    print(sheet['\n",
        "def main():\n    import openpyxl\n    wb = openpyxl.load_workbook('example.xlsx')\n    sheet = wb.get_sheet_by_name('Sheet1')\n    # print(sheet['A1'].value)\n    # print(sheet['B1'].value)\n    # print(sheet['C1'].value)\n    # print(sheet['D1'].value)\n    # print(sheet['A2'].value)\n    # print(sheet['B2'].value)\n    # print(sheet['C2'].value)\n    # print(sheet['D2'].value)\n    # print(sheet['A3'].value)\n    # print(sheet['B3'].value)\n    # print(sheet['C3'].value)\n    # print(sheet['D3'].value)\n    # print(sheet['A4'].value)\n    # print(sheet['B4'].value)\n    # print(sheet['C4'].value)\n    # print(sheet['D4'].value)\n    # print(sheet['A5'].value)\n    # print(sheet['B5'].value)\n    # print(sheet['C5'].value)\n    # print(sheet['D5'].value)\n    # print(sheet['A6'].value)\n    # print(sheet['B6'].value)\n    # print(sheet['C6'].value)\n    # print(sheet['D6'].value)\n    # print(sheet['A7'].value)\n    # print(sheet['B7'].value)\n    # print(sheet['C7'].value)\n    # print(sheet['D7'].value)\n    # print(sheet['A8'].value)\n    # print(sheet['B8'].value)\n    # print(sheet['C8'].value)\n    # print(sheet['D8'].value)\n    # print(sheet['A9'].value)\n    # print(sheet['B9'].value)\n    # print(sheet['C\n",
        "def main():\n    import openpyxl\n    wb = openpyxl.load_workbook('example.xlsx')\n    sheet = wb.get_sheet_by_name('Sheet1')\n    print(sheet['A1'].value)\n    print(sheet['B1'].value)\n    print(sheet['C1'].value)\n    print(sheet['D1'].value)\n    print(sheet['E1'].value)\n    print(sheet['F1'].value)\n    print(sheet['G1'].value)\n    print(sheet['H1'].value)\n    print(sheet['I1'].value)\n    print(sheet['J1'].value)\n    print(sheet['K1'].value)\n    print(sheet['L1'].value)\n    print(sheet['M1'].value)\n    print(sheet['N1'].value)\n    print(sheet['O1'].value)\n    print(sheet['P1'].value)\n    print(sheet['Q1'].value)\n    print(sheet['R1'].value)\n    print(sheet['S1'].value)\n    print(sheet['T1'].value)\n    print(sheet['U1'].value)\n    print(sheet['V1'].value)\n    print(sheet['W1'].value)\n    print(sheet['X1'].value)\n    print(sheet['Y1'].value)\n    print(sheet['Z1'].value)\n    print(sheet['AA1'].value)\n    print(sheet['AB1'].value)\n    print(sheet['AC1'].value)\n    print(sheet['AD1'].value)\n    print(sheet['AE1'].value)\n    print(sheet['AF1'].value)\n    print(sheet['AG1'].value)\n    print(sheet['AH1'].value)\n    print(sheet['AI1'].value)\n    print(sheet['AJ1'].value)\n    print(sheet['AK1'].value)\n    print(sheet\n",
        "def main():\n    import openpyxl\n    wb = openpyxl.load_workbook('example.xlsx')\n    sheet = wb.active\n    print(sheet['A1'].value)\n    print(sheet['B1'].value)\n    print(sheet['C1'].value)\n    print(sheet['D1'].value)\n    print(sheet['A2'].value)\n    print(sheet['B2'].value)\n    print(sheet['C2'].value)\n    print(sheet['D2'].value)\n    print(sheet['A3'].value)\n    print(sheet['B3'].value)\n    print(sheet['C3'].value)\n    print(sheet['D3'].value)\n    print(sheet['A4'].value)\n    print(sheet['B4'].value)\n    print(sheet['C4'].value)\n    print(sheet['D4'].value)\n    print(sheet['A5'].value)\n    print(sheet['B5'].value)\n    print(sheet['C5'].value)\n    print(sheet['D5'].value)\n    print(sheet['A6'].value)\n    print(sheet['B6'].value)\n    print(sheet['C6'].value)\n    print(sheet['D6'].value)\n    print(sheet['A7'].value)\n    print(sheet['B7'].value)\n    print(sheet['C7'].value)\n    print(sheet['D7'].value)\n    print(sheet['A8'].value)\n    print(sheet['B8'].value)\n    print(sheet['C8'].value)\n    print(sheet['D8'].value)\n    print(sheet['A9'].value)\n    print(sheet['B9'].value)\n    print(sheet['C9'].value)\n    print(sheet['D9'].value)\n    print(sheet['A10'].value)\n    print(sheet['B10'].value)\n    print(sheet\n",
        "def main():\n    import xlrd\n    import xlwt\n    import xlutils\n    import xlutils.copy\n    import sys\n    import os\n    import time\n    import datetime\n    import calendar\n    import re\n    import csv\n    import glob\n    import shutil\n    import openpyxl\n    import openpyxl.cell\n    import openpyxl.writer\n    import openpyxl.reader\n    import openpyxl.styles\n    import openpyxl.worksheet\n    import openpyxl.workbook\n    import openpyxl.cell.cell\n    import openpyxl.cell.write\n    import openpyxl.cell.text\n    import openpyxl.cell.text_cell\n    import openpyxl.cell.text_cell.text\n    import openpyxl.cell.text_cell.text_cell\n    import openpyxl.cell.text_cell.text_cell.text\n    import openpyxl.cell.text_cell.text_cell.text_cell\n    import openpyxl.cell.text_cell.text_cell.text_cell.text\n    import openpyxl.cell.text_cell.text_cell.text_cell.text_cell\n    import openpyxl.cell.text_cell.text_cell.text_cell.text_cell.text\n    import openpyxl.cell.text_cell.text_cell.text_cell.text_cell.text_cell\n    import openpyxl.cell.text_cell.text_cell.text_cell.text_cell.text_cell.text\n    import openpyxl.cell.text_cell.text_cell.text_cell.text_cell.text_cell.text_cell\n    import openpyxl.cell.text_cell.text_cell.text_cell.text_cell.text_cell.text_cell.text\n    import openpyxl.cell.text_cell.text_cell.text_cell.text_cell.text_cell.text_cell.text_cell\n    import openpyxl.cell.text\n",
        "def main():\n    import xlrd\n    import xlsxwriter\n    import os\n    import sys\n    import time\n    import datetime\n    import openpyxl\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n    import matplotlib.animation as animation\n    import matplotlib.dates as mdates\n    import matplotlib.ticker as ticker\n"
    ],
    "results": 8
},{
    "id": "365",
    "source": "soSearches",
    "language": "python",
    "query": "how to extend number series in list in python",
    "snippets": [
        "def fibonacci(n):\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return a\n",
        "def fibonacci(n):\n    a, b = 0, 1\n    while a < n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\n"
    ],
    "results": 10
},{
    "id": "366",
    "source": "soSearches",
    "language": "python",
    "query": "how to open a python3 file",
    "snippets": [
        "def main():\n    # open a file\n    infile = open(\"infile.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    outfile = open(\"outfile.txt\", \"w\")\n    # write the data to the file\n    outfile.write(data)\n    # close the file\n    outfile.close()\n",
        "def main():\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open a file\n    infile\n",
        "def main():\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the file\n    print(data)\n    # open a file\n    infile\n",
        "def main():\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.read()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readlines()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    data = infile.readline()\n    # close the file\n    infile.close()\n    # print the data\n    print(data)\n    # open the file\n    infile\n",
        "def main():\n    # open a file for reading\n    # r = read\n    # w = write\n    # a = append\n    # r+ = read and write\n    # w+ = write and read\n    # a+ = append and read\n    # b = binary mode\n    # t = text mode\n    # x = create file if it does not exist\n    # rb = read binary\n    # wb = write binary\n    # ab = append binary\n    # rb+ = read and write binary\n    # wb+ = write and read binary\n    # ab+ = append and read binary\n    # rt = read text\n    # wt = write text\n    # at = append text\n    # rt+ = read and write text\n    # wt+ = write and read text\n    # at+ = append and read text\n    #\n    # file = open(\"test.txt\", \"rt\")\n    # print(file.read())\n    # file.close()\n    #\n    # file = open(\"test.txt\", \"wt\")\n    # file.write(\"Hello World\")\n    # file.close()\n    #\n    # file = open(\"test.txt\", \"at\")\n    # file.write(\"Hello World\")\n    # file.close()\n    #\n    # file = open(\"test.txt\", \"rt\")\n    # print(file.read())\n    # file.close()\n    #\n    # file = open(\"test.txt\", \"rb\")\n    # print(file.read())\n    # file.close()\n    #\n    # file = open(\"test.txt\", \"wb\")\n    # file.write(b\"Hello World\")\n    # file.close()\n    #\n    # file = open(\"test.txt\", \"ab\")\n    # file.write(b\"Hello World\")\n    # file.close()\n    #\n    # file = open(\"test.txt\", \"rt\")\n    # print(file.read())\n    # file.close()\n    #\n    # file = open(\"test.txt\", \"rb\")\n    # print(file.read())\n    # file.close()\n    #\n",
        "def main():\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(contents)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(contents)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(contents)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(contents)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(contents)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(contents)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(contents)\n    # open a file\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the file\n    print(contents)\n    # open a file\n    inf\n",
        "def main():\n    # open a file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file\n    print(infile.read())\n    # close the file\n    infile.close()\n    # open a file for writing\n    outfile = open(\"test.txt\", \"w\")\n    # write to the file\n    outfile.write(\"Hello World\\n\")\n    # close the file\n    outfile.close()\n    # open a file for appending\n    outfile = open(\"test.txt\", \"a\")\n    # write to the file\n    outfile.write(\"Hello World\\n\")\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # write to the file\n    outfile.write(\"Hello World\\n\")\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file\n    print(outfile.read())\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file\n    print(outfile.read())\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file\n    print(outfile.read())\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file\n    print(outfile.read())\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file\n    print(outfile.read())\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open\n",
        "def main():\n    # open a file for reading\n    infile = open(\"test.txt\", \"r\")\n    # read the file's contents\n    contents = infile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    infile.close()\n    # open a file for writing\n    outfile = open(\"test.txt\", \"w\")\n    # write to the file\n    outfile.write(\"Hello World!\")\n    # close the file\n    outfile.close()\n    # open a file for appending\n    outfile = open(\"test.txt\", \"a\")\n    # write to the file\n    outfile.write(\"\\nHello World!\")\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file's contents\n    contents = outfile.read()\n    # print the file's contents\n    print(contents)\n    # write to the file\n    outfile.write(\"\\nHello World!\")\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file's contents\n    contents = outfile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file's contents\n    contents = outfile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\", \"r+\")\n    # read the file's contents\n    contents = outfile.read()\n    # print the file's contents\n    print(contents)\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open(\"test.txt\",\n",
        "def main():\n    # open a file for reading\n    infile = open('infile.txt', 'r')\n    # read the contents of the file\n    contents = infile.read()\n    # close the file\n    infile.close()\n    # print the contents of the file\n    print(contents)\n    # open a file for writing\n    outfile = open('outfile.txt', 'w')\n    # write to the file\n    outfile.write('This is a test')\n    # close the file\n    outfile.close()\n    # open a file for appending\n    outfile = open('outfile.txt', 'a')\n    # write to the file\n    outfile.write('\\nThis is another test')\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open('outfile.txt', 'r+')\n    # read the contents of the file\n    contents = outfile.read()\n    # print the contents of the file\n    print(contents)\n    # write to the file\n    outfile.write('\\nThis is a third test')\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open('outfile.txt', 'r+')\n    # read the contents of the file\n    contents = outfile.read()\n    # print the contents of the file\n    print(contents)\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open('outfile.txt', 'r+')\n    # read the contents of the file\n    contents = outfile.read()\n    # print the contents of the file\n    print(contents)\n    # close the file\n    outfile.close()\n    # open a file for reading and writing\n    outfile = open('outfile.txt', 'r+')\n    # read the contents of the file\n    contents = outfile.read()\n    # print the contents of the file\n    print(contents)\n    # close the file\n    outfile.close()\n"
    ],
    "results": 9
},{
    "id": "367",
    "source": "soSearches",
    "language": "python",
    "query": "how to uninstall a package on python",
    "snippets": [
        "def uninstall_package(package_name):\n    import subprocess\n    subprocess.call(['pip3', 'uninstall', package_name])\n",
        "def uninstall(package):\n    import subprocess\n    subprocess.call(['pip3', 'uninstall', package])\n",
        "def uninstall_package(package):\n    import subprocess\n    subprocess.call(['pip3', 'uninstall', package])\n",
        "def uninstall_package(package_name):\n    import subprocess\n    subprocess.call(['pip3', 'uninstall', package_name])\n    print('{} uninstalled'.format(package_name))\n",
        "def uninstall(package):\n    import subprocess\n    subprocess.call(['pip', 'uninstall', package])\n",
        "def uninstall_package(package_name):\n    import subprocess\n    subprocess.call(['pip3', 'uninstall', package_name])\n    print('Package ' + package_name + ' uninstalled')\n"
    ],
    "results": 9
},{
    "id": "368",
    "source": "soSearches",
    "language": "python",
    "query": "how to divide string to list of words python",
    "snippets": [
        "def main():\n    s = \"Hello World\"\n    print(s.split())\n    print(s.split('o'))\n    print(s.split('o', 1))\n    print(s.split('o', 2))\n    print(s.split('o', 3))\n    print(s.split('o', 4))\n    print(s.split('o', 5))\n    print(s.split('o', 6))\n    print(s.split('o', 7))\n    print(s.split('o', 8))\n    print(s.split('o', 9))\n    print(s.split('o', 10))\n    print(s.split('o', 11))\n    print(s.split('o', 12))\n    print(s.split('o', 13))\n    print(s.split('o', 14))\n    print(s.split('o', 15))\n    print(s.split('o', 16))\n    print(s.split('o', 17))\n    print(s.split('o', 18))\n    print(s.split('o', 19))\n    print(s.split('o', 20))\n    print(s.split('o', 21))\n    print(s.split('o', 22))\n    print(s.split('o', 23))\n    print(s.split('o', 24))\n    print(s.split('o', 25))\n    print(s.split('o', 26))\n    print(s.split('o', 27))\n    print(s.split('o', 28))\n    print(s.split('o', 29))\n    print(s.split('o', 30))\n    print(s.split('o', 31))\n    print(s.split('o', 32))\n    print(s.split('o', 33))\n    print(s.split('o', 34))\n    print(s.split('o', 35))\n    print(s.split('o', 36))\n    print(s.split('o', 37))\n    print(s.split('o', 38))\n    print(s.split('o', 39))\n",
        "def main():\n    s = \"This is a string\"\n    print(s.split())\n    print(s.split('i'))\n    print(s.split('i', 1))\n    print(s.split('i', 2))\n    print(s.split('i', 3))\n    print(s.split('i', 4))\n    print(s.split('i', 5))\n    print(s.split('i', 6))\n    print(s.split('i', 7))\n    print(s.split('i', 8))\n    print(s.split('i', 9))\n    print(s.split('i', 10))\n    print(s.split('i', 11))\n    print(s.split('i', 12))\n    print(s.split('i', 13))\n    print(s.split('i', 14))\n    print(s.split('i', 15))\n    print(s.split('i', 16))\n    print(s.split('i', 17))\n    print(s.split('i', 18))\n    print(s.split('i', 19))\n    print(s.split('i', 20))\n    print(s.split('i', 21))\n    print(s.split('i', 22))\n    print(s.split('i', 23))\n    print(s.split('i', 24))\n    print(s.split('i', 25))\n    print(s.split('i', 26))\n    print(s.split('i', 27))\n    print(s.split('i', 28))\n    print(s.split('i', 29))\n    print(s.split('i', 30))\n    print(s.split('i', 31))\n    print(s.split('i', 32))\n    print(s.split('i', 33))\n    print(s.split('i', 34))\n    print(s.split('i', 35))\n    print(s.split('i', 36))\n    print(s.split('i', 37))\n    print(s.split('i', 38))\n    print(s.split('i', 39))\n",
        "def main():\n    string = input(\"Enter a string: \")\n    words = string.split()\n    print(words)\n    for word in words:\n        print(word)\n",
        "def main():\n    s = \"this is a string\"\n    print(s.split())\n    print(s.split(' '))\n    print(s.split('i'))\n    print(s.split('i', 1))\n    print(s.split('i', 2))\n    print(s.split('i', 3))\n    print(s.split('i', 4))\n    print(s.split('i', 5))\n    print(s.split('i', 6))\n    print(s.split('i', 7))\n    print(s.split('i', 8))\n    print(s.split('i', 9))\n    print(s.split('i', 10))\n    print(s.split('i', 11))\n    print(s.split('i', 12))\n    print(s.split('i', 13))\n    print(s.split('i', 14))\n    print(s.split('i', 15))\n    print(s.split('i', 16))\n    print(s.split('i', 17))\n    print(s.split('i', 18))\n    print(s.split('i', 19))\n    print(s.split('i', 20))\n    print(s.split('i', 21))\n    print(s.split('i', 22))\n    print(s.split('i', 23))\n    print(s.split('i', 24))\n    print(s.split('i', 25))\n    print(s.split('i', 26))\n    print(s.split('i', 27))\n    print(s.split('i', 28))\n    print(s.split('i', 29))\n    print(s.split('i', 30))\n    print(s.split('i', 31))\n    print(s.split('i', 32))\n    print(s.split('i', 33))\n    print(s.split('i', 34))\n    print(s.split('i', 35))\n    print(s.split('i', 36))\n    print(s.split('i', 37))\n    print(s.split('i', 38))\n",
        "def main():\n    string = \"This is a string\"\n    print(string.split())\n    print(string.split('i'))\n    print(string.split('i', 1))\n    print(string.split('i', 2))\n    print(string.split('i', 3))\n    print(string.split('i', 4))\n    print(string.split('i', 5))\n    print(string.split('i', 6))\n    print(string.split('i', 7))\n    print(string.split('i', 8))\n    print(string.split('i', 9))\n    print(string.split('i', 10))\n    print(string.split('i', 11))\n    print(string.split('i', 12))\n    print(string.split('i', 13))\n    print(string.split('i', 14))\n    print(string.split('i', 15))\n    print(string.split('i', 16))\n    print(string.split('i', 17))\n    print(string.split('i', 18))\n    print(string.split('i', 19))\n    print(string.split('i', 20))\n    print(string.split('i', 21))\n    print(string.split('i', 22))\n    print(string.split('i', 23))\n    print(string.split('i', 24))\n    print(string.split('i', 25))\n    print(string.split('i', 26))\n    print(string.split('i', 27))\n    print(string.split('i', 28))\n    print(string.split('i', 29))\n    print(string.split('i', 30))\n    print(string.split('i', 31))\n    print(string.split('i', 32))\n    print(string.split('i', 33))\n    print(string.split('i', 34))\n    print(string.split('i', 35))\n    print(string.split('i', 36))\n    print(string.split('i', 37))\n    print(string.split('i', 38))\n    print(string.split('i', 39))\n",
        "def main():\n    s = \"Hello, world\"\n    print(s.split())\n    print(s.split(','))\n    print(s.split(',', 1))\n    print(s.split(',', 2))\n    print(s.split(',', 3))\n    print(s.split(',', 4))\n    print(s.split(',', 5))\n    print(s.split(',', 6))\n    print(s.split(',', 7))\n    print(s.split(',', 8))\n    print(s.split(',', 9))\n    print(s.split(',', 10))\n    print(s.split(',', 11))\n    print(s.split(',', 12))\n    print(s.split(',', 13))\n    print(s.split(',', 14))\n    print(s.split(',', 15))\n    print(s.split(',', 16))\n    print(s.split(',', 17))\n    print(s.split(',', 18))\n    print(s.split(',', 19))\n    print(s.split(',', 20))\n    print(s.split(',', 21))\n    print(s.split(',', 22))\n    print(s.split(',', 23))\n    print(s.split(',', 24))\n    print(s.split(',', 25))\n    print(s.split(',', 26))\n    print(s.split(',', 27))\n    print(s.split(',', 28))\n    print(s.split(',', 29))\n    print(s.split(',', 30))\n    print(s.split(',', 31))\n    print(s.split(',', 32))\n    print(s.split(',', 33))\n    print(s.split(',', 34))\n    print(s.split(',', 35))\n    print(s.split(',', 36))\n    print(s.split(',', 37))\n    print(s.split(',', 38))\n    print(s.split(',', 39))\n"
    ],
    "results": 10
},{
    "id": "369",
    "source": "soSearches",
    "language": "python",
    "query": "how to add difficulty level python",
    "snippets": [
        "def main():\n    print(\"This program adds two numbers.\")\n    num1 = int(input(\"Enter a number: \"))\n    num2 = int(input(\"Enter another number: \"))\n    print(\"The sum is: \", add(num1, num2))\n",
        "def main():\n    print(\"This program adds two numbers.\")\n    num1 = int(input(\"Enter a number: \"))\n    num2 = int(input(\"Enter another number: \"))\n    print(\"The numbers added together are: \", add(num1, num2))\n",
        "def main():\n    print(\"This program calculates the future value of a given amount of money.\")\n    print()\n\n    principal = eval(input(\"Enter the initial principal: \"))\n    apr = eval(input(\"Enter the annual interest rate: \"))\n    years = eval(input(\"Enter the number of years: \"))\n\n    print(\"\\nThe following is the amount of money in the account after\", years, \"years:\")\n    print(\"{:.2f}\".format(principal * (1 + apr / 100) ** years))\n",
        "def add(a, b):\n    return a + b\n",
        "def main():\n    print(\"This program calculates the future value of a given\")\n    print(\"initial amount invested at a given interest rate for a\")\n    print(\"given number of years.\")\n\n    years = int(input(\"Enter the number of years: \"))\n    principal = float(input(\"Enter the initial principal: \"))\n    apr = float(input(\"Enter the annual interest rate: \"))\n\n    for i in range(years):\n        principal = principal * (1 + apr)\n\n    print(\"The amount in\", years, \"years is:\", principal)\n"
    ],
    "results": 7
},{
    "id": "370",
    "source": "soSearches",
    "language": "python",
    "query": "how to sum inputs python",
    "snippets": [
        "def sum_inputs(numbers):\n    total = 0\n    for num in numbers:\n        total += num\n    return total\n",
        "def sum_inputs():\n    total = 0\n    for i in range(1, 4):\n        total += int(input(\"Enter a number: \"))\n    print(total)\n",
        "def sum_inputs():\n    total = 0\n    for i in range(1, 4):\n        total += int(input(\"Enter a number: \"))\n    print(total)\n    return total\n",
        "def sum_inputs():\n    total = 0\n    for i in range(1, 6):\n        total += int(input(\"Enter a number: \"))\n    print(\"The total is\", total)\n    return total\n",
        "def main():\n    print(\"This program sums a series of numbers.\")\n    print()\n    sum = 0.0\n    count = 0\n    while True:\n        number = input(\"Enter a number: \")\n        if number == \"done\":\n            break\n        try:\n            number = float(number)\n        except:\n            print(\"Invalid input.\")\n            continue\n        sum = sum + number\n        count = count + 1\n    print(\"The average of the numbers is\", sum / count)\n",
        "def main():\n    print(\"This program sums a series of numbers.\")\n    print(\"Please enter a series of numbers, one per line.\")\n    print(\"Enter a blank line to end.\")\n    total = 0.0\n    line = input(\"Total: \")\n    while line != \"\":\n        total += float(line)\n        line = input(\"Total: \")\n    print(\"The total is: \", total)\n",
        "def main():\n    print(\"This program sums a series of numbers.\")\n    print()\n\n    sum = 0\n    count = 0\n    while True:\n        number = int(input(\"Enter a number (0 to quit): \"))\n        if number == 0:\n            break\n        sum = sum + number\n        count = count + 1\n    print(\"The sum is\", sum)\n    print(\"The average is\", sum / count)\n",
        "def main():\n    print(\"This program sums up the numbers that you enter.\")\n    print()\n\n    total = 0\n    count = 0\n\n    while True:\n        number = input(\"Enter a number: \")\n        if number == \"done\":\n            break\n        try:\n            number = int(number)\n        except:\n            print(\"Invalid input\")\n            continue\n        total = total + number\n        count = count + 1\n    print(\"The total is\", total, \"for\", count, \"numbers\")\n"
    ],
    "results": 10
},{
    "id": "371",
    "source": "soSearches",
    "language": "python",
    "query": "how to multply numbers in a tuple python",
    "snippets": [
        "def multiply_numbers(tuple):\n    result = 1\n    for i in tuple:\n        result *= i\n    return result\n",
        "def multiply_numbers(t):\n    result = 1\n    for x in t:\n        result *= x\n    return result\n",
        "def multiply_numbers(t):\n    result = 1\n    for i in t:\n        result *= i\n    return result\n",
        "def multiply_numbers(tup):\n    result = 1\n    for i in tup:\n        result *= i\n    return result\n",
        "def multiply(tuple):\n    result = 1\n    for i in tuple:\n        result *= i\n    return result\n",
        "def multiply_numbers(tup):\n    total = 1\n    for num in tup:\n        total *= num\n    return total\n"
    ],
    "results": 10
},{
    "id": "372",
    "source": "soSearches",
    "language": "python",
    "query": "how to write in a .txt file with python",
    "snippets": [
        "def main():\n    # open a file for writing\n    outfile = open('mydata.txt', 'w')\n    # write some data to the file\n    outfile.write('Hello\\n')\n    outfile.write('World\\n')\n    outfile.write('!\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('mydata.txt', 'r')\n    # read the data from the file\n    data = infile.read()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file for appending\n    outfile = open('mydata.txt', 'a')\n    # write some data to the file\n    outfile.write('Hello\\n')\n    outfile.write('World\\n')\n    outfile.write('!\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('mydata.txt', 'r')\n    # read the data from the file\n    data = infile.read()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open('mydata.txt', 'r')\n    # read the data from the file\n    data = infile.readlines()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open('mydata.txt', 'r')\n    # read the data from the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file for reading\n    infile = open('mydata.txt', 'r')\n    # read the data from the file\n    data = infile.readline()\n    # print the data\n    print(data)\n    # close the file\n    infile.close()\n    # open the file for\n",
        "def main():\n    # open a file for writing\n    f = open(\"test.txt\", \"w\")\n    # write some lines of data to the file\n    f.write(\"Line 1\\n\")\n    f.write(\"Line 2\\n\")\n    f.write(\"Line 3\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for appending\n    f = open(\"test.txt\", \"a\")\n    # write some lines of data to the file\n    f.write(\"Line 4\\n\")\n    f.write(\"Line 5\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.readlines())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"test.txt\", \"r\")\n    # read the file's contents\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the\n",
        "def main():\n    # open a file for writing\n    f = open(\"myfile.txt\", \"w\")\n    # write some lines of data to the file\n    for i in range(10):\n        f.write(\"This is line \" + str(i) + \"\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n",
        "def main():\n    with open('test.txt', 'w') as f:\n        f.write('Hello World!')\n",
        "def main():\n    # open a file for writing\n    outfile = open(\"myfile.txt\", \"w\")\n    # write some lines of data to the file\n    outfile.write(\"This is the first line.\\n\")\n    outfile.write(\"This is the second line.\\n\")\n    outfile.write(\"This is the third line.\\n\")\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open(\"myfile.txt\", \"r\")\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n",
        "def main():\n    # open a file for writing\n    # the 'w' argument means that the file will be created if it does not exist\n    # if it does exist, it will be overwritten\n    outfile = open('myfile.txt', 'w')\n    outfile.write('Hello\\n')\n    outfile.write('World\\n')\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.read())\n    infile.close()\n",
        "def main():\n    # open a file for writing\n    # the 'w' argument means write\n    outfile = open('myfile.txt', 'w')\n    # write some lines to the file\n    outfile.write('This is line #1\\n')\n    outfile.write('This is line #2\\n')\n    outfile.write('This is line #3\\n')\n    # close the file\n    outfile.close()\n    # open the file for reading\n    infile = open('myfile.txt', 'r')\n    # read the file's contents\n    print(infile.read())\n    # close the file\n    infile.close()\n",
        "def main():\n    # open a file for writing\n    # w = write, a = append, r = read\n    thefile = open(\"test.txt\", \"w\")\n    thefile.write(\"This is a test\\n\")\n    thefile.write(\"This is another test\\n\")\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.read())\n    thefile.close()\n    # open the file for appending\n    thefile = open(\"test.txt\", \"a\")\n    thefile.write(\"This is a test\\n\")\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.read())\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.readline())\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.readlines())\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.readline())\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.readline())\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.readline())\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.readline())\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.readline())\n    thefile.close()\n    # open the file for reading\n    thefile = open(\"test.txt\", \"r\")\n    print(thefile.readline())\n",
        "def main():\n    # open a file for writing\n    # the 'w' argument means write\n    outfile = open('myfile.txt', 'w')\n    outfile.write('Hello World!\\n')\n    outfile.write('This is a test.\\n')\n    outfile.close()\n    # open a file for reading\n    infile = open('myfile.txt', 'r')\n    print(infile.read())\n    infile.close()\n    # open a file for appending\n    outfile = open('myfile.txt', 'a')\n    outfile.write('This is another line.\\n')\n    outfile.close()\n    # open a file for reading\n    infile = open('myfile.txt', 'r')\n    print(infile.read())\n    infile.close()\n    # open a file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    print(outfile.read())\n    outfile.write('This is another line.\\n')\n    outfile.close()\n    # open a file for reading\n    infile = open('myfile.txt', 'r')\n    print(infile.read())\n    infile.close()\n    # open a file for writing\n    outfile = open('myfile.txt', 'w')\n    outfile.write('Hello World!\\n')\n    outfile.close()\n    # open a file for reading\n    infile = open('myfile.txt', 'r')\n    print(infile.read())\n    infile.close()\n    # open a file for appending\n    outfile = open('myfile.txt', 'a')\n    outfile.write('This is another line.\\n')\n    outfile.close()\n    # open a file for reading\n    infile = open('myfile.txt', 'r')\n    print(infile.read())\n    infile.close()\n    # open a file for reading and writing\n    outfile = open('myfile.txt', 'r+')\n    print(outfile.read())\n    outfile.write('\n",
        "def main():\n    # open the file for writing\n    # create the file if it does not exist\n    # truncate the file if it exists\n    thefile = open('lines.txt', 'w')\n\n    # get the number of lines to write\n    lines = int(input('How many lines do you want to write? '))\n\n    # get the line of text\n    for i in range(lines):\n        line = input('Enter a line of text: ')\n        thefile.write(line + '\\n')\n\n    # close the file\n    thefile.close()\n    print('Data written to file.')\n"
    ],
    "results": 10
},{
    "id": "373",
    "source": "soSearches",
    "language": "python",
    "query": "how to get certai colum data in pandas python",
    "snippets": [
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import itertools\n    import collections\n    import statistics\n    import math\n    import argparse\n    import pickle\n    import copy\n    import inspect\n    import logging\n    import gc\n    import resource\n    import subprocess\n    import multiprocessing\n    import csv\n    import nltk\n    import scipy\n    import xgboost\n    import lightgbm\n    import catboost\n    import shap\n    import plotly\n    import plotly.graph_objs as go\n    import plotly.express as px\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.express as px\n    import plotly.graph_objs as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.graph_objs as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.graph_objs as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.graph_objs as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as tls\n    import plotly.figure_factory as ff\n    import plotly.graph_objs as go\n    import plotly.io as pio\n    import plotly.offline as py\n    import plotly.tools as t\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import os\n    import sys\n    import re\n    import time\n    import datetime\n    import calendar\n    import random\n    import json\n    import csv\n    import collections\n    import itertools\n    import scipy\n    import statsmodels.api as sm\n    import statsmodels.formula.api as smf\n    import statsmodels.stats.api as sms\n    import statsmodels.tools.tools as smt\n    import statsmodels.sandbox.stats.multicomp as multicomp\n    import scipy.stats as stats\n    import scipy.cluster.hierarchy as hac\n    import scipy.cluster.vq as vq\n    import scipy.spatial.distance as dist\n    import scipy.cluster.hierarchy.linkage as linkage\n    import scipy.cluster.hierarchy.fcluster as fcluster\n    import scipy.cluster.hierarchy.dendrogram as dendrogram\n    import scipy.cluster.hierarchy.leaders as leaders\n    import scipy.cluster.hierarchy.cophenet as cophenet\n    import scipy.cluster.hierarchy.inconsistency as inconsistency\n    import scipy.cluster.hierarchy.average as average\n    import scipy.cluster.hierarchy.cut_tree as cut_tree\n    import scipy.cluster.hierarchy.maxclust as maxclust\n    import scipy.cluster.hierarchy.dendrogram_truncate as dendrogram_truncate\n    import scipy.cluster.hierarchy.dendrogram_color as dendrogram_color\n    import scipy.cluster.hierarchy.dendrogram_label as dendrogram_label\n    import scipy.cluster.hierarchy.dendrogram_legend as dendrogram_legend\n    import scipy.\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import os\n    import sys\n    import time\n    import datetime\n    import calendar\n    import re\n    import csv\n    import json\n    import urllib.request\n    import urllib.parse\n    import urllib.error\n    import http.client\n    import http.server\n    import socketserver\n    import ssl\n    import base64\n    import hashlib\n    import hmac\n    import random\n    import string\n    import struct\n    import zlib\n    import gzip\n    import cStringIO\n    import io\n    import traceback\n    import itertools\n    import collections\n    import functools\n    import operator\n    import math\n    import multiprocessing\n    import multiprocessing.pool\n    import threading\n    import threading.local\n    import concurrent.futures\n    import concurrent.futures.thread\n    import concurrent.futures.process\n    import concurrent.futures.asyncio\n    import concurrent.futures.future\n    import concurrent.futures.task\n    import concurrent.futures.threadpool\n    import concurrent.futures.threadpoolexecutor\n    import concurrent.futures.processpool\n    import concurrent.futures.processpoolexecutor\n    import concurrent.futures.futures\n    import concurrent.futures.future\n    import concurrent.futures.task\n    import concurrent.futures.threadpool\n    import concurrent.futures.threadpoolexecutor\n    import concurrent.futures.processpool\n    import concurrent.futures.processpoolexecutor\n    import concurrent.futures.futures\n    import concurrent.futures.future\n    import concurrent.futures.task\n    import concurrent.futures.threadpool\n    import concurrent.futures.threadpoolexecutor\n    import concurrent.futures.processpool\n    import concurrent.futures.processpoolexecutor\n    import concurrent.futures.\n",
        "def main():\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import sys\n    import os\n    import re\n    import time\n    import datetime\n    import glob\n    import csv\n    import json\n    import collections\n    import itertools\n    import scipy\n    import scipy.stats\n    import scipy.cluster.hierarchy as sch\n    import scipy.spatial.distance as ssd\n    import statistics\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import itertools\n    import multiprocessing\n    import copy\n    import platform\n    import pickle\n    import statistics\n    import functools\n    import cProfile\n    import pstats\n    import resource\n    import subprocess\n    import uuid\n    import glob\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import sys\n    import os\n    import re\n    import time\n    import datetime\n    import glob\n    import csv\n    import json\n    import collections\n    import itertools\n    import scipy\n    import scipy.stats\n    import scipy.cluster.hierarchy as sch\n    import scipy.spatial.distance as ssd\n    import statistics\n    import matplotlib.pyplot as plt\n    import matplotlib.gridspec as gridspec\n    import itertools\n    import multiprocessing\n    import copy\n    import platform\n    import pickle\n    import statistics\n    import functools\n    import cProfile\n    import pstats\n    import resource\n    import subprocess\n    import uuid\n    import glob\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import sys\n    import os\n    import re\n    import time\n    import datetime\n    import glob\n    import c\n",
        "def get_data(df, col):\n    return df[col]\n",
        "def get_data(data, col):\n    return data[col]\n"
    ],
    "results": 8
},{
    "id": "374",
    "source": "soSearches",
    "language": "python",
    "query": "how to call python class in new directory",
    "snippets": [
        "def main():\n    from my_module import MyClass\n    obj = MyClass()\n    obj.print_name()\n    obj.print_age()\n    obj.print_address()\n    obj.print_phone()\n    obj.print_email()\n    obj.print_website()\n    obj.print_company()\n    obj.print_school()\n    obj.print_interests()\n    obj.print_languages()\n    obj.print_skills()\n    obj.print_github()\n    obj.print_linkedin()\n    obj.print_twitter()\n    obj.print_facebook()\n    obj.print_instagram()\n    obj.print_youtube()\n    obj.print_quotes()\n    obj.print_about()\n    obj.print_hobbies()\n    obj.print_music()\n    obj.print_movies()\n    obj.print_books()\n    obj.print_food()\n    obj.print_travel()\n    obj.print_sports()\n    obj.print_games()\n    obj.print_books()\n    obj.print_music()\n    obj.print_movies()\n    obj.print_food()\n    obj.print_travel()\n    obj.print_sports()\n    obj.print_games()\n    obj.print_books()\n    obj.print_music()\n    obj.print_movies()\n    obj.print_food()\n    obj.print_travel()\n    obj.print_sports()\n    obj.print_games()\n    obj.print_books()\n    obj.print_music()\n    obj.print_movies()\n    obj.print_food()\n    obj.print_travel()\n    obj.print_sports()\n    obj.print_games()\n    obj.print_books()\n    obj.print_music()\n    obj.print_movies()\n    obj.print_food()\n    obj.print_travel()\n    obj.print_sports()\n    obj.print_games()\n    obj.print_books()\n    obj.print_music()\n    obj.print_movies()\n    obj\n",
        "def main():\n    from my_module import MyClass\n    my_class = MyClass()\n    my_class.print_hello()\n"
    ],
    "results": 2
},{
    "id": "375",
    "source": "soSearches",
    "language": "python",
    "query": "how to make a fraction in python",
    "snippets": [
        "def main():\n    print(Fraction(1, 2))\n    print(Fraction(2, 4))\n    print(Fraction(3, 6))\n    print(Fraction(4, 8))\n    print(Fraction(5, 10))\n    print(Fraction(6, 12))\n    print(Fraction(7, 14))\n    print(Fraction(8, 16))\n    print(Fraction(9, 18))\n    print(Fraction(10, 20))\n    print(Fraction(11, 22))\n    print(Fraction(12, 24))\n    print(Fraction(13, 26))\n    print(Fraction(14, 28))\n    print(Fraction(15, 30))\n    print(Fraction(16, 32))\n    print(Fraction(17, 34))\n    print(Fraction(18, 36))\n    print(Fraction(19, 38))\n    print(Fraction(20, 40))\n    print(Fraction(21, 42))\n    print(Fraction(22, 44))\n    print(Fraction(23, 46))\n    print(Fraction(24, 48))\n    print(Fraction(25, 50))\n    print(Fraction(26, 52))\n    print(Fraction(27, 54))\n    print(Fraction(28, 56))\n    print(Fraction(29, 58))\n    print(Fraction(30, 60))\n    print(Fraction(31, 62))\n    print(Fraction(32, 64))\n    print(Fraction(33, 66))\n    print(Fraction(34, 68))\n    print(Fraction(35, 70))\n    print(Fraction(36, 72))\n    print(Fraction(37, 74))\n    print(Fraction(38, 76))\n    print(Fraction(39, 78))\n    print(Fraction(40, 80))\n    print(Fraction(41, 82))\n    print(Fraction(42, 84))\n    print(Fraction(43, 86))\n    print(Fraction(44, 88))\n    print(Fraction(45, 90))\n",
        "def main():\n    print(Fraction(1, 2))\n    print(Fraction(1, 2) + Fraction(1, 3))\n    print(Fraction(1, 2) * Fraction(1, 3))\n    print(Fraction(1, 2) / Fraction(1, 3))\n    print(Fraction(1, 2) - Fraction(1, 3))\n    print(Fraction(1, 2) == Fraction(1, 3))\n    print(Fraction(1, 2) != Fraction(1, 3))\n    print(Fraction(1, 2) > Fraction(1, 3))\n    print(Fraction(1, 2) < Fraction(1, 3))\n    print(Fraction(1, 2) >= Fraction(1, 3))\n    print(Fraction(1, 2) <= Fraction(1, 3))\n    print(Fraction(1, 2) + 1)\n    print(Fraction(1, 2) - 1)\n    print(Fraction(1, 2) * 2)\n    print(Fraction(1, 2) / 2)\n    print(Fraction(1, 2) + Fraction(1, 3))\n    print(Fraction(1, 2) - Fraction(1, 3))\n    print(Fraction(1, 2) * Fraction(1, 3))\n    print(Fraction(1, 2) / Fraction(1, 3))\n    print(Fraction(1, 2) == 1)\n    print(Fraction(1, 2) != 1)\n    print(Fraction(1, 2) > 1)\n    print(Fraction(1, 2) < 1)\n    print(Fraction(1, 2) >= 1)\n    print(Fraction(1, 2) <= 1)\n    print(Fraction(1, 2) + 1.0)\n    print(Fraction(1, 2) - 1.0)\n    print(Fraction(1, 2) * 2.0)\n    print(Fraction(1, 2) / 2.0)\n    print(Fraction(1, 2) + Fraction(1\n",
        "def main():\n    print(Fraction(1, 2))\n    print(Fraction(2, 3))\n    print(Fraction(3, 4))\n    print(Fraction(4, 5))\n    print(Fraction(5, 6))\n    print(Fraction(6, 7))\n    print(Fraction(7, 8))\n    print(Fraction(8, 9))\n    print(Fraction(9, 10))\n    print(Fraction(10, 11))\n    print(Fraction(11, 12))\n    print(Fraction(12, 13))\n    print(Fraction(13, 14))\n    print(Fraction(14, 15))\n    print(Fraction(15, 16))\n    print(Fraction(16, 17))\n    print(Fraction(17, 18))\n    print(Fraction(18, 19))\n    print(Fraction(19, 20))\n    print(Fraction(20, 21))\n    print(Fraction(21, 22))\n    print(Fraction(22, 23))\n    print(Fraction(23, 24))\n    print(Fraction(24, 25))\n    print(Fraction(25, 26))\n    print(Fraction(26, 27))\n    print(Fraction(27, 28))\n    print(Fraction(28, 29))\n    print(Fraction(29, 30))\n    print(Fraction(30, 31))\n    print(Fraction(31, 32))\n    print(Fraction(32, 33))\n    print(Fraction(33, 34))\n    print(Fraction(34, 35))\n    print(Fraction(35, 36))\n    print(Fraction(36, 37))\n    print(Fraction(37, 38))\n    print(Fraction(38, 39))\n    print(Fraction(39, 40))\n    print(Fraction(40, 41))\n    print(Fraction(41, 42))\n    print(Fraction(42, 43))\n    print(Fraction(43, 44))\n    print(Fraction(44, 45))\n    print(Fraction(45, 46))\n",
        "def main():\n    print(fraction(1, 2))\n    print(fraction(2, 4))\n    print(fraction(3, 6))\n    print(fraction(4, 8))\n    print(fraction(5, 10))\n    print(fraction(6, 12))\n    print(fraction(7, 14))\n    print(fraction(8, 16))\n    print(fraction(9, 18))\n    print(fraction(10, 20))\n    print(fraction(11, 22))\n    print(fraction(12, 24))\n    print(fraction(13, 26))\n    print(fraction(14, 28))\n    print(fraction(15, 30))\n    print(fraction(16, 32))\n    print(fraction(17, 34))\n    print(fraction(18, 36))\n    print(fraction(19, 38))\n    print(fraction(20, 40))\n    print(fraction(21, 42))\n    print(fraction(22, 44))\n    print(fraction(23, 46))\n    print(fraction(24, 48))\n    print(fraction(25, 50))\n    print(fraction(26, 52))\n    print(fraction(27, 54))\n    print(fraction(28, 56))\n    print(fraction(29, 58))\n    print(fraction(30, 60))\n    print(fraction(31, 62))\n    print(fraction(32, 64))\n    print(fraction(33, 66))\n    print(fraction(34, 68))\n    print(fraction(35, 70))\n    print(fraction(36, 72))\n    print(fraction(37, 74))\n    print(fraction(38, 76))\n    print(fraction(39, 78))\n    print(fraction(40, 80))\n    print(fraction(41, 82))\n    print(fraction(42, 84))\n    print(fraction(43, 86))\n    print(fraction(44, 88))\n    print(fraction(45, 90))\n",
        "def main():\n    print(\"Enter the numerator:\")\n    numerator = int(input())\n    print(\"Enter the denominator:\")\n    denominator = int(input())\n    print(\"The fraction is:\", numerator, \"/\", denominator)\n",
        "def main():\n    print(fraction(1,2))\n    print(fraction(2,3))\n    print(fraction(3,4))\n    print(fraction(4,5))\n    print(fraction(5,6))\n    print(fraction(6,7))\n    print(fraction(7,8))\n    print(fraction(8,9))\n    print(fraction(9,10))\n    print(fraction(10,11))\n    print(fraction(11,12))\n    print(fraction(12,13))\n    print(fraction(13,14))\n    print(fraction(14,15))\n    print(fraction(15,16))\n    print(fraction(16,17))\n    print(fraction(17,18))\n    print(fraction(18,19))\n    print(fraction(19,20))\n    print(fraction(20,21))\n    print(fraction(21,22))\n    print(fraction(22,23))\n    print(fraction(23,24))\n    print(fraction(24,25))\n    print(fraction(25,26))\n    print(fraction(26,27))\n    print(fraction(27,28))\n    print(fraction(28,29))\n    print(fraction(29,30))\n    print(fraction(30,31))\n    print(fraction(31,32))\n    print(fraction(32,33))\n    print(fraction(33,34))\n    print(fraction(34,35))\n    print(fraction(35,36))\n    print(fraction(36,37))\n    print(fraction(37,38))\n    print(fraction(38,39))\n    print(fraction(39,40))\n    print(fraction(40,41))\n    print(fraction(41,42))\n    print(fraction(42,43))\n    print(fraction(43,44))\n    print(fraction(44,45))\n    print(fraction(45,46))\n"
    ],
    "results": 10
},{
    "id": "376",
    "source": "soSearches",
    "language": "python",
    "query": "how to name the rows and columns in a board  in python",
    "snippets": [
        "def print_board(board):\n    for i in range(len(board)):\n        for j in range(len(board[i])):\n            print(board[i][j], end=\" \")\n        print()\n",
        "def print_board(board):\n    for i in range(len(board)):\n        for j in range(len(board[i])):\n            print(board[i][j], end=\" \")\n        print()\n    print()\n",
        "def print_board(board):\n    for i in range(len(board)):\n        for j in range(len(board[i])):\n            print(board[i][j], end=' ')\n        print()\n    print()\n",
        "def print_board(board):\n    for row in board:\n        print(row)\n",
        "def print_board(board):\n    for i in range(len(board)):\n        print(board[i])\n",
        "def main():\n    board = [['_'] * 3 for i in range(3)]\n    for i in range(3):\n        for j in range(3):\n            board[i][j] = '{}{}'.format(i, j)\n    for i in range(3):\n        print('  '.join(board[i]))\n"
    ],
    "results": 10
},{
    "id": "377",
    "source": "soSearches",
    "language": "python",
    "query": "how to get the number of elements within a list  python",
    "snippets": [
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get the length of the list\n    print(len(my_list))\n    # get the number of elements in the list\n    print(len(my_list) - 1)\n    # get the number of elements in the list\n    print(len(my_list) + 1)\n    # get the number of elements in the list\n    print(len(my_list) * 2)\n    # get the number of elements in the list\n    print(len(my_list) / 2)\n    # get the number of elements in the list\n    print(len(my_list) // 2)\n    # get the number of elements in the list\n    print(len(my_list) ** 2)\n    # get the number of elements in the list\n    print(len(my_list) % 2)\n    # get the number of elements in the list\n    print(len(my_list) ** 3)\n    # get the number of elements in the list\n    print(len(my_list) ** 4)\n    # get the number of elements in the list\n    print(len(my_list) ** 5)\n    # get the number of elements in the list\n    print(len(my_list) ** 6)\n    # get the number of elements in the list\n    print(len(my_list) ** 7)\n    # get the number of elements in the list\n    print(len(my_list) ** 8)\n    # get the number of elements in the list\n    print(len(my_list) ** 9)\n    # get the number of elements in the list\n    print(len(my_list) ** 10)\n    # get the number of elements in the list\n    print(len(my_list) ** 11)\n    # get the number of elements in the list\n    print(len(my_list) ** 12)\n    # get the number of elements in the list\n    print(len(my_list) ** 13)\n    # get the number of elements in the list\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get the length of the list\n    print(len(my_list))\n    # get the number of elements in the list\n    print(len(my_list) - 1)\n    # get the number of elements in the list\n    print(len(my_list) + 1)\n    # get the number of elements in the list\n    print(len(my_list) * 2)\n    # get the number of elements in the list\n    print(len(my_list) / 2)\n    # get the number of elements in the list\n    print(len(my_list) ** 2)\n    # get the number of elements in the list\n    print(len(my_list) % 2)\n    # get the number of elements in the list\n    print(len(my_list) // 2)\n    # get the number of elements in the list\n    print(len(my_list) ** 3)\n    # get the number of elements in the list\n    print(len(my_list) ** 4)\n    # get the number of elements in the list\n    print(len(my_list) ** 5)\n    # get the number of elements in the list\n    print(len(my_list) ** 6)\n    # get the number of elements in the list\n    print(len(my_list) ** 7)\n    # get the number of elements in the list\n    print(len(my_list) ** 8)\n    # get the number of elements in the list\n    print(len(my_list) ** 9)\n    # get the number of elements in the list\n    print(len(my_list) ** 10)\n    # get the number of elements in the list\n    print(len(my_list) ** 11)\n    # get the number of elements in the list\n    print(len(my_list) ** 12)\n    # get the number of elements in the list\n    print(len(my_list) ** 13)\n    # get the number of elements in the list\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get the length of the list\n    print(len(my_list))\n    # get the number of elements in the list\n    print(my_list[0:10])\n    # get the number of elements in the list\n    print(my_list[0:11])\n    # get the number of elements in the list\n    print(my_list[0:12])\n    # get the number of elements in the list\n    print(my_list[0:13])\n    # get the number of elements in the list\n    print(my_list[0:14])\n    # get the number of elements in the list\n    print(my_list[0:15])\n    # get the number of elements in the list\n    print(my_list[0:16])\n    # get the number of elements in the list\n    print(my_list[0:17])\n    # get the number of elements in the list\n    print(my_list[0:18])\n    # get the number of elements in the list\n    print(my_list[0:19])\n    # get the number of elements in the list\n    print(my_list[0:20])\n    # get the number of elements in the list\n    print(my_list[0:21])\n    # get the number of elements in the list\n    print(my_list[0:22])\n    # get the number of elements in the list\n    print(my_list[0:23])\n    # get the number of elements in the list\n    print(my_list[0:24])\n    # get the number of elements in the list\n    print(my_list[0:25])\n    # get the number of elements in the list\n    print(my_list[0:26])\n    # get the number of elements in the list\n    print(my_list[0:27])\n    # get the number of elements in the list\n    print(my_list[0:28])\n    # get the number of elements\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get the length of the list\n    print(len(my_list))\n    # get the number of elements in the list\n    print(my_list[0])\n    print(my_list[1])\n    print(my_list[2])\n    print(my_list[3])\n    print(my_list[4])\n    print(my_list[5])\n    print(my_list[6])\n    print(my_list[7])\n    print(my_list[8])\n    print(my_list[9])\n    print(my_list[10])\n    print(my_list[11])\n    print(my_list[12])\n    print(my_list[13])\n    print(my_list[14])\n    print(my_list[15])\n    print(my_list[16])\n    print(my_list[17])\n    print(my_list[18])\n    print(my_list[19])\n    print(my_list[20])\n    print(my_list[21])\n    print(my_list[22])\n    print(my_list[23])\n    print(my_list[24])\n    print(my_list[25])\n    print(my_list[26])\n    print(my_list[27])\n    print(my_list[28])\n    print(my_list[29])\n    print(my_list[30])\n    print(my_list[31])\n    print(my_list[32])\n    print(my_list[33])\n    print(my_list[34])\n    print(my_list[35])\n    print(my_list[36])\n    print(my_list[37])\n    print(my_list[38])\n    print(my_list[39])\n    print(my_list[40])\n    print(my_list[41])\n    print(my_list[42])\n    print(\n",
        "def main():\n    # create a list\n    my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # print the length of the list\n    print(len(my_list))\n    # print the last element of the list\n    print(my_list[-1])\n    # print the first element of the list\n    print(my_list[0])\n    # print the third element of the list\n    print(my_list[2])\n    # print the fourth element of the list\n    print(my_list[3])\n    # print the fifth element of the list\n    print(my_list[4])\n    # print the sixth element of the list\n    print(my_list[5])\n    # print the seventh element of the list\n    print(my_list[6])\n    # print the eighth element of the list\n    print(my_list[7])\n    # print the ninth element of the list\n    print(my_list[8])\n    # print the tenth element of the list\n    print(my_list[9])\n    # print the eleventh element of the list\n    print(my_list[10])\n    # print the twelfth element of the list\n    print(my_list[11])\n    # print the thirteenth element of the list\n    print(my_list[12])\n    # print the fourteenth element of the list\n    print(my_list[13])\n    # print the fifteenth element of the list\n    print(my_list[14])\n    # print the sixteenth element of the list\n    print(my_list[15])\n    # print the seventeenth element of the list\n    print(my_list[16])\n    # print the eighteenth element of the list\n    print(my_list[17])\n    # print the nineteenth element of the list\n    print(my_list[18])\n    # print the twentieth element of the list\n    print(my_list[19])\n    # print the twenty-first element of the list\n    print(my_list[20])\n    # print the twenty-second element of the list\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get the length of the list\n    print(len(mylist))\n    # get the number of elements in the list\n    print(len(mylist) - 1)\n    # get the number of elements in the list\n    print(len(mylist) + 1)\n    # get the number of elements in the list\n    print(len(mylist) * 2)\n    # get the number of elements in the list\n    print(len(mylist) / 2)\n    # get the number of elements in the list\n    print(len(mylist) % 2)\n    # get the number of elements in the list\n    print(len(mylist) ** 2)\n    # get the number of elements in the list\n    print(len(mylist) // 2)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.5)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.25)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.125)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.0625)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.03125)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.015625)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.0078125)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.00390625)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.001953125)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.0009765625)\n    # get the number of elements in the list\n    print(len(mylist) **\n",
        "def main():\n    # create a list\n    mylist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get the length of the list\n    print(len(mylist))\n    # get the number of elements in the list\n    print(len(mylist) - 1)\n    # get the number of elements in the list\n    print(len(mylist) + 1)\n    # get the number of elements in the list\n    print(len(mylist) * 2)\n    # get the number of elements in the list\n    print(len(mylist) / 2)\n    # get the number of elements in the list\n    print(len(mylist) ** 2)\n    # get the number of elements in the list\n    print(len(mylist) % 2)\n    # get the number of elements in the list\n    print(len(mylist) // 2)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.5)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.25)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.125)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.0625)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.03125)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.015625)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.0078125)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.00390625)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.001953125)\n    # get the number of elements in the list\n    print(len(mylist) ** 0.0009765625)\n    # get the number of elements in the list\n    print(len(mylist) **\n",
        "def main():\n    # create a list\n    list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # get the length of the list\n    print(\"The length of the list is:\", len(list1))\n    # get the number of elements in the list\n    print(\"The number of elements in the list is:\", len(list1))\n"
    ],
    "results": 10
},{
    "id": "378",
    "source": "soSearches",
    "language": "python",
    "query": "how to make a array in python",
    "snippets": [
        "def main():\n    # make an array\n    a = [1, 2, 3, 4, 5]\n    # print the array\n    print(a)\n    # print the array with index\n    print(a[0])\n    print(a[1])\n    print(a[2])\n    print(a[3])\n    print(a[4])\n    # print the array with negative index\n    print(a[-1])\n    print(a[-2])\n    print(a[-3])\n    print(a[-4])\n    print(a[-5])\n    # print the array with range\n    print(a[0:3])\n    print(a[1:4])\n    print(a[2:5])\n    print(a[3:6])\n    print(a[4:7])\n    print(a[5:8])\n    print(a[6:9])\n    print(a[7:10])\n    print(a[8:11])\n    print(a[9:12])\n    print(a[10:13])\n    print(a[11:14])\n    print(a[12:15])\n    print(a[13:16])\n    print(a[14:17])\n    print(a[15:18])\n    print(a[16:19])\n    print(a[17:20])\n    print(a[18:21])\n    print(a[19:22])\n    print(a[20:23])\n    print(a[21:24])\n    print(a[22:25])\n    print(a[23:26])\n    print(a[24:27])\n    print(a[25:28])\n    print(a[26:29])\n    print(a[27:30])\n    print(a[28:31])\n    print(a[29:32])\n    print(a[30:33])\n    print(a[31:34])\n    print(a[32:35])\n    print(a[33:36])\n    print(a[34:37])\n    print(\n",
        "def main():\n    # create an array of integers\n    my_array = [1, 2, 3, 4, 5]\n    print(my_array)\n    # create an array of strings\n    my_array = [\"one\", \"two\", \"three\", \"four\", \"five\"]\n    print(my_array)\n    # create an array of mixed data types\n    my_array = [\"one\", 2, 3.0, 4, \"five\"]\n    print(my_array)\n    # create an array of arrays\n    my_array = [[\"one\", 2, 3.0, 4, \"five\"], [\"six\", 7, 8.0, 9, \"ten\"]]\n    print(my_array)\n    # create an array of arrays with mixed data types\n    my_array = [[\"one\", 2, 3.0, 4, \"five\"], [\"six\", 7, 8.0, 9, \"ten\"], [11, 12.0, 13, 14, \"fifteen\"]]\n    print(my_array)\n    # create an array of arrays with mixed data types\n    my_array = [[\"one\", 2, 3.0, 4, \"five\"], [\"six\", 7, 8.0, 9, \"ten\"], [11, 12.0, 13, 14, \"fifteen\"], [15, 16.0, 17, 18, \"nineteen\"]]\n    print(my_array)\n    # create an array of arrays with mixed data types\n    my_array = [[\"one\", 2, 3.0, 4, \"five\"], [\"six\", 7, 8.0, 9, \"ten\"], [11, 12.0, 13, 14, \"fifteen\"], [15, 16.0, 17, 18, \"nineteen\"], [19, 20.0, 21, 22, \"twenty\"]]\n    print(my_array)\n    # create an array of arrays with mixed data types\n    my_array = [[\"one\", 2, 3.0, 4, \"five\"], [\"six\", 7, 8.0, 9, \"ten\"], [11, 12.0, 13, 14, \"fifteen\"], [15, 16.0, 17, 18, \"nineteen\"], [19\n",
        "def main():\n    # create an array of integers\n    my_array = [1, 2, 3, 4, 5]\n    # print the array\n    print(my_array)\n    # print the array's length\n    print(len(my_array))\n    # print the array's first element\n    print(my_array[0])\n    # print the array's last element\n    print(my_array[-1])\n    # print the array's second element\n    print(my_array[1])\n    # print the array's second to last element\n    print(my_array[-2])\n    # print the array's third element\n    print(my_array[2])\n    # print the array's third to last element\n    print(my_array[-3])\n    # print the array's fourth element\n    print(my_array[3])\n    # print the array's fourth to last element\n    print(my_array[-4])\n    # print the array's fifth element\n    print(my_array[4])\n    # print the array's fifth to last element\n    print(my_array[-5])\n    # print the array's sixth element\n    print(my_array[5])\n    # print the array's sixth to last element\n    print(my_array[-6])\n    # print the array's seventh element\n    print(my_array[6])\n    # print the array's seventh to last element\n    print(my_array[-7])\n    # print the array's eighth element\n    print(my_array[7])\n    # print the array's eighth to last element\n    print(my_array[-8])\n    # print the array's ninth element\n    print(my_array[8])\n    # print the array's ninth to last element\n    print(my_array[-9])\n    # print the array's tenth element\n    print(my_array[9])\n    # print the array's tenth to last element\n    print(my_array[-10])\n    # print the array's eleventh element\n    print(my_array[10])\n    # print the array's eleventh to last element\n",
        "def main():\n    # create an array of integers\n    my_array = [1, 2, 3, 4, 5]\n    # print the array\n    print(my_array)\n    # print the array's length\n    print(len(my_array))\n    # print the array's first element\n    print(my_array[0])\n    # print the array's last element\n    print(my_array[-1])\n    # print the array's 2nd-4th element\n    print(my_array[1:4])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print the array's 2nd-4th element (reversed)\n    print(my_array[-4:-1])\n    # print\n",
        "def main():\n    # create an array\n    array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    # print the array\n    print(array)\n    # print the array with index\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index\n",
        "def main():\n    # create an array of integers\n    a = [1, 2, 3, 4, 5]\n    print(a)\n    # create an array of strings\n    b = [\"hello\", \"world\"]\n    print(b)\n    # create an array of mixed data types\n    c = [1, \"hello\", 2, \"world\"]\n    print(c)\n    # use the len() function to print the number of elements in an array\n    print(len(c))\n    # use the append() function to add an element to the end of an array\n    c.append(\"new\")\n    print(c)\n    # use the insert() function to add an element at a specific index\n    c.insert(1, \"new\")\n    print(c)\n    # use the remove() function to remove an element from an array\n    c.remove(\"new\")\n    print(c)\n    # use the pop() function to remove the last element from an array\n    c.pop()\n    print(c)\n    # use the index() function to find the index of an element\n    print(c.index(\"hello\"))\n    # use the count() function to count the number of times a specified value occurs in an array\n    print(c.count(\"hello\"))\n    # use the reverse() function to reverse the elements in an array\n    c.reverse()\n    print(c)\n    # use the sort() function to sort the elements in an array\n    c.sort()\n    print(c)\n    # use the copy() function to copy an array\n    d = c.copy()\n    print(d)\n    # use the clear() function to clear an array of all elements\n    d.clear()\n    print(d)\n    # use the list() function to convert a tuple to a list\n    e = (1, 2, 3, 4, 5)\n    print(list(e))\n    # use the tuple() function to convert a list to a tuple\n    f = [1, 2, 3, 4, 5]\n    print(tuple(f))\n    # use the list() function to convert a string to a list\n    g = \"hello\"\n    print\n",
        "def main():\n    # create an array\n    arr = [1, 2, 3, 4, 5]\n    # print the array\n    print(arr)\n    # print the array with index\n    print(arr[0])\n    print(arr[1])\n    print(arr[2])\n    print(arr[3])\n    print(arr[4])\n    # print the array with index from the end\n    print(arr[-1])\n    print(arr[-2])\n    print(arr[-3])\n    print(arr[-4])\n    print(arr[-5])\n    # print the array with index from the end\n    print(arr[-1])\n    print(arr[-2])\n    print(arr[-3])\n    print(arr[-4])\n    print(arr[-5])\n    # print the array with index from the end\n    print(arr[-1])\n    print(arr[-2])\n    print(arr[-3])\n    print(arr[-4])\n    print(arr[-5])\n    # print the array with index from the end\n    print(arr[-1])\n    print(arr[-2])\n    print(arr[-3])\n    print(arr[-4])\n    print(arr[-5])\n    # print the array with index from the end\n    print(arr[-1])\n    print(arr[-2])\n    print(arr[-3])\n    print(arr[-4])\n    print(arr[-5])\n    # print the array with index from the end\n    print(arr[-1])\n    print(arr[-2])\n    print(arr[-3])\n    print(arr[-4])\n    print(arr[-5])\n    # print the array with index from the end\n    print(arr[-1])\n    print(arr[-2])\n    print(arr[-3])\n    print(arr[-4])\n    print(arr[-5])\n    # print the array with index from the end\n    print(arr[-1])\n    print(\n",
        "def main():\n    # create an array\n    array = [1, 2, 3, 4, 5]\n    # print the array\n    print(array)\n    # print the array with index\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len(array)):\n        print(i, array[i])\n    # print the array with index and value\n    for i in range(len\n",
        "def main():\n    # create an array of integers\n    my_array = [1, 2, 3, 4, 5]\n    # print the array\n    print(my_array)\n    # print the second element in the array\n    print(my_array[1])\n    # print the last element in the array\n    print(my_array[-1])\n    # print the first three elements in the array\n    print(my_array[:3])\n    # print the second three elements in the array\n    print(my_array[1:4])\n    # print the last three elements in the array\n    print(my_array[-3:])\n    # print the first two elements in the array\n    print(my_array[:2])\n    # print the second two elements in the array\n    print(my_array[1:3])\n    # print the last two elements in the array\n    print(my_array[-2:])\n    # print the first element in the array\n    print(my_array[0])\n    # print the second element in the array\n    print(my_array[1])\n    # print the last element in the array\n    print(my_array[-1])\n    # print the first three elements in the array\n    print(my_array[:3])\n    # print the second three elements in the array\n    print(my_array[1:4])\n    # print the last three elements in the array\n    print(my_array[-3:])\n    # print the first two elements in the array\n    print(my_array[:2])\n    # print the second two elements in the array\n    print(my_array[1:3])\n    # print the last two elements in the array\n    print(my_array[-2:])\n    # print the first element in the array\n    print(my_array[0])\n    # print the second element in the array\n    print(my_array[1])\n    # print the last element in the array\n    print(my_array[-1])\n    # print the first three elements in the array\n    print(my_array[:3])\n"
    ],
    "results": 9
},{
    "id": "379",
    "source": "soSearches",
    "language": "python",
    "query": "how to create new files on python",
    "snippets": [
        "def main():\n    # create a new file\n    f = open(\"newfile.txt\", \"w\")\n    # write to the file\n    f.write(\"This is a new file\")\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"a\")\n    # write to the file\n    f.write(\"\\nThis is another line\")\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readlines())\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file\n    f = open(\"newfile.txt\", \"r\n",
        "def main():\n    # create a new file\n    f = open(\"newfile.txt\", \"w\")\n    # write to the file\n    f.write(\"Hello World\\n\")\n    f.write(\"This is my first file\\n\")\n    f.write(\"I like to write in my file\\n\")\n    f.close()\n    # open the file again\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    f.close()\n",
        "def main():\n    # create a new file\n    f = open(\"newfile.txt\", \"w\")\n    # write to the file\n    f.write(\"Hello World\\n\")\n    f.write(\"This is my first file\\n\")\n    f.write(\"This is line 3\\n\")\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    f.close()\n    # open the file for appending\n    f = open(\"newfile.txt\", \"a\")\n    # write to the file\n    f.write(\"\\nThis is line 4\\n\")\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readlines())\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(\n",
        "def main():\n    # create a new file\n    f = open(\"newfile.txt\", \"w\")\n    # write to the file\n    f.write(\"Hello World\\n\")\n    # close the file\n    f.close()\n    # open the file again\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file again\n    f = open(\"newfile.txt\", \"a\")\n    # write to the file\n    f.write(\"\\nHello Again\")\n    # close the file\n    f.close()\n    # open the file again\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n",
        "def main():\n    # create a new file\n    f = open(\"newfile.txt\", \"w\")\n    # write some data to the file\n    f.write(\"Hello World\\n\")\n    f.write(\"This is our new file\\n\")\n    f.write(\"and this is another line\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file's contents\n    print(f.read())\n    # close the file\n    f.close()\n",
        "def main():\n    # create a new file\n    f = open(\"newfile.txt\", \"w\")\n    # write some data to the file\n    f.write(\"Hello World\\n\")\n    f.write(\"This is our new file\\n\")\n    f.write(\"and this is another line\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for appending\n    f = open(\"newfile.txt\", \"a\")\n    # write some more data to the file\n    f.write(\"\\nWe can add more lines\\n\")\n    f.write(\"and write more lines\\n\")\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readlines())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n    # open the file for reading\n    f = open(\"newfile.txt\", \"r\")\n    # read the file\n    print(f.readline())\n    # close the file\n    f.close()\n",
        "def main():\n    # create a new file\n    # f = open(\"newfile.txt\", \"w\")\n    # f.write(\"This is a new file\")\n    # f.close()\n\n    # create a new file and write to it\n    f = open(\"newfile.txt\", \"w\")\n    f.write(\"This is a new file\\n\")\n    f.write(\"and this is another line\\n\")\n    f.write(\"and this is another line\\n\")\n    f.close()\n",
        "def main():\n    # create a new file\n    f = open(\"new_file.txt\", \"w\")\n    # write to the file\n    f.write(\"Hello World\\n\")\n    # close the file\n    f.close()\n    # open the file again\n    f = open(\"new_file.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n    # open the file again\n    f = open(\"new_file.txt\", \"a\")\n    # write to the file\n    f.write(\"This is another line\\n\")\n    # close the file\n    f.close()\n    # open the file again\n    f = open(\"new_file.txt\", \"r\")\n    # read the file\n    print(f.read())\n    # close the file\n    f.close()\n",
        "def main():\n    # create a new file\n    # open(filename, mode)\n    # mode = 'r' for read, 'w' for write, 'a' for append, 'x' for create\n    # 'r+' for read and write\n    # 'w+' for write and read\n    # 'a+' for append and read\n    # 'x+' for create and read\n    # 'w+' is the default mode\n    # 'r+' is the default mode\n    # 'a+' is the default mode\n    # 'x+' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w' is the default mode\n    # 'r' is the default mode\n    # 'a' is the default mode\n    # 'x' is the default mode\n    # 'w\n"
    ],
    "results": 10
},{
    "id": "380",
    "source": "soSearches",
    "language": "python",
    "query": "how to convert english sentences to piglatin using python",
    "snippets": [
        "def piglatin(word):\n    if word[0] in 'aeiou':\n        return word + 'way'\n    else:\n        return word[1:] + word[0] + 'ay'\n",
        "def piglatin(sentence):\n    words = sentence.split()\n    piglatin_words = []\n    for word in words:\n        if word[0] in 'aeiou':\n            piglatin_words.append(word + 'way')\n        else:\n            piglatin_words.append(word[1:] + word[0] + 'ay')\n    return ' '.join(piglatin_words)\n",
        "def piglatin(sentence):\n    words = sentence.split()\n    piglatin_words = []\n    for word in words:\n        if word[0] in 'aeiou':\n            piglatin_words.append(word + '-hay')\n        else:\n            piglatin_words.append(word[1:] + '-' + word[0] + 'ay')\n    return ' '.join(piglatin_words)\n",
        "def piglatin(sentence):\n    words = sentence.split()\n    pig_words = []\n    for word in words:\n        if word[0] in 'aeiou':\n            pig_words.append(word + 'way')\n        else:\n            pig_words.append(word[1:] + word[0] + 'ay')\n    return ' '.join(pig_words)\n",
        "def piglatin(word):\n    if word[0] in 'aeiou':\n        return word + 'yay'\n    else:\n        return word[1:] + word[0] + 'ay'\n",
        "def pig_latin(sentence):\n    words = sentence.split()\n    pig_words = []\n    for word in words:\n        if word[0] in 'aeiou':\n            pig_words.append(word + '-way')\n        else:\n            pig_words.append(word[1:] + '-' + word[0] + 'ay')\n    return ' '.join(pig_words)\n",
        "def piglatin(sentence):\n    # split sentence into words\n    words = sentence.split()\n    # loop through words\n    for i in range(len(words)):\n        # if word starts with vowel, add 'way' to end\n        if words[i][0] in 'aeiou':\n            words[i] += 'way'\n        # if word starts with consonant, move first letter to end and add 'ay'\n        else:\n            words[i] = words[i][1:] + words[i][0] + 'ay'\n    # join words back together\n    return ' '.join(words)\n",
        "def piglatin(sentence):\n    words = sentence.split()\n    new_words = []\n    for word in words:\n        if word[0] in \"aeiou\":\n            new_words.append(word + \"way\")\n        else:\n            vowel_pos = 0\n            for letter in word:\n                if letter not in \"aeiou\":\n                    vowel_pos += 1\n                else:\n                    break\n            new_words.append(word[vowel_pos:] + word[:vowel_pos] + \"ay\")\n    return \" \".join(new_words)\n"
    ],
    "results": 10
},{
    "id": "381",
    "source": "soSearches",
    "language": "python",
    "query": "how to find the last letter in a list python",
    "snippets": [
        "def last_letter(list):\n    return list[-1]\n",
        "def last_letter(lst):\n    return lst[-1]\n",
        "def last_letter(word):\n    return word[-1]\n"
    ],
    "results": 10
},{
    "id": "382",
    "source": "soSearches",
    "language": "python",
    "query": "how to return multiple values from a function python",
    "snippets": [
        "def get_formatted_name(first_name, last_name):\n    \"\"\"Return a full name, neatly formatted.\"\"\"\n    full_name = f\"{first_name} {last_name}\"\n    return full_name.title()\n",
        "def get_info(name, age):\n    return name, age, \"Python\"\n",
        "def get_info(name, age):\n    return name, age, \"python\"\n",
        "def get_values(a, b):\n    return a, b\n",
        "def get_values():\n    return 1, 2, 3\n",
        "def get_info():\n    return \"Hello\", \"World\"\n"
    ],
    "results": 10
},{
    "id": "383",
    "source": "soSearches",
    "language": "python",
    "query": "how to compare two numbers in different lists python",
    "snippets": [
        "def compare(list1, list2):\n    for i in list1:\n        if i in list2:\n            return True\n    return False\n",
        "def compare(list1, list2):\n    for i in range(len(list1)):\n        if list1[i] != list2[i]:\n            return False\n    return True\n",
        "def compare_lists(list1, list2):\n    for i in range(len(list1)):\n        if list1[i] != list2[i]:\n            return False\n    return True\n",
        "def compare_lists(list1, list2):\n    if list1 == list2:\n        return True\n    else:\n        return False\n",
        "def compare(list1, list2):\n    for i in range(len(list1)):\n        if list1[i] == list2[i]:\n            print(list1[i], end=\" \")\n        else:\n            print(\"-\", end=\" \")\n    print()\n",
        "def compare(list1, list2):\n    for i in range(len(list1)):\n        if list1[i] == list2[i]:\n            print(\"The numbers are the same\")\n        else:\n            print(\"The numbers are different\")\n    return\n",
        "def compare(list1, list2):\n    for i in range(len(list1)):\n        if list1[i] == list2[i]:\n            print(\"The numbers are equal\")\n        else:\n            print(\"The numbers are not equal\")\n    return\n"
    ],
    "results": 10
},{
    "id": "384",
    "source": "soSearches",
    "language": "java",
    "query": "how to use split() in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tString[] strArray=str.split(\" \");\n\t\tfor(String s:strArray){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"hello world\";\n\t\tString[] strs=str.split(\" \");\n\t\tfor(String s:strs){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString[] strArray = str.split(\" \");\n\t\tfor(int i = 0; i < strArray.length; i++){\n\t\t\tSystem.out.println(strArray[i]);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "385",
    "source": "soSearches",
    "language": "java",
    "query": "how to do to the power of in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a = 2;\n\t\tint b = 3;\n\t\tint c = a^b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=5;\n\t\tint b=2;\n\t\tint c=a^b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Math.pow(2,3));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "386",
    "source": "soSearches",
    "language": "java",
    "query": "how to implement naive bayes in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tNaiveBayes nb = new NaiveBayes();\n\t\tnb.train();\n\t\tnb.test();\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic\n\tClazz(String name){\n\t\tthis.name = name;\n\t}\n\tpublic\n\tString name;\n\tpublic\n\tint count;\n\tpublic\n\tint total;\n\tpublic\n\tint total_count;\n\tpublic\n\tint total_total;\n\tpublic\n\tint total_total_count;\n\tpublic\n\tint total_total_total;\n\tpublic\n\tint total_total_total_count;\n\tpublic\n\tint total_total_total_total;\n\tpublic\n\tint total_total_total_total_count;\n\tpublic\n\tint total_total_total_total_total;\n\tpublic\n\tint total_total_total_total_total_count;\n\tpublic\n\tint total_total_total_total_total_total;\n\tpublic\n\tint total_total_total_total_total_total_count;\n\tpublic\n\tint total_total_total_total_total_total_total;\n\tpublic\n\tint total_total_total_total_total_total_total_count;\n\tpublic\n\tint total_total_total_total_total_total_total_total;\n\tpublic\n\tint total_total_total_total_total_total_total_total_count;\n\tpublic\n\tint total_total_total_total_total_total_total_total_total;\n\tpublic\n\tint total_total_total_total_total_total_total_total_total_count;\n\tpublic\n\tint total_total_total_total_total_total_total_total_total_total;\n\tpublic\n\tint total_total_total_total_total_total_total_total_total_total_count;\n\tpublic\n\tint total_total_total_total_total_total_total_total_total_total_total;\n\tpublic\n\tint total_total_total_total_total_total_total_total_total_total_total_count;\n\tpublic\n\tint total_total_total_total_total_total_total_total_total_total_total_total;\n",
        "\tstatic void main(String[] args){\n\t\t//create a new instance of the class\n\t\tClazz clazz = new Clazz();\n\t\t//call the method\n\t\tclazz.naiveBayes();\n\t}\n\tpublic void naiveBayes(){\n\t\t//create a new instance of the class\n\t\tNaiveBayes nb = new NaiveBayes();\n\t\t//call the method\n\t\tnb.naiveBayes();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\t//create a new instance of the classifier\n\t\tNaiveBayes nb = new NaiveBayes();\n\t\t//create a new instance of the dataset\n\t\tDataset ds = new Dataset();\n\t\t//load the dataset\n\t\tds.load(\"dataset.txt\");\n\t\t//train the classifier\n\t\tnb.train(ds);\n\t\t//create a new instance of the test dataset\n\t\tDataset dsTest = new Dataset();\n\t\t//load the test dataset\n\t\tdsTest.load(\"test.txt\");\n\t\t//test the classifier\n\t\tnb.test(dsTest);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\t//create a new instance of the classifier\n\t\tNaiveBayes nb = new NaiveBayes();\n\t\t//create a new instance of the dataset\n\t\tDataset ds = new Dataset();\n\t\t//load the dataset\n\t\tds.load(\"dataset.txt\");\n\t\t//train the classifier\n\t\tnb.train(ds);\n\t\t//create a new instance of the test dataset\n\t\tDataset dsTest = new Dataset();\n\t\t//load the test dataset\n\t\tdsTest.load(\"testset.txt\");\n\t\t//test the classifier\n\t\tnb.test(dsTest);\n\t}\n}\n",
        "\tClazz(String name){\n\t\tthis.name = name;\n\t}\n\tpublic String name;\n\tpublic int count;\n\tpublic double prior;\n\tpublic HashMap<String, Integer> wordCount = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClassNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClassAndNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountNotInClassAndInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClassAndInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountNotInClassAndNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClassAndInClassNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClassAndNotInClassNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountNotInClassAndInClassNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClassAndInClassAndNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClassAndNotInClassAndNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountNotInClassAndInClassAndNotInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountNotInClassAndNotInClassAndInClass = new HashMap<String, Integer>();\n\tpublic HashMap<String, Integer> wordCountInClassAndInClassAndInClass = new HashMap<String, Integer>();\n\tpublic\n",
        "\tstatic void main(String[] args){\n\t\t//create a Naive Bayes classifier\n\t\tNaiveBayes nb = new NaiveBayes();\n\t\t//create a data set\n\t\tDataSet ds = new DataSet();\n\t\t//add a new instance to the data set\n\t\tds.add(new Instance(new double[]{1,1},1));\n\t\tds.add(new Instance(new double[]{1,0},1));\n\t\tds.add(new Instance(new double[]{0,1},1));\n\t\tds.add(new Instance(new double[]{0,0},0));\n\t\t//train the classifier\n\t\tnb.train(ds);\n\t\t//create a new instance\n\t\tInstance i = new Instance(new double[]{1,1});\n\t\t//classify the instance\n\t\tSystem.out.println(nb.classify(i));\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void train(String[] data){\n\t\t\n\t}\n\tpublic void test(String[] data){\n\t\t\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic static void main(String[] args){\n\t\t\n\t\t//create a new instance of the class\n\t\tClazz clazz = new Clazz();\n\t\t\n\t\t//create a new instance of the class\n\t\tclazz.naiveBayes();\n\t}\n\tpublic void naiveBayes(){\n\t\t\n\t\t//create a new instance of the class\n\t\tNaiveBayes naiveBayes = new NaiveBayes();\n\t\t\n\t\t//create a new instance of the class\n\t\tnaiveBayes.train();\n\t\t\n\t\t//create a new instance of the class\n\t\tnaiveBayes.test();\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic\n\tvoid print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "387",
    "source": "soSearches",
    "language": "java",
    "query": "how to handle ï¾  in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello World\";\n\t\tSystem.out.println(s);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"abcdefghijklmnopqrstuvwxyz\";\n\t\tSystem.out.println(s.substring(0,5));\n\t\tSystem.out.println(s.substring(5,10));\n\t\tSystem.out.println(s.substring(10,15));\n\t\tSystem.out.println(s.substring(15,20));\n\t\tSystem.out.println(s.substring(20,25));\n\t\tSystem.out.println(s.substring(25,30));\n\t\tSystem.out.println(s.substring(30,35));\n\t\tSystem.out.println(s.substring(35,40));\n\t\tSystem.out.println(s.substring(40,45));\n\t\tSystem.out.println(s.substring(45,50));\n\t\tSystem.out.println(s.substring(50,55));\n\t\tSystem.out.println(s.substring(55,60));\n\t\tSystem.out.println(s.substring(60,65));\n\t\tSystem.out.println(s.substring(65,70));\n\t\tSystem.out.println(s.substring(70,75));\n\t\tSystem.out.println(s.substring(75,80));\n\t\tSystem.out.println(s.substring(80,85));\n\t\tSystem.out.println(s.substring(85,90));\n\t\tSystem.out.println(s.substring(90,95));\n\t\tSystem.out.println(s.substring(95,100));\n\t\tSystem.out.println(s.substring(100,105));\n\t\tSystem.out.println(s.substring(105,110));\n\t\tSystem.out.println(s.substring(110,115));\n\t\tSystem.out.println(s.substring(115,120));\n\t\tSystem.out.println(s.substring(120,125));\n\t\tSystem.out.println(s.substring(125,130));\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"abcdefghijklmnopqrstuvwxyz\";\n\t\tSystem.out.println(s.substring(0,3));\n\t\tSystem.out.println(s.substring(3,6));\n\t\tSystem.out.println(s.substring(6,9));\n\t\tSystem.out.println(s.substring(9,12));\n\t\tSystem.out.println(s.substring(12,15));\n\t\tSystem.out.println(s.substring(15,18));\n\t\tSystem.out.println(s.substring(18,21));\n\t\tSystem.out.println(s.substring(21,24));\n\t\tSystem.out.println(s.substring(24,27));\n\t\tSystem.out.println(s.substring(27,30));\n\t\tSystem.out.println(s.substring(30,33));\n\t\tSystem.out.println(s.substring(33,36));\n\t\tSystem.out.println(s.substring(36,39));\n\t\tSystem.out.println(s.substring(39,42));\n\t\tSystem.out.println(s.substring(42,45));\n\t\tSystem.out.println(s.substring(45,48));\n\t\tSystem.out.println(s.substring(48,51));\n\t\tSystem.out.println(s.substring(51,54));\n\t\tSystem.out.println(s.substring(54,57));\n\t\tSystem.out.println(s.substring(57,60));\n\t\tSystem.out.println(s.substring(60,63));\n\t\tSystem.out.println(s.substring(63,66));\n\t\tSystem.out.println(s.substring(66,69));\n\t\tSystem.out.println(s.substring(69,72));\n\t\tSystem.out.println(s.substring(72,75));\n\t\tSystem.out.println(s.substring(75,78));\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"abcdefg\";\n\t\tSystem.out.println(s.substring(3,5));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"abc\\u00e9\";\n\t\tSystem.out.println(s);\n\t}\n}\n",
        "\tvoid method(){\n\t\tString s = \"abc\";\n\t\tSystem.out.println(s.charAt(0));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"\\u00F8\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "388",
    "source": "soSearches",
    "language": "java",
    "query": "how to recive mac os all user list java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInetAddress ip=InetAddress.getLocalHost();\n\t\t\tString hostname=ip.getHostName();\n\t\t\tString ipaddress=ip.getHostAddress();\n\t\t\tSystem.out.println(\"Hostname : \" + hostname);\n\t\t\tSystem.out.println(\"IP : \" + ipaddress);\n\t\t\tString osname=System.getProperty(\"os.name\");\n\t\t\tString osversion=System.getProperty(\"os.version\");\n\t\t\tString osarch=System.getProperty(\"os.arch\");\n\t\t\tSystem.out.println(\"OS Name : \" + osname);\n\t\t\tSystem.out.println(\"OS Version : \" + osversion);\n\t\t\tSystem.out.println(\"OS Architecture : \" + osarch);\n\t\t\tString user=System.getProperty(\"user.name\");\n\t\t\tSystem.out.println(\"User Name : \" + user);\n\t\t\tString userhome=System.getProperty(\"user.home\");\n\t\t\tSystem.out.println(\"User Home : \" + userhome);\n\t\t\tString userdir=System.getProperty(\"user.dir\");\n\t\t\tSystem.out.println(\"User Dir : \" + userdir);\n\t\t\tString userlang=System.getProperty(\"user.language\");\n\t\t\tSystem.out.println(\"User Language : \" + userlang);\n\t\t\tString usercountry=System.getProperty(\"user.country\");\n\t\t\tSystem.out.println(\"User Country : \" + usercountry);\n\t\t\tString userdirs=System.getProperty(\"user.dirs\");\n\t\t\tSystem.out.println(\"User Dirs : \" + userdirs);\n\t\t\tString userhome=System.getProperty(\"user.home\");\n\t\t\tSystem.out.println(\"User Home : \" + userhome);\n\t\t\tString userhome=System.getProperty(\"user.home\");\n\t\t\tSystem.out.println(\"User Home : \" + userhome);\n\t\t\tString userhome=System.getProperty(\"user.home\");\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString os = System.getProperty(\"os.name\");\n\t\t\tif(os.startsWith(\"Windows\")){\n\t\t\t\tSystem.out.println(\"Windows\");\n\t\t\t\tProcess p = Runtime.getRuntime().exec(\"net user\");\n\t\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\t\tString line;\n\t\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\t\tSystem.out.println(line);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"Linux\");\n\t\t\t\tProcess p = Runtime.getRuntime().exec(\"ls /etc/passwd\");\n\t\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\t\tString line;\n\t\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\t\tSystem.out.println(line);\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString os = System.getProperty(\"os.name\");\n\t\t\tif(os.indexOf(\"Windows\")>=0){\n\t\t\t\tSystem.out.println(\"Windows\");\n\t\t\t}else if(os.indexOf(\"Linux\")>=0){\n\t\t\t\tSystem.out.println(\"Linux\");\n\t\t\t}else if(os.indexOf(\"Mac OS\")>=0){\n\t\t\t\tSystem.out.println(\"Mac OS\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"Other\");\n\t\t\t}\n\t\t\tString user = System.getProperty(\"user.name\");\n\t\t\tSystem.out.println(\"User name: \"+user);\n\t\t\tString home = System.getProperty(\"user.home\");\n\t\t\tSystem.out.println(\"Home directory: \"+home);\n\t\t\tString javaHome = System.getProperty(\"java.home\");\n\t\t\tSystem.out.println(\"Java home: \"+javaHome);\n\t\t\tString javaVersion = System.getProperty(\"java.version\");\n\t\t\tSystem.out.println(\"Java version: \"+javaVersion);\n\t\t\tString javaVendor = System.getProperty(\"java.vendor\");\n\t\t\tSystem.out.println(\"Java vendor: \"+javaVendor);\n\t\t\tString javaVendorURL = System.getProperty(\"java.vendor.url\");\n\t\t\tSystem.out.println(\"Java vendor URL: \"+javaVendorURL);\n\t\t\tString javaClassPath = System.getProperty(\"java.class.path\");\n\t\t\tSystem.out.println(\"Java class path: \"+javaClassPath);\n\t\t\tString javaLibraryPath = System.getProperty(\"java.library.path\");\n\t\t\tSystem.out.println(\"Java library path: \"+javaLibraryPath);\n\t\t\tString javaInputStream = System.getProperty(\"java.io.inputstream\");\n\t\t\tSystem.out.println(\"Java input stream: \"+javaInputStream);\n\t\t\tString javaOutputStream = System.\n",
        "\tstatic void main(String[] args){\n\t\tString user = System.getProperty(\"user.name\");\n\t\tString os = System.getProperty(\"os.name\");\n\t\tString osArch = System.getProperty(\"os.arch\");\n\t\tString osVersion = System.getProperty(\"os.version\");\n\t\tString javaVersion = System.getProperty(\"java.version\");\n\t\tString javaVendor = System.getProperty(\"java.vendor\");\n\t\tString javaVendorURL = System.getProperty(\"java.vendor.url\");\n\t\tString javaHome = System.getProperty(\"java.home\");\n\t\tString javaVmVersion = System.getProperty(\"java.vm.version\");\n\t\tString javaVmVendor = System.getProperty(\"java.vm.vendor\");\n\t\tString javaVmName = System.getProperty(\"java.vm.name\");\n\t\tString javaSpecificationVersion = System.getProperty(\"java.specification.version\");\n\t\tString javaSpecificationName = System.getProperty(\"java.specification.name\");\n\t\tString javaClassVersion = System.getProperty(\"java.class.version\");\n\t\tString javaClassPath = System.getProperty(\"java.class.path\");\n\t\tString javaLibraryPath = System.getProperty(\"java.library.path\");\n\t\tString javaIOEncoding = System.getProperty(\"java.io.encoding\");\n\t\tString javaFileEncoding = System.getProperty(\"file.encoding\");\n\t\tString javaCompiler = System.getProperty(\"java.compiler\");\n\t\tString javaExtDirs = System.getProperty(\"java.ext.dirs\");\n\t\tString javaEndorsedDirs = System.getProperty(\"java.endorsed.dirs\");\n\t\tString javaVmSpecificationVersion = System.getProperty(\"java.vm.specification.version\");\n\t\tString javaVmSpecificationVendor = System.getProperty(\"java.vm.specification.vendor\");\n\t\tString javaVmSpecificationName = System.getProperty(\"java.vm.specification.name\");\n\t\tString javaVmVersion = System.getProperty(\"java\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString command = \"ls -l /Users\";\n\t\t\tProcess process = Runtime.getRuntime().exec(command);\n\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));\n\t\t\tString line = \"\";\n\t\t\twhile((line = reader.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString os = System.getProperty(\"os.name\");\n\t\t\tif(os.toLowerCase().indexOf(\"windows\")>-1){\n\t\t\t\tSystem.out.println(\"windows\");\n\t\t\t}else if(os.toLowerCase().indexOf(\"linux\")>-1){\n\t\t\t\tSystem.out.println(\"linux\");\n\t\t\t}else if(os.toLowerCase().indexOf(\"mac\")>-1){\n\t\t\t\tSystem.out.println(\"mac\");\n\t\t\t}\n\t\t\tProcess p = Runtime.getRuntime().exec(\"cmd /c dir\");\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line = null;\n\t\t\twhile((line = br.readLine())!=null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInetAddress ip=InetAddress.getLocalHost();\n\t\t\tSystem.out.println(\"ip=\"+ip.getHostAddress());\n\t\t\tString hostname=ip.getHostName();\n\t\t\tSystem.out.println(\"hostname=\"+hostname);\n\t\t\tString mac=getMac(ip);\n\t\t\tSystem.out.println(\"mac=\"+mac);\n\t\t\tString os=System.getProperty(\"os.name\");\n\t\t\tSystem.out.println(\"os=\"+os);\n\t\t\tString os_version=System.getProperty(\"os.version\");\n\t\t\tSystem.out.println(\"os_version=\"+os_version);\n\t\t\tString os_arch=System.getProperty(\"os.arch\");\n\t\t\tSystem.out.println(\"os_arch=\"+os_arch);\n\t\t\tString os_user=System.getProperty(\"user.name\");\n\t\t\tSystem.out.println(\"os_user=\"+os_user);\n\t\t\tString os_home=System.getProperty(\"user.home\");\n\t\t\tSystem.out.println(\"os_home=\"+os_home);\n\t\t\tString os_path=System.getProperty(\"user.dir\");\n\t\t\tSystem.out.println(\"os_path=\"+os_path);\n\t\t\tString os_lang=System.getProperty(\"user.language\");\n\t\t\tSystem.out.println(\"os_lang=\"+os_lang);\n\t\t\tString os_country=System.getProperty(\"user.country\");\n\t\t\tSystem.out.println(\"os_country=\"+os_country);\n\t\t\tString os_timezone=System.getProperty(\"user.timezone\");\n\t\t\tSystem.out.println(\"os_timezone=\"+os_timezone);\n\t\t\tString os_encoding=System.getProperty(\"file.encoding\");\n\t\t\tSystem.out.println(\"os_encoding=\"+os_encoding);\n\t\t\tString os_line_separator=System.getProperty(\"line.\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInetAddress ip=InetAddress.getLocalHost();\n\t\t\tSystem.out.println(\"ip=\"+ip.getHostAddress());\n\t\t\tSystem.out.println(\"hostname=\"+ip.getHostName());\n\t\t\tString hostname=ip.getHostName();\n\t\t\tString ipaddress=ip.getHostAddress();\n\t\t\tSystem.out.println(\"hostname=\"+hostname);\n\t\t\tSystem.out.println(\"ipaddress=\"+ipaddress);\n\t\t\tString osname=System.getProperty(\"os.name\");\n\t\t\tSystem.out.println(\"osname=\"+osname);\n\t\t\tString osversion=System.getProperty(\"os.version\");\n\t\t\tSystem.out.println(\"osversion=\"+osversion);\n\t\t\tString osarch=System.getProperty(\"os.arch\");\n\t\t\tSystem.out.println(\"osarch=\"+osarch);\n\t\t\tString userdir=System.getProperty(\"user.dir\");\n\t\t\tSystem.out.println(\"userdir=\"+userdir);\n\t\t\tString userhome=System.getProperty(\"user.home\");\n\t\t\tSystem.out.println(\"userhome=\"+userhome);\n\t\t\tString userlang=System.getProperty(\"user.language\");\n\t\t\tSystem.out.println(\"userlang=\"+userlang);\n\t\t\tString usercountry=System.getProperty(\"user.country\");\n\t\t\tSystem.out.println(\"usercountry=\"+usercountry);\n\t\t\tString userdir=System.getProperty(\"user.dir\");\n\t\t\tSystem.out.println(\"userdir=\"+userdir);\n\t\t\tString userdir=System.getProperty(\"user.home\");\n\t\t\tSystem.out.println(\"userdir=\"+userdir);\n\t\t\tString userdir=System.getProperty(\"user.language\");\n\t\t\tSystem.out.println(\"userdir=\"+userdir);\n\t\t\tString userdir=System.getProperty(\"user.country\");\n\t\t\tSystem.out.\n",
        "\tstatic void main(String[] args){\n\t\tString os = System.getProperty(\"os.name\");\n\t\tif(os.equals(\"Mac OS X\")){\n\t\t\ttry{\n\t\t\t\tProcess p = Runtime.getRuntime().exec(\"dscl . list /Users\");\n\t\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\t\tString line;\n\t\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\t\tSystem.out.println(line);\n\t\t\t\t}\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] users = null;\n\t\ttry{\n\t\t\tusers = User.getAllUsers();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfor(int i = 0; i < users.length; i++){\n\t\t\tSystem.out.println(users[i]);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "389",
    "source": "soSearches",
    "language": "java",
    "query": "how to edit font in java output",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "390",
    "source": "soSearches",
    "language": "java",
    "query": "how to input a string in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"\";\n\t\tSystem.out.println(\"Enter your name\");\n\t\tname = System.console().readLine();\n\t\tSystem.out.println(\"Hello \" + name);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"\";\n\t\tSystem.out.println(\"Enter your name\");\n\t\tScanner input = new Scanner(System.in);\n\t\tname = input.nextLine();\n\t\tSystem.out.println(\"Hello \" + name);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "391",
    "source": "soSearches",
    "language": "java",
    "query": "java how to copy a file",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tFile f1 = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\tFile f2 = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test2.txt\");\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(f1);\n\t\t\tFileOutputStream fos = new FileOutputStream(f2);\n\t\t\tint data;\n\t\t\twhile((data = fis.read()) != -1){\n\t\t\t\tfos.write(data);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f1 = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\tFile f2 = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test2.txt\");\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(f1);\n\t\t\tFileOutputStream fos = new FileOutputStream(f2);\n\t\t\tint i;\n\t\t\twhile((i=fis.read())!=-1){\n\t\t\t\tfos.write(i);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f1 = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\tFile f2 = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\");\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(f1);\n\t\t\tFileOutputStream fos = new FileOutputStream(f2);\n\t\t\tint data;\n\t\t\twhile((data = fis.read()) != -1){\n\t\t\t\tfos.write(data);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid copyFile(String source, String destination){\n\t\tFile sourceFile = new File(source);\n\t\tFile destinationFile = new File(destination);\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(sourceFile);\n\t\t\tFileOutputStream fos = new FileOutputStream(destinationFile);\n\t\t\tint data;\n\t\t\twhile((data = fis.read()) != -1){\n\t\t\t\tfos.write(data);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f1 = new File(\"C:\\\\Users\\\\Public\\\\Desktop\\\\test.txt\");\n\t\tFile f2 = new File(\"C:\\\\Users\\\\Public\\\\Desktop\\\\test2.txt\");\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(f1);\n\t\t\tFileOutputStream fos = new FileOutputStream(f2);\n\t\t\tint data;\n\t\t\twhile((data = fis.read()) != -1){\n\t\t\t\tfos.write(data);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile f1 = new File(\"C:\\\\Users\\\\Public\\\\Documents\\\\test.txt\");\n\t\t\tFile f2 = new File(\"C:\\\\Users\\\\Public\\\\Documents\\\\test2.txt\");\n\t\t\tFileInputStream fis = new FileInputStream(f1);\n\t\t\tFileOutputStream fos = new FileOutputStream(f2);\n\t\t\tint data = 0;\n\t\t\twhile((data = fis.read()) != -1){\n\t\t\t\tfos.write(data);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"/home/saurabh/Desktop/java/java.txt\");\n\t\t\tFileOutputStream fos = new FileOutputStream(\"/home/saurabh/Desktop/java/java1.txt\");\n\t\t\tint data;\n\t\t\twhile((data = fis.read()) != -1){\n\t\t\t\tfos.write(data);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f1=new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\file1.txt\");\n\t\tFile f2=new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\file2.txt\");\n\t\ttry{\n\t\t\tFileInputStream fis=new FileInputStream(f1);\n\t\t\tFileOutputStream fos=new FileOutputStream(f2);\n\t\t\tint i;\n\t\t\twhile((i=fis.read())!=-1){\n\t\t\t\tfos.write(i);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile f1=new File(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\java\\\\src\\\\test.txt\");\n\t\t\tFile f2=new File(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\java\\\\src\\\\test2.txt\");\n\t\t\tFileInputStream fis=new FileInputStream(f1);\n\t\t\tFileOutputStream fos=new FileOutputStream(f2);\n\t\t\tint i;\n\t\t\twhile((i=fis.read())!=-1){\n\t\t\t\tfos.write(i);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f1 = new File(\"C:\\\\Users\\\\Sri\\\\Desktop\\\\java\\\\java.txt\");\n\t\tFile f2 = new File(\"C:\\\\Users\\\\Sri\\\\Desktop\\\\java\\\\java1.txt\");\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(f1);\n\t\t\tFileOutputStream fos = new FileOutputStream(f2);\n\t\t\tint i;\n\t\t\twhile((i=fis.read())!=-1){\n\t\t\t\tfos.write(i);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "392",
    "source": "soSearches",
    "language": "java",
    "query": "how to master java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "393",
    "source": "soSearches",
    "language": "java",
    "query": "how to remove duplicate value in java with out arraylist",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n\t\tint[] arr2 = new int[arr.length];\n\t\tint j = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(!check(arr, arr[i])){\n\t\t\t\tarr2[j] = arr[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr2.length; i++){\n\t\t\tSystem.out.print(arr2[i] + \" \");\n\t\t}\n\t}\n\tpublic static boolean check(int[] arr, int num){\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] == num){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n\t\tint[] arr1 = new int[20];\n\t\tint j = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] != arr[i+1]){\n\t\t\t\tarr1[j] = arr[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr1.length; i++){\n\t\t\tSystem.out.println(arr1[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n\t\tint[] temp = new int[arr.length];\n\t\tint j = 0;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tif(!isPresent(arr[i],temp)){\n\t\t\t\ttemp[j] = arr[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<j;i++){\n\t\t\tSystem.out.print(temp[i]+\" \");\n\t\t}\n\t}\n\tpublic static boolean isPresent(int num,int[] temp){\n\t\tfor(int i=0;i<temp.length;i++){\n\t\t\tif(temp[i]==num){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n\t\tint[] arr2 = new int[arr.length];\n\t\tint count = 0;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tfor(int j=0;j<arr.length;j++){\n\t\t\t\tif(arr[i]==arr[j]){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count==1){\n\t\t\t\tarr2[i]=arr[i];\n\t\t\t}\n\t\t\tcount=0;\n\t\t}\n\t\tfor(int i=0;i<arr2.length;i++){\n\t\t\tSystem.out.println(arr2[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n\t\tint[] b = new int[a.length];\n\t\tint j = 0;\n\t\tfor(int i=0;i<a.length;i++){\n\t\t\tif(!isPresent(a[i],b)){\n\t\t\t\tb[j] = a[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<b.length;i++){\n\t\t\tSystem.out.println(b[i]);\n\t\t}\n\t}\n\tpublic static boolean isPresent(int x,int[] b){\n\t\tfor(int i=0;i<b.length;i++){\n\t\t\tif(b[i] == x){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr1 = new int[arr.length];\n\t\tint j = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(!isPresent(arr[i], arr1)){\n\t\t\t\tarr1[j] = arr[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr1.length; i++){\n\t\t\tSystem.out.println(arr1[i]);\n\t\t}\n\t}\n\tpublic static boolean isPresent(int num, int[] arr){\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] == num){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr2 = new int[arr.length];\n\t\tint j = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(!isPresent(arr[i], arr2)){\n\t\t\t\tarr2[j] = arr[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr2.length; i++){\n\t\t\tSystem.out.println(arr2[i]);\n\t\t}\n\t}\n\tpublic static boolean isPresent(int num, int[] arr){\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(num == arr[i]){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "394",
    "source": "soSearches",
    "language": "java",
    "query": "how to calculator in java progerming  vidio lecture",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "395",
    "source": "soSearches",
    "language": "java",
    "query": "how to put text into a listview javafx",
    "snippets": [
        "\tClazz(String name, String description){\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t}\n\tpublic String name;\n\tpublic String description;\n}\n",
        "\tvoid main(String[] args){\n\t\tListView<String> list = new ListView<String>();\n\t\tlist.setItems(FXCollections.observableArrayList(\"Hello\", \"World\"));\n\t\tlist.setPrefWidth(200);\n\t\tlist.setPrefHeight(200);\n\t\tlist.setStyle(\"-fx-background-color: #FFFFFF;\");\n\t\tlist.setOrientation(Orientation.VERTICAL);\n\t\tlist.setVgap(10);\n\t\tlist.setHgap(10);\n\t\tlist.setPadding(new Insets(10, 10, 10, 10));\n\t\tlist.setFocusTraversable(false);\n\t\tlist.setEditable(true);\n\t\tlist.setOnKeyPressed(new EventHandler<KeyEvent>(){\n\t\t\tpublic void handle(KeyEvent event){\n\t\t\t\tif(event.getCode() == KeyCode.ENTER){\n\t\t\t\t\tlist.getItems().add(list.getSelectionModel().getSelectedItem());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlist.setOnMouseClicked(new EventHandler<MouseEvent>(){\n\t\t\tpublic void handle(MouseEvent event){\n\t\t\t\tif(event.getClickCount() == 2){\n\t\t\t\t\tlist.getItems().remove(list.getSelectionModel().getSelectedItem());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlist.setOnDragDetected(new EventHandler<MouseEvent>(){\n\t\t\tpublic void handle(MouseEvent event){\n\t\t\t\tDragboard db = list.startDragAndDrop(TransferMode.MOVE);\n\t\t\t\tClipboardContent content = new ClipboardContent();\n\t\t\t\tcontent.putString(list.getSelectionModel().getSelectedItem());\n\t\t\t\tdb.setContent(content);\n\t\t\t\tevent.consume();\n\t\t\t}\n\t\t});\n\t\tlist.setOnDragOver(new EventHandler<DragEvent>(){\n\t\t\tpublic void handle\n",
        "\tvoid main(String[] args){\n\t\tListView<String> list = new ListView<String>();\n\t\tlist.setItems(FXCollections.observableArrayList(\"Hello\", \"World\"));\n\t\tlist.setPrefWidth(200);\n\t\tlist.setPrefHeight(200);\n\t\tlist.setStyle(\"-fx-background-color: #00ff00\");\n\t\tlist.setStyle(\"-fx-font-size: 20\");\n\t\tlist.setStyle(\"-fx-font-family: Arial\");\n\t\tlist.setStyle(\"-fx-font-weight: bold\");\n\t\tlist.setStyle(\"-fx-text-fill: #ff0000\");\n\t\tlist.setStyle(\"-fx-text-alignment: center\");\n\t\tlist.setStyle(\"-fx-padding: 10 10 10 10\");\n\t\tlist.setStyle(\"-fx-border-color: #ff0000\");\n\t\tlist.setStyle(\"-fx-border-width: 2\");\n\t\tlist.setStyle(\"-fx-border-radius: 10\");\n\t\tlist.setStyle(\"-fx-background-radius: 10\");\n\t\tlist.setStyle(\"-fx-background-insets: 10 10 10 10\");\n\t\tlist.setStyle(\"-fx-background-image: url('http://www.java2s.com/Code/Java/2D-Graphics-GUI-JFX/ImageinListView.jpg')\");\n\t\tlist.setStyle(\"-fx-background-repeat: no-repeat\");\n\t\tlist.setStyle(\"-fx-background-position: center\");\n\t\tlist.setStyle(\"-fx-background-size: 200 200\");\n\t\tlist.setStyle(\"-fx-background-color: #00ff00\");\n\t\tlist.setStyle(\"-fx-text-fill: #ff0000\");\n\t\tlist.setStyle(\"-fx-text-alignment: center\");\n\t\tlist.setStyle(\"-fx-padding: 10 10 10 10\");\n\t\tlist.setStyle(\"-fx-border-color: #ff0000\");\n\t\tlist.setStyle(\"-fx-border-\n",
        "\tvoid main(String[] args){\n\t\tListView<String> list = new ListView<String>();\n\t\tlist.getItems().addAll(\"Hello\", \"World\");\n\t\tlist.setPrefWidth(200);\n\t\tlist.setPrefHeight(200);\n\t\tlist.setStyle(\"-fx-background-color: #FFFFFF;\");\n\t\tlist.setLayoutX(100);\n\t\tlist.setLayoutY(100);\n\t\tlist.setOnMouseClicked(e->{\n\t\t\tSystem.out.println(list.getSelectionModel().getSelectedItem());\n\t\t});\n\t\tScene scene = new Scene(new Group(list));\n\t\tStage stage = new Stage();\n\t\tstage.setScene(scene);\n\t\tstage.show();\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tListView<String> list = new ListView<String>();\n\t\tlist.getItems().addAll(\"Hello\", \"World\");\n\t\tlist.setPrefWidth(200);\n\t\tlist.setPrefHeight(200);\n\t\tlist.setStyle(\"-fx-font-size: 20px;\");\n\t\tlist.setOnMouseClicked(e -> {\n\t\t\tSystem.out.println(list.getSelectionModel().getSelectedItem());\n\t\t});\n\t\tScene scene = new Scene(list);\n\t\tStage stage = new Stage();\n\t\tstage.setScene(scene);\n\t\tstage.show();\n\t}\n}\n",
        "\tString name;\n\tpublic\n\tString teacher;\n\tpublic\n\tString room;\n\tpublic\n\tString time;\n\tpublic\n\tString day;\n\tpublic\n\tString type;\n\tpublic\n\tString id;\n\tpublic\n\tString color;\n\tpublic\n\tString description;\n\tpublic\n\tString location;\n\tpublic\n\tString date;\n\tpublic\n\tString date2;\n\tpublic\n\tString date3;\n\tpublic\n\tString date4;\n\tpublic\n\tString date5;\n\tpublic\n\tString date6;\n\tpublic\n\tString date7;\n\tpublic\n\tString date8;\n\tpublic\n\tString date9;\n\tpublic\n\tString date10;\n\tpublic\n\tString date11;\n\tpublic\n\tString date12;\n\tpublic\n\tString date13;\n\tpublic\n\tString date14;\n\tpublic\n\tString date15;\n\tpublic\n\tString date16;\n\tpublic\n\tString date17;\n\tpublic\n\tString date18;\n\tpublic\n\tString date19;\n\tpublic\n\tString date20;\n\tpublic\n\tString date21;\n\tpublic\n\tString date22;\n\tpublic\n\tString date23;\n\tpublic\n\tString date24;\n\tpublic\n\tString date25;\n\tpublic\n\tString date26;\n\tpublic\n\tString date27;\n\tpublic\n\tString date28;\n\tpublic\n\tString date29;\n\tpublic\n\tString date30;\n\tpublic\n\tString date31;\n\tpublic\n\tString date32;\n\tpublic\n\tString date33;\n\tpublic\n\tString date34;\n\tpublic\n\tString date35;\n\tpublic\n\tString date36;\n\tpublic\n\tString date37;\n\tpublic\n\tString date38;\n\tpublic\n\tString date39;\n\tpublic\n\tString date40;\n\tpublic\n\tString date41;\n\tpublic\n\tString date42;\n\tpublic\n\tString date43;\n\tpublic\n\tString date44;\n\tpublic\n\tString date45;\n\tpublic\n\tString date46;\n\tpublic\n\tString date47;\n",
        "\tstatic void main(String[] args){\n\t\tListView<String> list = new ListView<String>();\n\t\tlist.setItems(FXCollections.observableArrayList(\"Hello\", \"World\"));\n\t\tlist.setPrefWidth(200);\n\t\tlist.setPrefHeight(200);\n\t\tlist.setStyle(\"-fx-border-color: black\");\n\t\tScene scene = new Scene(list);\n\t\tStage stage = new Stage();\n\t\tstage.setScene(scene);\n\t\tstage.show();\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tListView<String> list = new ListView<String>();\n\t\tlist.getItems().addAll(\"Hello\", \"World\");\n\t}\n}\n",
        "\tString name;\n\tString teacher;\n\tString room;\n\tString time;\n\tString day;\n\tString type;\n\tString id;\n\tString color;\n\tString description;\n\tString location;\n\tString date;\n\tString date2;\n\tString date3;\n\tString date4;\n\tString date5;\n\tString date6;\n\tString date7;\n\tString date8;\n\tString date9;\n\tString date10;\n\tString date11;\n\tString date12;\n\tString date13;\n\tString date14;\n\tString date15;\n\tString date16;\n\tString date17;\n\tString date18;\n\tString date19;\n\tString date20;\n\tString date21;\n\tString date22;\n\tString date23;\n\tString date24;\n\tString date25;\n\tString date26;\n\tString date27;\n\tString date28;\n\tString date29;\n\tString date30;\n\tString date31;\n\tString date32;\n\tString date33;\n\tString date34;\n\tString date35;\n\tString date36;\n\tString date37;\n\tString date38;\n\tString date39;\n\tString date40;\n\tString date41;\n\tString date42;\n\tString date43;\n\tString date44;\n\tString date45;\n\tString date46;\n\tString date47;\n\tString date48;\n\tString date49;\n\tString date50;\n\tString date51;\n\tString date52;\n\tString date53;\n\tString date54;\n\tString date55;\n\tString date56;\n\tString date57;\n\tString date58;\n\tString date59;\n\tString date60;\n\tString date61;\n\tString date62;\n\tString date63;\n\tString date64;\n\tString date65;\n\tString date66;\n\tString date67;\n\tString date68;\n\tString date69;\n\tString date70;\n\tString date71;\n\tString date72;\n\tString date73;\n\tString date74;\n\tString date75;\n",
        "\tString name;\n\tString description;\n\tString teacher;\n\tString time;\n\tString location;\n\tString day;\n\tString id;\n\tString type;\n\tString color;\n\tString date;\n\tString month;\n\tString year;\n\tString dayOfWeek;\n\tString dayOfMonth;\n\tString dayOfYear;\n\tString dayOfWeekOfYear;\n\tString dayOfWeekOfMonth;\n\tString dayOfWeekOfYearOfMonth;\n\tString dayOfWeekOfYearOfMonthOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYear;\n\tString dayOfWeekOfYearOfMonthOfYearOfYearOfYearOfYearOfYearOfYearOfYearOfYear\n"
    ],
    "results": 10
},{
    "id": "396",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert a string file to integer file in android studio java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"123\";\n\t\tint i = Integer.parseInt(str);\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"123\";\n\t\tint i = Integer.parseInt(s);\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"123\";\n\t\tint num = Integer.parseInt(str);\n\t\tSystem.out.println(num);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"12345\";\n\t\tint i=Integer.parseInt(str);\n\t\tSystem.out.println(i);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "397",
    "source": "soSearches",
    "language": "java",
    "query": "how to use regualar expression for numbers 0-9 in java?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"12345\";\n\t\tSystem.out.println(s.matches(\"[0-9]+\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"12345\";\n\t\tSystem.out.println(str.matches(\"[0-9]+\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"123456789\";\n\t\tSystem.out.println(str.matches(\"[0-9]+\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"12345\";\n\t\tPattern p = Pattern.compile(\"[0-9]\");\n\t\tMatcher m = p.matcher(str);\n\t\twhile(m.find()){\n\t\t\tSystem.out.println(m.group());\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"123456789\";\n\t\tSystem.out.println(str.matches(\"[0-9]*\"));\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "398",
    "source": "soSearches",
    "language": "java",
    "query": "how to play media javafx",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\t//create a new stage\n\t\tStage stage = new Stage();\n\t\t//create a new media player\n\t\tMediaPlayer mediaPlayer = new MediaPlayer(new Media(new File(\"src/media/music.mp3\").toURI().toString()));\n\t\t//create a new media view\n\t\tMediaView mediaView = new MediaView(mediaPlayer);\n\t\t//create a new button\n\t\tButton playButton = new Button(\"Play\");\n\t\t//create a new button\n\t\tButton pauseButton = new Button(\"Pause\");\n\t\t//create a new button\n\t\tButton stopButton = new Button(\"Stop\");\n\t\t//create a new button\n\t\tButton exitButton = new Button(\"Exit\");\n\t\t//create a new button\n\t\tButton muteButton = new Button(\"Mute\");\n\t\t//create a new button\n\t\tButton unmuteButton = new Button(\"Unmute\");\n\t\t//create a new button\n\t\tButton volumeUpButton = new Button(\"Volume Up\");\n\t\t//create a new button\n\t\tButton volumeDownButton = new Button(\"Volume Down\");\n\t\t//create a new button\n\t\tButton fastForwardButton = new Button(\"Fast Forward\");\n\t\t//create a new button\n\t\tButton rewindButton = new Button(\"Rewind\");\n\t\t//create a new button\n\t\tButton fullScreenButton = new Button(\"Full Screen\");\n\t\t//create a new button\n\t\tButton exitFullScreenButton = new Button(\"Exit Full Screen\");\n\t\t//create a new button\n\t\tButton nextButton = new Button(\"Next\");\n\t\t//create a new button\n\t\tButton previousButton = new Button(\"Previous\");\n\t\t//create a new button\n\t\tButton muteButton2 = new Button(\"Mute\");\n\t\t//create a new button\n\t\tButton unmuteButton2 = new Button(\"Unmute\");\n\t\t//create a new button\n\t\tButton volumeUpButton2 = new Button(\"Volume Up\");\n\t\t//create a new button\n\t\tButton volumeDownButton2 = new Button(\"Volume Down\");\n\t\t//create a new button\n\t\tButton fastForwardButton2\n",
        "\tstatic void main(String[] args){\n\t\t\n\t\t//create a new stage\n\t\tStage stage = new Stage();\n\t\t\n\t\t//create a new scene\n\t\tScene scene = new Scene(new Group());\n\t\t\n\t\t//set the stage title\n\t\tstage.setTitle(\"How to play media\");\n\t\t\n\t\t//set the scene to the stage\n\t\tstage.setScene(scene);\n\t\t\n\t\t//show the stage\n\t\tstage.show();\n\t\t\n\t\t//create a new media player\n\t\tMediaPlayer player = new MediaPlayer(new Media(new File(\"src/media/howtoplay.mp4\").toURI().toString()));\n\t\t\n\t\t//create a new media view\n\t\tMediaView view = new MediaView(player);\n\t\t\n\t\t//add the media view to the group\n\t\t((Group) scene.getRoot()).getChildren().add(view);\n\t\t\n\t\t//play the media\n\t\tplayer.play();\n\t}\n}\n",
        "\tvoid play(){\n\t\tSystem.out.println(\"play\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "399",
    "source": "soSearches",
    "language": "java",
    "query": "how to create an iterable in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tSystem.out.println(list);\n\t\tIterator<String> it = list.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tSystem.out.println(it.next());\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tIterator<String> it = list.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tSystem.out.println(it.next());\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"one\");\n\t\tlist.add(\"two\");\n\t\tlist.add(\"three\");\n\t\tlist.add(\"four\");\n\t\tlist.add(\"five\");\n\t\tlist.add(\"six\");\n\t\tlist.add(\"seven\");\n\t\tlist.add(\"eight\");\n\t\tlist.add(\"nine\");\n\t\tlist.add(\"ten\");\n\t\tlist.add(\"eleven\");\n\t\tlist.add(\"twelve\");\n\t\tlist.add(\"thirteen\");\n\t\tlist.add(\"fourteen\");\n\t\tlist.add(\"fifteen\");\n\t\tlist.add(\"sixteen\");\n\t\tlist.add(\"seventeen\");\n\t\tlist.add(\"eighteen\");\n\t\tlist.add(\"nineteen\");\n\t\tlist.add(\"twenty\");\n\t\tlist.add(\"twentyone\");\n\t\tlist.add(\"twentytwo\");\n\t\tlist.add(\"twentythree\");\n\t\tlist.add(\"twentyfour\");\n\t\tlist.add(\"twentyfive\");\n\t\tlist.add(\"twentysix\");\n\t\tlist.add(\"twentyseven\");\n\t\tlist.add(\"twentyeight\");\n\t\tlist.add(\"twentynine\");\n\t\tlist.add(\"thirty\");\n\t\tlist.add(\"thirtyone\");\n\t\tlist.add(\"thirtytwo\");\n\t\tlist.add(\"thirtythree\");\n\t\tlist.add(\"thirtyfour\");\n\t\tlist.add(\"thirtyfive\");\n\t\tlist.add(\"thirtysix\");\n\t\tlist.add(\"thirtyseven\");\n\t\tlist.add(\"thirtyeight\");\n\t\tlist.add(\"thirtynine\");\n\t\tlist.add(\"forty\");\n\t\tlist.add(\"fortyone\");\n\t\tlist.add(\"fortytwo\");\n\t\tlist.add(\"fortythree\");\n\t\tlist.add(\"fortyfour\");\n\t\tlist.add(\"fortyfive\");\n\t\tlist.add(\"fort\n",
        "\tstatic void main(String[] args){\n\t\tIterable<String> iterable = new Iterable<String>(){\n\t\t\t@Override\n\t\t\tpublic Iterator<String> iterator(){\n\t\t\t\treturn new Iterator<String>(){\n\t\t\t\t\tint i = 0;\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean hasNext(){\n\t\t\t\t\t\treturn i < 10;\n\t\t\t\t\t}\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic String next(){\n\t\t\t\t\t\treturn String.valueOf(i++);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tfor(String s : iterable){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tClazz clazz = new Clazz();\n\t\tclazz.test();\n\t}\n\tpublic void test(){\n\t\tIterable<String> iterable = new Iterable<String>(){\n\t\t\t@Override\n\t\t\tpublic Iterator<String> iterator(){\n\t\t\t\treturn new Iterator<String>(){\n\t\t\t\t\tprivate int index = 0;\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean hasNext(){\n\t\t\t\t\t\treturn index < 10;\n\t\t\t\t\t}\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic String next(){\n\t\t\t\t\t\treturn \"hello\" + index++;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tfor(String s : iterable){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tClazz clazz = new Clazz();\n\t\tclazz.test();\n\t}\n\tpublic void test(){\n\t\tIterable<String> iterable = new Iterable<String>(){\n\t\t\tpublic Iterator<String> iterator(){\n\t\t\t\treturn new Iterator<String>(){\n\t\t\t\t\tprivate int index = 0;\n\t\t\t\t\tpublic boolean hasNext(){\n\t\t\t\t\t\treturn index < 10;\n\t\t\t\t\t}\n\t\t\t\t\tpublic String next(){\n\t\t\t\t\t\treturn \"hello\" + index++;\n\t\t\t\t\t}\n\t\t\t\t\tpublic void remove(){\n\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tfor(String s : iterable){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "400",
    "source": "soSearches",
    "language": "java",
    "query": "how to insert javadatetimepicker value in mysql database",
    "snippets": [
        "\tvoid insert(String date){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tString query=\"insert into clazz values('\"+date+\"')\";\n\t\t\tstmt.executeUpdate(query);\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String date){\n\t\tConnection con = null;\n\t\tStatement stmt = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tstmt = con.createStatement();\n\t\t\tString sql = \"insert into clazz values('\"+name+\"','\"+date+\"')\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tcon.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name,String date){\n\t\tConnection con=null;\n\t\tPreparedStatement ps=null;\n\t\ttry{\n\t\t\tcon=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tps=con.prepareStatement(\"insert into clazz values(?,?)\");\n\t\t\tps.setString(1,name);\n\t\t\tps.setString(2,date);\n\t\t\tps.executeUpdate();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String date){\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tps = con.prepareStatement(\"insert into clazz values(?,?)\");\n\t\t\tps.setString(1,name);\n\t\t\tps.setString(2,date);\n\t\t\tps.executeUpdate();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(con!=null)\n\t\t\t\t\tcon.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String email, String phone, String address, String dob, String password){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tString query=\"insert into clazz values('\"+name+\"','\"+email+\"','\"+phone+\"','\"+address+\"','\"+dob+\"','\"+password+\"')\";\n\t\t\tstmt.executeUpdate(query);\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String email, String dob, String phone, String address, String city, String state, String country, String pincode, String\n",
        "\tvoid insert(String name, String email, String phone, String address, String dob, String password){\n\t\tConnection con = null;\n\t\tPreparedStatement pst = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tpst = con.prepareStatement(\"insert into clazz values(?,?,?,?,?,?)\");\n\t\t\tpst.setString(1,name);\n\t\t\tpst.setString(2,email);\n\t\t\tpst.setString(3,phone);\n\t\t\tpst.setString(4,address);\n\t\t\tpst.setString(5,dob);\n\t\t\tpst.setString(6,password);\n\t\t\tpst.executeUpdate();\n\t\t\tSystem.out.println(\"Inserted\");\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String email, String phone, String address, String dob, String doj, String salary, String dept, String desig, String\n",
        "\tvoid insert(String name,String email,String password,String\n",
        "\tvoid insert(String name, String email, String password, String dob, String address, String phone, String\n"
    ],
    "results": 10
},{
    "id": "401",
    "source": "soSearches",
    "language": "java",
    "query": "java how to judge network is wifi or wan",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"wifi\";\n\t\tif(s.equals(\"wifi\")){\n\t\t\tSystem.out.println(\"wifi\");\n\t\t}else{\n\t\t\tSystem.out.println(\"wan\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"\";\n\t\tif(s.equals(\"wifi\")){\n\t\t\tSystem.out.println(\"wifi\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"wan\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"www.baidu.com\";\n\t\tString s1 = \"www.baidu.com\";\n\t\tString s2 = \"www.baidu.com\";\n\t\tString s3 = \"www.baidu.com\";\n\t\tString s4 = \"www.baidu.com\";\n\t\tString s5 = \"www.baidu.com\";\n\t\tString s6 = \"www.baidu.com\";\n\t\tString s7 = \"www.baidu.com\";\n\t\tString s8 = \"www.baidu.com\";\n\t\tString s9 = \"www.baidu.com\";\n\t\tString s10 = \"www.baidu.com\";\n\t\tString s11 = \"www.baidu.com\";\n\t\tString s12 = \"www.baidu.com\";\n\t\tString s13 = \"www.baidu.com\";\n\t\tString s14 = \"www.baidu.com\";\n\t\tString s15 = \"www.baidu.com\";\n\t\tString s16 = \"www.baidu.com\";\n\t\tString s17 = \"www.baidu.com\";\n\t\tString s18 = \"www.baidu.com\";\n\t\tString s19 = \"www.baidu.com\";\n\t\tString s20 = \"www.baidu.com\";\n\t\tString s21 = \"www.baidu.com\";\n\t\tString s22 = \"www.baidu.com\";\n\t\tString s23 = \"www.baidu.com\";\n\t\tString s24 = \"www.baidu.com\";\n\t\tString s25 = \"www.baidu.com\";\n\t\tString s26 = \"www.baidu.com\";\n\t\tString s27 = \"www.baidu.com\";\n\t\tString s28 = \"www.baidu.com\";\n\t\tString s29 = \"www.baidu.com\";\n\t\tString s30 = \"www.b\n",
        "\tstatic void main(String[] args){\n\t\tString ip = \"\";\n\t\tString netmask = \"\";\n\t\tString gateway = \"\";\n\t\tString dns = \"\";\n\t\tString dns2 = \"\";\n\t\tString dns3 = \"\";\n\t\tString dns4 = \"\";\n\t\tString dns5 = \"\";\n\t\tString dns6 = \"\";\n\t\tString dns7 = \"\";\n\t\tString dns8 = \"\";\n\t\tString dns9 = \"\";\n\t\tString dns10 = \"\";\n\t\tString dns11 = \"\";\n\t\tString dns12 = \"\";\n\t\tString dns13 = \"\";\n\t\tString dns14 = \"\";\n\t\tString dns15 = \"\";\n\t\tString dns16 = \"\";\n\t\tString dns17 = \"\";\n\t\tString dns18 = \"\";\n\t\tString dns19 = \"\";\n\t\tString dns20 = \"\";\n\t\tString dns21 = \"\";\n\t\tString dns22 = \"\";\n\t\tString dns23 = \"\";\n\t\tString dns24 = \"\";\n\t\tString dns25 = \"\";\n\t\tString dns26 = \"\";\n\t\tString dns27 = \"\";\n\t\tString dns28 = \"\";\n\t\tString dns29 = \"\";\n\t\tString dns30 = \"\";\n\t\tString dns31 = \"\";\n\t\tString dns32 = \"\";\n\t\tString dns33 = \"\";\n\t\tString dns34 = \"\";\n\t\tString dns35 = \"\";\n\t\tString dns36 = \"\";\n\t\tString dns37 = \"\";\n\t\tString dns38 = \"\";\n\t\tString dns39 = \"\";\n\t\tString dns40 = \"\";\n\t\tString dns41 = \"\";\n\t\tString dns42 = \"\";\n\t\tString dns43 = \"\";\n\t\tString dns44 = \"\";\n\t\tString dns45 = \"\";\n\t\tString dns46 = \"\";\n\t\tString dns\n"
    ],
    "results": 10
},{
    "id": "402",
    "source": "soSearches",
    "language": "java",
    "query": "how to animate text using java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint i=0;\n\t\twhile(i<str.length()){\n\t\t\tSystem.out.print(str.charAt(i));\n\t\t\ti++;\n\t\t\ttry{\n\t\t\t\tThread.sleep(100);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\tSystem.out.println(e);\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint i=0;\n\t\twhile(i<str.length()){\n\t\t\tSystem.out.print(str.charAt(i));\n\t\t\ti++;\n\t\t\ttry{\n\t\t\t\tThread.sleep(100);\n\t\t\t}\n\t\t\tcatch(Exception e){\n\t\t\t\tSystem.out.println(e);\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString text = \"Hello World\";\n\t\tint i = 0;\n\t\twhile(i < text.length()){\n\t\t\tSystem.out.print(text.charAt(i));\n\t\t\ti++;\n\t\t\ttry{\n\t\t\t\tThread.sleep(100);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString text = \"Hello World\";\n\t\tint i = 0;\n\t\twhile(i < text.length()){\n\t\t\tSystem.out.print(text.charAt(i));\n\t\t\ti++;\n\t\t\ttry{\n\t\t\t\tThread.sleep(100);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString text = \"Hello World\";\n\t\tint i = 0;\n\t\twhile(i < text.length()){\n\t\t\tSystem.out.print(text.charAt(i));\n\t\t\ti++;\n\t\t\ttry{\n\t\t\t\tThread.sleep(100);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\tSystem.out.println(\"Error\");\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\t//create a new text object\n\t\tText text = new Text();\n\t\t//set the text to be animated\n\t\ttext.setText(\"Hello World\");\n\t\t//set the font of the text\n\t\ttext.setFont(new Font(\"Arial\", Font.BOLD, 40));\n\t\t//set the color of the text\n\t\ttext.setFill(Color.RED);\n\t\t//set the position of the text\n\t\ttext.setX(50);\n\t\ttext.setY(50);\n\t\t//add the text to the scene\n\t\tScene scene = new Scene(new Group(text));\n\t\t//create a new stage\n\t\tStage stage = new Stage();\n\t\t//set the title of the stage\n\t\tstage.setTitle(\"Animate Text\");\n\t\t//set the scene of the stage\n\t\tstage.setScene(scene);\n\t\t//show the stage\n\t\tstage.show();\n\t\t//create a new animation\n\t\tAnimation animation = new Animation(){\n\t\t\t//override the animation method\n\t\t\t@Override\n\t\t\tprotected void handle(long now){\n\t\t\t\t//move the text by 10 pixels\n\t\t\t\ttext.setX(text.getX() + 10);\n\t\t\t}\n\t\t};\n\t\t//start the animation\n\t\tanimation.start();\n\t}\n}\n"
    ],
    "results": 7
},{
    "id": "403",
    "source": "soSearches",
    "language": "java",
    "query": "how to play wav in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClip clip = AudioSystem.getClip();\n\t\t\tclip.open(AudioSystem.getAudioInputStream(new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\music.wav\")));\n\t\t\tclip.start();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClip clip = AudioSystem.getClip();\n\t\t\tclip.open(AudioSystem.getAudioInputStream(new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.wav\")));\n\t\t\tclip.start();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClazz clazz = new Clazz();\n\t\t\tclazz.playWav();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\tpublic void playWav(){\n\t\ttry{\n\t\t\tFile file = new File(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.wav\");\n\t\t\tAudioInputStream audioInputStream = AudioSystem.getAudioInputStream(file);\n\t\t\tClip clip = AudioSystem.getClip();\n\t\t\tclip.open(audioInputStream);\n\t\t\tclip.start();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClip clip = AudioSystem.getClip();\n\t\t\tclip.open(AudioSystem.getAudioInputStream(new File(\"/home/soumya/Desktop/wav/1.wav\")));\n\t\t\tclip.start();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tAudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\music.wav\"));\n\t\t\tClip clip = AudioSystem.getClip();\n\t\t\tclip.open(audioInputStream);\n\t\t\tclip.start();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.wav\");\n\t\t\tAudioInputStream ais = AudioSystem.getAudioInputStream(fis);\n\t\t\tClip clip = AudioSystem.getClip();\n\t\t\tclip.open(ais);\n\t\t\tclip.start();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tAudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.wav\"));\n\t\t\tClip clip = AudioSystem.getClip();\n\t\t\tclip.open(audioInputStream);\n\t\t\tclip.start();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"/home/pi/Desktop/test.wav\");\n\t\t\tAudioInputStream audioIn = AudioSystem.getAudioInputStream(file);\n\t\t\tClip clip = AudioSystem.getClip();\n\t\t\tclip.open(audioIn);\n\t\t\tclip.start();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "404",
    "source": "soSearches",
    "language": "java",
    "query": "how to do a soap web service call from java class",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://localhost:8080/axis/services/HelloWorld\");\n\t\t\tQName qname = new QName(\"http://axis.apache.org/axisC/\",\"HelloWorld\");\n\t\t\tService service = Service.create(url,qname);\n\t\t\tHelloWorld helloWorld = service.getPort(HelloWorld.class);\n\t\t\tString result = helloWorld.sayHello(\"Hello World\");\n\t\t\tSystem.out.println(result);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\t//create a soap client\n\t\t\tSOAPConnectionFactory soapConnectionFactory = SOAPConnectionFactory.newInstance();\n\t\t\tSOAPConnection soapConnection = soapConnectionFactory.createConnection();\n\t\t\t//create a soap message\n\t\t\tMessageFactory messageFactory = MessageFactory.newInstance();\n\t\t\tSOAPMessage soapMessage = messageFactory.createMessage();\n\t\t\t//create a soap envelope\n\t\t\tSOAPPart soapPart = soapMessage.getSOAPPart();\n\t\t\tSOAPEnvelope soapEnvelope = soapPart.getEnvelope();\n\t\t\t//create a soap body\n\t\t\tSOAPBody soapBody = soapEnvelope.getBody();\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement = soapBody.addChildElement(\"getAllUsers\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement1 = soapBody.addChildElement(\"arg0\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement2 = soapBody.addChildElement(\"arg1\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement3 = soapBody.addChildElement(\"arg2\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement4 = soapBody.addChildElement(\"arg3\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement5 = soapBody.addChildElement(\"arg4\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement6 = soapBody.addChildElement(\"arg5\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement7 = soapBody.addChildElement(\"arg6\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement8 = soapBody.addChildElement(\"arg7\");\n\t\t\t//create a soap body element\n\t\t\tSOAPBodyElement soapBodyElement9 = soapBody.\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString url = \"http://localhost:8080/axis/services/HelloWorld\";\n\t\t\tURL obj = new URL(url);\n\t\t\tHttpURLConnection con = (HttpURLConnection)obj.openConnection();\n\t\t\tcon.setRequestMethod(\"POST\");\n\t\t\tcon.setRequestProperty(\"Content-Type\", \"text/xml; charset=utf-8\");\n\t\t\tcon.setDoOutput(true);\n\t\t\tcon.setDoInput(true);\n\t\t\tcon.setUseCaches(false);\n\t\t\tcon.setAllowUserInteraction(false);\n\t\t\tcon.setRequestProperty(\"SOAPAction\", \"urn:HelloWorld#sayHello\");\n\t\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" +\n\t\t\t\t\t\"<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:ns1=\\\"urn:HelloWorld\\\">\" +\n\t\t\t\t\t\"<SOAP-ENV:Body>\" +\n\t\t\t\t\t\"<ns1:sayHello>\" +\n\t\t\t\t\t\"<ns1:name>Hello World</ns1:name>\" +\n\t\t\t\t\t\"</ns1:sayHello>\" +\n\t\t\t\t\t\"</SOAP-ENV:Body>\" +\n\t\t\t\t\t\"</SOAP-ENV:Envelope>\";\n\t\t\tOutputStreamWriter wr = new OutputStreamWriter(con.getOutputStream());\n\t\t\twr.write(xml);\n\t\t\twr.flush();\n\t\t\tBufferedReader rd = new BufferedReader(new InputStreamReader(con.getInputStream()));\n\t\t\tString line;\n\t\t\twhile((line = rd.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\twr.close();\n\t\t\trd.close();\n\t\t}catch(Exception e\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://localhost:8080/soap/services/HelloWorld\";\n\t\tString soapAction = \"http://localhost:8080/soap/services/HelloWorld\";\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" +\n\t\t\t\t\"<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:SOAP-ENC=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\">\" +\n\t\t\t\t\"<SOAP-ENV:Body>\" +\n\t\t\t\t\"<ns1:sayHello xmlns:ns1=\\\"http://localhost:8080/soap/services/HelloWorld\\\">\" +\n\t\t\t\t\"<ns1:name>John</ns1:name>\" +\n\t\t\t\t\"</ns1:sayHello>\" +\n\t\t\t\t\"</SOAP-ENV:Body>\" +\n\t\t\t\t\"</SOAP-ENV:Envelope>\";\n\t\tSoapClient client = new SoapClient(url, soapAction, xml);\n\t\tString result = client.call();\n\t\tSystem.out.println(result);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString url = \"http://localhost:8080/axis/services/HelloWorld\";\n\t\t\tURL wsdlURL = new URL(url + \"?wsdl\");\n\t\t\tQName serviceName = new QName(\"http://axis.org/hello\", \"HelloWorldService\");\n\t\t\tService service = Service.create(wsdlURL, serviceName);\n\t\t\tQName portName = new QName(\"http://axis.org/hello\", \"HelloWorldPort\");\n\t\t\tHelloWorldPortType port = service.getPort(portName, HelloWorldPortType.class);\n\t\t\tString result = port.sayHi(\"Hello World\");\n\t\t\tSystem.out.println(result);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://localhost:8080/axis2/services/HelloWorld\";\n\t\tString method = \"sayHello\";\n\t\tString input = \"Hello World\";\n\t\tString output = \"\";\n\t\ttry{\n\t\t\toutput = callWebService(url, method, input);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(output);\n\t}\n\tpublic static String callWebService(String url, String method, String input) throws Exception{\n\t\tString output = \"\";\n\t\tURL wsdlURL = new URL(url + \"?wsdl\");\n\t\tQName qname = new QName(\"http://axis2.org/service/\", method);\n\t\tService service = Service.create(wsdlURL, qname);\n\t\tHelloWorld hello = service.getPort(HelloWorld.class);\n\t\toutput = hello.sayHello(input);\n\t\treturn output;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\t//create a client\n\t\t\tClient client = new Client(new URL(\"http://localhost:8080/axis/services/HelloWorld\"));\n\t\t\t//create a soap call object\n\t\t\tCall call = client.createCall();\n\t\t\t//set the method name\n\t\t\tcall.setOperationName(\"sayHello\");\n\t\t\t//set the return type\n\t\t\tcall.setReturnType(XMLType.XSD_STRING);\n\t\t\t//set the parameter type\n\t\t\tcall.addParameter(\"name\", XMLType.XSD_STRING, ParameterMode.IN);\n\t\t\t//invoke the method\n\t\t\tString result = (String)call.invoke(new Object[]{\"Hello World\"});\n\t\t\tSystem.out.println(result);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\t//create a SOAP connection\n\t\t\tSOAPConnection con = SOAPConnectionFactory.newInstance().createConnection();\n\t\t\t//create a SOAP message\n\t\t\tSOAPMessage msg = con.createMessage();\n\t\t\t//create a SOAP envelope\n\t\t\tSOAPPart part = msg.getSOAPPart();\n\t\t\tSOAPEnvelope env = part.getEnvelope();\n\t\t\t//create a SOAP body\n\t\t\tSOAPBody body = env.getBody();\n\t\t\t//create a SOAP body element\n\t\t\tSOAPBodyElement ele = body.addBodyElement(env.createName(\"getStockQuote\", \"\", \"http://www.webserviceX.NET\"));\n\t\t\t//create a SOAP body element\n\t\t\tSOAPElement ele1 = ele.addChildElement(\"symbol\");\n\t\t\t//set the value of the SOAP body element\n\t\t\tele1.addTextNode(\"IBM\");\n\t\t\t//create a SOAP body element\n\t\t\tSOAPElement ele2 = ele.addChildElement(\"stockQuote\");\n\t\t\t//create a SOAP body element\n\t\t\tSOAPElement ele3 = ele2.addChildElement(\"LastTradePriceOnly\");\n\t\t\t//set the value of the SOAP body element\n\t\t\tele3.addTextNode(\"\");\n\t\t\t//create a SOAP body element\n\t\t\tSOAPElement ele4 = ele2.addChildElement(\"Symbol\");\n\t\t\t//set the value of the SOAP body element\n\t\t\tele4.addTextNode(\"\");\n\t\t\t//create a SOAP body element\n\t\t\tSOAPElement ele5 = ele2.addChildElement(\"LastTradeDate\");\n\t\t\t//set the value of the SOAP body element\n\t\t\tele5.addTextNode(\"\");\n\t\t\t//create a SOAP body element\n\t\t\tSOAPElement ele6 = ele2.addChildElement(\"LastTradeTime\");\n\t\t\t//set the value of the SOAP body element\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://localhost:8080/soap/servlet/rpcrouter\";\n\t\tString method = \"getUser\";\n\t\tString namespace = \"http://soap.webservice.com\";\n\t\tString soapAction = \"http://soap.webservice.com/getUser\";\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n\t\t\t\t\"<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:ns1=\\\"http://soap.webservice.com\\\">\\n\" +\n\t\t\t\t\"<SOAP-ENV:Body>\\n\" +\n\t\t\t\t\"<ns1:getUser>\\n\" +\n\t\t\t\t\"<ns1:userId>1</ns1:userId>\\n\" +\n\t\t\t\t\"</ns1:getUser>\\n\" +\n\t\t\t\t\"</SOAP-ENV:Body>\\n\" +\n\t\t\t\t\"</SOAP-ENV:Envelope>\";\n\t\tString response = \"\";\n\t\ttry{\n\t\t\tresponse = SOAPClient.sendRequest(url, method, namespace, soapAction, xml);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(response);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\t//create a new instance of the class\n\t\tClazz c = new Clazz();\n\t\t//call the method\n\t\tc.callWebService();\n\t}\n\tpublic void callWebService(){\n\t\t//create a new instance of the class\n\t\tSoapWebService sws = new SoapWebService();\n\t\t//call the method\n\t\tsws.getWebService();\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "405",
    "source": "soSearches",
    "language": "java",
    "query": "how to round down a decimal in java script without using math lib",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble d = 0.5;\n\t\tint i = (int)d;\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.14159;\n\t\tdouble e = Math.floor(d);\n\t\tSystem.out.println(e);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.14159;\n\t\tint i = (int)d;\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tint i = (int)d;\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tdouble e = Math.floor(d);\n\t\tSystem.out.println(e);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tdouble d1 = Math.floor(d);\n\t\tSystem.out.println(d1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 0.5;\n\t\tSystem.out.println(Math.floor(d));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592653589793;\n\t\tdouble e = Math.floor(d);\n\t\tSystem.out.println(e);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "406",
    "source": "soSearches",
    "language": "java",
    "query": "how to get windows version [java]",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.getProperty(\"os.name\"));\n\t\tSystem.out.println(System.getProperty(\"os.version\"));\n\t\tSystem.out.println(System.getProperty(\"os.arch\"));\n\t\tSystem.out.println(System.getProperty(\"java.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vendor.url\"));\n\t\tSystem.out.println(System.getProperty(\"java.home\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.class.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.class.path\"));\n\t\tSystem.out.println(System.getProperty(\"java.library.path\"));\n\t\tSystem.out.println(System.getProperty(\"java.io.tmpdir\"));\n\t\tSystem.out.println(System.getProperty(\"java.compiler\"));\n\t\tSystem.out.println(System.getProperty(\"java.ext.dirs\"));\n\t\tSystem.out.println(System.getProperty(\"os.name\"));\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.getProperty(\"os.name\"));\n\t\tSystem.out.println(System.getProperty(\"os.version\"));\n\t\tSystem.out.println(System.getProperty(\"os.arch\"));\n\t\tSystem.out.println(System.getProperty(\"java.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vendor.url\"));\n\t\tSystem.out.println(System.getProperty(\"java.home\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.class.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.class.path\"));\n\t\tSystem.out.println(System.getProperty(\"java.library.path\"));\n\t\tSystem.out.println(System.getProperty(\"java.io.tmpdir\"));\n\t\tSystem.out.println(System.getProperty(\"java.compiler\"));\n\t\tSystem.out.println(System.getProperty(\"sun.boot.class.path\"));\n\t\tSystem.out.println(System.getProperty(\"java.ext.dirs\")\n"
    ],
    "results": 10
},{
    "id": "407",
    "source": "soSearches",
    "language": "java",
    "query": "how to delay text in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t\ttry{\n\t\t\tThread.sleep(1000);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"Goodbye World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t\ttry{\n\t\t\tThread.sleep(5000);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"Goodbye World\");\n\t}\n}\n",
        "\tvoid delayText(){\n\t\ttry{\n\t\t\tThread.sleep(5000);\n\t\t}\n\t\tcatch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "408",
    "source": "soSearches",
    "language": "java",
    "query": "how to encrypt passwords in config files grails and java",
    "snippets": [
        "\tvoid method(){\n\t\tString password = \"password\";\n\t\tString encryptedPassword = new String(Base64.encodeBase64(password.getBytes()));\n\t\tSystem.out.println(encryptedPassword);\n\t}\n}\n",
        "\tstatic String encrypt(String password){\n\t\treturn new String(Base64.encodeBase64(password.getBytes()));\n\t}\n\tpublic\n\tstatic String decrypt(String password){\n\t\treturn new String(Base64.decodeBase64(password.getBytes()));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString password = \"password\";\n\t\tString encryptedPassword = encrypt(password);\n\t\tSystem.out.println(encryptedPassword);\n\t\tString decryptedPassword = decrypt(encryptedPassword);\n\t\tSystem.out.println(decryptedPassword);\n\t}\n\tpublic static String encrypt(String password){\n\t\treturn password;\n\t}\n\tpublic static String decrypt(String encryptedPassword){\n\t\treturn encryptedPassword;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString password = \"password\";\n\t\tString encryptedPassword = encrypt(password);\n\t\tSystem.out.println(encryptedPassword);\n\t\tString decryptedPassword = decrypt(encryptedPassword);\n\t\tSystem.out.println(decryptedPassword);\n\t}\n\tpublic static String encrypt(String password){\n\t\tString encryptedPassword = \"\";\n\t\tfor(int i = 0; i < password.length(); i++){\n\t\t\tchar c = password.charAt(i);\n\t\t\tint x = (int)c;\n\t\t\tx = x + 1;\n\t\t\tchar newC = (char)x;\n\t\t\tencryptedPassword = encryptedPassword + newC;\n\t\t}\n\t\treturn encryptedPassword;\n\t}\n\tpublic static String decrypt(String encryptedPassword){\n\t\tString decryptedPassword = \"\";\n\t\tfor(int i = 0; i < encryptedPassword.length(); i++){\n\t\t\tchar c = encryptedPassword.charAt(i);\n\t\t\tint x = (int)c;\n\t\t\tx = x - 1;\n\t\t\tchar newC = (char)x;\n\t\t\tdecryptedPassword = decryptedPassword + newC;\n\t\t}\n\t\treturn decryptedPassword;\n\t}\n}\n",
        "\tvoid method(){\n\t\tString password = \"password\";\n\t\tString encryptedPassword = password.hashCode();\n\t\tSystem.out.println(encryptedPassword);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "409",
    "source": "soSearches",
    "language": "java",
    "query": "how to define user defined exception in java",
    "snippets": [
        "\tvoid m1(){\n\t\ttry{\n\t\t\tm2();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception handled\");\n\t\t}\n\t}\n\tpublic\n\tvoid m2(){\n\t\tthrow new RuntimeException();\n\t}\n}\n",
        "\tvoid m1(){\n\t\ttry{\n\t\t\tthrow new Exception();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception handled\");\n\t\t}\n\t}\n}\n",
        "\tvoid m1(){\n\t\ttry{\n\t\t\tthrow new MyException();\n\t\t}\n\t\tcatch(MyException e){\n\t\t\tSystem.out.println(\"MyException\");\n\t\t}\n\t}\n}\n",
        "\tvoid method1(){\n\t\ttry{\n\t\t\tmethod2();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method1\");\n\t\t}\n\t}\n\tpublic\n\tvoid method2(){\n\t\ttry{\n\t\t\tmethod3();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method2\");\n\t\t}\n\t}\n\tpublic\n\tvoid method3(){\n\t\ttry{\n\t\t\tmethod4();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method3\");\n\t\t}\n\t}\n\tpublic\n\tvoid method4(){\n\t\ttry{\n\t\t\tmethod5();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method4\");\n\t\t}\n\t}\n\tpublic\n\tvoid method5(){\n\t\ttry{\n\t\t\tmethod6();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method5\");\n\t\t}\n\t}\n\tpublic\n\tvoid method6(){\n\t\ttry{\n\t\t\tmethod7();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method6\");\n\t\t}\n\t}\n\tpublic\n\tvoid method7(){\n\t\ttry{\n\t\t\tmethod8();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method7\");\n\t\t}\n\t}\n\tpublic\n\tvoid method8(){\n\t\ttry{\n\t\t\tmethod9();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method8\");\n\t\t}\n\t}\n\tpublic\n\tvoid method9(){\n\t\ttry{\n\t\t\tmethod10();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in method9\");\n\t\t}\n\t}\n\tpublic\n\tvoid\n",
        "\tvoid m1() throws MyException{\n\t\tthrow new MyException();\n\t}\n}\n",
        "\tvoid method1(){\n\t\ttry{\n\t\t\tSystem.out.println(\"try block\");\n\t\t\tthrow new Exception();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"catch block\");\n\t\t}\n\t\tfinally{\n\t\t\tSystem.out.println(\"finally block\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "410",
    "source": "soSearches",
    "language": "java",
    "query": "how to increase java memory solaris",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "411",
    "source": "soSearches",
    "language": "java",
    "query": "how to create the instance in java",
    "snippets": [
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz constructor\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz created\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"I am a class\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "412",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert the following json to java object",
    "snippets": [
        "\tString name;\n\tint age;\n\tpublic Clazz(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n}\n",
        "\tString name;\n\tint age;\n\tpublic Clazz(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String getName(){\n\t\treturn name;\n\t}\n\tpublic int getAge(){\n\t\treturn age;\n\t}\n\tpublic void setName(String name){\n\t\tthis.name = name;\n\t}\n\tpublic void setAge(int age){\n\t\tthis.age = age;\n\t}\n}\n",
        "\tString name;\n\tint age;\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n}\n",
        "\tString name;\n\tint age;\n\tpublic Clazz(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String getName(){\n\t\treturn name;\n\t}\n\tpublic int getAge(){\n\t\treturn age;\n\t}\n}\n",
        "\tString name;\n\tpublic\n\tint age;\n\tpublic\n\tString address;\n\tpublic\n\tString phone;\n\tpublic\n\tString email;\n\tpublic\n\tString password;\n\tpublic\n\tString confirmPassword;\n\tpublic\n\tString role;\n\tpublic\n\tString status;\n\tpublic\n\tString createdBy;\n\tpublic\n\tString createdDate;\n\tpublic\n\tString updatedBy;\n\tpublic\n\tString updatedDate;\n\tpublic\n\tString deletedBy;\n\tpublic\n\tString deletedDate;\n\tpublic\n\tString deletedStatus;\n\tpublic\n\tString token;\n\tpublic\n\tString tokenExpiry;\n\tpublic\n\tString tokenStatus;\n\tpublic\n\tString tokenCreatedBy;\n\tpublic\n\tString tokenCreatedDate;\n\tpublic\n\tString tokenUpdatedBy;\n\tpublic\n\tString tokenUpdatedDate;\n\tpublic\n\tString tokenDeletedBy;\n\tpublic\n\tString tokenDeletedDate;\n\tpublic\n\tString tokenDeletedStatus;\n\tpublic\n\tString tokenId;\n\tpublic\n\tString tokenUserId;\n\tpublic\n\tString tokenUserName;\n\tpublic\n\tString tokenUserEmail;\n\tpublic\n\tString tokenUserPhone;\n\tpublic\n\tString tokenUserAddress;\n\tpublic\n\tString tokenUserRole;\n\tpublic\n\tString tokenUserStatus;\n\tpublic\n\tString tokenUserCreatedBy;\n\tpublic\n\tString tokenUserCreatedDate;\n\tpublic\n\tString tokenUserUpdatedBy;\n\tpublic\n\tString tokenUserUpdatedDate;\n\tpublic\n\tString tokenUserDeletedBy;\n\tpublic\n\tString tokenUserDeletedDate;\n\tpublic\n\tString tokenUserDeletedStatus;\n\tpublic\n\tString tokenUserToken;\n\tpublic\n\tString tokenUserTokenExpiry;\n\tpublic\n\tString tokenUserTokenStatus;\n\tpublic\n\tString tokenUserTokenCreatedBy;\n\tpublic\n\tString tokenUserTokenCreatedDate;\n\tpublic\n",
        "\tString name;\n\tpublic\n\tint age;\n\tpublic\n\tString address;\n\tpublic\n\tString city;\n\tpublic\n\tString state;\n\tpublic\n\tString country;\n\tpublic\n\tString pincode;\n\tpublic\n\tString phone;\n\tpublic\n\tString email;\n\tpublic\n\tString password;\n",
        "\tString name;\n\tpublic\n\tint age;\n\tpublic\n\tString address;\n\tpublic\n\tString phone;\n\tpublic\n\tString email;\n\tpublic\n\tString password;\n\tpublic\n\tString confirmPassword;\n\tpublic\n\tString role;\n\tpublic\n\tString status;\n\tpublic\n\tString createdBy;\n\tpublic\n\tString createdDate;\n\tpublic\n\tString updatedBy;\n\tpublic\n\tString updatedDate;\n\tpublic\n\tString deletedBy;\n\tpublic\n\tString deletedDate;\n\tpublic\n\tString deletedStatus;\n\tpublic\n\tString deletedReason;\n\tpublic\n\tString deletedComment;\n\tpublic\n\tString deletedByName;\n\tpublic\n\tString deletedByEmail;\n\tpublic\n\tString deletedByPhone;\n\tpublic\n\tString deletedByRole;\n\tpublic\n\tString deletedByStatus;\n\tpublic\n\tString deletedByCreatedBy;\n\tpublic\n\tString deletedByCreatedDate;\n\tpublic\n\tString deletedByUpdatedBy;\n\tpublic\n\tString deletedByUpdatedDate;\n\tpublic\n\tString deletedByDeletedBy;\n\tpublic\n\tString deletedByDeletedDate;\n\tpublic\n\tString deletedByDeletedStatus;\n\tpublic\n\tString deletedByDeletedReason;\n\tpublic\n\tString deletedByDeletedComment;\n\tpublic\n\tString deletedByDeletedByName;\n\tpublic\n\tString deletedByDeletedByEmail;\n\tpublic\n\tString deletedByDeletedByPhone;\n\tpublic\n\tString deletedByDeletedByRole;\n\tpublic\n\tString deletedByDeletedByStatus;\n\tpublic\n\tString deletedByDeletedByCreatedBy;\n\tpublic\n\tString deletedByDeletedByCreatedDate;\n\tpublic\n\tString deletedByDeletedByUpdatedBy;\n\tpublic\n\tString deletedByDeletedByUpdatedDate;\n\tpublic\n\tString deletedBy\n"
    ],
    "results": 10
},{
    "id": "413",
    "source": "soSearches",
    "language": "java",
    "query": "how to overload add method in java",
    "snippets": [
        "\tint add(int a,int b){\n\t\treturn a+b;\n\t}\n\tpublic\n\tint add(int a,int b,int c){\n\t\treturn a+b+c;\n\t}\n}\n",
        "\tvoid add(int a,int b){\n\t\tSystem.out.println(a+b);\n\t}\n\tpublic\n\tvoid add(int a,int b,int c){\n\t\tSystem.out.println(a+b+c);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "414",
    "source": "soSearches",
    "language": "java",
    "query": "how to handle when http response length is large  in java",
    "snippets": [
        "\tvoid test(){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.baidu.com\");\n\t\t\tHttpURLConnection conn = (HttpURLConnection)url.openConnection();\n\t\t\tconn.setRequestMethod(\"GET\");\n\t\t\tconn.setConnectTimeout(5000);\n\t\t\tconn.setReadTimeout(5000);\n\t\t\tInputStream in = conn.getInputStream();\n\t\t\tint len = conn.getContentLength();\n\t\t\tbyte[] bytes = new byte[len];\n\t\t\tint offset = 0;\n\t\t\tint read = 0;\n\t\t\twhile(offset < len && (read = in.read(bytes, offset, len - offset)) != -1){\n\t\t\t\toffset += read;\n\t\t\t}\n\t\t\tString str = new String(bytes, \"utf-8\");\n\t\t\tSystem.out.println(str);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid test(){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.baidu.com\");\n\t\t\tHttpURLConnection conn = (HttpURLConnection)url.openConnection();\n\t\t\tconn.setRequestMethod(\"GET\");\n\t\t\tconn.setConnectTimeout(5000);\n\t\t\tconn.setReadTimeout(5000);\n\t\t\tint code = conn.getResponseCode();\n\t\t\tif(code == 200){\n\t\t\t\tInputStream is = conn.getInputStream();\n\t\t\t\tint len = 0;\n\t\t\t\tbyte[] buf = new byte[1024];\n\t\t\t\twhile((len = is.read(buf)) != -1){\n\t\t\t\t\tSystem.out.println(new String(buf,0,len));\n\t\t\t\t}\n\t\t\t\tis.close();\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid test(){\n\t\tString url = \"http://www.baidu.com\";\n\t\tHttpClient client = new HttpClient();\n\t\tHttpMethod method = new GetMethod(url);\n\t\tclient.executeMethod(method);\n\t\tbyte[] responseBody = method.getResponseBody();\n\t\tString response = new String(responseBody);\n\t\tSystem.out.println(response);\n\t}\n}\n",
        "\tvoid test(){\n\t\tString url = \"http://www.baidu.com\";\n\t\tHttpClient client = new HttpClient();\n\t\tGetMethod get = new GetMethod(url);\n\t\ttry{\n\t\t\tclient.executeMethod(get);\n\t\t\tbyte[] responseBody = get.getResponseBody();\n\t\t\tSystem.out.println(new String(responseBody));\n\t\t}catch(HttpException e){\n\t\t\te.printStackTrace();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid test(){\n\t\tString url = \"http://www.baidu.com\";\n\t\tHttpClient client = new HttpClient();\n\t\tGetMethod method = new GetMethod(url);\n\t\ttry{\n\t\t\tclient.executeMethod(method);\n\t\t\tbyte[] responseBody = method.getResponseBody();\n\t\t\tString response = new String(responseBody);\n\t\t\tSystem.out.println(response);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\tmethod.releaseConnection();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.baidu.com\";\n\t\tHttpClient client = new HttpClient();\n\t\tHttpMethod method = new GetMethod(url);\n\t\ttry{\n\t\t\tclient.executeMethod(method);\n\t\t\tSystem.out.println(method.getResponseBodyAsString());\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.baidu.com\";\n\t\tString content = \"\";\n\t\ttry{\n\t\t\tURL u = new URL(url);\n\t\t\tHttpURLConnection conn = (HttpURLConnection)u.openConnection();\n\t\t\tconn.setRequestMethod(\"GET\");\n\t\t\tconn.setConnectTimeout(5*1000);\n\t\t\tconn.setReadTimeout(5*1000);\n\t\t\tInputStream in = conn.getInputStream();\n\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(in));\n\t\t\tString line = \"\";\n\t\t\twhile((line = reader.readLine()) != null){\n\t\t\t\tcontent += line;\n\t\t\t}\n\t\t\treader.close();\n\t\t\tin.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(content);\n\t}\n}\n",
        "\tvoid test(){\n\t\tString url = \"http://www.baidu.com\";\n\t\tString response = \"\";\n\t\ttry{\n\t\t\tresponse = HttpClientUtil.get(url);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(response);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.baidu.com\";\n\t\tURL myURL;\n\t\ttry{\n\t\t\tmyURL = new URL(url);\n\t\t\tURLConnection urlConnection = myURL.openConnection();\n\t\t\turlConnection.connect();\n\t\t\tInputStream inputStream = urlConnection.getInputStream();\n\t\t\tBufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\tString line = \"\";\n\t\t\twhile((line = bufferedReader.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "415",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert string to date in  java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString date=\"12/12/2012\";\n\t\tSimpleDateFormat sdf=new SimpleDateFormat(\"dd/MM/yyyy\");\n\t\ttry{\n\t\t\tDate d=sdf.parse(date);\n\t\t\tSystem.out.println(d);\n\t\t}\n\t\tcatch(ParseException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString date=\"01/01/2017\";\n\t\tSimpleDateFormat sdf=new SimpleDateFormat(\"dd/MM/yyyy\");\n\t\ttry{\n\t\t\tDate d=sdf.parse(date);\n\t\t\tSystem.out.println(d);\n\t\t}catch(ParseException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString date=\"01/01/2014\";\n\t\tSimpleDateFormat sdf=new SimpleDateFormat(\"dd/MM/yyyy\");\n\t\ttry{\n\t\t\tDate d=sdf.parse(date);\n\t\t\tSystem.out.println(d);\n\t\t}catch(ParseException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString date=\"01/01/2019\";\n\t\tSimpleDateFormat sdf=new SimpleDateFormat(\"dd/MM/yyyy\");\n\t\ttry{\n\t\t\tDate d=sdf.parse(date);\n\t\t\tSystem.out.println(d);\n\t\t}\n\t\tcatch(ParseException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString date=\"01/01/2020\";\n\t\tDate d=new Date(date);\n\t\tSystem.out.println(d);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString date = \"01/01/2019\";\n\t\tSimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\n\t\tDate d = null;\n\t\ttry{\n\t\t\td = sdf.parse(date);\n\t\t}catch(ParseException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(d);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString date=\"01/01/2016\";\n\t\tDate d=new Date(date);\n\t\tSystem.out.println(d);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString date = \"01/01/2019\";\n\t\tDate d = new Date();\n\t\ttry{\n\t\t\td = new SimpleDateFormat(\"dd/MM/yyyy\").parse(date);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(d);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"01/01/2014\";\n\t\tDate date=null;\n\t\ttry{\n\t\t\tdate=new SimpleDateFormat(\"MM/dd/yyyy\").parse(str);\n\t\t}\n\t\tcatch(ParseException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(date);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "416",
    "source": "soSearches",
    "language": "java",
    "query": "how to concatenate  a string and a integervalue in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s1 = \"Hello\";\n\t\tint i = 10;\n\t\tString s2 = s1 + i;\n\t\tSystem.out.println(s2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"John\";\n\t\tint age = 30;\n\t\tString message = name + \" is \" + age + \" years old\";\n\t\tSystem.out.println(message);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello\";\n\t\tint i = 10;\n\t\tSystem.out.println(s+i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name=\"John\";\n\t\tint age=30;\n\t\tSystem.out.println(\"My name is \"+name+\" and I am \"+age+\" years old\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s1 = \"Hello\";\n\t\tint i = 10;\n\t\tSystem.out.println(s1+i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name=\"John\";\n\t\tint age=30;\n\t\tString s=name+age;\n\t\tSystem.out.println(s);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "417",
    "source": "soSearches",
    "language": "java",
    "query": "how to set menuitem text font javafx",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tMenuBar menuBar = new MenuBar();\n\t\tMenu menu = new Menu(\"File\");\n\t\tMenuItem menuItem = new MenuItem(\"New\");\n\t\tmenuItem.setFont(Font.font(\"Arial\", FontWeight.BOLD, 20));\n\t\tmenu.getItems().add(menuItem);\n\t\tmenuBar.getMenus().add(menu);\n\t\tScene scene = new Scene(menuBar, 300, 250);\n\t\tStage stage = new Stage();\n\t\tstage.setTitle(\"MenuBar\");\n\t\tstage.setScene(scene);\n\t\tstage.show();\n\t}\n}\n",
        "\tvoid setMenuItemTextFont(MenuItem mi){\n\t\tmi.setFont(Font.font(\"Arial\", FontWeight.BOLD, FontPosture.ITALIC, 20));\n\t}\n}\n",
        "\tvoid setFont(Font font){\n\t\t\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n",
        "\tvoid setMenuItemTextFont(MenuItem mi, String font){\n\t\tmi.setFont(Font.font(font));\n\t}\n}\n",
        "\tvoid setMenuItemTextFont(MenuItem mi, String fontName, int fontSize){\n\t\tFont font = Font.font(fontName, FontWeight.BOLD, fontSize);\n\t\tmi.setFont(font);\n\t}\n}\n",
        "\tClazz(){\n\t\tMenuItem item = new MenuItem(\"Font\");\n\t\titem.setStyle(\"-fx-font: 20px \\\"Arial\\\"\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "418",
    "source": "soSearches",
    "language": "java",
    "query": "how to slove undifind error in java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 0;\n\t\tint b = 1;\n\t\tint c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "419",
    "source": "soSearches",
    "language": "java",
    "query": "[java]how to detect pattern at gomoku board",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[][] board = {{0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t {0,0,0,0,0,0,0,0,0}};\n\t\tint[][] board2 = {{0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t  {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t  {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t  {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t  {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t  {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t  {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t  {0,0,0,0,0,0,0,0,0},\n\t\t\t\t\t\t  {0,0,0,0,0,0,0,0,0}};\n\t\tint[][]\n",
        "\tstatic void main(String[] args){\n\t\tint[][] board = new int[15][15];\n\t\tboard[0][0] = 1;\n\t\tboard[0][1] = 1;\n\t\tboard[0][2] = 1;\n\t\tboard[0][3] = 1;\n\t\tboard[0][4] = 1;\n\t\tboard[0][5] = 1;\n\t\tboard[0][6] = 1;\n\t\tboard[0][7] = 1;\n\t\tboard[0][8] = 1;\n\t\tboard[0][9] = 1;\n\t\tboard[0][10] = 1;\n\t\tboard[0][11] = 1;\n\t\tboard[0][12] = 1;\n\t\tboard[0][13] = 1;\n\t\tboard[0][14] = 1;\n\t\tboard[1][0] = 1;\n\t\tboard[1][1] = 1;\n\t\tboard[1][2] = 1;\n\t\tboard[1][3] = 1;\n\t\tboard[1][4] = 1;\n\t\tboard[1][5] = 1;\n\t\tboard[1][6] = 1;\n\t\tboard[1][7] = 1;\n\t\tboard[1][8] = 1;\n\t\tboard[1][9] = 1;\n\t\tboard[1][10] = 1;\n\t\tboard[1][11] = 1;\n\t\tboard[1][12] = 1;\n\t\tboard[1][13] = 1;\n\t\tboard[1][14] = 1;\n\t\tboard[2][0] = 1;\n\t\tboard[2][1] = 1;\n\t\tboard[2][2] = 1;\n\t\tboard[2][3] = 1;\n\t\tboard[2][4] = 1;\n\t\tboard[2][5] = 1;\n\t\tboard[2][6] = 1;\n\t\tboard[2][7] = 1;\n\t\tboard[2][8] = 1;\n\t\tboard[2\n"
    ],
    "results": 10
},{
    "id": "420",
    "source": "soSearches",
    "language": "java",
    "query": "how to use format java class",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.printf(\"%s %s %s\", \"Hello\", \"World\", \"!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t\tSystem.out.printf(\"%s %s %s\", \"Hello\", \"World\", \"!\");\n\t}\n}\n"
    ],
    "results": 2
},{
    "id": "421",
    "source": "soSearches",
    "language": "java",
    "query": "how to calculate are in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(\"a+b=\"+c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble a = 10;\n\t\tdouble b = 20;\n\t\tdouble c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble a=10;\n\t\tdouble b=20;\n\t\tdouble c=30;\n\t\tdouble s=(a+b+c)/2;\n\t\tdouble area=Math.sqrt(s*(s-a)*(s-b)*(s-c));\n\t\tSystem.out.println(\"area is \"+area);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble a=5.0;\n\t\tdouble b=3.0;\n\t\tdouble c=a*b;\n\t\tSystem.out.println(\"a*b=\"+c);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "422",
    "source": "soSearches",
    "language": "java",
    "query": "how to make two auto generated value in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tSystem.out.println(\"a=\"+a+\" b=\"+b);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = (int) (Math.random()*100);\n\t\tint b = (int) (Math.random()*100);\n\t\tSystem.out.println(\"a = \"+a);\n\t\tSystem.out.println(\"b = \"+b);\n\t}\n}\n"
    ],
    "results": 7
},{
    "id": "423",
    "source": "soSearches",
    "language": "java",
    "query": "how to develop cart module in java spring mvc hibernate framework sourcecode",
    "snippets": [
        "\tvoid addClazz(Clazz clazz){\n\t\t\n\t}\n\tpublic\n\tvoid updateClazz(Clazz clazz){\n\t\t\n\t}\n\tpublic\n\tvoid deleteClazz(Clazz clazz){\n\t\t\n\t}\n\tpublic\n\tvoid getClazz(Clazz clazz){\n\t\t\n\t}\n}\n",
        "\tvoid addClazz(Clazz clazz){\n\t\t\n\t}\n\tpublic\n\tvoid updateClazz(Clazz clazz){\n\t\t\n\t}\n\tpublic\n\tvoid deleteClazz(Clazz clazz){\n\t\t\n\t}\n\tpublic\n\tvoid getClazz(Clazz clazz){\n\t\t\n\t}\n\tpublic\n\tvoid getAllClazz(){\n\t\t\n\t}\n}\n",
        "\tvoid method1(){\n\t\tSystem.out.println(\"method1\");\n\t}\n\tpublic\n\tvoid method2(){\n\t\tSystem.out.println(\"method2\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "424",
    "source": "soSearches",
    "language": "java",
    "query": "how to create a setkey, lock, unlock, and locked in java",
    "snippets": [
        "\tvoid setKey(String key){\n\t\tthis.key = key;\n\t}\n\tpublic\n\tvoid lock(){\n\t\tthis.locked = true;\n\t}\n\tpublic\n\tvoid unlock(){\n\t\tthis.locked = false;\n\t}\n\tpublic\n\tboolean isLocked(){\n\t\treturn this.locked;\n\t}\n\tprivate\n\tString key;\n\tprivate\n\tboolean locked;\n}\n",
        "\tvoid setKey(String key){\n\t\tthis.key = key;\n\t}\n\tpublic\n\tvoid lock(){\n\t\tthis.locked = true;\n\t}\n\tpublic\n\tvoid unlock(){\n\t\tthis.locked = false;\n\t}\n\tpublic\n\tboolean locked(){\n\t\treturn this.locked;\n\t}\n\tprivate\n\tString key;\n\tprivate\n\tboolean locked;\n}\n",
        "\tvoid setKey(String key){\n\t\tthis.key = key;\n\t}\n\tpublic\n\tvoid lock(){\n\t\tthis.locked = true;\n\t}\n\tpublic\n\tvoid unlock(){\n\t\tthis.locked = false;\n\t}\n\tpublic\n\tboolean isLocked(){\n\t\treturn this.locked;\n\t}\n}\n",
        "\tvoid setKey(int key){\n\t\tthis.key = key;\n\t}\n\tpublic\n\tvoid lock(){\n\t\tthis.locked = true;\n\t}\n\tpublic\n\tvoid unlock(){\n\t\tthis.locked = false;\n\t}\n\tpublic\n\tboolean isLocked(){\n\t\treturn this.locked;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSet<String> set = new HashSet<String>();\n\t\tset.add(\"a\");\n\t\tset.add(\"b\");\n\t\tset.add(\"c\");\n\t\tset.add(\"d\");\n\t\tset.add(\"e\");\n\t\tset.add(\"f\");\n\t\tset.add(\"g\");\n\t\tset.add(\"h\");\n\t\tset.add(\"i\");\n\t\tset.add(\"j\");\n\t\tset.add(\"k\");\n\t\tset.add(\"l\");\n\t\tset.add(\"m\");\n\t\tset.add(\"n\");\n\t\tset.add(\"o\");\n\t\tset.add(\"p\");\n\t\tset.add(\"q\");\n\t\tset.add(\"r\");\n\t\tset.add(\"s\");\n\t\tset.add(\"t\");\n\t\tset.add(\"u\");\n\t\tset.add(\"v\");\n\t\tset.add(\"w\");\n\t\tset.add(\"x\");\n\t\tset.add(\"y\");\n\t\tset.add(\"z\");\n\t\tset.add(\"A\");\n\t\tset.add(\"B\");\n\t\tset.add(\"C\");\n\t\tset.add(\"D\");\n\t\tset.add(\"E\");\n\t\tset.add(\"F\");\n\t\tset.add(\"G\");\n\t\tset.add(\"H\");\n\t\tset.add(\"I\");\n\t\tset.add(\"J\");\n\t\tset.add(\"K\");\n\t\tset.add(\"L\");\n\t\tset.add(\"M\");\n\t\tset.add(\"N\");\n\t\tset.add(\"O\");\n\t\tset.add(\"P\");\n\t\tset.add(\"Q\");\n\t\tset.add(\"R\");\n\t\tset.add(\"S\");\n\t\tset.add(\"T\");\n\t\tset.add(\"U\");\n\t\tset.add(\"V\");\n\t\tset.add(\"W\");\n\t\tset.add(\"X\");\n\t\tset.add(\"Y\");\n\t\tset.add(\"Z\");\n\t\tset.add\n"
    ],
    "results": 10
},{
    "id": "425",
    "source": "soSearches",
    "language": "java",
    "query": "[google-admin-sdk]  how to get user information  java",
    "snippets": [
        "\tvoid getUserInfo(){\n\t\tUser user = new User();\n\t\tuser.setName(\"John\");\n\t\tuser.setAge(30);\n\t\tuser.setEmail(\"\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid getUserInfo(){\n\t\tUser user = new User();\n\t\tuser.setName(\"John\");\n\t\tuser.setEmail(\"\n",
        "\tvoid getUserInfo(){\n\t\tString userId = \"123\";\n\t\tString userName = \"John\";\n\t\tString userEmail = \"\n",
        "\tstatic void main(String[] args){\n\t\tString user = System.getProperty(\"user.name\");\n\t\tSystem.out.println(\"Hello \" + user);\n\t}\n}\n",
        "\tvoid getUserInfo(){\n\t\tString userId = \"123\";\n\t\tString userName = \"abc\";\n\t\tString userEmail = \"\n"
    ],
    "results": 10
},{
    "id": "426",
    "source": "soSearches",
    "language": "java",
    "query": "how to add each integer to a sum java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < args.length; i++){\n\t\t\tsum += Integer.parseInt(args[i]);\n\t\t}\n\t\tSystem.out.println(\"Sum is \" + sum);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < args.length; i++){\n\t\t\tsum += Integer.parseInt(args[i]);\n\t\t}\n\t\tSystem.out.println(sum);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < args.length; i++){\n\t\t\tsum += Integer.parseInt(args[i]);\n\t\t}\n\t\tSystem.out.println(\"Sum = \" + sum);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < args.length; i++){\n\t\t\tsum += Integer.parseInt(args[i]);\n\t\t}\n\t\tSystem.out.println(\"sum = \" + sum);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint sum = 0;\n\t\tint[] numbers = {1,2,3,4,5};\n\t\tfor(int i = 0; i < numbers.length; i++){\n\t\t\tsum += numbers[i];\n\t\t}\n\t\tSystem.out.println(sum);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "427",
    "source": "soSearches",
    "language": "java",
    "query": "in java how to sort json array in alphabetical order",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJSONArray jsonArray = new JSONArray();\n\t\tjsonArray.put(\"a\");\n\t\tjsonArray.put(\"b\");\n\t\tjsonArray.put(\"c\");\n\t\tjsonArray.put(\"d\");\n\t\tjsonArray.put(\"e\");\n\t\tjsonArray.put(\"f\");\n\t\tjsonArray.put(\"g\");\n\t\tjsonArray.put(\"h\");\n\t\tjsonArray.put(\"i\");\n\t\tjsonArray.put(\"j\");\n\t\tjsonArray.put(\"k\");\n\t\tjsonArray.put(\"l\");\n\t\tjsonArray.put(\"m\");\n\t\tjsonArray.put(\"n\");\n\t\tjsonArray.put(\"o\");\n\t\tjsonArray.put(\"p\");\n\t\tjsonArray.put(\"q\");\n\t\tjsonArray.put(\"r\");\n\t\tjsonArray.put(\"s\");\n\t\tjsonArray.put(\"t\");\n\t\tjsonArray.put(\"u\");\n\t\tjsonArray.put(\"v\");\n\t\tjsonArray.put(\"w\");\n\t\tjsonArray.put(\"x\");\n\t\tjsonArray.put(\"y\");\n\t\tjsonArray.put(\"z\");\n\t\tjsonArray.put(\"aa\");\n\t\tjsonArray.put(\"bb\");\n\t\tjsonArray.put(\"cc\");\n\t\tjsonArray.put(\"dd\");\n\t\tjsonArray.put(\"ee\");\n\t\tjsonArray.put(\"ff\");\n\t\tjsonArray.put(\"gg\");\n\t\tjsonArray.put(\"hh\");\n\t\tjsonArray.put(\"ii\");\n\t\tjsonArray.put(\"jj\");\n\t\tjsonArray.put(\"kk\");\n\t\tjsonArray.put(\"ll\");\n\t\tjsonArray.put(\"mm\");\n\t\tjsonArray.put(\"nn\");\n\t\tjsonArray.put(\"oo\");\n\t\tjsonArray.put(\"pp\");\n\t\tjsonArray.put(\"qq\");\n\t\tjsonArray.put(\"rr\");\n\t\tjsonArray.put(\"ss\");\n\t\tjsonArray.put(\"tt\");\n\t\tjsonArray.put(\"uu\");\n\t\tjsonArray.put(\"\n",
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", \"30\");\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tjsonObject.put(\"phone\", \"123-456-7890\");\n\t\tjsonObject.put(\"email\", \"\n",
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", \"30\");\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tJSONArray jsonArray = new JSONArray();\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Jane\");\n\t\tjsonObject.put(\"age\", \"25\");\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Bob\");\n\t\tjsonObject.put(\"age\", \"35\");\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Mary\");\n\t\tjsonObject.put(\"age\", \"25\");\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Mike\");\n\t\tjsonObject.put(\"age\", \"30\");\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Adam\");\n\t\tjsonObject.put(\"age\", \"35\");\n\t\tjsonObject\n",
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"a\", \"a\");\n\t\tjsonObject.put(\"b\", \"b\");\n\t\tjsonObject.put(\"c\", \"c\");\n\t\tjsonObject.put(\"d\", \"d\");\n\t\tjsonObject.put(\"e\", \"e\");\n\t\tjsonObject.put(\"f\", \"f\");\n\t\tjsonObject.put(\"g\", \"g\");\n\t\tjsonObject.put(\"h\", \"h\");\n\t\tjsonObject.put(\"i\", \"i\");\n\t\tjsonObject.put(\"j\", \"j\");\n\t\tjsonObject.put(\"k\", \"k\");\n\t\tjsonObject.put(\"l\", \"l\");\n\t\tjsonObject.put(\"m\", \"m\");\n\t\tjsonObject.put(\"n\", \"n\");\n\t\tjsonObject.put(\"o\", \"o\");\n\t\tjsonObject.put(\"p\", \"p\");\n\t\tjsonObject.put(\"q\", \"q\");\n\t\tjsonObject.put(\"r\", \"r\");\n\t\tjsonObject.put(\"s\", \"s\");\n\t\tjsonObject.put(\"t\", \"t\");\n\t\tjsonObject.put(\"u\", \"u\");\n\t\tjsonObject.put(\"v\", \"v\");\n\t\tjsonObject.put(\"w\", \"w\");\n\t\tjsonObject.put(\"x\", \"x\");\n\t\tjsonObject.put(\"y\", \"y\");\n\t\tjsonObject.put(\"z\", \"z\");\n\t\tJSONArray jsonArray = jsonObject.names();\n\t\tCollections.sort(jsonArray);\n\t\tfor(int i=0;i<jsonArray.length();i++){\n\t\t\tSystem.out.println(jsonArray.getString(i));\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"a\", \"a\");\n\t\tjsonObject.put(\"b\", \"b\");\n\t\tjsonObject.put(\"c\", \"c\");\n\t\tjsonObject.put(\"d\", \"d\");\n\t\tjsonObject.put(\"e\", \"e\");\n\t\tjsonObject.put(\"f\", \"f\");\n\t\tjsonObject.put(\"g\", \"g\");\n\t\tjsonObject.put(\"h\", \"h\");\n\t\tjsonObject.put(\"i\", \"i\");\n\t\tjsonObject.put(\"j\", \"j\");\n\t\tjsonObject.put(\"k\", \"k\");\n\t\tjsonObject.put(\"l\", \"l\");\n\t\tjsonObject.put(\"m\", \"m\");\n\t\tjsonObject.put(\"n\", \"n\");\n\t\tjsonObject.put(\"o\", \"o\");\n\t\tjsonObject.put(\"p\", \"p\");\n\t\tjsonObject.put(\"q\", \"q\");\n\t\tjsonObject.put(\"r\", \"r\");\n\t\tjsonObject.put(\"s\", \"s\");\n\t\tjsonObject.put(\"t\", \"t\");\n\t\tjsonObject.put(\"u\", \"u\");\n\t\tjsonObject.put(\"v\", \"v\");\n\t\tjsonObject.put(\"w\", \"w\");\n\t\tjsonObject.put(\"x\", \"x\");\n\t\tjsonObject.put(\"y\", \"y\");\n\t\tjsonObject.put(\"z\", \"z\");\n\t\tjsonObject.put(\"aa\", \"aa\");\n\t\tjsonObject.put(\"bb\", \"bb\");\n\t\tjsonObject.put(\"cc\", \"cc\");\n\t\tjsonObject.put(\"dd\", \"dd\");\n\t\tjsonObject.put(\"ee\", \"ee\");\n\t\tjsonObject.put(\"ff\", \"ff\");\n\t\tjsonObject.put(\"gg\", \"gg\");\n\t\tjsonObject.put(\"hh\", \"hh\");\n\t\tjsonObject.put(\"ii\", \"ii\");\n\t\tjsonObject.put(\"jj\", \"jj\");\n\t\tjsonObject.put(\"kk\n",
        "\tvoid main(String[] args){\n\t\tString json = \"{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"cars\\\":[\\\"Ford\\\",\\\"BMW\\\",\\\"Fiat\\\"]}\";\n\t\tJSONObject obj = new JSONObject(json);\n\t\tJSONArray cars = obj.getJSONArray(\"cars\");\n\t\tCollections.sort(cars);\n\t\tSystem.out.println(cars);\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", \"30\");\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tjsonObject.put(\"zip\", \"10001\");\n\t\tjsonObject.put(\"phone\", \"123-456-7890\");\n\t\tjsonObject.put(\"email\", \"\n",
        "\tvoid main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", new Integer(20));\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tJSONArray jsonArray = new JSONArray();\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Smith\");\n\t\tjsonObject.put(\"age\", new Integer(30));\n\t\tjsonObject.put(\"city\", \"London\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Peter\");\n\t\tjsonObject.put(\"age\", new Integer(40));\n\t\tjsonObject.put(\"city\", \"Paris\");\n\t\tjsonArray.add(jsonObject);\n\t\tSystem.out.println(jsonArray);\n\t\tCollections.sort(jsonArray, new Comparator<JSONObject>(){\n\t\t\tpublic int compare(JSONObject a, JSONObject b){\n\t\t\t\treturn a.get(\"name\").toString().compareTo(b.get(\"name\").toString());\n\t\t\t}\n\t\t});\n\t\tSystem.out.println(jsonArray);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", 30);\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tJSONArray jsonArray = new JSONArray();\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Jane\");\n\t\tjsonObject.put(\"age\", 25);\n\t\tjsonObject.put(\"city\", \"Paris\");\n\t\tjsonObject.put(\"state\", \"PA\");\n\t\tjsonObject.put(\"country\", \"France\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Bob\");\n\t\tjsonObject.put(\"age\", 27);\n\t\tjsonObject.put(\"city\", \"London\");\n\t\tjsonObject.put(\"state\", \"LN\");\n\t\tjsonObject.put(\"country\", \"UK\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"James\");\n\t\tjsonObject.put(\"age\", 27);\n\t\tjsonObject.put(\"city\", \"London\");\n\t\tjsonObject.put(\"state\", \"LN\");\n\t\tjsonObject.put(\"country\", \"UK\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", 30);\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"NY\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tjsonArray.add(jsonObject);\n\t\tjsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Jane\");\n\t\tjsonObject.put(\"age\", 25);\n\t\tjsonObject.put(\"city\", \"Paris\n"
    ],
    "results": 9
},{
    "id": "428",
    "source": "soSearches",
    "language": "java",
    "query": "java android how to show message when user did not write his username",
    "snippets": [
        "\tvoid method(){\n\t\tString username = \"\";\n\t\tif(username.isEmpty()){\n\t\t\tToast.makeText(this, \"Please enter your username\", Toast.LENGTH_SHORT).show();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tString username = \"\";\n\t\tif(username.equals(\"\")){\n\t\t\tToast.makeText(this, \"Please enter your username\", Toast.LENGTH_LONG).show();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tandroid.widget.EditText editText = (android.widget.EditText)findViewById(R.id.editText1);\n\t\tString username = editText.getText().toString();\n\t\tif(username.isEmpty()){\n\t\t\tandroid.widget.TextView textView = (android.widget.TextView)findViewById(R.id.textView1);\n\t\t\ttextView.setText(\"Please enter your username\");\n\t\t}\n\t}\n}\n",
        "\tvoid showMessage(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n",
        "\tvoid showMessage(){\n\t\tToast.makeText(this,\"Please enter your username\",Toast.LENGTH_LONG).show();\n\t}\n}\n",
        "\tvoid method(){\n\t\tif(username.equals(\"\")){\n\t\t\tToast.makeText(this, \"Please enter your username\", Toast.LENGTH_SHORT).show();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tif(username.length()==0){\n\t\t\tToast.makeText(this, \"Please enter your username\", Toast.LENGTH_LONG).show();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "429",
    "source": "soSearches",
    "language": "java",
    "query": "how to declare void variable in java?",
    "snippets": [
        "\tvoid main(String[] args){\n\t\tvoid var;\n\t}\n}\n",
        "\tvoid method(){\n\t\tvoid varible;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "430",
    "source": "soSearches",
    "language": "java",
    "query": "how to make the string all lowercase java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str.toLowerCase());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello World\";\n\t\tSystem.out.println(s.toLowerCase());\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "431",
    "source": "soSearches",
    "language": "java",
    "query": "how to pass list of data in @requestparam in java",
    "snippets": [
        "\tList<String> getList(){\n\t\treturn Arrays.asList(\"a\",\"b\",\"c\");\n\t}\n}\n",
        "\tList<String> getList(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\treturn list;\n\t}\n}\n",
        "\tList<String> getList(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"1\");\n\t\tlist.add(\"2\");\n\t\tlist.add(\"3\");\n\t\treturn list;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "432",
    "source": "soSearches",
    "language": "java",
    "query": "how to turn off logging for unit tests java",
    "snippets": [
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "433",
    "source": "soSearches",
    "language": "java",
    "query": "how to get mysql data using javassist",
    "snippets": [
        "\tvoid getData(){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tResultSet rs=stmt.executeQuery(\"select * from test\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid getData(){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tResultSet rs=st.executeQuery(\"select * from test\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid getData(){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tResultSet rs=st.executeQuery(\"select * from test\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid getData(){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tResultSet rs=st.executeQuery(\"select * from user\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid getData(){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tResultSet rs=st.executeQuery(\"select * from test\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid getData(){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tResultSet rs=st.executeQuery(\"select * from student\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(1)+\" \"+rs.getString(2)+\" \"+rs.getString(3));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid getData(){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tResultSet rs=st.executeQuery(\"select * from test\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid getData(){\n\t\tSystem.out.println(\"getData\");\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void test(){\n\t\tSystem.out.println(\"test\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "434",
    "source": "soSearches",
    "language": "java",
    "query": "java how to close variable in new",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tvoid method(){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tvoid method(){\n\t\tint a = 1;\n\t\tint b = 2;\n\t\tint c = 3;\n\t\tint d = 4;\n\t\tint e = 5;\n\t\tint f = 6;\n\t\tint g = 7;\n\t\tint h = 8;\n\t\tint i = 9;\n\t\tint j = 10;\n\t\tint k = 11;\n\t\tint l = 12;\n\t\tint m = 13;\n\t\tint n = 14;\n\t\tint o = 15;\n\t\tint p = 16;\n\t\tint q = 17;\n\t\tint r = 18;\n\t\tint s = 19;\n\t\tint t = 20;\n\t\tint u = 21;\n\t\tint v = 22;\n\t\tint w = 23;\n\t\tint x = 24;\n\t\tint y = 25;\n\t\tint z = 26;\n\t\tint aa = 27;\n\t\tint bb = 28;\n\t\tint cc = 29;\n\t\tint dd = 30;\n\t\tint ee = 31;\n\t\tint ff = 32;\n\t\tint gg = 33;\n\t\tint hh = 34;\n\t\tint ii = 35;\n\t\tint jj = 36;\n\t\tint kk = 37;\n\t\tint ll = 38;\n\t\tint mm = 39;\n\t\tint nn = 40;\n\t\tint oo = 41;\n\t\tint pp = 42;\n\t\tint qq = 43;\n\t\tint rr = 44;\n\t\tint ss = 45;\n\t\tint tt = 46;\n\t\tint uu = 47;\n\t\tint vv = 48;\n\t\tint ww = 49;\n\t\tint xx = 50;\n\t\tint yy = 51;\n\t\tint zz = 52;\n\t\tint aaa = 53;\n\t\tint bbb = 54;\n\t\tint ccc = 55;\n\t\tint ddd = 56;\n\t\tint eee = 57;\n\t\tint fff = 58;\n\t\tint ggg = 59\n",
        "\tvoid method(){\n\t\tint i=0;\n\t\twhile(i<10){\n\t\t\tint j=i;\n\t\t\ti++;\n\t\t\tSystem.out.println(j);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "435",
    "source": "soSearches",
    "language": "java",
    "query": "how to exit java loop? rock paper scissors game",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint i = 0;\n\t\twhile(i < 10){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i = 0;\n\t\twhile(i < 10){\n\t\t\tSystem.out.println(\"i = \" + i);\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i=0;\n\t\twhile(i<3){\n\t\t\tSystem.out.println(\"Rock, Paper, Scissors\");\n\t\t\ti++;\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "436",
    "source": "soSearches",
    "language": "java",
    "query": "how to fill an array java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[5];\n\t\tarr[0] = 1;\n\t\tarr[1] = 2;\n\t\tarr[2] = 3;\n\t\tarr[3] = 4;\n\t\tarr[4] = 5;\n\t\tSystem.out.println(arr[0]);\n\t\tSystem.out.println(arr[1]);\n\t\tSystem.out.println(arr[2]);\n\t\tSystem.out.println(arr[3]);\n\t\tSystem.out.println(arr[4]);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "437",
    "source": "soSearches",
    "language": "java",
    "query": "how to take \\\"enter \\\" in java input",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your height: \");\n\t\tdouble height = input.nextDouble();\n\t\tSystem.out.println(\"Enter your weight: \");\n\t\tdouble weight = input.nextDouble();\n\t\tSystem.out.println(\"Enter your eye color: \");\n\t\tString eyeColor = input.next();\n\t\tSystem.out.println(\"Enter your hair color: \");\n\t\tString hairColor = input.next();\n\t\tSystem.out.println(\"Enter your national\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your favorite color: \");\n\t\tString color = input.next();\n\t\tSystem.out.println(\"Enter your favorite food: \");\n\t\tString food = input.next();\n\t\tSystem.out.println(\"Enter your favorite animal: \");\n\t\tString animal = input.next();\n\t\tSystem.out.println(\"Enter your favorite sport: \");\n\t\tString sport = input.next();\n\t\tSystem.out.println(\"Enter your favorite movie: \");\n\t\tString movie = input.next();\n\t\tSystem.out.println(\"Enter your favorite book: \");\n\t\tString book = input.next();\n\t\tSystem.out.println(\"Enter your favorite game: \");\n\t\tString game = input.next();\n\t\tSystem.out.println(\"Enter your favorite food: \");\n\t\tString food2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite animal: \");\n\t\tString animal2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite sport: \");\n\t\tString sport2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite movie: \");\n\t\tString movie2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite book: \");\n\t\tString book2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite game: \");\n\t\tString game2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite food: \");\n\t\tString food3 = input.next();\n\t\tSystem.out.println(\"Enter your favorite animal: \");\n\t\tString animal3 = input.next();\n\t\tSystem.out.println(\"Enter your favorite sport: \");\n\t\tString sport3 = input\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your address: \");\n\t\tString address = input.nextLine();\n\t\tSystem.out.println(\"Enter your phone number: \");\n\t\tString phone = input.nextLine();\n\t\tSystem.out.println(\"Enter your email: \");\n\t\tString email = input.nextLine();\n\t\tSystem.out.println(\"Enter your password: \");\n\t\tString password = input.nextLine();\n\t\tSystem.out.println(\"Enter your confirm password: \");\n\t\tString confirm = input.nextLine();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \" + name + \" and your age is \" + age + \" and your address is \" + address + \" and your phone number is \" + phone + \" and your email is \" + email + \" and your password is \" + password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Your password is not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your address: \");\n\t\tString address = input.nextLine();\n\t\tSystem.out.println(\"Enter your phone number: \");\n\t\tString phone = input.nextLine();\n\t\tSystem.out.println(\"Enter your email: \");\n\t\tString email = input.nextLine();\n\t\tSystem.out.println(\"Enter your password: \");\n\t\tString password = input.nextLine();\n\t\tSystem.out.println(\"Enter your confirm password: \");\n\t\tString confirm = input.nextLine();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \" + name);\n\t\t\tSystem.out.println(\"Your age is \" + age);\n\t\t\tSystem.out.println(\"Your address is \" + address);\n\t\t\tSystem.out.println(\"Your phone number is \" + phone);\n\t\t\tSystem.out.println(\"Your email is \" + email);\n\t\t\tSystem.out.println(\"Your password is \" + password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Your password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your address: \");\n\t\tString address = input.nextLine();\n\t\tSystem.out.println(\"Enter your phone number: \");\n\t\tString phone = input.nextLine();\n\t\tSystem.out.println(\"Enter your email: \");\n\t\tString email = input.nextLine();\n\t\tSystem.out.println(\"Enter your password: \");\n\t\tString password = input.nextLine();\n\t\tSystem.out.println(\"Enter your confirm password: \");\n\t\tString confirm = input.nextLine();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \" + name + \" and your age is \" + age + \" and your address is \" + address + \" and your phone number is \" + phone + \" and your email is \" + email + \" and your password is \" + password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Your password and confirm password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.nextLine();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.nextLine();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirm = sc.nextLine();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \"+name+\" and your age is \"+age+\" and your address is \"+address+\" and your phone number is \"+phone+\" and your email is \"+email+\" and your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Your password and confirm password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirmPassword = sc.next();\n\t\tif(password.equals(confirmPassword)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirm = sc.next();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \"+name+\" and your age is \"+age+\" and your address is \"+address+\" and your phone number is \"+phone+\" and your email is \"+email+\" and your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Your password is not matching\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "438",
    "source": "soSearches",
    "language": "java",
    "query": "how to declare public class in java",
    "snippets": [
        "}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "439",
    "source": "soSearches",
    "language": "java",
    "query": "how to run java program written in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "440",
    "source": "soSearches",
    "language": "java",
    "query": "how to delete text after some seconds java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t\ttry{\n\t\t\tThread.sleep(5000);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t\ttry{\n\t\t\tThread.sleep(5000);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t\ttry{\n\t\t\tThread.sleep(5000);\n\t\t}\n\t\tcatch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"After 5 seconds\");\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t\ttry{\n\t\t\tThread.sleep(5000);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t\ttry{\n\t\t\tThread.sleep(5000);\n\t\t}\n\t\tcatch(InterruptedException e){\n\t\t\tSystem.out.println(\"Exception\");\n\t\t}\n\t\tstr=str.substring(0,5);\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr = str.substring(0,5);\n\t\tSystem.out.println(str);\n\t\ttry{\n\t\t\tThread.sleep(5000);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tstr = str.substring(0,5);\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tString str1=str.substring(0,5);\n\t\tSystem.out.println(str1);\n\t\tString str2=str.substring(6,11);\n\t\tSystem.out.println(str2);\n\t\tString str3=str.substring(12,17);\n\t\tSystem.out.println(str3);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "441",
    "source": "soSearches",
    "language": "java",
    "query": "how to validate password user name java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tif(userName.isEmpty()){\n\t\t\tSystem.out.println(\"User name is empty\");\n\t\t}\n\t\tif(password.isEmpty()){\n\t\t\tSystem.out.println(\"Password is empty\");\n\t\t}\n\t\tif(userName.isEmpty() && password.isEmpty()){\n\t\t\tSystem.out.println(\"User name and password is empty\");\n\t\t}\n\t\tif(!userName.isEmpty() && !password.isEmpty()){\n\t\t\tSystem.out.println(\"User name and password is not empty\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tif(userName.equals(\"\") || password.equals(\"\")){\n\t\t\tSystem.out.println(\"Invalid user name or password\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Valid user name and password\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tboolean validUserName = false;\n\t\tboolean validPassword = false;\n\t\tboolean valid = false;\n\t\t\n\t\tScanner input = new Scanner(System.in);\n\t\t\n\t\tSystem.out.println(\"Enter your user name: \");\n\t\tuserName = input.nextLine();\n\t\t\n\t\tSystem.out.println(\"Enter your password: \");\n\t\tpassword = input.nextLine();\n\t\t\n\t\tif(userName.length() >= 6 && userName.length() <= 10){\n\t\t\tvalidUserName = true;\n\t\t}\n\t\t\n\t\tif(password.length() >= 6 && password.length() <= 10){\n\t\t\tvalidPassword = true;\n\t\t}\n\t\t\n\t\tif(validUserName && validPassword){\n\t\t\tvalid = true;\n\t\t}\n\t\t\n\t\tif(valid){\n\t\t\tSystem.out.println(\"User name and password are valid\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"User name and password are invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tboolean validUserName = false;\n\t\tboolean validPassword = false;\n\t\t\n\t\twhile(!validUserName){\n\t\t\tSystem.out.println(\"Enter user name\");\n\t\t\tuserName = System.console().readLine();\n\t\t\tif(userName.length()>=6){\n\t\t\t\tvalidUserName = true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"User name must be at least 6 characters\");\n\t\t\t}\n\t\t}\n\t\t\n\t\twhile(!validPassword){\n\t\t\tSystem.out.println(\"Enter password\");\n\t\t\tpassword = System.console().readLine();\n\t\t\tif(password.length()>=6){\n\t\t\t\tvalidPassword = true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"Password must be at least 6 characters\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"User name is \" + userName);\n\t\tSystem.out.println(\"Password is \" + password);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tboolean isValid = false;\n\t\tif(userName.length()>=6 && userName.length()<=12){\n\t\t\tif(password.length()>=6 && password.length()<=12){\n\t\t\t\tisValid = true;\n\t\t\t}\n\t\t}\n\t\tif(isValid){\n\t\t\tSystem.out.println(\"Valid\");\n\t\t}else{\n\t\t\tSystem.out.println(\"Invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tif(userName.length()<6){\n\t\t\tSystem.out.println(\"User name is too short\");\n\t\t}\n\t\tif(password.length()<6){\n\t\t\tSystem.out.println(\"Password is too short\");\n\t\t}\n\t\tif(userName.length()>=6 && password.length()>=6){\n\t\t\tSystem.out.println(\"User name and password are valid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tif(userName.length()<6){\n\t\t\tSystem.out.println(\"user name is too short\");\n\t\t}\n\t\tif(password.length()<6){\n\t\t\tSystem.out.println(\"password is too short\");\n\t\t}\n\t\tif(userName.length()>=6 && password.length()>=6){\n\t\t\tSystem.out.println(\"user name and password are valid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tif(userName.isEmpty() || password.isEmpty()){\n\t\t\tSystem.out.println(\"User name or password is empty\");\n\t\t}else{\n\t\t\tSystem.out.println(\"User name or password is not empty\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tString userName = \"abc\";\n\t\tString password = \"123\";\n\t\tif(userName.length()>=3 && userName.length()<=10 && password.length()>=3 && password.length()<=10){\n\t\t\tSystem.out.println(\"valid\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString userName = \"\";\n\t\tString password = \"\";\n\t\tString confirmPassword = \"\";\n\t\tboolean isValid = true;\n\t\tif(userName.length() < 6){\n\t\t\tSystem.out.println(\"User name is too short\");\n\t\t\tisValid = false;\n\t\t}\n\t\tif(password.length() < 6){\n\t\t\tSystem.out.println(\"Password is too short\");\n\t\t\tisValid = false;\n\t\t}\n\t\tif(!password.equals(confirmPassword)){\n\t\t\tSystem.out.println(\"Password does not match\");\n\t\t\tisValid = false;\n\t\t}\n\t\tif(isValid){\n\t\t\tSystem.out.println(\"User name and password are valid\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "442",
    "source": "soSearches",
    "language": "java",
    "query": "android, how to using java class file in the android studio",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid sayHello(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "443",
    "source": "soSearches",
    "language": "java",
    "query": "how to make an intro screen in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World!\");\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "444",
    "source": "soSearches",
    "language": "java",
    "query": "how to read information from file java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(\"Error\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(\"Error\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile file = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.txt\";\n\t\tFile file = new File(fileName);\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString filename = \"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\";\n\t\tFile file = new File(filename);\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile file = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tScanner input = new Scanner(file);\n\t\t\twhile(input.hasNextLine()){\n\t\t\t\tSystem.out.println(input.nextLine());\n\t\t\t}\n\t\t\tinput.close();\n\t\t}catch(FileNotFoundException e){\n\t\t\tSystem.out.println(\"File not found\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.txt\");\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "445",
    "source": "soSearches",
    "language": "java",
    "query": "how to display sctrollbar always java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Scrollbar\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJScrollPane scroll = new JScrollPane();\n\t\tJTextArea text = new JTextArea(\"This is a text area\");\n\t\tscroll.setViewportView(text);\n\t\tframe.add(scroll);\n\t\tframe.setVisible(true);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Scrollbar\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new BorderLayout());\n\t\tJTextArea textArea = new JTextArea();\n\t\tJScrollPane scrollPane = new JScrollPane(textArea);\n\t\tframe.add(scrollPane,BorderLayout.CENTER);\n\t\tJScrollBar scrollBar = scrollPane.getVerticalScrollBar();\n\t\tscrollBar.setPreferredSize(new Dimension(10,0));\n\t\tscrollBar.setUI(new BasicScrollBarUI(){\n\t\t\t@Override\n\t\t\tprotected JButton createDecreaseButton(int orientation){\n\t\t\t\treturn createLeftButton();\n\t\t\t}\n\t\t\t@Override\n\t\t\tprotected JButton createIncreaseButton(int orientation){\n\t\t\t\treturn createRightButton();\n\t\t\t}\n\t\t\t@Override\n\t\t\tprotected JButton createLeftButton(){\n\t\t\t\tJButton button = new JButton();\n\t\t\t\tbutton.setPreferredSize(new Dimension(0,0));\n\t\t\t\treturn button;\n\t\t\t}\n\t\t\t@Override\n\t\t\tprotected JButton createRightButton(){\n\t\t\t\tJButton button = new JButton();\n\t\t\t\tbutton.setPreferredSize(new Dimension(0,0));\n\t\t\t\treturn button;\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Scrollbar\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new BorderLayout());\n\t\tJTextArea textArea = new JTextArea();\n\t\tJScrollPane scrollPane = new JScrollPane(textArea);\n\t\tframe.add(scrollPane,BorderLayout.CENTER);\n\t\tJScrollBar scrollBar = scrollPane.getVerticalScrollBar();\n\t\tscrollBar.setPreferredSize(new Dimension(10,0));\n\t\tscrollBar.setUI(new MyScrollBarUI());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Scrollbar\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJScrollPane scrollPane = new JScrollPane();\n\t\tJTextArea textArea = new JTextArea(\"Hello World\");\n\t\ttextArea.setLineWrap(true);\n\t\tscrollPane.setViewportView(textArea);\n\t\tframe.add(scrollPane);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"ScrollBar\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new BorderLayout());\n\t\tJTextArea textArea = new JTextArea();\n\t\ttextArea.setLineWrap(true);\n\t\ttextArea.setWrapStyleWord(true);\n\t\tJScrollPane scrollPane = new JScrollPane(textArea);\n\t\tframe.add(scrollPane,BorderLayout.CENTER);\n\t\tJScrollBar vertical = scrollPane.getVerticalScrollBar();\n\t\tvertical.setPreferredSize(new Dimension(10,0));\n\t\tJScrollBar horizontal = scrollPane.getHorizontalScrollBar();\n\t\thorizontal.setPreferredSize(new Dimension(0,10));\n\t}\n}\n",
        "\tvoid display(){\n\t\tJScrollPane scrollPane = new JScrollPane();\n\t\tscrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\n\t\tscrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\n\t\tscrollPane.setViewportView(new JTextArea());\n\t\tscrollPane.setBounds(0,0,100,100);\n\t\tscrollPane.setVisible(true);\n\t}\n}\n",
        "\tvoid showScrollBar(){\n\t\tJScrollPane scrollPane = new JScrollPane();\n\t\tscrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\n\t\tscrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\n\t}\n}\n",
        "\tvoid show(){\n\t\tJFrame frame = new JFrame(\"Scrollbar\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tJScrollPane scrollPane = new JScrollPane();\n\t\tJTextArea textArea = new JTextArea(20,20);\n\t\ttextArea.setText(\"This is a text area\");\n\t\tscrollPane.setViewportView(textArea);\n\t\tframe.add(scrollPane);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "446",
    "source": "soSearches",
    "language": "java",
    "query": "how to create banner in applet in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid display(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid display(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "447",
    "source": "soSearches",
    "language": "java",
    "query": "[java] how to",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "448",
    "source": "soSearches",
    "language": "java",
    "query": "how to use elapsed time in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tlong start = System.currentTimeMillis();\n\t\t//do something\n\t\tlong end = System.currentTimeMillis();\n\t\tSystem.out.println(\"elapsed time: \"+(end-start));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong start = System.currentTimeMillis();\n\t\tlong end = System.currentTimeMillis();\n\t\tlong elapsed = end - start;\n\t\tSystem.out.println(\"elapsed time: \" + elapsed);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong start = System.currentTimeMillis();\n\t\tSystem.out.println(\"start\");\n\t\tlong end = System.currentTimeMillis();\n\t\tSystem.out.println(\"end\");\n\t\tSystem.out.println(\"elapsed time: \" + (end - start));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong start = System.currentTimeMillis();\n\t\tlong end = System.currentTimeMillis();\n\t\tSystem.out.println(\"Elapsed time: \" + (end - start));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong start = System.currentTimeMillis();\n\t\tSystem.out.println(\"start: \" + start);\n\t\tlong end = System.currentTimeMillis();\n\t\tSystem.out.println(\"end: \" + end);\n\t\tlong elapsed = end - start;\n\t\tSystem.out.println(\"elapsed: \" + elapsed);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong start = System.currentTimeMillis();\n\t\tSystem.out.println(\"start time: \" + start);\n\t\tlong end = System.currentTimeMillis();\n\t\tSystem.out.println(\"end time: \" + end);\n\t\tlong elapsed = end - start;\n\t\tSystem.out.println(\"elapsed time: \" + elapsed);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "449",
    "source": "soSearches",
    "language": "java",
    "query": "how to click button and add textbox value javascipt",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.name(\"q\")).sendKeys(\"Selenium\");\n\t\tdriver.findElement(By.name(\"btnG\")).click();\n\t\tdriver.close();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.name(\"q\")).sendKeys(\"Selenium\");\n\t\tdriver.findElement(By.name(\"btnG\")).click();\n\t\tdriver.quit();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.name(\"q\")).sendKeys(\"selenium\");\n\t\tdriver.findElement(By.name(\"btnK\")).click();\n\t\tdriver.close();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.name(\"q\")).sendKeys(\"selenium\");\n\t\tdriver.findElement(By.name(\"btnG\")).click();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Hello World\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button = new JButton(\"Click Me\");\n\t\tframe.add(button);\n\t\tJTextField text = new JTextField(10);\n\t\tframe.add(text);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tSystem.out.println(text.getText());\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Hello World\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button = new JButton(\"Click Me\");\n\t\tJTextField text = new JTextField(10);\n\t\tframe.add(button);\n\t\tframe.add(text);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tSystem.out.println(text.getText());\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.name(\"q\")).sendKeys(\"selenium\");\n\t\tdriver.findElement(By.name(\"btnG\")).click();\n\t\tdriver.quit();\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.name(\"q\")).sendKeys(\"Selenium\");\n\t\tdriver.findElement(By.name(\"btnG\")).click();\n\t}\n}\n",
        "\tvoid m1(){\n\t\tSystem.out.println(\"m1\");\n\t}\n\tpublic\n\tvoid m2(){\n\t\tSystem.out.println(\"m2\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "450",
    "source": "soSearches",
    "language": "java",
    "query": "how to count amount on columns in array java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint count = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint count = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"There are \" + count + \" even numbers in the array.\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint count = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"There are \" + count + \" even numbers in the array\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5,6,7,8,9,10};\n\t\tint count = 0;\n\t\tfor(int i = 0; i < a.length; i++){\n\t\t\tif(a[i] % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] array = {{1,2,3},{4,5,6},{7,8,9}};\n\t\tint count = 0;\n\t\tfor(int i = 0; i < array.length; i++){\n\t\t\tfor(int j = 0; j < array[i].length; j++){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "451",
    "source": "soSearches",
    "language": "java",
    "query": "how to install java on putty",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "452",
    "source": "soSearches",
    "language": "java",
    "query": "how to see if url changed java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tString url2 = \"http://www.google.com\";\n\t\tif(url.equals(url2)){\n\t\t\tSystem.out.println(\"urls are equal\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"urls are not equal\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tString url2 = \"http://www.google.com\";\n\t\tif(url.equals(url2)){\n\t\t\tSystem.out.println(\"urls are the same\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"urls are different\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tString url = \"http://www.google.com\";\n\t\tString url2 = \"http://www.google.com\";\n\t\tif(url.equals(url2)){\n\t\t\tSystem.out.println(\"urls are equal\");\n\t\t}else{\n\t\t\tSystem.out.println(\"urls are not equal\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tString url2 = \"http://www.google.com\";\n\t\tSystem.out.println(url.equals(url2));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "453",
    "source": "soSearches",
    "language": "java",
    "query": "how to read the excelsheet in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row;\n\t\t\tHSSFCell cell;\n\t\t\tfor(int i=0;i<sheet.getPhysicalNumberOfRows();i++){\n\t\t\t\trow = sheet.getRow(i);\n\t\t\t\tfor(int j=0;j<row.getPhysicalNumberOfCells();j++){\n\t\t\t\t\tcell = row.getCell(j);\n\t\t\t\t\tSystem.out.print(cell.getStringCellValue()+\"\\t\");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\twb.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xlsx\");\n\t\t\tXSSFWorkbook wb = new XSSFWorkbook(fis);\n\t\t\tXSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tXSSFRow row;\n\t\t\tXSSFCell cell;\n\t\t\tfor(int i=0;i<sheet.getPhysicalNumberOfRows();i++){\n\t\t\t\trow = sheet.getRow(i);\n\t\t\t\tfor(int j=0;j<row.getPhysicalNumberOfCells();j++){\n\t\t\t\t\tcell = row.getCell(j);\n\t\t\t\t\tSystem.out.print(cell.getStringCellValue()+\"\\t\");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\twb.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xlsx\");\n\t\t\tXSSFWorkbook wb = new XSSFWorkbook(fis);\n\t\t\tXSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tXSSFRow row;\n\t\t\tXSSFCell cell;\n\t\t\tfor (int i = 0; i < sheet.getPhysicalNumberOfRows(); i++) {\n\t\t\t\trow = sheet.getRow(i);\n\t\t\t\tfor (int j = 0; j < row.getPhysicalNumberOfCells(); j++) {\n\t\t\t\t\tcell = row.getCell(j);\n\t\t\t\t\tSystem.out.print(cell.getStringCellValue() + \" \");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\twb.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\sai\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tint rowcount = sheet.getLastRowNum();\n\t\t\tfor(int i=0;i<=rowcount;i++){\n\t\t\t\tHSSFRow row = sheet.getRow(i);\n\t\t\t\tint cellcount = row.getLastCellNum();\n\t\t\t\tfor(int j=0;j<=cellcount;j++){\n\t\t\t\t\tHSSFCell cell = row.getCell(j);\n\t\t\t\t\tSystem.out.print(cell.getStringCellValue()+\"\\t\");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tIterator<Row> rowIterator = sheet.iterator();\n\t\t\twhile(rowIterator.hasNext()){\n\t\t\t\tRow row = rowIterator.next();\n\t\t\t\tIterator<Cell> cellIterator = row.cellIterator();\n\t\t\t\twhile(cellIterator.hasNext()){\n\t\t\t\t\tCell cell = cellIterator.next();\n\t\t\t\t\tSystem.out.print(cell.getStringCellValue()+\"\\t\");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\sai\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tint rowcount = sheet.getLastRowNum();\n\t\t\tfor(int i=0;i<=rowcount;i++){\n\t\t\t\tHSSFRow row = sheet.getRow(i);\n\t\t\t\tint cellcount = row.getLastCellNum();\n\t\t\t\tfor(int j=0;j<=cellcount;j++){\n\t\t\t\t\tHSSFCell cell = row.getCell(j);\n\t\t\t\t\tSystem.out.print(cell.getStringCellValue()+\"\\t\");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream file = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook workbook = new HSSFWorkbook(file);\n\t\t\tHSSFSheet sheet = workbook.getSheetAt(0);\n\t\t\tIterator<Row> rowIterator = sheet.iterator();\n\t\t\twhile(rowIterator.hasNext()){\n\t\t\t\tRow row = rowIterator.next();\n\t\t\t\tIterator<Cell> cellIterator = row.cellIterator();\n\t\t\t\twhile(cellIterator.hasNext()){\n\t\t\t\t\tCell cell = cellIterator.next();\n\t\t\t\t\tswitch(cell.getCellType()){\n\t\t\t\t\tcase Cell.CELL_TYPE_STRING:\n\t\t\t\t\t\tSystem.out.print(cell.getStringCellValue()+\"\\t\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Cell.CELL_TYPE_NUMERIC:\n\t\t\t\t\t\tSystem.out.print(cell.getNumericCellValue()+\"\\t\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tIterator<Row> rowIterator = sheet.iterator();\n\t\t\twhile(rowIterator.hasNext()){\n\t\t\t\tRow row = rowIterator.next();\n\t\t\t\tIterator<Cell> cellIterator = row.cellIterator();\n\t\t\t\twhile(cellIterator.hasNext()){\n\t\t\t\t\tCell cell = cellIterator.next();\n\t\t\t\t\tswitch(cell.getCellType()){\n\t\t\t\t\tcase Cell.CELL_TYPE_STRING:\n\t\t\t\t\t\tSystem.out.print(cell.getStringCellValue()+\"\\t\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Cell.CELL_TYPE_NUMERIC:\n\t\t\t\t\t\tSystem.out.print(cell.getNumericCellValue()+\"\\t\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\sai\\\\Desktop\\\\sample.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tIterator<Row> rowIterator = sheet.iterator();\n\t\t\twhile(rowIterator.hasNext()){\n\t\t\t\tRow row = rowIterator.next();\n\t\t\t\tIterator<Cell> cellIterator = row.cellIterator();\n\t\t\t\twhile(cellIterator.hasNext()){\n\t\t\t\t\tCell cell = cellIterator.next();\n\t\t\t\t\tSystem.out.print(cell.getStringCellValue()+\"\\t\");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "454",
    "source": "soSearches",
    "language": "java",
    "query": "how to generate random integer in java",
    "snippets": [
        "\tstatic int randomInt(int min, int max){\n\t\treturn (int)(Math.random()*(max-min+1))+min;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint random = (int)(Math.random()*100);\n\t\tSystem.out.println(random);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "455",
    "source": "soSearches",
    "language": "java",
    "query": "[google-places-api] how to use textsearch java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString apiKey = \"AIzaSyD-9tSrke72PouQMnMX-a7eZjk56pAjKPY\";\n\t\tString query = \"Pizza\";\n\t\tString url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+query+\"&key=\"+apiKey;\n\t\tURL obj = null;\n\t\ttry{\n\t\t\tobj = new URL(url);\n\t\t}catch(MalformedURLException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tHttpURLConnection con = null;\n\t\ttry{\n\t\t\tcon = (HttpURLConnection) obj.openConnection();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\ttry{\n\t\t\tcon.setRequestMethod(\"GET\");\n\t\t}catch(ProtocolException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tcon.setRequestProperty(\"User-Agent\", \"Mozilla/5.0\");\n\t\tint responseCode = 0;\n\t\ttry{\n\t\t\tresponseCode = con.getResponseCode();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"\\nSending 'GET' request to URL : \" + url);\n\t\tSystem.out.println(\"Response Code : \" + responseCode);\n\t\tBufferedReader in = null;\n\t\ttry{\n\t\t\tin = new BufferedReader(new InputStreamReader(con.getInputStream()));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tString inputLine;\n\t\tStringBuffer response = new StringBuffer();\n\t\ttry{\n\t\t\twhile((inputLine = in.readLine()) != null){\n\t\t\t\tresponse.append(inputLine);\n\t\t\t}\n\t\t}catch(IOException e){\n",
        "\tstatic void main(String[] args){\n\t\tString apiKey = \"AIzaSyD-9tSrke72PouQMnMX-a7eZi3jk_z0uo\";\n\t\tString query = \"Pizza\";\n\t\tString url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + query + \"&key=\" + apiKey;\n\t\t\n\t\tURL obj = new URL(url);\n\t\tHttpURLConnection con = (HttpURLConnection) obj.openConnection();\n\t\tcon.setRequestMethod(\"GET\");\n\t\t\n\t\tBufferedReader in = new BufferedReader(\n\t\t\t\tnew InputStreamReader(con.getInputStream()));\n\t\tString inputLine;\n\t\tStringBuffer response = new StringBuffer();\n\t\t\n\t\twhile ((inputLine = in.readLine()) != null) {\n\t\t\tresponse.append(inputLine);\n\t\t}\n\t\tin.close();\n\t\t\n\t\tSystem.out.println(response.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString apiKey = \"AIzaSyD-9tSrke72PouQMnMX-a7eZiSqmMjkQqw\";\n\t\tString query = \"restaurant\";\n\t\tString location = \"40.713744,-74.009056\";\n\t\tString radius = \"500\";\n\t\tString type = \"food\";\n\t\tString name = \"\";\n\t\tString address = \"\";\n\t\tString rating = \"\";\n\t\tString price = \"\";\n\t\tString phone = \"\";\n\t\tString website = \"\";\n\t\tString placeId = \"\";\n\t\tString lat = \"\";\n\t\tString lng = \"\";\n\t\tString icon = \"\";\n\t\tString vicinity = \"\";\n\t\tString openNow = \"\";\n\t\tString openHours = \"\";\n\t\tString photoRef = \"\";\n\t\tString photoWidth = \"\";\n\t\tString photoHeight = \"\";\n\t\tString photoUrl = \"\";\n\t\tString photoMaxWidth = \"\";\n\t\tString photoMaxHeight = \"\";\n\t\tString photoMaxWidthUrl = \"\";\n\t\tString photoMaxHeightUrl = \"\";\n\t\tString photoReference = \"\";\n\t\tString photoWidthReference = \"\";\n\t\tString photoHeightReference = \"\";\n\t\tString photoUrlReference = \"\";\n\t\tString photoMaxWidthReference = \"\";\n\t\tString photoMaxHeightReference = \"\";\n\t\tString photoMaxWidthUrlReference = \"\";\n\t\tString photoMaxHeightUrlReference = \"\";\n\t\tString photoReferenceReference = \"\";\n\t\tString photoWidthReferenceReference = \"\";\n\t\tString photoHeightReferenceReference = \"\";\n\t\tString photoUrlReferenceReference = \"\";\n\t\tString photoMaxWidthReferenceReference = \"\";\n\t\tString photoMaxHeightReferenceReference = \"\";\n\t\tString photoMaxWidthUrlReferenceReference = \"\";\n\t\tString photoMaxHeightUrlReferenceReference = \"\";\n\t\tString photoReferenceReferenceReference = \"\";\n\t\tString photoWidthReferenceReferenceReference = \"\";\n\t\tString photoHeightReferenceReferenceReference = \"\";\n",
        "\tstatic void main(String[] args){\n\t\tString apiKey = \"AIzaSyD-9tSrke72PouQMnMX-a7eZiSqKjqyRAM\";\n\t\tString query = \"restaurant\";\n\t\tString location = \"40.713744,-73.993644\";\n\t\tString radius = \"500\";\n\t\tString type = \"food\";\n\t\tString name = \"\";\n\t\tString rating = \"\";\n\t\tString price = \"\";\n\t\tString vicinity = \"\";\n\t\tString lat = \"\";\n\t\tString lng = \"\";\n\t\tString icon = \"\";\n\t\tString id = \"\";\n\t\tString reference = \"\";\n\t\tString website = \"\";\n\t\tString phone = \"\";\n\t\tString address = \"\";\n\t\tString international_phone_number = \"\";\n\t\tString formatted_address = \"\";\n\t\tString formatted_phone_number = \"\";\n\t\tString url = \"\";\n\t\tString utc_offset = \"\";\n\t\tString vicinity = \"\";\n\t\tString website = \"\";\n\t\tString website_url = \"\";\n\t\tString website_type = \"\";\n\t\tString website_id = \"\";\n\t\tString website_name = \"\";\n\t\tString website_rating = \"\";\n\t\tString website_price = \"\";\n\t\tString website_vicinity = \"\";\n\t\tString website_lat = \"\";\n\t\tString website_lng = \"\";\n\t\tString website_icon = \"\";\n\t\tString website_id = \"\";\n\t\tString website_reference = \"\";\n\t\tString website_website = \"\";\n\t\tString website_phone = \"\";\n\t\tString website_address = \"\";\n\t\tString website_international_phone_number = \"\";\n\t\tString website_formatted_address = \"\";\n\t\tString website_formatted_phone_number = \"\";\n\t\tString website_url = \"\";\n\t\tString website_utc_offset = \"\";\n\t\tString website_vicinity = \"\";\n\t\tString website_website\n",
        "\tstatic void main(String[] args) {\n\t\tString apiKey = \"AIzaSyD-9tSrke72PouQMnMX-a7eZiSqjqMbozs\";\n\t\tString query = \"Pizza near New York, NY\";\n\t\tString url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + query + \"&key=\" + apiKey;\n\t\tString json = new String(getUrlBytes(url));\n\t\tSystem.out.println(json);\n\t}\n\tpublic static byte[] getUrlBytes(String urlSpec) throws IOException {\n\t\tURL url = new URL(urlSpec);\n\t\tHttpURLConnection connection = (HttpURLConnection) url.openConnection();\n\t\tconnection.setRequestMethod(\"GET\");\n\t\tconnection.connect();\n\t\treturn IOUtils.toByteArray(connection.getInputStream());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString apiKey = \"AIzaSyD-9tSrke72PouQMnMX-a7eZiSqUxmjkOw\";\n\t\tString query = \"pizza\";\n\t\tString url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + query + \"&key=\" + apiKey;\n\t\tURL obj = null;\n\t\ttry{\n\t\t\tobj = new URL(url);\n\t\t}catch(MalformedURLException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tHttpURLConnection con = null;\n\t\ttry{\n\t\t\tcon = (HttpURLConnection) obj.openConnection();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\ttry{\n\t\t\tcon.setRequestMethod(\"GET\");\n\t\t}catch(ProtocolException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tcon.setRequestProperty(\"User-Agent\", \"Mozilla/5.0\");\n\t\tint responseCode = 0;\n\t\ttry{\n\t\t\tresponseCode = con.getResponseCode();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif(responseCode == HttpURLConnection.HTTP_OK){\n\t\t\tBufferedReader in = null;\n\t\t\ttry{\n\t\t\t\tin = new BufferedReader(new InputStreamReader(con.getInputStream()));\n\t\t\t}catch(IOException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tString inputLine = null;\n\t\t\tStringBuffer response = new StringBuffer();\n\t\t\ttry{\n\t\t\t\twhile((inputLine = in.readLine()) != null){\n\t\t\t\t\tresponse.append(inputLine);\n\t\t\t\t}\n\t\t\t}catch(IOException e){\n\t\t\t\te.printStackTr\n"
    ],
    "results": 6
},{
    "id": "456",
    "source": "soSearches",
    "language": "java",
    "query": "java how to convert utf-8",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"中文\";\n\t\tSystem.out.println(s);\n\t\tbyte[] b = s.getBytes();\n\t\tSystem.out.println(b);\n\t\tfor(byte bb:b){\n\t\t\tSystem.out.println(bb);\n\t\t}\n\t\tString s1 = new String(b);\n\t\tSystem.out.println(s1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"中文\";\n\t\tSystem.out.println(s);\n\t\tbyte[] b = s.getBytes();\n\t\tSystem.out.println(b);\n\t\tfor(byte bb:b){\n\t\t\tSystem.out.println(bb);\n\t\t}\n\t\tString s2 = new String(b);\n\t\tSystem.out.println(s2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"中文\";\n\t\tSystem.out.println(s);\n\t\tbyte[] b = s.getBytes();\n\t\tSystem.out.println(b);\n\t\tString s2 = new String(b);\n\t\tSystem.out.println(s2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"中文\";\n\t\tSystem.out.println(s);\n\t\tbyte[] b = s.getBytes();\n\t\tSystem.out.println(b);\n\t\tfor(byte bb:b){\n\t\t\tSystem.out.print(bb+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tString s2 = new String(b);\n\t\tSystem.out.println(s2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"中文\";\n\t\tSystem.out.println(str);\n\t\tbyte[] bytes = str.getBytes();\n\t\tSystem.out.println(bytes);\n\t\tfor(byte b:bytes){\n\t\t\tSystem.out.println(b);\n\t\t}\n\t\tString str2 = new String(bytes);\n\t\tSystem.out.println(str2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"中文\";\n\t\tSystem.out.println(str);\n\t\tbyte[] bytes = str.getBytes();\n\t\tSystem.out.println(bytes.length);\n\t\tfor(byte b:bytes){\n\t\t\tSystem.out.println(b);\n\t\t}\n\t\tSystem.out.println(\"==============================\");\n\t\tString str2 = new String(bytes);\n\t\tSystem.out.println(str2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"中文\";\n\t\tSystem.out.println(s);\n\t\tbyte[] b = s.getBytes();\n\t\tfor(byte bb : b){\n\t\t\tSystem.out.println(bb);\n\t\t}\n\t\tString s2 = new String(b);\n\t\tSystem.out.println(s2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"中文\";\n\t\tSystem.out.println(str);\n\t\tbyte[] bytes = str.getBytes();\n\t\tSystem.out.println(bytes.length);\n\t\tfor(byte b : bytes){\n\t\t\tSystem.out.println(b);\n\t\t}\n\t\tString str2 = new String(bytes);\n\t\tSystem.out.println(str2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"中文\";\n\t\tSystem.out.println(str);\n\t\ttry{\n\t\t\tbyte[] bytes = str.getBytes(\"utf-8\");\n\t\t\tSystem.out.println(bytes);\n\t\t\tString str2 = new String(bytes,\"utf-8\");\n\t\t\tSystem.out.println(str2);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "457",
    "source": "soSearches",
    "language": "java",
    "query": "how to use javafx",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "458",
    "source": "soSearches",
    "language": "java",
    "query": "how to check for the “backspace” character in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the string\");\n\t\tString s = sc.nextLine();\n\t\tchar[] ch = s.toCharArray();\n\t\tfor(int i=0;i<ch.length;i++){\n\t\t\tif(ch[i]=='\\b'){\n\t\t\t\tSystem.out.println(\"Backspace character found\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the string\");\n\t\tString s = sc.nextLine();\n\t\tchar[] ch = s.toCharArray();\n\t\tfor(int i=0;i<ch.length;i++){\n\t\t\tif(ch[i]=='\\b'){\n\t\t\t\tSystem.out.println(\"Backspace found\");\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the string\");\n\t\tString s = sc.nextLine();\n\t\tchar[] ch = s.toCharArray();\n\t\tfor(int i=0;i<ch.length;i++){\n\t\t\tif(ch[i]=='\\b'){\n\t\t\t\tSystem.out.println(\"Backspace found\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar ch = '\\b';\n\t\tif(ch == '\\b'){\n\t\t\tSystem.out.println(\"backspace\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"not backspace\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter a character\");\n\t\tchar ch = sc.next().charAt(0);\n\t\tif(ch == '\\b'){\n\t\t\tSystem.out.println(\"Backspace character\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not a backspace character\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar c = '\\b';\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar ch = '\\b';\n\t\tif(ch == '\\b'){\n\t\t\tSystem.out.println(\"backspace\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "459",
    "source": "soSearches",
    "language": "java",
    "query": "how to scroll to a link in selenium (java)",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tWebElement element = driver.findElement(By.linkText(\"Gmail\"));\n\t\t((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView(true);\", element);\n\t\telement.click();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tWebElement element = driver.findElement(By.linkText(\"Gmail\"));\n\t\tActions action = new Actions(driver);\n\t\taction.moveToElement(element).perform();\n\t\telement.click();\n\t}\n}\n",
        "\tvoid test(){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tWebElement element = driver.findElement(By.linkText(\"Gmail\"));\n\t\t((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView(true);\", element);\n\t\telement.click();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.linkText(\"Gmail\")).click();\n\t\tdriver.findElement(By.linkText(\"Sign in\")).click();\n\t\tdriver.findElement(By.id(\"Email\")).sendKeys(\"username\");\n\t\tdriver.findElement(By.id(\"Passwd\")).sendKeys(\"password\");\n\t\tdriver.findElement(By.id(\"signIn\")).click();\n\t\tdriver.findElement(By.linkText(\"Gmail\")).click();\n\t\tdriver.findElement(By.linkText(\"Sign out\")).click();\n\t\tdriver.quit();\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.linkText(\"Gmail\")).click();\n\t\tdriver.findElement(By.linkText(\"Sign in\")).click();\n\t\tdriver.findElement(By.id(\"Email\")).sendKeys(\"\n",
        "\tvoid test(){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tWebElement searchBox = driver.findElement(By.name(\"q\"));\n\t\tsearchBox.sendKeys(\"Selenium\");\n\t\tsearchBox.submit();\n\t\tWebElement link = driver.findElement(By.linkText(\"Selenium - Web Browser Automation\"));\n\t\tlink.click();\n\t\tdriver.quit();\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "460",
    "source": "soSearches",
    "language": "java",
    "query": "how to know if an app is running with java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.getProperty(\"java.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vendor.url\"));\n\t\tSystem.out.println(System.getProperty(\"java.home\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.specification.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.vm.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.vendor\"));\n\t\tSystem.out.println(System.getProperty(\"java.specification.name\"));\n\t\tSystem.out.println(System.getProperty(\"java.class.version\"));\n\t\tSystem.out.println(System.getProperty(\"java.class.path\"));\n\t\tSystem.out.println(System.getProperty(\"java.library.path\"));\n\t\tSystem.out.println(System.getProperty(\"java.io.tmpdir\"));\n\t\tSystem.out.println(System.getProperty(\"java.compiler\"));\n\t\tSystem.out.println(System.getProperty(\"java.ext.dirs\"));\n\t\tSystem.out.println(System.getProperty(\"os.name\"));\n\t\tSystem.out.println(System.getProperty(\"os.arch\"));\n\t\tSystem.out.println(System.getProperty(\"os.version\"));\n\t\tSystem.out.println(System.getProperty(\"file.separator\"));\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Runtime.getRuntime().availableProcessors());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()==Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Runtime.getRuntime().availableProcessors());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory());\n\t\tSystem.out.println(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().totalMemory());\n\t\tSystem.out.println(Runtime.getRuntime().maxMemory()-Runtime.getRuntime().freeMemory());\n\t\tSystem.\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(isJavaRunning());\n\t}\n\tpublic static boolean isJavaRunning(){\n\t\ttry{\n\t\t\tRuntime.getRuntime().exec(\"javac\");\n\t\t\treturn true;\n\t\t}catch(Exception e){\n\t\t\treturn false;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString osName = System.getProperty(\"os.name\");\n\t\tif(osName.contains(\"Windows\")){\n\t\t\tSystem.out.println(\"Windows\");\n\t\t}else if(osName.contains(\"Linux\")){\n\t\t\tSystem.out.println(\"Linux\");\n\t\t}else if(osName.contains(\"Mac\")){\n\t\t\tSystem.out.println(\"Mac\");\n\t\t}else{\n\t\t\tSystem.out.println(\"Unknown\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString java_home = System.getenv(\"JAVA_HOME\");\n\t\tString java_exe = java_home + \"/bin/java\";\n\t\tString[] cmd = {java_exe, \"-version\"};\n\t\ttry{\n\t\t\tProcess p = Runtime.getRuntime().exec(cmd);\n\t\t\tBufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line = in.readLine();\n\t\t\tSystem.out.println(line);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString java_version = System.getProperty(\"java.version\");\n\t\tSystem.out.println(\"java version: \" + java_version);\n\t\tString java_vendor = System.getProperty(\"java.vendor\");\n\t\tSystem.out.println(\"java vendor: \" + java_vendor);\n\t\tString java_home = System.getProperty(\"java.home\");\n\t\tSystem.out.println(\"java home: \" + java_home);\n\t\tString java_class_path = System.getProperty(\"java.class.path\");\n\t\tSystem.out.println(\"java class path: \" + java_class_path);\n\t\tString java_library_path = System.getProperty(\"java.library.path\");\n\t\tSystem.out.println(\"java library path: \" + java_library_path);\n\t\tString java_io_tmpdir = System.getProperty(\"java.io.tmpdir\");\n\t\tSystem.out.println(\"java io tmpdir: \" + java_io_tmpdir);\n\t\tString java_compiler = System.getProperty(\"java.compiler\");\n\t\tSystem.out.println(\"java compiler: \" + java_compiler);\n\t\tString java_ext_dirs = System.getProperty(\"java.ext.dirs\");\n\t\tSystem.out.println(\"java ext dirs: \" + java_ext_dirs);\n\t\tString os_name = System.getProperty(\"os.name\");\n\t\tSystem.out.println(\"os name: \" + os_name);\n\t\tString os_arch = System.getProperty(\"os.arch\");\n\t\tSystem.out.println(\"os arch: \" + os_arch);\n\t\tString os_version = System.getProperty(\"os.version\");\n\t\tSystem.out.println(\"os version: \" + os_version);\n\t\tString file_separator = System.getProperty(\"file.separator\");\n\t\tSystem.out.println(\"file separator: \" + file_separator);\n\t\tString path_separator = System.getProperty(\"path.separator\");\n\t\tSystem\n"
    ],
    "results": 10
},{
    "id": "461",
    "source": "soSearches",
    "language": "java",
    "query": "how to empty databuffer in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tDataBuffer buffer = new DataBuffer(10);\n\t\tbuffer.write(1);\n\t\tbuffer.write(2);\n\t\tbuffer.write(3);\n\t\tbuffer.write(4);\n\t\tbuffer.write(5);\n\t\tbuffer.write(6);\n\t\tbuffer.write(7);\n\t\tbuffer.write(8);\n\t\tbuffer.write(9);\n\t\tbuffer.write(10);\n\t\tbuffer.write(11);\n\t\tbuffer.write(12);\n\t\tbuffer.write(13);\n\t\tbuffer.write(14);\n\t\tbuffer.write(15);\n\t\tbuffer.write(16);\n\t\tbuffer.write(17);\n\t\tbuffer.write(18);\n\t\tbuffer.write(19);\n\t\tbuffer.write(20);\n\t\tbuffer.write(21);\n\t\tbuffer.write(22);\n\t\tbuffer.write(23);\n\t\tbuffer.write(24);\n\t\tbuffer.write(25);\n\t\tbuffer.write(26);\n\t\tbuffer.write(27);\n\t\tbuffer.write(28);\n\t\tbuffer.write(29);\n\t\tbuffer.write(30);\n\t\tbuffer.write(31);\n\t\tbuffer.write(32);\n\t\tbuffer.write(33);\n\t\tbuffer.write(34);\n\t\tbuffer.write(35);\n\t\tbuffer.write(36);\n\t\tbuffer.write(37);\n\t\tbuffer.write(38);\n\t\tbuffer.write(39);\n\t\tbuffer.write(40);\n\t\tbuffer.write(41);\n\t\tbuffer.write(42);\n\t\tbuffer.write(43);\n\t\tbuffer.write(44);\n\t\tbuffer.write(45);\n\t\tbuffer.write(46);\n\t\tbuffer.write(47);\n\t\tbuffer.write(48);\n\t\tbuffer.write(49);\n\t\tbuffer.write(50);\n\t\tbuffer.write(51);\n\t\tbuffer.write(52);\n\t\tbuffer.write(53);\n",
        "\tstatic void main(String[] args){\n\t\tDataBuffer buffer = new DataBuffer();\n\t\tbuffer.write(1);\n\t\tbuffer.write(2);\n\t\tbuffer.write(3);\n\t\tbuffer.write(4);\n\t\tbuffer.write(5);\n\t\tbuffer.write(6);\n\t\tbuffer.write(7);\n\t\tbuffer.write(8);\n\t\tbuffer.write(9);\n\t\tbuffer.write(10);\n\t\tbuffer.write(11);\n\t\tbuffer.write(12);\n\t\tbuffer.write(13);\n\t\tbuffer.write(14);\n\t\tbuffer.write(15);\n\t\tbuffer.write(16);\n\t\tbuffer.write(17);\n\t\tbuffer.write(18);\n\t\tbuffer.write(19);\n\t\tbuffer.write(20);\n\t\tbuffer.write(21);\n\t\tbuffer.write(22);\n\t\tbuffer.write(23);\n\t\tbuffer.write(24);\n\t\tbuffer.write(25);\n\t\tbuffer.write(26);\n\t\tbuffer.write(27);\n\t\tbuffer.write(28);\n\t\tbuffer.write(29);\n\t\tbuffer.write(30);\n\t\tbuffer.write(31);\n\t\tbuffer.write(32);\n\t\tbuffer.write(33);\n\t\tbuffer.write(34);\n\t\tbuffer.write(35);\n\t\tbuffer.write(36);\n\t\tbuffer.write(37);\n\t\tbuffer.write(38);\n\t\tbuffer.write(39);\n\t\tbuffer.write(40);\n\t\tbuffer.write(41);\n\t\tbuffer.write(42);\n\t\tbuffer.write(43);\n\t\tbuffer.write(44);\n\t\tbuffer.write(45);\n\t\tbuffer.write(46);\n\t\tbuffer.write(47);\n\t\tbuffer.write(48);\n\t\tbuffer.write(49);\n\t\tbuffer.write(50);\n\t\tbuffer.write(51);\n\t\tbuffer.write(52);\n\t\tbuffer.write(53);\n",
        "\tstatic void main(String[] args){\n\t\tDataBuffer buffer = new DataBuffer();\n\t\tbuffer.add(1);\n\t\tbuffer.add(2);\n\t\tbuffer.add(3);\n\t\tbuffer.add(4);\n\t\tbuffer.add(5);\n\t\tbuffer.add(6);\n\t\tbuffer.add(7);\n\t\tbuffer.add(8);\n\t\tbuffer.add(9);\n\t\tbuffer.add(10);\n\t\tbuffer.add(11);\n\t\tbuffer.add(12);\n\t\tbuffer.add(13);\n\t\tbuffer.add(14);\n\t\tbuffer.add(15);\n\t\tbuffer.add(16);\n\t\tbuffer.add(17);\n\t\tbuffer.add(18);\n\t\tbuffer.add(19);\n\t\tbuffer.add(20);\n\t\tbuffer.add(21);\n\t\tbuffer.add(22);\n\t\tbuffer.add(23);\n\t\tbuffer.add(24);\n\t\tbuffer.add(25);\n\t\tbuffer.add(26);\n\t\tbuffer.add(27);\n\t\tbuffer.add(28);\n\t\tbuffer.add(29);\n\t\tbuffer.add(30);\n\t\tbuffer.add(31);\n\t\tbuffer.add(32);\n\t\tbuffer.add(33);\n\t\tbuffer.add(34);\n\t\tbuffer.add(35);\n\t\tbuffer.add(36);\n\t\tbuffer.add(37);\n\t\tbuffer.add(38);\n\t\tbuffer.add(39);\n\t\tbuffer.add(40);\n\t\tbuffer.add(41);\n\t\tbuffer.add(42);\n\t\tbuffer.add(43);\n\t\tbuffer.add(44);\n\t\tbuffer.add(45);\n\t\tbuffer.add(46);\n\t\tbuffer.add(47);\n\t\tbuffer.add(48);\n\t\tbuffer.add(49);\n\t\tbuffer.add(50);\n\t\tbuffer.add(51);\n\t\tbuffer.add(52);\n\t\tbuffer.add(53);\n",
        "\tvoid m1(){\n\t\tbyte[] b = new byte[10];\n\t\tb[0] = 1;\n\t\tb[1] = 2;\n\t\tb[2] = 3;\n\t\tb[3] = 4;\n\t\tb[4] = 5;\n\t\tb[5] = 6;\n\t\tb[6] = 7;\n\t\tb[7] = 8;\n\t\tb[8] = 9;\n\t\tb[9] = 10;\n\t\tfor(int i = 0; i < b.length; i++){\n\t\t\tSystem.out.println(b[i]);\n\t\t}\n\t\tfor(int i = 0; i < b.length; i++){\n\t\t\tb[i] = 0;\n\t\t}\n\t\tfor(int i = 0; i < b.length; i++){\n\t\t\tSystem.out.println(b[i]);\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tDataBuffer buffer = new DataBuffer();\n\t\tbuffer.clear();\n\t}\n}\n",
        "\tvoid method(){\n\t\tbyte[] data = new byte[1024];\n\t\tint len = data.length;\n\t\tfor(int i = 0; i < len; i++){\n\t\t\tdata[i] = 0;\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tbyte[] data = new byte[1024];\n\t\tint len = data.length;\n\t\twhile(len > 0){\n\t\t\tlen -= in.read(data, 0, len);\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tbyte[] data = new byte[1024];\n\t\tdata = null;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "462",
    "source": "soSearches",
    "language": "java",
    "query": "how to get only numericvalue from a string in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"123456789\";\n\t\tSystem.out.println(str.replaceAll(\"[^0-9]\", \"\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"123456789\";\n\t\tString str1=\"123456789\";\n\t\tString str2=\"123456789\";\n\t\tString str3=\"123456789\";\n\t\tString str4=\"123456789\";\n\t\tString str5=\"123456789\";\n\t\tString str6=\"123456789\";\n\t\tString str7=\"123456789\";\n\t\tString str8=\"123456789\";\n\t\tString str9=\"123456789\";\n\t\tString str10=\"123456789\";\n\t\tString str11=\"123456789\";\n\t\tString str12=\"123456789\";\n\t\tString str13=\"123456789\";\n\t\tString str14=\"123456789\";\n\t\tString str15=\"123456789\";\n\t\tString str16=\"123456789\";\n\t\tString str17=\"123456789\";\n\t\tString str18=\"123456789\";\n\t\tString str19=\"123456789\";\n\t\tString str20=\"123456789\";\n\t\tString str21=\"123456789\";\n\t\tString str22=\"123456789\";\n\t\tString str23=\"123456789\";\n\t\tString str24=\"123456789\";\n\t\tString str25=\"123456789\";\n\t\tString str26=\"123456789\";\n\t\tString str27=\"123456789\";\n\t\tString str28=\"123456789\";\n\t\tString str29=\"123456789\";\n\t\tString str30=\"123456789\";\n\t\tString str31=\"123456789\";\n\t\tString str32=\"123456789\";\n\t\tString str33=\"123456789\";\n\t\tString str34=\"123456789\";\n\t\tString str35=\"123456789\";\n\t\tString str36=\"123456789\";\n\t\tString str37=\"123456789\";\n\t\tString str38=\"123456789\";\n\t\tString str39=\"123456789\";\n\t\tString str40=\"123456789\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"12345\";\n\t\tSystem.out.println(str.replaceAll(\"[^0-9]\", \"\"));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "463",
    "source": "soSearches",
    "language": "java",
    "query": "how to add watermark on pdf file in pure java",
    "snippets": [
        "\tstatic void main(String[] args) throws IOException {\n\t\tPdfReader reader = new PdfReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.pdf\");\n\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\test1.pdf\"));\n\t\tPdfContentByte content = stamper.getOverContent(1);\n\t\tPdfGState gstate = new PdfGState();\n\t\tgstate.setFillOpacity(0.5f);\n\t\tcontent.setGState(gstate);\n\t\tcontent.beginText();\n\t\tcontent.setFontAndSize(BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.NOT_EMBEDDED), 50);\n\t\tcontent.showTextAligned(Element.ALIGN_CENTER, \"Watermark\", 300, 300, 45);\n\t\tcontent.endText();\n\t\tstamper.close();\n\t\treader.close();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString inputFile = \"C:\\\\Users\\\\Sankar\\\\Desktop\\\\test.pdf\";\n\t\t\tString outputFile = \"C:\\\\Users\\\\Sankar\\\\Desktop\\\\test1.pdf\";\n\t\t\tString watermarkFile = \"C:\\\\Users\\\\Sankar\\\\Desktop\\\\watermark.png\";\n\t\t\tPdfReader reader = new PdfReader(inputFile);\n\t\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(outputFile));\n\t\t\tPdfContentByte content = stamper.getOverContent(1);\n\t\t\tImage image = Image.getInstance(watermarkFile);\n\t\t\timage.setAbsolutePosition(0, 0);\n\t\t\tcontent.addImage(image);\n\t\t\tstamper.close();\n\t\t\treader.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tString srcFile = \"C:\\\\Users\\\\user\\\\Desktop\\\\test.pdf\";\n\t\t\tString destFile = \"C:\\\\Users\\\\user\\\\Desktop\\\\test_watermark.pdf\";\n\t\t\tString watermarkFile = \"C:\\\\Users\\\\user\\\\Desktop\\\\watermark.png\";\n\t\t\tPdfReader reader = new PdfReader(srcFile);\n\t\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(destFile));\n\t\t\tPdfContentByte content = stamper.getOverContent(1);\n\t\t\tImage image = Image.getInstance(watermarkFile);\n\t\t\timage.setAbsolutePosition(0, 0);\n\t\t\tcontent.addImage(image);\n\t\t\tstamper.close();\n\t\t\treader.close();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException {\n\t\tString inputFile = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.pdf\";\n\t\tString outputFile = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\test1.pdf\";\n\t\tString watermarkFile = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\watermark.png\";\n\t\tString watermarkText = \"Suresh\";\n\t\tint watermarkTextSize = 20;\n\t\tint watermarkTextColor = 0xFF0000;\n\t\tint watermarkPosition = 0;\n\t\tint watermarkOpacity = 50;\n\t\tint watermarkRotation = 0;\n\t\tint watermarkWidth = 100;\n\t\tint watermarkHeight = 100;\n\t\tint watermarkMargin = 10;\n\t\tint watermarkBorder = 0;\n\t\tint watermarkBorderColor = 0xFF0000;\n\t\tint watermarkBorderOpacity = 50;\n\t\tint watermarkBorderWidth = 1;\n\t\tint watermarkBorderRadius = 0;\n\t\tint watermarkBorderDash = 0;\n\t\tint watermarkBorderDashGap = 0;\n\t\tint watermarkBorderDashColor = 0xFF0000;\n\t\tint watermarkBorderDashOpacity = 50;\n\t\tint watermarkBorderDashWidth = 1;\n\t\tint watermarkBorderDashGapColor = 0xFF0000;\n\t\tint watermarkBorderDashGapOpacity = 50;\n\t\tint watermarkBorderDashGapWidth = 1;\n\t\tint watermarkBorderDashGapRadius = 0;\n\t\tint watermarkBorderDashGapDash = 0;\n\t\tint watermarkBorderDashGapDashGap = 0;\n\t\tint watermarkBorderDashGapDashColor = 0xFF0000;\n\t\tint watermarkBorderDashGapDashOpacity = 50;\n\t\tint watermarkBorderDashGapDashWidth = 1;\n\t\tint watermarkBorderDashGapDashGapColor = 0xFF0000;\n\t\tint watermarkBorderDashGapDashGapOpacity = 50;\n\t\tint watermarkBorderDashGapDashG\n",
        "\tstatic void main(String[] args) throws Exception {\n\t\tString srcFile = \"C:\\\\Users\\\\Sachin\\\\Desktop\\\\test.pdf\";\n\t\tString destFile = \"C:\\\\Users\\\\Sachin\\\\Desktop\\\\test1.pdf\";\n\t\tString watermarkFile = \"C:\\\\Users\\\\Sachin\\\\Desktop\\\\watermark.png\";\n\t\taddWatermark(srcFile, destFile, watermarkFile);\n\t}\n\tpublic static void addWatermark(String srcFile, String destFile, String watermarkFile) throws Exception {\n\t\tPdfReader reader = new PdfReader(srcFile);\n\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(destFile));\n\t\tPdfContentByte content = stamper.getOverContent(1);\n\t\tImage image = Image.getInstance(watermarkFile);\n\t\timage.setAbsolutePosition(0, 0);\n\t\tcontent.addImage(image);\n\t\tstamper.close();\n\t\treader.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException, DocumentException {\n\t\tPdfReader reader = new PdfReader(\"/home/suresh/Desktop/test.pdf\");\n\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(\"/home/suresh/Desktop/test1.pdf\"));\n\t\tPdfContentByte content = stamper.getOverContent(1);\n\t\tPdfGState gstate = new PdfGState();\n\t\tgstate.setFillOpacity(0.5f);\n\t\tcontent.setGState(gstate);\n\t\tcontent.beginText();\n\t\tcontent.setColorFill(new BaseColor(0, 0, 0));\n\t\tcontent.setFontAndSize(BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.NOT_EMBEDDED), 50);\n\t\tcontent.showTextAligned(Element.ALIGN_CENTER, \"Suresh\", 300, 300, 45);\n\t\tcontent.endText();\n\t\tstamper.close();\n\t\treader.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException {\n\t\tString inputFile = \"C:\\\\Users\\\\sai\\\\Desktop\\\\test.pdf\";\n\t\tString outputFile = \"C:\\\\Users\\\\sai\\\\Desktop\\\\test.pdf\";\n\t\tString watermarkFile = \"C:\\\\Users\\\\sai\\\\Desktop\\\\test.pdf\";\n\t\tPdfReader reader = new PdfReader(inputFile);\n\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(outputFile));\n\t\tPdfContentByte content = stamper.getOverContent(1);\n\t\tPdfReader watermarkReader = new PdfReader(watermarkFile);\n\t\tPdfTemplate template = content.createTemplate(watermarkReader.getPageSizeWithRotation(1));\n\t\tPdfImportedPage page = content.getImportedPage(watermarkReader, 1);\n\t\ttemplate.addTemplate(page, 0, 0);\n\t\tcontent.addTemplate(template, 0, 0);\n\t\tstamper.close();\n\t\treader.close();\n\t\twatermarkReader.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException {\n\t\tString filePath = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.pdf\";\n\t\tString watermarkPath = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\watermark.png\";\n\t\tString outputPath = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\output.pdf\";\n\t\taddWatermark(filePath, watermarkPath, outputPath);\n\t}\n\tpublic static void addWatermark(String filePath, String watermarkPath, String outputPath) throws IOException {\n\t\tPdfReader reader = new PdfReader(filePath);\n\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(outputPath));\n\t\tPdfContentByte content = stamper.getOverContent(1);\n\t\tImage image = Image.getInstance(watermarkPath);\n\t\timage.setAbsolutePosition(0, 0);\n\t\tcontent.addImage(image);\n\t\tstamper.close();\n\t\treader.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException {\n\t\tString fileName = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.pdf\";\n\t\tString watermark = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.pdf\";\n\t\tString outputFile = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.pdf\";\n\t\tPdfReader reader = new PdfReader(fileName);\n\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(outputFile));\n\t\tPdfContentByte content = stamper.getOverContent(1);\n\t\tPdfImportedPage page = stamper.getImportedPage(reader, 1);\n\t\tcontent.addTemplate(page, 0, 0);\n\t\tPdfTemplate template = content.createTemplate(100, 100);\n\t\ttemplate.setBoundingBox(new Rectangle(-20, -20, 100, 100));\n\t\ttemplate.setLeftMargin(-20);\n\t\ttemplate.setTopMargin(-20);\n\t\tPdfImportedPage watermarkPage = stamper.getImportedPage(new PdfReader(watermark), 1);\n\t\tcontent.addTemplate(watermarkPage, 0, 0);\n\t\tstamper.close();\n\t\treader.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tString fileName = \"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\Saurabh\\\\Saurabh.pdf\";\n\t\t\tString watermark = \"Saurabh\";\n\t\t\tString outputFile = \"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\Saurabh\\\\Saurabh_watermark.pdf\";\n\t\t\tPdfReader reader = new PdfReader(fileName);\n\t\t\tPdfStamper stamper = new PdfStamper(reader, new FileOutputStream(outputFile));\n\t\t\tPdfContentByte content = stamper.getUnderContent(1);\n\t\t\tcontent.beginText();\n\t\t\tcontent.setColorFill(new BaseColor(0, 0, 0));\n\t\t\tcontent.setFontAndSize(BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.NOT_EMBEDDED), 50);\n\t\t\tcontent.showTextAligned(Element.ALIGN_CENTER, watermark, 300, 300, 45);\n\t\t\tcontent.endText();\n\t\t\tstamper.close();\n\t\t\treader.close();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "464",
    "source": "soSearches",
    "language": "java",
    "query": "how to fetch the first column  in  excel using java",
    "snippets": [
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xlsx\");\n\t\t\tXSSFWorkbook wb = new XSSFWorkbook(fis);\n\t\t\tXSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tXSSFRow row = sheet.getRow(0);\n\t\t\tXSSFCell cell = row.getCell(0);\n\t\t\tString value = cell.getStringCellValue();\n\t\t\tSystem.out.println(value);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook workbook = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = workbook.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tString value = cell.getStringCellValue();\n\t\t\tSystem.out.println(value);\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException {\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xls\");\n\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\tHSSFRow row = sheet.getRow(0);\n\t\tHSSFCell cell = row.getCell(0);\n\t\tSystem.out.println(cell.getStringCellValue());\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Sankar\\\\Desktop\\\\test.xlsx\");\n\t\t\tXSSFWorkbook wb = new XSSFWorkbook(fis);\n\t\t\tXSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tXSSFRow row = sheet.getRow(0);\n\t\t\tXSSFCell cell = row.getCell(0);\n\t\t\tString value = cell.getStringCellValue();\n\t\t\tSystem.out.println(value);\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException{\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.xlsx\");\n\t\tXSSFWorkbook wb = new XSSFWorkbook(fis);\n\t\tXSSFSheet sheet = wb.getSheetAt(0);\n\t\tXSSFRow row = sheet.getRow(0);\n\t\tXSSFCell cell = row.getCell(0);\n\t\tSystem.out.println(cell.getStringCellValue());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Sai\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Public\\\\Desktop\\\\test.xlsx\");\n\t\t\tXSSFWorkbook wb = new XSSFWorkbook(fis);\n\t\t\tXSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tXSSFRow row = sheet.getRow(0);\n\t\t\tXSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "465",
    "source": "soSearches",
    "language": "java",
    "query": "how to split strings in array java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tString[] strArray=str.split(\" \");\n\t\tfor(String s:strArray){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString[] strArray = str.split(\" \");\n\t\tSystem.out.println(strArray[0]);\n\t\tSystem.out.println(strArray[1]);\n\t\tSystem.out.println(strArray[2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"hello world\";\n\t\tString[] strArray=str.split(\" \");\n\t\tfor(String s:strArray){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tString[] strArray=str.split(\" \");\n\t\tfor(int i=0;i<strArray.length;i++){\n\t\t\tSystem.out.println(strArray[i]);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "466",
    "source": "soSearches",
    "language": "java",
    "query": "how to read text file java spring",
    "snippets": [
        "\tstatic void main(String[] args) {\n\t\tFile file = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\ttry {\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid readFile(){\n\t\tFile file = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid readFile(){\n\t\tFile file = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tString fileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\";\n\t\tFile file = new File(fileName);\n\t\ttry {\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFile file = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile (line != null) {\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tFile file = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\ttry {\n\t\t\tScanner scanner = new Scanner(file);\n\t\t\twhile(scanner.hasNextLine()){\n\t\t\t\tString line = scanner.nextLine();\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tscanner.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid readFile(){\n\t\tFile file = new File(\"/home/sachin/Desktop/test.txt\");\n\t\tFileReader fr = new FileReader(file);\n\t\tBufferedReader br = new BufferedReader(fr);\n\t\tString line = br.readLine();\n\t\twhile(line != null){\n\t\t\tSystem.out.println(line);\n\t\t\tline = br.readLine();\n\t\t}\n\t\tbr.close();\n\t\tfr.close();\n\t}\n}\n",
        "\tvoid readFile(){\n\t\tFile file = new File(\"/home/siva/test.txt\");\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "467",
    "source": "soSearches",
    "language": "java",
    "query": "how to make exe project java with database mysql",
    "snippets": [
        "\tvoid main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "468",
    "source": "soSearches",
    "language": "java",
    "query": "how to write a cache file in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileOutputStream fos = new FileOutputStream(\"cache.txt\");\n\t\t\tObjectOutputStream oos = new ObjectOutputStream(fos);\n\t\t\toos.writeObject(new Integer(10));\n\t\t\toos.writeObject(new Integer(20));\n\t\t\toos.writeObject(new Integer(30));\n\t\t\toos.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileOutputStream fos = new FileOutputStream(\"cache.txt\");\n\t\t\tObjectOutputStream oos = new ObjectOutputStream(fos);\n\t\t\toos.writeObject(new Integer(10));\n\t\t\toos.writeObject(new String(\"Hello\"));\n\t\t\toos.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"cache.txt\");\n\t\t\tFileWriter fw = new FileWriter(file);\n\t\t\tBufferedWriter bw = new BufferedWriter(fw);\n\t\t\tbw.write(\"Hello World\");\n\t\t\tbw.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"cache.txt\");\n\t\t\tFileWriter fw = new FileWriter(file);\n\t\t\tBufferedWriter bw = new BufferedWriter(fw);\n\t\t\tbw.write(\"Hello World\");\n\t\t\tbw.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"/home/user/cache.txt\");\n\t\t\tFileWriter fw = new FileWriter(file);\n\t\t\tBufferedWriter bw = new BufferedWriter(fw);\n\t\t\tbw.write(\"Hello World\");\n\t\t\tbw.close();\n\t\t\tfw.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"/home/sachin/cache.txt\");\n\t\t\tFileWriter fw = new FileWriter(file);\n\t\t\tBufferedWriter bw = new BufferedWriter(fw);\n\t\t\tbw.write(\"Hello World\");\n\t\t\tbw.close();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"/home/sachin/cache.txt\");\n\t\t\tFileWriter fw = new FileWriter(file);\n\t\t\tBufferedWriter bw = new BufferedWriter(fw);\n\t\t\tbw.write(\"Hello World\");\n\t\t\tbw.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile f = new File(\"/tmp/cache.txt\");\n\t\t\tFileWriter fw = new FileWriter(f);\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "469",
    "source": "soSearches",
    "language": "java",
    "query": "how to compare between 2 charaters in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tchar c1='a';\n\t\tchar c2='b';\n\t\tif(c1==c2){\n\t\t\tSystem.out.println(\"c1 and c2 are equal\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"c1 and c2 are not equal\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar a = 'a';\n\t\tchar b = 'b';\n\t\tSystem.out.println(a==b);\n\t\tSystem.out.println(a!=b);\n\t\tSystem.out.println(a>b);\n\t\tSystem.out.println(a<b);\n\t\tSystem.out.println(a>=b);\n\t\tSystem.out.println(a<=b);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar c1 = 'a';\n\t\tchar c2 = 'b';\n\t\tSystem.out.println(c1 == c2);\n\t\tSystem.out.println(c1 != c2);\n\t\tSystem.out.println(c1 > c2);\n\t\tSystem.out.println(c1 < c2);\n\t\tSystem.out.println(c1 >= c2);\n\t\tSystem.out.println(c1 <= c2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar c1 = 'a';\n\t\tchar c2 = 'b';\n\t\tSystem.out.println(c1==c2);\n\t\tSystem.out.println(c1!=c2);\n\t\tSystem.out.println(c1>c2);\n\t\tSystem.out.println(c1<c2);\n\t\tSystem.out.println(c1>='a' && c1<='z');\n\t\tSystem.out.println(c1>='A' && c1<='Z');\n\t\tSystem.out.println(c1>='0' && c1<='9');\n\t\tSystem.out.println(c1>='a' && c1<='z');\n\t\tSystem.out.println(c1>='A' && c1<='Z');\n\t\tSystem.out.println(c1>='0' && c1<='9');\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar c1 = 'a';\n\t\tchar c2 = 'b';\n\t\tSystem.out.println(c1==c2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar a = 'a';\n\t\tchar b = 'b';\n\t\tSystem.out.println(a==b);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "470",
    "source": "soSearches",
    "language": "java",
    "query": "how to add a triangle in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=5;\n\t\tint b=6;\n\t\tint c=7;\n\t\tint d=a+b+c;\n\t\tSystem.out.println(d);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=Integer.parseInt(args[0]);\n\t\tint b=Integer.parseInt(args[1]);\n\t\tint c=Integer.parseInt(args[2]);\n\t\tint d=Integer.parseInt(args[3]);\n\t\tint e=Integer.parseInt(args[4]);\n\t\tint f=Integer.parseInt(args[5]);\n\t\tint g=Integer.parseInt(args[6]);\n\t\tint h=Integer.parseInt(args[7]);\n\t\tint i=Integer.parseInt(args[8]);\n\t\tint j=Integer.parseInt(args[9]);\n\t\tint k=Integer.parseInt(args[10]);\n\t\tint l=Integer.parseInt(args[11]);\n\t\tint m=Integer.parseInt(args[12]);\n\t\tint n=Integer.parseInt(args[13]);\n\t\tint o=Integer.parseInt(args[14]);\n\t\tint p=Integer.parseInt(args[15]);\n\t\tint q=Integer.parseInt(args[16]);\n\t\tint r=Integer.parseInt(args[17]);\n\t\tint s=Integer.parseInt(args[18]);\n\t\tint t=Integer.parseInt(args[19]);\n\t\tint u=Integer.parseInt(args[20]);\n\t\tint v=Integer.parseInt(args[21]);\n\t\tint w=Integer.parseInt(args[22]);\n\t\tint x=Integer.parseInt(args[23]);\n\t\tint y=Integer.parseInt(args[24]);\n\t\tint z=Integer.parseInt(args[25]);\n\t\tint aa=Integer.parseInt(args[26]);\n\t\tint bb=Integer.parseInt(args[27]);\n\t\tint cc=Integer.parseInt(args[28]);\n\t\tint dd=Integer.parseInt(args[29]);\n\t\tint ee=Integer.parseInt(args[30]);\n\t\tint ff=Integer.parseInt(args[31]);\n\t\tint gg=\n",
        "\tstatic void main(String[] args){\n\t\tint a=5;\n\t\tint b=6;\n\t\tint c=7;\n\t\tint d=8;\n\t\tint e=9;\n\t\tint f=10;\n\t\tint g=11;\n\t\tint h=12;\n\t\tint i=13;\n\t\tint j=14;\n\t\tint k=15;\n\t\tint l=16;\n\t\tint m=17;\n\t\tint n=18;\n\t\tint o=19;\n\t\tint p=20;\n\t\tint q=21;\n\t\tint r=22;\n\t\tint s=23;\n\t\tint t=24;\n\t\tint u=25;\n\t\tint v=26;\n\t\tint w=27;\n\t\tint x=28;\n\t\tint y=29;\n\t\tint z=30;\n\t\tint aa=31;\n\t\tint bb=32;\n\t\tint cc=33;\n\t\tint dd=34;\n\t\tint ee=35;\n\t\tint ff=36;\n\t\tint gg=37;\n\t\tint hh=38;\n\t\tint ii=39;\n\t\tint jj=40;\n\t\tint kk=41;\n\t\tint ll=42;\n\t\tint mm=43;\n\t\tint nn=44;\n\t\tint oo=45;\n\t\tint pp=46;\n\t\tint qq=47;\n\t\tint rr=48;\n\t\tint ss=49;\n\t\tint tt=50;\n\t\tint uu=51;\n\t\tint vv=52;\n\t\tint ww=53;\n\t\tint xx=54;\n\t\tint yy=55;\n\t\tint zz=56;\n\t\tint aaa=57;\n\t\tint bbb=58;\n\t\tint ccc=59;\n\t\tint ddd=60;\n\t\tint eee=61;\n\t\tint fff=62;\n",
        "\tstatic void main(String[] args){\n\t\tint a=5,b=6,c=7;\n\t\tint area=a*b*c/2;\n\t\tSystem.out.println(\"area of triangle is \"+area);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "471",
    "source": "soSearches",
    "language": "java",
    "query": "how to delete a line from java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str.substring(0,5));\n\t\tSystem.out.println(str.substring(6));\n\t}\n}\n",
        "\tvoid deleteLine(String fileName, int lineNumber) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new FileReader(fileName));\n\t\tString line = br.readLine();\n\t\tint cnt = 1;\n\t\twhile(line != null){\n\t\t\tif(cnt != lineNumber){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tline = br.readLine();\n\t\t\tcnt++;\n\t\t}\n\t\tbr.close();\n\t}\n}\n",
        "\tvoid deleteLine(){\n\t\tString str = \"Hello World\";\n\t\tString[] strArray = str.split(\" \");\n\t\tString newStr = \"\";\n\t\tfor(int i = 0; i < strArray.length; i++){\n\t\t\tif(i != strArray.length - 1){\n\t\t\t\tnewStr += strArray[i] + \" \";\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(newStr);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\", \"Paul\", \"George\", \"Ringo\"};\n\t\tSystem.out.println(\"Before delete:\");\n\t\tfor(String name: names){\n\t\t\tSystem.out.println(name);\n\t\t}\n\t\tSystem.out.println(\"After delete:\");\n\t\tnames[2] = null;\n\t\tfor(String name: names){\n\t\t\tSystem.out.println(name);\n\t\t}\n\t}\n}\n",
        "\tvoid deleteLine(){\n\t\tString str = \"Hello World\";\n\t\tString[] strArray = str.split(\" \");\n\t\tString str1 = strArray[0];\n\t\tString str2 = strArray[1];\n\t\tString str3 = strArray[2];\n\t\tString str4 = strArray[3];\n\t\tString str5 = strArray[4];\n\t\tString str6 = strArray[5];\n\t\tString str7 = strArray[6];\n\t\tString str8 = strArray[7];\n\t\tString str9 = strArray[8];\n\t\tString str10 = strArray[9];\n\t\tString str11 = strArray[10];\n\t\tString str12 = strArray[11];\n\t\tString str13 = strArray[12];\n\t\tString str14 = strArray[13];\n\t\tString str15 = strArray[14];\n\t\tString str16 = strArray[15];\n\t\tString str17 = strArray[16];\n\t\tString str18 = strArray[17];\n\t\tString str19 = strArray[18];\n\t\tString str20 = strArray[19];\n\t\tString str21 = strArray[20];\n\t\tString str22 = strArray[21];\n\t\tString str23 = strArray[22];\n\t\tString str24 = strArray[23];\n\t\tString str25 = strArray[24];\n\t\tString str26 = strArray[25];\n\t\tString str27 = strArray[26];\n\t\tString str28 = strArray[27];\n\t\tString str29 = strArray[28];\n\t\tString str30 = strArray[29];\n\t\tString str31 = strArray[30];\n\t\tString str32 = strArray[31];\n\t\tString str33 = strArray[32];\n\t\tString str34 = strArray[33];\n\t\tString str35 = strArray[34];\n\t\tString str36 = strArray[35];\n\t\tString str37 = strArray[36];\n\t\tString str38 = strArray[37];\n\t\tString str39 = strArray[38];\n",
        "\tvoid method(){\n\t\tString s = \"Hello World\";\n\t\ts = s.substring(0, s.length()-1);\n\t\tSystem.out.println(s);\n\t}\n}\n",
        "\tvoid method(){\n\t\tString s = \"Hello World\";\n\t\tSystem.out.println(s.substring(0,5));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\", \"Jane\", \"Joe\", \"Jack\", \"Jill\"};\n\t\tSystem.out.println(\"Before: \");\n\t\tfor(int i = 0; i < names.length; i++){\n\t\t\tSystem.out.println(names[i]);\n\t\t}\n\t\tnames[2] = \"\";\n\t\tSystem.out.println(\"After: \");\n\t\tfor(int i = 0; i < names.length; i++){\n\t\t\tSystem.out.println(names[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\", \"Jane\", \"Joe\", \"Jack\", \"Jill\"};\n\t\tSystem.out.println(\"Before deletion\");\n\t\tfor(String name : names){\n\t\t\tSystem.out.println(name);\n\t\t}\n\t\tSystem.out.println(\"After deletion\");\n\t\tnames[3] = null;\n\t\tfor(String name : names){\n\t\t\tSystem.out.println(name);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\", \"Jane\", \"Joe\", \"Jack\", \"Jill\"};\n\t\tSystem.out.println(\"Before delete\");\n\t\tfor(String name: names){\n\t\t\tSystem.out.println(name);\n\t\t}\n\t\tSystem.out.println(\"After delete\");\n\t\tnames[3] = null;\n\t\tfor(String name: names){\n\t\t\tSystem.out.println(name);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "472",
    "source": "soSearches",
    "language": "java",
    "query": "how to give scopes in java",
    "snippets": [
        "\tvoid method(){\n\t\tint x = 10;\n\t\t{\n\t\t\tint x = 20;\n\t\t\tSystem.out.println(x);\n\t\t}\n\t\tSystem.out.println(x);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tvoid method(){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tvoid method(){\n\t\tint i = 0;\n\t\t{\n\t\t\tint j = 0;\n\t\t\t{\n\t\t\t\tint k = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tint i = 0;\n\t\t{\n\t\t\tint i = 1;\n\t\t\tSystem.out.println(i);\n\t\t}\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tvoid method(){\n\t\tint i = 0;\n\t\t{\n\t\t\tint j = 0;\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "473",
    "source": "soSearches",
    "language": "java",
    "query": "how to write program in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid m1(){\n\t\tSystem.out.println(\"m1\");\n\t}\n\tpublic void m2(){\n\t\tSystem.out.println(\"m2\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "474",
    "source": "soSearches",
    "language": "java",
    "query": "how to capitalize the first letter of a word in a string and leave the rest small letter in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"hello world\";\n\t\tSystem.out.println(str.substring(0,1).toUpperCase()+str.substring(1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"hello world\";\n\t\tString str1 = str.substring(0,1).toUpperCase()+str.substring(1);\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"java\";\n\t\tSystem.out.println(str.substring(0,1).toUpperCase()+str.substring(1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"hello world\";\n\t\tString s1 = s.substring(0,1).toUpperCase()+s.substring(1);\n\t\tSystem.out.println(s1);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "475",
    "source": "soSearches",
    "language": "java",
    "query": "how to set tabs position in javafx",
    "snippets": [
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "476",
    "source": "soSearches",
    "language": "java",
    "query": "how to write java script code to ristrict  no digits",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number\");\n\t\tint n=sc.nextInt();\n\t\tif(n>=0 && n<=9){\n\t\t\tSystem.out.println(\"Valid\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number\");\n\t\tint n=sc.nextInt();\n\t\tint r=n%10;\n\t\tif(r==0){\n\t\t\tSystem.out.println(\"Number is divisible by 10\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Number is not divisible by 10\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number\");\n\t\tint n=sc.nextInt();\n\t\tint r=n%10;\n\t\tif(r==0){\n\t\t\tSystem.out.println(\"The number is divisible by 10\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"The number is not divisible by 10\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number\");\n\t\tint num = sc.nextInt();\n\t\tif(num>=0 && num<=9){\n\t\t\tSystem.out.println(\"Valid\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number\");\n\t\tint num = sc.nextInt();\n\t\tint temp = num;\n\t\tint sum = 0;\n\t\twhile(num>0){\n\t\t\tint rem = num%10;\n\t\t\tsum = sum + rem;\n\t\t\tnum = num/10;\n\t\t}\n\t\tif(sum%2==0){\n\t\t\tSystem.out.println(\"Even\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Odd\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number\");\n\t\tint n = sc.nextInt();\n\t\tif(n>=0 && n<=9){\n\t\t\tSystem.out.println(\"valid\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"invalid\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "477",
    "source": "soSearches",
    "language": "java",
    "query": "how to reduce one month from current date in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tCalendar cal = Calendar.getInstance();\n\t\tcal.add(Calendar.MONTH, -1);\n\t\tSystem.out.println(cal.getTime());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDate date = new Date();\n\t\tCalendar cal = Calendar.getInstance();\n\t\tcal.setTime(date);\n\t\tcal.add(Calendar.MONTH, -1);\n\t\tSystem.out.println(cal.getTime());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDate date = new Date();\n\t\tCalendar cal = Calendar.getInstance();\n\t\tcal.setTime(date);\n\t\tcal.add(Calendar.MONTH, -1);\n\t\tDate newDate = cal.getTime();\n\t\tSystem.out.println(newDate);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDate date = new Date();\n\t\tCalendar calendar = Calendar.getInstance();\n\t\tcalendar.setTime(date);\n\t\tcalendar.add(Calendar.MONTH, -1);\n\t\tSystem.out.println(calendar.getTime());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDate d1 = new Date();\n\t\tSystem.out.println(d1);\n\t\tCalendar c = Calendar.getInstance();\n\t\tc.setTime(d1);\n\t\tc.add(Calendar.MONTH, -1);\n\t\tDate d2 = c.getTime();\n\t\tSystem.out.println(d2);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "478",
    "source": "soSearches",
    "language": "java",
    "query": "how to multiple the timw string in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString time = \"12:00:00\";\n\t\tString[] timeArray = time.split(\":\");\n\t\tint hour = Integer.parseInt(timeArray[0]);\n\t\tint minute = Integer.parseInt(timeArray[1]);\n\t\tint second = Integer.parseInt(timeArray[2]);\n\t\tint totalSecond = hour*3600 + minute*60 + second;\n\t\tSystem.out.println(totalSecond);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString time = \"12:00:00\";\n\t\tString[] timeArray = time.split(\":\");\n\t\tint hour = Integer.parseInt(timeArray[0]);\n\t\tint minute = Integer.parseInt(timeArray[1]);\n\t\tint second = Integer.parseInt(timeArray[2]);\n\t\tint totalTime = hour*3600 + minute*60 + second;\n\t\tSystem.out.println(totalTime);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString time=\"12:00:00\";\n\t\tString time2=\"12:00:00\";\n\t\tString time3=\"12:00:00\";\n\t\tString time4=\"12:00:00\";\n\t\tString time5=\"12:00:00\";\n\t\tString time6=\"12:00:00\";\n\t\tString time7=\"12:00:00\";\n\t\tString time8=\"12:00:00\";\n\t\tString time9=\"12:00:00\";\n\t\tString time10=\"12:00:00\";\n\t\tString time11=\"12:00:00\";\n\t\tString time12=\"12:00:00\";\n\t\tString time13=\"12:00:00\";\n\t\tString time14=\"12:00:00\";\n\t\tString time15=\"12:00:00\";\n\t\tString time16=\"12:00:00\";\n\t\tString time17=\"12:00:00\";\n\t\tString time18=\"12:00:00\";\n\t\tString time19=\"12:00:00\";\n\t\tString time20=\"12:00:00\";\n\t\tString time21=\"12:00:00\";\n\t\tString time22=\"12:00:00\";\n\t\tString time23=\"12:00:00\";\n\t\tString time24=\"12:00:00\";\n\t\tString time25=\"12:00:00\";\n\t\tString time26=\"12:00:00\";\n\t\tString time27=\"12:00:00\";\n\t\tString time28=\"12:00:00\";\n\t\tString time29=\"12:00:00\";\n\t\tString time30=\"12:00:00\";\n\t\tString time31=\"12:00:00\";\n\t\tString time32=\"12:00:00\";\n\t\tString time33=\"12:00:00\";\n\t\tString time34=\"12:00:00\";\n\t\tString time35=\"12:00:00\";\n\t\tString time36=\"12:00:00\";\n\t\tString time37=\"12:00:00\";\n\t\tString time38=\"12:00\n",
        "\tstatic void main(String[] args){\n\t\tString time=\"12:00\";\n\t\tString time2=\"12:00\";\n\t\tString time3=\"12:00\";\n\t\tString time4=\"12:00\";\n\t\tString time5=\"12:00\";\n\t\tString time6=\"12:00\";\n\t\tString time7=\"12:00\";\n\t\tString time8=\"12:00\";\n\t\tString time9=\"12:00\";\n\t\tString time10=\"12:00\";\n\t\tString time11=\"12:00\";\n\t\tString time12=\"12:00\";\n\t\tString time13=\"12:00\";\n\t\tString time14=\"12:00\";\n\t\tString time15=\"12:00\";\n\t\tString time16=\"12:00\";\n\t\tString time17=\"12:00\";\n\t\tString time18=\"12:00\";\n\t\tString time19=\"12:00\";\n\t\tString time20=\"12:00\";\n\t\tString time21=\"12:00\";\n\t\tString time22=\"12:00\";\n\t\tString time23=\"12:00\";\n\t\tString time24=\"12:00\";\n\t\tString time25=\"12:00\";\n\t\tString time26=\"12:00\";\n\t\tString time27=\"12:00\";\n\t\tString time28=\"12:00\";\n\t\tString time29=\"12:00\";\n\t\tString time30=\"12:00\";\n\t\tString time31=\"12:00\";\n\t\tString time32=\"12:00\";\n\t\tString time33=\"12:00\";\n\t\tString time34=\"12:00\";\n\t\tString time35=\"12:00\";\n\t\tString time36=\"12:00\";\n\t\tString time37=\"12:00\";\n\t\tString time38=\"12:00\";\n\t\tString time39=\"12:00\";\n\t\tString time40=\"12:00\";\n\t\tString time41=\"12:00\";\n\t\tString time42=\"12:00\";\n\t\tString time43=\"12:00\";\n\t\tString time44=\"12:00\";\n\t\tString time45=\"\n"
    ],
    "results": 10
},{
    "id": "479",
    "source": "soSearches",
    "language": "java",
    "query": "how to set java_path on linux",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "480",
    "source": "soSearches",
    "language": "java",
    "query": "java how to use alphacomposite",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tAlphaComposite ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);\n\t\tGraphics2D g2d = (Graphics2D)g;\n\t\tg2d.setComposite(ac);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tAlphaComposite ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);\n\t\tGraphics2D g2d = (Graphics2D)g;\n\t\tg2d.setComposite(ac);\n\t\tg2d.drawImage(img, 0, 0, null);\n\t}\n}\n",
        "\tvoid method(){\n\t\tAlphaComposite ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);\n\t\tGraphics2D g2d = (Graphics2D)g;\n\t\tg2d.setComposite(ac);\n\t}\n}\n",
        "\tClazz(){\n\t\tAlphaComposite ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);\n\t\tGraphics2D g2d = (Graphics2D)g;\n\t\tg2d.setComposite(ac);\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic static void main(String[] args){\n\t\tAlphaComposite ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);\n\t\tGraphics2D g2d = (Graphics2D)g;\n\t\tg2d.setComposite(ac);\n\t\tg2d.drawImage(img, 0, 0, null);\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void method(){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "481",
    "source": "soSearches",
    "language": "java",
    "query": "how to write java script code",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid m1(){\n\t\tSystem.out.println(\"m1\");\n\t}\n\tpublic\n\tvoid m2(){\n\t\tSystem.out.println(\"m2\");\n\t}\n\tpublic\n\tvoid m3(){\n\t\tSystem.out.println(\"m3\");\n\t}\n}\n",
        "\tvoid method1(){\n\t\tSystem.out.println(\"method1\");\n\t}\n\tpublic\n\tvoid method2(){\n\t\tSystem.out.println(\"method2\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "482",
    "source": "soSearches",
    "language": "java",
    "query": "how to print tooltip of google  searchbox in java selenium",
    "snippets": [
        "\tstatic void main(String[] args) {\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tWebElement element = driver.findElement(By.name(\"q\"));\n\t\tString tooltip = element.getAttribute(\"title\");\n\t\tSystem.out.println(tooltip);\n\t\tdriver.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"https://www.google.com/\");\n\t\tWebElement element = driver.findElement(By.name(\"q\"));\n\t\tString tooltip = element.getAttribute(\"title\");\n\t\tSystem.out.println(tooltip);\n\t\tdriver.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"https://www.google.com/\");\n\t\tWebElement element = driver.findElement(By.name(\"q\"));\n\t\tString tooltip = element.getAttribute(\"title\");\n\t\tSystem.out.println(tooltip);\n\t\tdriver.quit();\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new FirefoxDriver();\n\t\tdriver.get(\"https://www.google.com/\");\n\t\tWebElement element=driver.findElement(By.name(\"q\"));\n\t\tString tooltip=element.getAttribute(\"title\");\n\t\tSystem.out.println(tooltip);\n\t\tdriver.close();\n\t}\n\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "483",
    "source": "soSearches",
    "language": "java",
    "query": "java how to print a string",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello World\";\n\t\tSystem.out.println(s);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "484",
    "source": "soSearches",
    "language": "java",
    "query": "how to package javafx project to jar",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "485",
    "source": "soSearches",
    "language": "java",
    "query": "how to swap elements is array in java",
    "snippets": [
        "\tvoid swap(int[] arr, int i, int j){\n\t\tint temp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5};\n\t\tint[] b = {6,7,8,9,10};\n\t\tint[] c = new int[5];\n\t\tfor(int i=0;i<5;i++){\n\t\t\tc[i] = a[i];\n\t\t\ta[i] = b[i];\n\t\t\tb[i] = c[i];\n\t\t}\n\t\tfor(int i=0;i<5;i++){\n\t\t\tSystem.out.println(a[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5};\n\t\tint[] b = {6,7,8,9,10};\n\t\tint[] c = new int[5];\n\t\tfor(int i=0;i<5;i++){\n\t\t\tc[i] = a[i];\n\t\t\ta[i] = b[i];\n\t\t\tb[i] = c[i];\n\t\t}\n\t\tfor(int i=0;i<5;i++){\n\t\t\tSystem.out.print(a[i]+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<5;i++){\n\t\t\tSystem.out.print(b[i]+\" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint temp = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tfor(int j = 0; j < arr.length; j++){\n\t\t\t\tif(arr[i] < arr[j]){\n\t\t\t\t\ttemp = arr[i];\n\t\t\t\t\tarr[i] = arr[j];\n\t\t\t\t\tarr[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.println(arr[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint temp = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tfor(int j = i+1; j < arr.length; j++){\n\t\t\t\tif(arr[i] > arr[j]){\n\t\t\t\t\ttemp = arr[i];\n\t\t\t\t\tarr[i] = arr[j];\n\t\t\t\t\tarr[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint temp = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tfor(int j = 0; j < arr.length; j++){\n\t\t\t\tif(arr[i] < arr[j]){\n\t\t\t\t\ttemp = arr[i];\n\t\t\t\t\tarr[i] = arr[j];\n\t\t\t\t\tarr[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tint temp = 0;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tfor(int j=i+1;j<arr.length;j++){\n\t\t\t\tif(arr[i]>arr[j]){\n\t\t\t\t\ttemp = arr[i];\n\t\t\t\t\tarr[i] = arr[j];\n\t\t\t\t\tarr[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "486",
    "source": "soSearches",
    "language": "java",
    "query": "how to insert  values in a table using java programs",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tString sql=\"insert into student values(1,'abc','xyz',1234)\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t\tSystem.out.println(\"inserted\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tString sql=\"insert into student values(1,'abc','xyz',10)\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t\tSystem.out.println(\"inserted\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tString sql=\"insert into student values(1,'sachin',20)\";\n\t\t\tst.executeUpdate(sql);\n\t\t\tSystem.out.println(\"inserted\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tString sql=\"insert into clazz values(1,'java','java',10)\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t\tSystem.out.println(\"inserted\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tString sql=\"insert into student values(1,'sai','kumar','\n",
        "\tstatic void main(String[] args){\n\t\tConnection con=null;\n\t\tStatement stmt=null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tstmt=con.createStatement();\n\t\t\tString sql=\"insert into student values(1,'sachin','mumbai','maharashtra')\";\n\t\t\tint i=stmt.executeUpdate(sql);\n\t\t\tif(i>0){\n\t\t\t\tSystem.out.println(\"record inserted\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"record not inserted\");\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t\tfinally{\n\t\t\ttry{\n\t\t\t\tcon.close();\n\t\t\t}\n\t\t\tcatch(Exception e){\n\t\t\t\tSystem.out.println(e);\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tConnection con=null;\n\t\tStatement st=null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tst=con.createStatement();\n\t\t\tint i=st.executeUpdate(\"insert into student values(1,'suresh',20)\");\n\t\t\tSystem.out.println(i+\" rows inserted\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfinally{\n\t\t\ttry{\n\t\t\t\tcon.close();\n\t\t\t}\n\t\t\tcatch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid insert(int id,String name,String city){\n\t\tSystem.out.println(\"inserting values\");\n\t\tSystem.out.println(\"id=\"+id);\n\t\tSystem.out.println(\"name=\"+name);\n\t\tSystem.out.println(\"city=\"+city);\n\t}\n}\n",
        "\tvoid insert(String name,String email,String password){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tString query=\"insert into clazz values('\"+name+\"','\"+email+\"','\"+password+\"')\";\n\t\t\tst.executeUpdate(query);\n\t\t\tSystem.out.println(\"inserted\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid insert(int id,String name,String city){\n\t\ttry{\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tString query=\"insert into clazz values(\"+id+\",'\"+name+\"','\"+city+\"')\";\n\t\t\tst.executeUpdate(query);\n\t\t\tSystem.out.println(\"inserted\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "487",
    "source": "soSearches",
    "language": "java",
    "query": "how to use buffer queue in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tBufferQueue<String> queue = new BufferQueue<String>();\n\t\tqueue.add(\"a\");\n\t\tqueue.add(\"b\");\n\t\tqueue.add(\"c\");\n\t\tqueue.add(\"d\");\n\t\tqueue.add(\"e\");\n\t\tqueue.add(\"f\");\n\t\tqueue.add(\"g\");\n\t\tqueue.add(\"h\");\n\t\tqueue.add(\"i\");\n\t\tqueue.add(\"j\");\n\t\tqueue.add(\"k\");\n\t\tqueue.add(\"l\");\n\t\tqueue.add(\"m\");\n\t\tqueue.add(\"n\");\n\t\tqueue.add(\"o\");\n\t\tqueue.add(\"p\");\n\t\tqueue.add(\"q\");\n\t\tqueue.add(\"r\");\n\t\tqueue.add(\"s\");\n\t\tqueue.add(\"t\");\n\t\tqueue.add(\"u\");\n\t\tqueue.add(\"v\");\n\t\tqueue.add(\"w\");\n\t\tqueue.add(\"x\");\n\t\tqueue.add(\"y\");\n\t\tqueue.add(\"z\");\n\t\tqueue.add(\"A\");\n\t\tqueue.add(\"B\");\n\t\tqueue.add(\"C\");\n\t\tqueue.add(\"D\");\n\t\tqueue.add(\"E\");\n\t\tqueue.add(\"F\");\n\t\tqueue.add(\"G\");\n\t\tqueue.add(\"H\");\n\t\tqueue.add(\"I\");\n\t\tqueue.add(\"J\");\n\t\tqueue.add(\"K\");\n\t\tqueue.add(\"L\");\n\t\tqueue.add(\"M\");\n\t\tqueue.add(\"N\");\n\t\tqueue.add(\"O\");\n\t\tqueue.add(\"P\");\n\t\tqueue.add(\"Q\");\n\t\tqueue.add(\"R\");\n\t\tqueue.add(\"S\");\n\t\tqueue.add(\"T\");\n\t\tqueue.add(\"U\");\n\t\tqueue.add(\"V\");\n\t\tqueue.add(\"W\");\n\t\tqueue.add(\"X\");\n\t\tqueue.add(\"Y\");\n\t\tqueue.add(\"Z\");\n\t\tqueue.\n",
        "\tstatic void main(String[] args){\n\t\tBufferQueue<String> queue = new BufferQueue<String>();\n\t\tqueue.put(\"a\");\n\t\tqueue.put(\"b\");\n\t\tqueue.put(\"c\");\n\t\tqueue.put(\"d\");\n\t\tqueue.put(\"e\");\n\t\tqueue.put(\"f\");\n\t\tqueue.put(\"g\");\n\t\tqueue.put(\"h\");\n\t\tqueue.put(\"i\");\n\t\tqueue.put(\"j\");\n\t\tqueue.put(\"k\");\n\t\tqueue.put(\"l\");\n\t\tqueue.put(\"m\");\n\t\tqueue.put(\"n\");\n\t\tqueue.put(\"o\");\n\t\tqueue.put(\"p\");\n\t\tqueue.put(\"q\");\n\t\tqueue.put(\"r\");\n\t\tqueue.put(\"s\");\n\t\tqueue.put(\"t\");\n\t\tqueue.put(\"u\");\n\t\tqueue.put(\"v\");\n\t\tqueue.put(\"w\");\n\t\tqueue.put(\"x\");\n\t\tqueue.put(\"y\");\n\t\tqueue.put(\"z\");\n\t\tqueue.put(\"A\");\n\t\tqueue.put(\"B\");\n\t\tqueue.put(\"C\");\n\t\tqueue.put(\"D\");\n\t\tqueue.put(\"E\");\n\t\tqueue.put(\"F\");\n\t\tqueue.put(\"G\");\n\t\tqueue.put(\"H\");\n\t\tqueue.put(\"I\");\n\t\tqueue.put(\"J\");\n\t\tqueue.put(\"K\");\n\t\tqueue.put(\"L\");\n\t\tqueue.put(\"M\");\n\t\tqueue.put(\"N\");\n\t\tqueue.put(\"O\");\n\t\tqueue.put(\"P\");\n\t\tqueue.put(\"Q\");\n\t\tqueue.put(\"R\");\n\t\tqueue.put(\"S\");\n\t\tqueue.put(\"T\");\n\t\tqueue.put(\"U\");\n\t\tqueue.put(\"V\");\n\t\tqueue.put(\"W\");\n\t\tqueue.put(\"X\");\n\t\tqueue.put(\"Y\");\n\t\tqueue.put(\"Z\");\n\t\tqueue.\n",
        "\tstatic void main(String[] args){\n\t\tBufferQueue<String> queue = new BufferQueue<String>();\n\t\tqueue.add(\"hello\");\n\t\tqueue.add(\"world\");\n\t\tqueue.add(\"java\");\n\t\tSystem.out.println(queue.remove());\n\t\tSystem.out.println(queue.remove());\n\t\tSystem.out.println(queue.remove());\n\t}\n}\n",
        "\tvoid method(){\n\t\tBufferQueue<String> queue = new BufferQueue<String>();\n\t\tqueue.add(\"a\");\n\t\tqueue.add(\"b\");\n\t\tqueue.add(\"c\");\n\t\tqueue.add(\"d\");\n\t\tqueue.add(\"e\");\n\t\tqueue.add(\"f\");\n\t\tqueue.add(\"g\");\n\t\tqueue.add(\"h\");\n\t\tqueue.add(\"i\");\n\t\tqueue.add(\"j\");\n\t\tqueue.add(\"k\");\n\t\tqueue.add(\"l\");\n\t\tqueue.add(\"m\");\n\t\tqueue.add(\"n\");\n\t\tqueue.add(\"o\");\n\t\tqueue.add(\"p\");\n\t\tqueue.add(\"q\");\n\t\tqueue.add(\"r\");\n\t\tqueue.add(\"s\");\n\t\tqueue.add(\"t\");\n\t\tqueue.add(\"u\");\n\t\tqueue.add(\"v\");\n\t\tqueue.add(\"w\");\n\t\tqueue.add(\"x\");\n\t\tqueue.add(\"y\");\n\t\tqueue.add(\"z\");\n\t\tqueue.add(\"A\");\n\t\tqueue.add(\"B\");\n\t\tqueue.add(\"C\");\n\t\tqueue.add(\"D\");\n\t\tqueue.add(\"E\");\n\t\tqueue.add(\"F\");\n\t\tqueue.add(\"G\");\n\t\tqueue.add(\"H\");\n\t\tqueue.add(\"I\");\n\t\tqueue.add(\"J\");\n\t\tqueue.add(\"K\");\n\t\tqueue.add(\"L\");\n\t\tqueue.add(\"M\");\n\t\tqueue.add(\"N\");\n\t\tqueue.add(\"O\");\n\t\tqueue.add(\"P\");\n\t\tqueue.add(\"Q\");\n\t\tqueue.add(\"R\");\n\t\tqueue.add(\"S\");\n\t\tqueue.add(\"T\");\n\t\tqueue.add(\"U\");\n\t\tqueue.add(\"V\");\n\t\tqueue.add(\"W\");\n\t\tqueue.add(\"X\");\n\t\tqueue.add(\"Y\");\n\t\tqueue.add(\"Z\");\n\t\tqueue.add(\"0\");\n",
        "\tstatic void main(String[] args){\n\t\tBufferQueue<String> bq = new BufferQueue<String>();\n\t\tbq.add(\"a\");\n\t\tbq.add(\"b\");\n\t\tbq.add(\"c\");\n\t\tbq.add(\"d\");\n\t\tbq.add(\"e\");\n\t\tbq.add(\"f\");\n\t\tbq.add(\"g\");\n\t\tbq.add(\"h\");\n\t\tbq.add(\"i\");\n\t\tbq.add(\"j\");\n\t\tbq.add(\"k\");\n\t\tbq.add(\"l\");\n\t\tbq.add(\"m\");\n\t\tbq.add(\"n\");\n\t\tbq.add(\"o\");\n\t\tbq.add(\"p\");\n\t\tbq.add(\"q\");\n\t\tbq.add(\"r\");\n\t\tbq.add(\"s\");\n\t\tbq.add(\"t\");\n\t\tbq.add(\"u\");\n\t\tbq.add(\"v\");\n\t\tbq.add(\"w\");\n\t\tbq.add(\"x\");\n\t\tbq.add(\"y\");\n\t\tbq.add(\"z\");\n\t\tbq.add(\"A\");\n\t\tbq.add(\"B\");\n\t\tbq.add(\"C\");\n\t\tbq.add(\"D\");\n\t\tbq.add(\"E\");\n\t\tbq.add(\"F\");\n\t\tbq.add(\"G\");\n\t\tbq.add(\"H\");\n\t\tbq.add(\"I\");\n\t\tbq.add(\"J\");\n\t\tbq.add(\"K\");\n\t\tbq.add(\"L\");\n\t\tbq.add(\"M\");\n\t\tbq.add(\"N\");\n\t\tbq.add(\"O\");\n\t\tbq.add(\"P\");\n\t\tbq.add(\"Q\");\n\t\tbq.add(\"R\");\n\t\tbq.add(\"S\");\n\t\tbq.add(\"T\");\n\t\tbq.add(\"U\");\n",
        "\tvoid method(){\n\t\tByteBuffer buffer = ByteBuffer.allocate(1024);\n\t\tbuffer.putInt(1);\n\t\tbuffer.putInt(2);\n\t\tbuffer.putInt(3);\n\t\tbuffer.flip();\n\t\tint a = buffer.getInt();\n\t\tint b = buffer.getInt();\n\t\tint c = buffer.getInt();\n\t\tSystem.out.println(a+\",\"+b+\",\"+c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferQueue<String> bq = new BufferQueue<String>();\n\t\tbq.enqueue(\"hello\");\n\t\tbq.enqueue(\"world\");\n\t\tbq.enqueue(\"java\");\n\t\tSystem.out.println(bq.dequeue());\n\t\tSystem.out.println(bq.dequeue());\n\t\tSystem.out.println(bq.dequeue());\n\t}\n}\n",
        "\tvoid method(){\n\t\tByteBuffer bb = ByteBuffer.allocate(1024);\n\t\tbb.put(\"hello\".getBytes());\n\t\tbb.flip();\n\t\twhile(bb.hasRemaining()){\n\t\t\tSystem.out.println(bb.get());\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferQueue<String> queue = new BufferQueue<String>(3);\n\t\tqueue.put(\"a\");\n\t\tqueue.put(\"b\");\n\t\tqueue.put(\"c\");\n\t\tqueue.put(\"d\");\n\t\tqueue.put(\"e\");\n\t\tqueue.put(\"f\");\n\t\tqueue.put(\"g\");\n\t\tqueue.put(\"h\");\n\t\tqueue.put(\"i\");\n\t\tqueue.put(\"j\");\n\t\tqueue.put(\"k\");\n\t\tqueue.put(\"l\");\n\t\tqueue.put(\"m\");\n\t\tqueue.put(\"n\");\n\t\tqueue.put(\"o\");\n\t\tqueue.put(\"p\");\n\t\tqueue.put(\"q\");\n\t\tqueue.put(\"r\");\n\t\tqueue.put(\"s\");\n\t\tqueue.put(\"t\");\n\t\tqueue.put(\"u\");\n\t\tqueue.put(\"v\");\n\t\tqueue.put(\"w\");\n\t\tqueue.put(\"x\");\n\t\tqueue.put(\"y\");\n\t\tqueue.put(\"z\");\n\t\tqueue.put(\"A\");\n\t\tqueue.put(\"B\");\n\t\tqueue.put(\"C\");\n\t\tqueue.put(\"D\");\n\t\tqueue.put(\"E\");\n\t\tqueue.put(\"F\");\n\t\tqueue.put(\"G\");\n\t\tqueue.put(\"H\");\n\t\tqueue.put(\"I\");\n\t\tqueue.put(\"J\");\n\t\tqueue.put(\"K\");\n\t\tqueue.put(\"L\");\n\t\tqueue.put(\"M\");\n\t\tqueue.put(\"N\");\n\t\tqueue.put(\"O\");\n\t\tqueue.put(\"P\");\n\t\tqueue.put(\"Q\");\n\t\tqueue.put(\"R\");\n\t\tqueue.put(\"S\");\n\t\tqueue.put(\"T\");\n\t\tqueue.put(\"U\");\n\t\tqueue.put(\"V\");\n\t\tqueue.put(\"W\");\n\t\tqueue.put(\"X\");\n\t\tqueue.put(\"Y\");\n\t\tqueue.put(\"Z\");\n\t\tqueue\n",
        "\tstatic void main(String[] args){\n\t\tBufferQueue<Integer> bq = new BufferQueue<Integer>(10);\n\t\tbq.put(1);\n\t\tbq.put(2);\n\t\tbq.put(3);\n\t\tbq.put(4);\n\t\tbq.put(5);\n\t\tbq.put(6);\n\t\tbq.put(7);\n\t\tbq.put(8);\n\t\tbq.put(9);\n\t\tbq.put(10);\n\t\tbq.put(11);\n\t\tbq.put(12);\n\t\tbq.put(13);\n\t\tbq.put(14);\n\t\tbq.put(15);\n\t\tbq.put(16);\n\t\tbq.put(17);\n\t\tbq.put(18);\n\t\tbq.put(19);\n\t\tbq.put(20);\n\t\tbq.put(21);\n\t\tbq.put(22);\n\t\tbq.put(23);\n\t\tbq.put(24);\n\t\tbq.put(25);\n\t\tbq.put(26);\n\t\tbq.put(27);\n\t\tbq.put(28);\n\t\tbq.put(29);\n\t\tbq.put(30);\n\t\tbq.put(31);\n\t\tbq.put(32);\n\t\tbq.put(33);\n\t\tbq.put(34);\n\t\tbq.put(35);\n\t\tbq.put(36);\n\t\tbq.put(37);\n\t\tbq.put(38);\n\t\tbq.put(39);\n\t\tbq.put(40);\n\t\tbq.put(41);\n\t\tbq.put(42);\n\t\tbq.put(43);\n\t\tbq.put(44);\n\t\tbq.put(45);\n\t\tbq.put(46);\n\t\tbq.put(47);\n"
    ],
    "results": 10
},{
    "id": "488",
    "source": "soSearches",
    "language": "java",
    "query": "how to saving in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString name = \"John\";\n\t\tint age = 30;\n\t\tdouble height = 1.8;\n\t\tboolean isMarried = false;\n\t\t\n\t\tSystem.out.println(\"Name: \" + name);\n\t\tSystem.out.println(\"Age: \" + age);\n\t\tSystem.out.println(\"Height: \" + height);\n\t\tSystem.out.println(\"Married: \" + isMarried);\n\t}\n}\n",
        "\tvoid save(){\n\t\tSystem.out.println(\"saving in java\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"John\";\n\t\tString name2 = \"John\";\n\t\tString name3 = new String(\"John\");\n\t\tString name4 = new String(\"John\");\n\t\tSystem.out.println(name == name2);\n\t\tSystem.out.println(name == name3);\n\t\tSystem.out.println(name == name4);\n\t\tSystem.out.println(name.equals(name2));\n\t\tSystem.out.println(name.equals(name3));\n\t\tSystem.out.println(name.equals(name4));\n\t\tSystem.out.println(name.equals(name));\n\t\tSystem.out.println(name.equals(name2));\n\t\tSystem.out.println(name.equals(name3));\n\t\tSystem.out.println(name.equals(name4));\n\t\tSystem.out.println(name.equals(name));\n\t\tSystem.out.println(name.equals(name2));\n\t\tSystem.out.println(name.equals(name3));\n\t\tSystem.out.println(name.equals(name4));\n\t\tSystem.out.println(name.equals(name));\n\t\tSystem.out.println(name.equals(name2));\n\t\tSystem.out.println(name.equals(name3));\n\t\tSystem.out.println(name.equals(name4));\n\t\tSystem.out.println(name.equals(name));\n\t\tSystem.out.println(name.equals(name2));\n\t\tSystem.out.println(name.equals(name3));\n\t\tSystem.out.println(name.equals(name4));\n\t\tSystem.out.println(name.equals(name));\n\t\tSystem.out.println(name.equals(name2));\n\t\tSystem.out.println(name.equals(name3));\n\t\tSystem.out.println(name.equals(name4));\n\t\tSystem.out.println(name.equals(name));\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"John\";\n\t\tString surname = \"Doe\";\n\t\tString fullName = name + \" \" + surname;\n\t\tSystem.out.println(fullName);\n\t}\n}\n",
        "\tvoid save(){\n\t\tSystem.out.println(\"save in java\");\n\t}\n}\n",
        "\tvoid save(){\n\t\tSystem.out.println(\"saving\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "489",
    "source": "soSearches",
    "language": "java",
    "query": "how to add text in textarea in java",
    "snippets": [
        "\tvoid addText(String text){\n\t\tSystem.out.println(text);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr+=\" How are you\";\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr=str+\" How are you\";\n\t\tSystem.out.println(str);\n\t\tstr=str+\" I am fine\";\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr=str+\" How are you\";\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str);\n\t\tstr=str+\" How are you?\";\n\t\tSystem.out.println(str);\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "490",
    "source": "soSearches",
    "language": "java",
    "query": "how to get multiple input in same line in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirm = sc.next();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirmPassword = sc.next();\n\t\tif(password.equals(confirmPassword)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirmPassword = sc.next();\n\t\tSystem.out.println(\"Enter your date of birth\");\n\t\tString dateOfBirth = sc.next();\n\t\tSystem.out.println(\"Enter your\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirm = sc.next();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password and confirm password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of elements\");\n\t\tint n=sc.nextInt();\n\t\tint a[]=new int[n];\n\t\tSystem.out.println(\"Enter the elements\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\ta[i]=sc.nextInt();\n\t\t}\n\t\tSystem.out.println(\"Enter the element to be searched\");\n\t\tint x=sc.nextInt();\n\t\tint flag=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(a[i]==x){\n\t\t\t\tSystem.out.println(\"Element found at index \"+i);\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==0){\n\t\t\tSystem.out.println(\"Element not found\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of elements\");\n\t\tint n=sc.nextInt();\n\t\tint[] a=new int[n];\n\t\tSystem.out.println(\"Enter the elements\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\ta[i]=sc.nextInt();\n\t\t}\n\t\tSystem.out.println(\"Enter the element to be searched\");\n\t\tint x=sc.nextInt();\n\t\tint flag=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(a[i]==x){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1){\n\t\t\tSystem.out.println(\"Element found\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Element not found\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of elements\");\n\t\tint n=sc.nextInt();\n\t\tint[] arr=new int[n];\n\t\tSystem.out.println(\"Enter the elements\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\tarr[i]=sc.nextInt();\n\t\t}\n\t\tSystem.out.println(\"Enter the element to be searched\");\n\t\tint ele=sc.nextInt();\n\t\tint flag=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(arr[i]==ele){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1){\n\t\t\tSystem.out.println(\"Element found\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Element not found\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the name of the student\");\n\t\tString name=sc.nextLine();\n\t\tSystem.out.println(\"Enter the roll no of the student\");\n\t\tint rollno=sc.nextInt();\n\t\tSystem.out.println(\"Enter the marks of the student\");\n\t\tint marks=sc.nextInt();\n\t\tSystem.out.println(\"Enter the percentage of the student\");\n\t\tdouble per=sc.nextDouble();\n\t\tSystem.out.println(\"Enter the grade of the student\");\n\t\tchar grade=sc.next().charAt(0);\n\t\tSystem.out.println(\"Enter the age of the student\");\n\t\tint age=sc.nextInt();\n\t\tSystem.out.println(\"Enter the address of the student\");\n\t\tString address=sc.nextLine();\n\t\tSystem.out.println(\"Enter the phone no of the student\");\n\t\tlong phone=sc.nextLong();\n\t\tSystem.out.println(\"Enter the email of the student\");\n\t\tString email=sc.next();\n\t\tSystem.out.println(\"Enter the date of the student\");\n\t\tString date=sc.next();\n\t\tSystem.out.println(\"Enter the time of the student\");\n\t\tString time=sc.next();\n\t\tSystem.out.println(\"Enter the salary of the student\");\n\t\tdouble salary=sc.nextDouble();\n\t\tSystem.out.println(\"Enter the department of the student\");\n\t\tString dept=sc.next();\n\t\tSystem.out.println(\"Enter the course of the student\");\n\t\tString course=sc.next();\n\t\tSystem.out.println(\"Enter the branch of the student\");\n\t\tString branch=sc.next();\n\t\tSystem.out.println(\"Enter the year of the student\");\n\t\tint year=sc.nextInt();\n\t\tSystem.out.println(\"Enter the semester of the student\");\n\t\tint sem=sc.nextInt();\n\t\tSystem.out.println(\"Enter the section of the\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the name of the student\");\n\t\tString name=sc.nextLine();\n\t\tSystem.out.println(\"Enter the roll number of the student\");\n\t\tint roll=sc.nextInt();\n\t\tSystem.out.println(\"Enter the marks of the student\");\n\t\tint marks=sc.nextInt();\n\t\tSystem.out.println(\"Enter the age of the student\");\n\t\tint age=sc.nextInt();\n\t\tSystem.out.println(\"Enter the address of the student\");\n\t\tString address=sc.nextLine();\n\t\tSystem.out.println(\"Enter the phone number of the student\");\n\t\tlong phone=sc.nextLong();\n\t\tSystem.out.println(\"Enter the email id of the student\");\n\t\tString email=sc.next();\n\t\tSystem.out.println(\"Enter the date of birth of the student\");\n\t\tString dob=sc.next();\n\t\tSystem.out.println(\"Enter the blood group of the student\");\n\t\tString bg=sc.next();\n\t\tSystem.out.println(\"Enter the course of the student\");\n\t\tString course=sc.next();\n\t\tSystem.out.println(\"Enter the branch of the student\");\n\t\tString branch=sc.next();\n\t\tSystem.out.println(\"Enter the semester of the student\");\n\t\tint semester=sc.nextInt();\n\t\tSystem.out.println(\"Enter the year of the student\");\n\t\tint year=sc.nextInt();\n\t\tSystem.out.println(\"Enter the father's name of the student\");\n\t\tString father=sc.next();\n\t\tSystem.out.println(\"Enter the mother's name of the student\");\n\t\tString mother=sc.next();\n\t\tSystem.out.println(\"Enter the father's phone number of the student\");\n\t\tlong fphone=sc.nextLong();\n\t\tSystem.out.println(\"Enter the mother's phone number of the student\");\n\t\tlong mphone=sc.nextLong();\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"enter the name\");\n\t\tString name=sc.nextLine();\n\t\tSystem.out.println(\"enter the age\");\n\t\tint age=sc.nextInt();\n\t\tSystem.out.println(\"enter the address\");\n\t\tString address=sc.nextLine();\n\t\tSystem.out.println(\"enter the phone number\");\n\t\tlong phone=sc.nextLong();\n\t\tSystem.out.println(\"enter the email\");\n\t\tString email=sc.next();\n\t\tSystem.out.println(\"enter the password\");\n\t\tString password=sc.next();\n\t\tSystem.out.println(\"enter the confirm password\");\n\t\tString confirm=sc.next();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"your registration is successful\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"password does not match\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "491",
    "source": "soSearches",
    "language": "java",
    "query": "how to use the scanner in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your height: \");\n\t\tdouble height = input.nextDouble();\n\t\tSystem.out.println(\"Enter your weight: \");\n\t\tdouble weight = input.nextDouble();\n\t\tSystem.out.println(\"Enter your favorite food: \");\n\t\tString food = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite color: \");\n\t\tString color = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite animal: \");\n\t\tString animal = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite sport: \");\n\t\tString sport = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite movie: \");\n\t\tString movie = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite book: \");\n\t\tString book = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite food: \");\n\t\tString food2 = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite color: \");\n\t\tString color2 = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite animal: \");\n\t\tString animal2 = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite sport: \");\n\t\tString sport2 = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite movie: \");\n\t\tString movie2 = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite book: \");\n\t\tString book2 = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite food: \");\n\t\tString food3 = input.nextLine();\n\t\tSystem.out.println(\"Enter your favorite\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your height: \");\n\t\tdouble height = input.nextDouble();\n\t\tSystem.out.println(\"Enter your weight: \");\n\t\tdouble weight = input.nextDouble();\n\t\tSystem.out.println(\"Enter your eye color: \");\n\t\tString eyeColor = input.next();\n\t\tSystem.out.println(\"Enter your hair color: \");\n\t\tString hairColor = input.next();\n\t\tSystem.out.println(\"Enter your national\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your height: \");\n\t\tdouble height = input.nextDouble();\n\t\tSystem.out.println(\"Enter your weight: \");\n\t\tdouble weight = input.nextDouble();\n\t\tSystem.out.println(\"Enter your eye color: \");\n\t\tString eyeColor = input.next();\n\t\tSystem.out.println(\"Enter your hair color: \");\n\t\tString hairColor = input.next();\n\t\tSystem.out.println(\"Enter your favorite food: \");\n\t\tString food = input.next();\n\t\tSystem.out.println(\"Enter your favorite color: \");\n\t\tString color = input.next();\n\t\tSystem.out.println(\"Enter your favorite animal: \");\n\t\tString animal = input.next();\n\t\tSystem.out.println(\"Enter your favorite sport: \");\n\t\tString sport = input.next();\n\t\tSystem.out.println(\"Enter your favorite movie: \");\n\t\tString movie = input.next();\n\t\tSystem.out.println(\"Enter your favorite book: \");\n\t\tString book = input.next();\n\t\tSystem.out.println(\"Enter your favorite song: \");\n\t\tString song = input.next();\n\t\tSystem.out.println(\"Enter your favorite food: \");\n\t\tString food2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite color: \");\n\t\tString color2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite animal: \");\n\t\tString animal2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite sport: \");\n\t\tString sport2 = input.next();\n\t\tSystem.out.println(\"Enter your favorite\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter a number: \");\n\t\tint num = input.nextInt();\n\t\tSystem.out.println(\"You entered: \" + num);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "492",
    "source": "soSearches",
    "language": "java",
    "query": "how to get the first 3 character from a string in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str.substring(0,3));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "493",
    "source": "soSearches",
    "language": "java",
    "query": "how to handle concurrentmodification exception in java",
    "snippets": [
        "\tvoid method(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"==============================\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"==============================\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"==============================\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"==============================\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"==============================\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"==============================\");\n\t\tfor(String s:list){\n",
        "\tvoid method(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"---------------------\");\n\t\tfor(String s:list){\n\t\t\tif(s.equals(\"c\")){\n\t\t\t\tlist.remove(s);\n\t\t\t}\n\t\t}\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"a\");\n",
        "\tvoid m1(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"==========================\");\n\t\tfor(String s:list){\n\t\t\tif(s.equals(\"e\")){\n\t\t\t\tlist.remove(s);\n\t\t\t}\n\t\t}\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tvoid m1(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tlist.remove(\"a\");\n\t\tlist.remove(\"b\");\n\t\tlist.remove(\"c\");\n\t\tlist.remove(\"d\");\n\t\tlist.remove(\"e\");\n\t\tlist.remove(\"f\");\n\t\tlist.remove(\"g\");\n\t\tlist.remove(\"h\");\n\t\tlist.remove(\"i\");\n\t\tlist.remove(\"j\");\n\t\tlist.remove(\"k\");\n\t\tlist.remove(\"l\");\n\t\tlist.remove(\"m\");\n\t\tlist.remove(\"n\");\n\t\tlist.remove(\"o\");\n\t\tlist.remove(\"p\");\n\t\tlist.remove(\"q\");\n\t\tlist.remove(\"r\");\n\t\tlist.remove(\"s\");\n\t\tlist.remove(\"t\");\n\t\tlist.remove(\"u\");\n\t\tlist.remove(\"v\");\n\t\tlist.remove(\"w\");\n\t\tlist.remove(\"x\");\n",
        "\tvoid m1(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tSystem.out.println(\"----------------------------------------------------\");\n\t\tfor(String s:list){\n\t\t\tlist.remove(s);\n\t\t}\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tlist.remove(\"a\");\n\t\tlist.remove(\"b\");\n\t\tlist.remove(\"c\");\n\t\tlist.remove(\"d\");\n\t\tlist.remove(\"e\");\n\t\tlist.remove(\"f\");\n\t\tlist.remove(\"g\");\n\t\tlist.remove(\"h\");\n\t\tlist.remove(\"i\");\n\t\tlist.remove(\"j\");\n\t\tlist.remove(\"k\");\n\t\tlist.remove(\"l\");\n\t\tlist.remove(\"m\");\n\t\tlist.remove(\"n\");\n\t\tlist.remove(\"o\");\n\t\tlist.remove(\"p\");\n\t\tlist.remove(\"q\");\n\t\tlist.remove(\"r\");\n\t\tlist.remove(\"s\");\n\t\tlist.remove(\"t\");\n\t\tlist.remove(\"u\");\n\t\tlist.remove(\"v\");\n\t\tlist.remove(\"w\");\n\t\tlist.remove(\"x\");\n",
        "\tvoid m1(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tvoid m1(){\n\t\tList<String> l=new ArrayList<String>();\n\t\tl.add(\"a\");\n\t\tl.add(\"b\");\n\t\tl.add(\"c\");\n\t\tl.add(\"d\");\n\t\tl.add(\"e\");\n\t\tl.add(\"f\");\n\t\tl.add(\"g\");\n\t\tl.add(\"h\");\n\t\tl.add(\"i\");\n\t\tl.add(\"j\");\n\t\tl.add(\"k\");\n\t\tl.add(\"l\");\n\t\tl.add(\"m\");\n\t\tl.add(\"n\");\n\t\tl.add(\"o\");\n\t\tl.add(\"p\");\n\t\tl.add(\"q\");\n\t\tl.add(\"r\");\n\t\tl.add(\"s\");\n\t\tl.add(\"t\");\n\t\tl.add(\"u\");\n\t\tl.add(\"v\");\n\t\tl.add(\"w\");\n\t\tl.add(\"x\");\n\t\tl.add(\"y\");\n\t\tl.add(\"z\");\n\t\tl.add(\"a\");\n\t\tl.add(\"b\");\n\t\tl.add(\"c\");\n\t\tl.add(\"d\");\n\t\tl.add(\"e\");\n\t\tl.add(\"f\");\n\t\tl.add(\"g\");\n\t\tl.add(\"h\");\n\t\tl.add(\"i\");\n\t\tl.add(\"j\");\n\t\tl.add(\"k\");\n\t\tl.add(\"l\");\n\t\tl.add(\"m\");\n\t\tl.add(\"n\");\n\t\tl.add(\"o\");\n\t\tl.add(\"p\");\n\t\tl.add(\"q\");\n\t\tl.add(\"r\");\n\t\tl.add(\"s\");\n\t\tl.add(\"t\");\n\t\tl.add(\"u\");\n\t\tl.add(\"v\");\n\t\tl.add(\"w\");\n\t\tl.add(\"x\");\n\t\tl.add(\"y\");\n\t\tl.add(\"z\");\n\t\tl.add(\"a\");\n"
    ],
    "results": 10
},{
    "id": "494",
    "source": "soSearches",
    "language": "java",
    "query": "how to define path of a package in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "495",
    "source": "soSearches",
    "language": "java",
    "query": "how to iterate values of list by reflection java",
    "snippets": [
        "\tvoid print(List<String> list){\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tvoid print(List<String> list){\n\t\tfor(String str:list){\n\t\t\tSystem.out.println(str);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "496",
    "source": "soSearches",
    "language": "java",
    "query": "java how to get tabbedpane child component",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"TabbedPane\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\t\n\t\tJTabbedPane tabbedPane = new JTabbedPane();\n\t\tframe.add(tabbedPane);\n\t\t\n\t\tJLabel label = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab1\", label);\n\t\t\n\t\tJLabel label2 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab2\", label2);\n\t\t\n\t\tJLabel label3 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab3\", label3);\n\t\t\n\t\tJLabel label4 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab4\", label4);\n\t\t\n\t\tJLabel label5 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab5\", label5);\n\t\t\n\t\tJLabel label6 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab6\", label6);\n\t\t\n\t\tJLabel label7 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab7\", label7);\n\t\t\n\t\tJLabel label8 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab8\", label8);\n\t\t\n\t\tJLabel label9 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab9\", label9);\n\t\t\n\t\tJLabel label10 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.addTab(\"Tab10\", label10);\n\t\t\n\t\tJLabel label11 = new JLabel(\"TabbedPane\");\n\t\ttabbedPane.\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"TabbedPane\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new BorderLayout());\n\t\tJTabbedPane tabbedPane = new JTabbedPane();\n\t\tframe.add(tabbedPane,BorderLayout.CENTER);\n\t\tJComponent comp1 = new JPanel();\n\t\tJComponent comp2 = new JPanel();\n\t\tJComponent comp3 = new JPanel();\n\t\ttabbedPane.addTab(\"Tab1\",comp1);\n\t\ttabbedPane.addTab(\"Tab2\",comp2);\n\t\ttabbedPane.addTab(\"Tab3\",comp3);\n\t\tJComponent comp4 = tabbedPane.getComponentAt(0);\n\t\tSystem.out.println(comp4);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"TabbedPane\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new BorderLayout());\n\t\tJTabbedPane tabbedPane = new JTabbedPane();\n\t\tframe.add(tabbedPane,BorderLayout.CENTER);\n\t\tJPanel panel1 = new JPanel();\n\t\tpanel1.setBackground(Color.red);\n\t\tJPanel panel2 = new JPanel();\n\t\tpanel2.setBackground(Color.blue);\n\t\tJPanel panel3 = new JPanel();\n\t\tpanel3.setBackground(Color.green);\n\t\ttabbedPane.addTab(\"Panel1\",panel1);\n\t\ttabbedPane.addTab(\"Panel2\",panel2);\n\t\ttabbedPane.addTab(\"Panel3\",panel3);\n\t\ttabbedPane.setSelectedIndex(1);\n\t\tSystem.out.println(tabbedPane.getSelectedIndex());\n\t\tSystem.out.println(tabbedPane.getSelectedComponent());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"TabbedPane\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tJTabbedPane tabbedPane = new JTabbedPane();\n\t\tframe.add(tabbedPane);\n\t\ttabbedPane.addTab(\"Tab1\",new JButton(\"Tab1\"));\n\t\ttabbedPane.addTab(\"Tab2\",new JButton(\"Tab2\"));\n\t\ttabbedPane.addTab(\"Tab3\",new JButton(\"Tab3\"));\n\t\ttabbedPane.addTab(\"Tab4\",new JButton(\"Tab4\"));\n\t\ttabbedPane.addTab(\"Tab5\",new JButton(\"Tab5\"));\n\t\ttabbedPane.addTab(\"Tab6\",new JButton(\"Tab6\"));\n\t\ttabbedPane.addTab(\"Tab7\",new JButton(\"Tab7\"));\n\t\ttabbedPane.addTab(\"Tab8\",new JButton(\"Tab8\"));\n\t\ttabbedPane.addTab(\"Tab9\",new JButton(\"Tab9\"));\n\t\ttabbedPane.addTab(\"Tab10\",new JButton(\"Tab10\"));\n\t\ttabbedPane.addTab(\"Tab11\",new JButton(\"Tab11\"));\n\t\ttabbedPane.addTab(\"Tab12\",new JButton(\"Tab12\"));\n\t\ttabbedPane.addTab(\"Tab13\",new JButton(\"Tab13\"));\n\t\ttabbedPane.addTab(\"Tab14\",new JButton(\"Tab14\"));\n\t\ttabbedPane.addTab(\"Tab15\",new JButton(\"Tab15\"));\n\t\ttabbedPane.addTab(\"Tab16\",new JButton(\"Tab16\"));\n\t\ttabbedPane.addTab(\"Tab17\",new JButton(\"Tab17\"));\n\t\ttabbedPane.addTab(\"Tab18\",new JButton(\"Tab18\"));\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"TabbedPane\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tJTabbedPane tabbedPane = new JTabbedPane();\n\t\tframe.add(tabbedPane);\n\t\tJTextArea textArea = new JTextArea();\n\t\tJScrollPane scrollPane = new JScrollPane(textArea);\n\t\ttabbedPane.addTab(\"Tab1\", scrollPane);\n\t\tJTextArea textArea2 = new JTextArea();\n\t\tJScrollPane scrollPane2 = new JScrollPane(textArea2);\n\t\ttabbedPane.addTab(\"Tab2\", scrollPane2);\n\t\tJTextArea textArea3 = new JTextArea();\n\t\tJScrollPane scrollPane3 = new JScrollPane(textArea3);\n\t\ttabbedPane.addTab(\"Tab3\", scrollPane3);\n\t\tJTextArea textArea4 = new JTextArea();\n\t\tJScrollPane scrollPane4 = new JScrollPane(textArea4);\n\t\ttabbedPane.addTab(\"Tab4\", scrollPane4);\n\t\tJTextArea textArea5 = new JTextArea();\n\t\tJScrollPane scrollPane5 = new JScrollPane(textArea5);\n\t\ttabbedPane.addTab(\"Tab5\", scrollPane5);\n\t\tJTextArea textArea6 = new JTextArea();\n\t\tJScrollPane scrollPane6 = new JScrollPane(textArea6);\n\t\ttabbedPane.addTab(\"Tab6\", scrollPane6);\n\t\tJTextArea textArea7 = new JTextArea();\n\t\tJScrollPane scrollPane7 = new JScrollPane(textArea7);\n\t\ttabbedPane.addTab(\"Tab7\", scrollPane7);\n\t\tJTextArea textArea8 = new\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"TabbedPane\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new BorderLayout());\n\t\tJTabbedPane tabbedPane = new JTabbedPane();\n\t\tframe.add(tabbedPane,BorderLayout.CENTER);\n\t\tJTextArea textArea = new JTextArea();\n\t\tJScrollPane scrollPane = new JScrollPane(textArea);\n\t\ttabbedPane.addTab(\"Tab1\",scrollPane);\n\t\tJTextArea textArea2 = new JTextArea();\n\t\tJScrollPane scrollPane2 = new JScrollPane(textArea2);\n\t\ttabbedPane.addTab(\"Tab2\",scrollPane2);\n\t\tJTextArea textArea3 = new JTextArea();\n\t\tJScrollPane scrollPane3 = new JScrollPane(textArea3);\n\t\ttabbedPane.addTab(\"Tab3\",scrollPane3);\n\t\tJTextArea textArea4 = new JTextArea();\n\t\tJScrollPane scrollPane4 = new JScrollPane(textArea4);\n\t\ttabbedPane.addTab(\"Tab4\",scrollPane4);\n\t\tJTextArea textArea5 = new JTextArea();\n\t\tJScrollPane scrollPane5 = new JScrollPane(textArea5);\n\t\ttabbedPane.addTab(\"Tab5\",scrollPane5);\n\t\tJTextArea textArea6 = new JTextArea();\n\t\tJScrollPane scrollPane6 = new JScrollPane(textArea6);\n\t\ttabbedPane.addTab(\"Tab6\",scrollPane6);\n\t\tJTextArea textArea7 = new JTextArea();\n\t\tJScrollPane scrollPane7 = new JScrollPane(textArea7);\n\t\ttabbedPane.addTab(\"Tab\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"TabbedPane\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new BorderLayout());\n\t\tJTabbedPane tabbedPane = new JTabbedPane();\n\t\tframe.add(tabbedPane,BorderLayout.CENTER);\n\t\tJComponent comp = (JComponent)tabbedPane.getSelectedComponent();\n\t\tSystem.out.println(comp.getName());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"TabbedPane Demo\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300, 300);\n\t\tframe.setVisible(true);\n\t\tJTabbedPane tabbedPane = new JTabbedPane();\n\t\tframe.add(tabbedPane);\n\t\tJComponent component = (JComponent) tabbedPane.getComponent(0);\n\t\tSystem.out.println(component.getName());\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "497",
    "source": "soSearches",
    "language": "java",
    "query": "how to separate digits from operators in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"123+456-789\";\n\t\tString[] tokens = s.split(\"\\\\D+\");\n\t\tfor(String token: tokens){\n\t\t\tSystem.out.println(token);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"123+456-789\";\n\t\tString[] tokens = s.split(\"[^0-9]+\");\n\t\tfor(String token: tokens){\n\t\t\tSystem.out.println(token);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"123+456-789\";\n\t\tString[] tokens = s.split(\"\\\\D\");\n\t\tfor(String token: tokens){\n\t\t\tSystem.out.println(token);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"123+456-789\";\n\t\tString[] strs = str.split(\"[+-]\");\n\t\tfor(String s : strs){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"123+456-789\";\n\t\tString[] strArray = str.split(\"[+-]\");\n\t\tfor(String s: strArray){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"123+456-789\";\n\t\tString[] strArray=str.split(\"\\\\D\");\n\t\tfor(String s:strArray){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "498",
    "source": "soSearches",
    "language": "java",
    "query": "how to make more than one panel appear on another one using buttons in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Frame\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button1 = new JButton(\"Button 1\");\n\t\tJButton button2 = new JButton(\"Button 2\");\n\t\tJButton button3 = new JButton(\"Button 3\");\n\t\tJButton button4 = new JButton(\"Button 4\");\n\t\tJButton button5 = new JButton(\"Button 5\");\n\t\tJButton button6 = new JButton(\"Button 6\");\n\t\tJButton button7 = new JButton(\"Button 7\");\n\t\tJButton button8 = new JButton(\"Button 8\");\n\t\tJButton button9 = new JButton(\"Button 9\");\n\t\tJButton button10 = new JButton(\"Button 10\");\n\t\tJButton button11 = new JButton(\"Button 11\");\n\t\tJButton button12 = new JButton(\"Button 12\");\n\t\tJButton button13 = new JButton(\"Button 13\");\n\t\tJButton button14 = new JButton(\"Button 14\");\n\t\tJButton button15 = new JButton(\"Button 15\");\n\t\tJButton button16 = new JButton(\"Button 16\");\n\t\tJButton button17 = new JButton(\"Button 17\");\n\t\tJButton button18 = new JButton(\"Button 18\");\n\t\tJButton button19 = new JButton(\"Button 19\");\n\t\tJButton button20 = new JButton(\"Button 20\");\n\t\tJButton button21 = new JButton(\"Button 21\");\n\t\tJButton button22 = new JButton(\"Button 22\");\n\t\tJButton button23 = new JButton(\"Button 23\");\n\t\tJButton button24 = new JButton(\"Button 24\");\n\t\tJButton button25 = new JButton(\"Button 25\");\n\t\tJButton button26 = new JButton(\"Button 26\");\n\t\tJButton button27 = new JButton(\"Button 27\");\n\t\tJButton button28 = new JButton(\"Button 28\");\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Clazz\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button1 = new JButton(\"Button 1\");\n\t\tJButton button2 = new JButton(\"Button 2\");\n\t\tJButton button3 = new JButton(\"Button 3\");\n\t\tJButton button4 = new JButton(\"Button 4\");\n\t\tJButton button5 = new JButton(\"Button 5\");\n\t\tJButton button6 = new JButton(\"Button 6\");\n\t\tJButton button7 = new JButton(\"Button 7\");\n\t\tJButton button8 = new JButton(\"Button 8\");\n\t\tJButton button9 = new JButton(\"Button 9\");\n\t\tJButton button10 = new JButton(\"Button 10\");\n\t\tJButton button11 = new JButton(\"Button 11\");\n\t\tJButton button12 = new JButton(\"Button 12\");\n\t\tJButton button13 = new JButton(\"Button 13\");\n\t\tJButton button14 = new JButton(\"Button 14\");\n\t\tJButton button15 = new JButton(\"Button 15\");\n\t\tJButton button16 = new JButton(\"Button 16\");\n\t\tJButton button17 = new JButton(\"Button 17\");\n\t\tJButton button18 = new JButton(\"Button 18\");\n\t\tJButton button19 = new JButton(\"Button 19\");\n\t\tJButton button20 = new JButton(\"Button 20\");\n\t\tJButton button21 = new JButton(\"Button 21\");\n\t\tJButton button22 = new JButton(\"Button 22\");\n\t\tJButton button23 = new JButton(\"Button 23\");\n\t\tJButton button24 = new JButton(\"Button 24\");\n\t\tJButton button25 = new JButton(\"Button 25\");\n\t\tJButton button26 = new JButton(\"Button 26\");\n\t\tJButton button27 = new JButton(\"Button 27\");\n\t\tJButton button28 = new JButton(\"Button 28\");\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Panel\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button1 = new JButton(\"Button 1\");\n\t\tJButton button2 = new JButton(\"Button 2\");\n\t\tJButton button3 = new JButton(\"Button 3\");\n\t\tJButton button4 = new JButton(\"Button 4\");\n\t\tJButton button5 = new JButton(\"Button 5\");\n\t\tJButton button6 = new JButton(\"Button 6\");\n\t\tJButton button7 = new JButton(\"Button 7\");\n\t\tJButton button8 = new JButton(\"Button 8\");\n\t\tJButton button9 = new JButton(\"Button 9\");\n\t\tJButton button10 = new JButton(\"Button 10\");\n\t\tJButton button11 = new JButton(\"Button 11\");\n\t\tJButton button12 = new JButton(\"Button 12\");\n\t\tJButton button13 = new JButton(\"Button 13\");\n\t\tJButton button14 = new JButton(\"Button 14\");\n\t\tJButton button15 = new JButton(\"Button 15\");\n\t\tJButton button16 = new JButton(\"Button 16\");\n\t\tJButton button17 = new JButton(\"Button 17\");\n\t\tJButton button18 = new JButton(\"Button 18\");\n\t\tJButton button19 = new JButton(\"Button 19\");\n\t\tJButton button20 = new JButton(\"Button 20\");\n\t\tJButton button21 = new JButton(\"Button 21\");\n\t\tJButton button22 = new JButton(\"Button 22\");\n\t\tJButton button23 = new JButton(\"Button 23\");\n\t\tJButton button24 = new JButton(\"Button 24\");\n\t\tJButton button25 = new JButton(\"Button 25\");\n\t\tJButton button26 = new JButton(\"Button 26\");\n\t\tJButton button27 = new JButton(\"Button 27\");\n\t\tJButton button28 = new JButton(\"Button 28\");\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Panel\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button1 = new JButton(\"Panel 1\");\n\t\tJButton button2 = new JButton(\"Panel 2\");\n\t\tJButton button3 = new JButton(\"Panel 3\");\n\t\tframe.add(button1);\n\t\tframe.add(button2);\n\t\tframe.add(button3);\n\t\tbutton1.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tframe.remove(2);\n\t\t\t\tframe.add(button3);\n\t\t\t\tframe.revalidate();\n\t\t\t\tframe.repaint();\n\t\t\t}\n\t\t});\n\t\tbutton2.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tframe.remove(1);\n\t\t\t\tframe.add(button1);\n\t\t\t\tframe.revalidate();\n\t\t\t\tframe.repaint();\n\t\t\t}\n\t\t});\n\t\tbutton3.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tframe.remove(0);\n\t\t\t\tframe.add(button2);\n\t\t\t\tframe.revalidate();\n\t\t\t\tframe.repaint();\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Panel\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\t\n\t\tJPanel panel = new JPanel();\n\t\tpanel.setBackground(Color.RED);\n\t\tframe.add(panel);\n\t\t\n\t\tJButton button = new JButton(\"Click me\");\n\t\tpanel.add(button);\n\t\t\n\t\tJButton button2 = new JButton(\"Click me\");\n\t\tpanel.add(button2);\n\t\t\n\t\tJButton button3 = new JButton(\"Click me\");\n\t\tpanel.add(button3);\n\t\t\n\t\tJButton button4 = new JButton(\"Click me\");\n\t\tpanel.add(button4);\n\t\t\n\t\tJButton button5 = new JButton(\"Click me\");\n\t\tpanel.add(button5);\n\t\t\n\t\tJButton button6 = new JButton(\"Click me\");\n\t\tpanel.add(button6);\n\t\t\n\t\tJButton button7 = new JButton(\"Click me\");\n\t\tpanel.add(button7);\n\t\t\n\t\tJButton button8 = new JButton(\"Click me\");\n\t\tpanel.add(button8);\n\t\t\n\t\tJButton button9 = new JButton(\"Click me\");\n\t\tpanel.add(button9);\n\t\t\n\t\tJButton button10 = new JButton(\"Click me\");\n\t\tpanel.add(button10);\n\t\t\n\t\tJButton button11 = new JButton(\"Click me\");\n\t\tpanel.add(button11);\n\t\t\n\t\tJButton button12 = new JButton(\"Click me\");\n\t\tpanel.add(button12);\n\t\t\n\t\tJButton button13 = new JButton(\"Click me\");\n\t\tpanel.add(button13);\n\t\t\n\t\tJButton button14 = new JButton(\"Click me\");\n\t\tpanel.add\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Panels\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tframe.add(new JButton(\"Button 1\"));\n\t\tframe.add(new JButton(\"Button 2\"));\n\t\tframe.add(new JButton(\"Button 3\"));\n\t\tframe.add(new JButton(\"Button 4\"));\n\t\tframe.add(new JButton(\"Button 5\"));\n\t\tframe.add(new JButton(\"Button 6\"));\n\t\tframe.add(new JButton(\"Button 7\"));\n\t\tframe.add(new JButton(\"Button 8\"));\n\t\tframe.add(new JButton(\"Button 9\"));\n\t\tframe.add(new JButton(\"Button 10\"));\n\t\tframe.add(new JButton(\"Button 11\"));\n\t\tframe.add(new JButton(\"Button 12\"));\n\t\tframe.add(new JButton(\"Button 13\"));\n\t\tframe.add(new JButton(\"Button 14\"));\n\t\tframe.add(new JButton(\"Button 15\"));\n\t\tframe.add(new JButton(\"Button 16\"));\n\t\tframe.add(new JButton(\"Button 17\"));\n\t\tframe.add(new JButton(\"Button 18\"));\n\t\tframe.add(new JButton(\"Button 19\"));\n\t\tframe.add(new JButton(\"Button 20\"));\n\t\tframe.add(new JButton(\"Button 21\"));\n\t\tframe.add(new JButton(\"Button 22\"));\n\t\tframe.add(new JButton(\"Button 23\"));\n\t\tframe.add(new JButton(\"Button 24\"));\n\t\tframe.add(new JButton(\"Button 25\"));\n\t\tframe.add(new JButton(\"Button 26\"));\n\t\tframe.add(new JButton(\"Button 27\"));\n\t\tframe.add(new JButton(\"Button 28\"));\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Multiple Panels\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tframe.add(new JButton(\"Button 1\"));\n\t\tframe.add(new JButton(\"Button 2\"));\n\t\tframe.add(new JButton(\"Button 3\"));\n\t\tframe.add(new JButton(\"Button 4\"));\n\t\tframe.add(new JButton(\"Button 5\"));\n\t\tframe.add(new JButton(\"Button 6\"));\n\t\tframe.add(new JButton(\"Button 7\"));\n\t\tframe.add(new JButton(\"Button 8\"));\n\t\tframe.add(new JButton(\"Button 9\"));\n\t\tframe.add(new JButton(\"Button 10\"));\n\t\tframe.add(new JButton(\"Button 11\"));\n\t\tframe.add(new JButton(\"Button 12\"));\n\t\tframe.add(new JButton(\"Button 13\"));\n\t\tframe.add(new JButton(\"Button 14\"));\n\t\tframe.add(new JButton(\"Button 15\"));\n\t\tframe.add(new JButton(\"Button 16\"));\n\t\tframe.add(new JButton(\"Button 17\"));\n\t\tframe.add(new JButton(\"Button 18\"));\n\t\tframe.add(new JButton(\"Button 19\"));\n\t\tframe.add(new JButton(\"Button 20\"));\n\t\tframe.add(new JButton(\"Button 21\"));\n\t\tframe.add(new JButton(\"Button 22\"));\n\t\tframe.add(new JButton(\"Button 23\"));\n\t\tframe.add(new JButton(\"Button 24\"));\n\t\tframe.add(new JButton(\"Button 25\"));\n\t\tframe.add(new JButton(\"Button 26\"));\n\t\tframe.add(new JButton(\"Button 27\"));\n\t\tframe.add(new JButton(\"Button 28\"));\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Class\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\t\n\t\tJButton button1 = new JButton(\"Panel 1\");\n\t\tJButton button2 = new JButton(\"Panel 2\");\n\t\tJButton button3 = new JButton(\"Panel 3\");\n\t\t\n\t\tframe.add(button1);\n\t\tframe.add(button2);\n\t\tframe.add(button3);\n\t\t\n\t\tbutton1.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tframe.remove(2);\n\t\t\t\tframe.add(button3);\n\t\t\t\tframe.revalidate();\n\t\t\t\tframe.repaint();\n\t\t\t}\n\t\t});\n\t\t\n\t\tbutton2.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tframe.remove(1);\n\t\t\t\tframe.add(button3);\n\t\t\t\tframe.revalidate();\n\t\t\t\tframe.repaint();\n\t\t\t}\n\t\t});\n\t\t\n\t\tbutton3.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tframe.remove(0);\n\t\t\t\tframe.add(button1);\n\t\t\t\tframe.revalidate();\n\t\t\t\tframe.repaint();\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Panel\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tJPanel panel = new JPanel();\n\t\tpanel.setLayout(new GridLayout(3,1));\n\t\tJButton button1 = new JButton(\"Button 1\");\n\t\tJButton button2 = new JButton(\"Button 2\");\n\t\tJButton button3 = new JButton(\"Button 3\");\n\t\tpanel.add(button1);\n\t\tpanel.add(button2);\n\t\tpanel.add(button3);\n\t\tframe.add(panel);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "499",
    "source": "soSearches",
    "language": "java",
    "query": "how to open docx file in java to libreoffice",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tXComponentContext xContext = Bootstrap.bootstrap();\n\t\t\tXMultiComponentFactory xMCF = xContext.getServiceManager();\n\t\t\tObject oDesktop = xMCF.createInstanceWithContext(\"com.sun.star.frame.Desktop\", xContext);\n\t\t\tXDesktop xDesktop = (XDesktop) UnoRuntime.queryInterface(XDesktop.class, oDesktop);\n\t\t\tXComponentLoader xComponentLoader = (XComponentLoader) UnoRuntime.queryInterface(XComponentLoader.class, xDesktop);\n\t\t\tXComponent xComponent = xComponentLoader.loadComponentFromURL(\"private:factory/swriter\", \"_blank\", 0, new PropertyValue[0]);\n\t\t\tXTextDocument xTextDocument = (XTextDocument) UnoRuntime.queryInterface(XTextDocument.class, xComponent);\n\t\t\tXText xText = xTextDocument.getText();\n\t\t\tXTextCursor xTextCursor = xText.createTextCursor();\n\t\t\txTextCursor.goRight(1, false);\n\t\t\txTextCursor.setString(\"Hello World\");\n\t\t\tXStorable xStorable = (XStorable) UnoRuntime.queryInterface(XStorable.class, xComponent);\n\t\t\txStorable.storeAsURL(\"file:///C:/Users/Public/Documents/test.docx\", new PropertyValue[0]);\n\t\t\txDesktop.terminate();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.docx\");\n\t\t\tXWPFDocument doc = new XWPFDocument(fis);\n\t\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(doc);\n\t\t\tString text = extractor.getText();\n\t\t\tSystem.out.println(text);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.docx\");\n\t\t\tXWPFDocument doc = new XWPFDocument(fis);\n\t\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(doc);\n\t\t\tString text = extractor.getText();\n\t\t\tSystem.out.println(text);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException {\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.docx\");\n\t\tXWPFDocument doc = new XWPFDocument(fis);\n\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(doc);\n\t\tString text = extractor.getText();\n\t\tSystem.out.println(text);\n\t}\n}\n",
        "\tstatic void main(String[] args) throws Exception {\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.docx\");\n\t\tXWPFDocument doc = new XWPFDocument(fis);\n\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(doc);\n\t\tString text = extractor.getText();\n\t\tSystem.out.println(text);\n\t}\n}\n",
        "\tstatic void main(String[] args) throws Exception {\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.docx\");\n\t\tXWPFDocument document = new XWPFDocument(fis);\n\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(document);\n\t\tString text = extractor.getText();\n\t\tSystem.out.println(text);\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException {\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.docx\");\n\t\tXWPFDocument doc = new XWPFDocument(fis);\n\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(doc);\n\t\tString text = extractor.getText();\n\t\tSystem.out.println(text);\n\t}\n}\n",
        "\tstatic void main(String[] args) throws Exception{\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.docx\");\n\t\tXWPFDocument document = new XWPFDocument(fis);\n\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(document);\n\t\tString text = extractor.getText();\n\t\tSystem.out.println(text);\n\t}\n}\n",
        "\tstatic void main(String[] args) throws Exception {\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.docx\");\n\t\tXWPFDocument document = new XWPFDocument(fis);\n\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(document);\n\t\tString text = extractor.getText();\n\t\tSystem.out.println(text);\n\t}\n}\n",
        "\tstatic void main(String[] args) throws Exception {\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.docx\");\n\t\tXWPFDocument doc = new XWPFDocument(fis);\n\t\tXWPFWordExtractor extractor = new XWPFWordExtractor(doc);\n\t\tString text = extractor.getText();\n\t\tSystem.out.println(text);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "500",
    "source": "soSearches",
    "language": "java",
    "query": "how to useinput box in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner input=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name=input.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age=input.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address=input.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone=input.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email=input.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password=input.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirm=input.next();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner input=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name=input.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age=input.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address=input.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone=input.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email=input.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password=input.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirmpassword=input.next();\n\t\tif(password.equals(confirmpassword)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner input=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name=input.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age=input.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address=input.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone=input.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email=input.nextLine();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password=input.nextLine();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirm=input.nextLine();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Your password is not matching\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = input.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = input.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = input.nextLine();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = input.nextLine();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirm = input.nextLine();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name=sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age=sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address=sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone=sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email=sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password=sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirmpassword=sc.next();\n\t\tif(password.equals(confirmpassword)){\n\t\t\tSystem.out.println(\"Your registration is successful\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Your registration is not successful\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name=sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age=sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address=sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone=sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email=sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password=sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirmpassword=sc.next();\n\t\tif(password.equals(confirmpassword)){\n\t\t\tSystem.out.println(\"Your details are as follows\");\n\t\t\tSystem.out.println(\"Name: \"+name);\n\t\t\tSystem.out.println(\"Age: \"+age);\n\t\t\tSystem.out.println(\"Address: \"+address);\n\t\t\tSystem.out.println(\"Phone number: \"+phone);\n\t\t\tSystem.out.println(\"Email: \"+email);\n\t\t\tSystem.out.println(\"Password: \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password does not match\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirm = sc.next();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password does not match\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "501",
    "source": "soSearches",
    "language": "java",
    "query": "how to use java analysis oracle dmp file",
    "snippets": [
        "\tvoid m1(){\n\t\tSystem.out.println(\"m1\");\n\t}\n\tpublic\n\tvoid m2(){\n\t\tSystem.out.println(\"m2\");\n\t}\n\tpublic\n\tvoid m3(){\n\t\tSystem.out.println(\"m3\");\n\t}\n\tpublic\n\tvoid m4(){\n\t\tSystem.out.println(\"m4\");\n\t}\n\tpublic\n\tvoid m5(){\n\t\tSystem.out.println(\"m5\");\n\t}\n\tpublic\n\tvoid m6(){\n\t\tSystem.out.println(\"m6\");\n\t}\n\tpublic\n\tvoid m7(){\n\t\tSystem.out.println(\"m7\");\n\t}\n\tpublic\n\tvoid m8(){\n\t\tSystem.out.println(\"m8\");\n\t}\n\tpublic\n\tvoid m9(){\n\t\tSystem.out.println(\"m9\");\n\t}\n\tpublic\n\tvoid m10(){\n\t\tSystem.out.println(\"m10\");\n\t}\n\tpublic\n\tvoid m11(){\n\t\tSystem.out.println(\"m11\");\n\t}\n\tpublic\n\tvoid m12(){\n\t\tSystem.out.println(\"m12\");\n\t}\n\tpublic\n\tvoid m13(){\n\t\tSystem.out.println(\"m13\");\n\t}\n\tpublic\n\tvoid m14(){\n\t\tSystem.out.println(\"m14\");\n\t}\n\tpublic\n\tvoid m15(){\n\t\tSystem.out.println(\"m15\");\n\t}\n\tpublic\n\tvoid m16(){\n\t\tSystem.out.println(\"m16\");\n\t}\n\tpublic\n\tvoid m17(){\n\t\tSystem.out.println(\"m17\");\n\t}\n\tpublic\n\tvoid m18(){\n\t\tSystem.out.println(\"m18\");\n\t}\n\tpublic\n\tvoid m19(){\n\t\tSystem.out.println(\"m19\");\n\t}\n\tpublic\n\tvoid m20(){\n\t\tSystem.out.println(\"m20\");\n\t}\n\tpublic\n\tvoid m21(){\n\t\tSystem.out.println(\"m21\");\n",
        "\tvoid method(){\n\t\tint a = 1;\n\t\tint b = 2;\n\t\tint c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void method(){\n\t\t\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void test(){\n\t\t\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid test(){\n\t\tSystem.out.println(\"test\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "502",
    "source": "soSearches",
    "language": "java",
    "query": "how to create a method which takes 3 strings as arguments and returns of concatenation java",
    "snippets": [
        "\tString concat(String s1,String s2,String s3){\n\t\treturn s1+s2+s3;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "503",
    "source": "soSearches",
    "language": "java",
    "query": "how to pass parameters to java using php?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 1
},{
    "id": "504",
    "source": "soSearches",
    "language": "java",
    "query": "how to print array with spaces in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "505",
    "source": "soSearches",
    "language": "java",
    "query": "how to increase word in your name by 1 in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString name = \"John\";\n\t\tSystem.out.println(name.substring(0, name.length()-1) + (char)(name.charAt(name.length()-1) + 1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"Rajesh\";\n\t\tSystem.out.println(name.substring(0,name.length()-1)+\"a\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"John\";\n\t\tSystem.out.println(name.substring(0,name.length()-1)+\"a\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"sachin\";\n\t\tSystem.out.println(name.substring(0,name.length()-1)+\"1\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"Krishna\";\n\t\tSystem.out.println(name.substring(0,name.length()-1)+\"a\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"John\";\n\t\tSystem.out.println(name.substring(0, name.length()-1)+\"*\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"John\";\n\t\tint length = name.length();\n\t\tSystem.out.println(name.substring(0,length-1)+\"z\"+name.substring(length-1));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "506",
    "source": "soSearches",
    "language": "java",
    "query": "how to read strings into a string array java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\", \"Paul\", \"George\", \"Ringo\"};\n\t\tfor(String name : names){\n\t\t\tSystem.out.println(name);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] strArray = new String[3];\n\t\tstrArray[0] = \"Hello\";\n\t\tstrArray[1] = \"World\";\n\t\tstrArray[2] = \"!\";\n\t\tSystem.out.println(strArray[0]+strArray[1]+strArray[2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\", \"Jane\", \"Joe\"};\n\t\tfor(String name : names){\n\t\t\tSystem.out.println(name);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] str = new String[3];\n\t\tstr[0] = \"hello\";\n\t\tstr[1] = \"world\";\n\t\tstr[2] = \"java\";\n\t\tSystem.out.println(str[0]);\n\t\tSystem.out.println(str[1]);\n\t\tSystem.out.println(str[2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\", \"Jane\", \"Joe\"};\n\t\tfor(int i = 0; i < names.length; i++){\n\t\t\tSystem.out.println(names[i]);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "507",
    "source": "soSearches",
    "language": "java",
    "query": "how to add two time  in java?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tTime t1 = new Time(10,20,30);\n\t\tTime t2 = new Time(10,20,30);\n\t\tTime t3 = t1.add(t2);\n\t\tSystem.out.println(t3.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tTime t1 = new Time(10,30);\n\t\tTime t2 = new Time(12,30);\n\t\tTime t3 = t1.add(t2);\n\t\tSystem.out.println(t3.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tTime t1 = new Time(10,20);\n\t\tTime t2 = new Time(10,20);\n\t\tTime t3 = t1.add(t2);\n\t\tSystem.out.println(t3.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tTime t1 = new Time(12,30,45);\n\t\tTime t2 = new Time(12,30,45);\n\t\tTime t3 = t1.add(t2);\n\t\tSystem.out.println(t3.toString());\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "508",
    "source": "soSearches",
    "language": "java",
    "query": "how to create a bar graph in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] b = {10,9,8,7,6,5,4,3,2,1};\n\t\tint[] c = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] d = {10,9,8,7,6,5,4,3,2,1};\n\t\tint[] e = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] f = {10,9,8,7,6,5,4,3,2,1};\n\t\tint[] g = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] h = {10,9,8,7,6,5,4,3,2,1};\n\t\tint[] i = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] j = {10,9,8,7,6,5,4,3,2,1};\n\t\tint[] k = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] l = {10,9,8,7,6,5,4,3,2,1};\n\t\tint[] m = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] n = {10,9,8,7,6,5,4,3,2,1};\n\t\tint[] o = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] p = {10,9,8,7,6,5,4,3,2,1};\n\t\tint[] q = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] r = {10,9,8,\n",
        "\tstatic void main(String[] args){\n\t\tint[] values = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values2 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values3 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values4 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values5 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values6 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values7 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values8 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values9 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values10 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values11 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values12 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values13 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values14 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values15 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values16 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] values17 = {1,2,3,4,5,6,7,8,9,\n",
        "\tstatic void main(String[] args){\n\t\tint[] marks = {50,60,70,80,90,100};\n\t\tint[] grades = {1,2,3,4,5,6};\n\t\tint[] grade = new int[6];\n\t\tint[] grade1 = new int[6];\n\t\tint[] grade2 = new int[6];\n\t\tint[] grade3 = new int[6];\n\t\tint[] grade4 = new int[6];\n\t\tint[] grade5 = new int[6];\n\t\tint[] grade6 = new int[6];\n\t\tint[] grade7 = new int[6];\n\t\tint[] grade8 = new int[6];\n\t\tint[] grade9 = new int[6];\n\t\tint[] grade10 = new int[6];\n\t\tint[] grade11 = new int[6];\n\t\tint[] grade12 = new int[6];\n\t\tint[] grade13 = new int[6];\n\t\tint[] grade14 = new int[6];\n\t\tint[] grade15 = new int[6];\n\t\tint[] grade16 = new int[6];\n\t\tint[] grade17 = new int[6];\n\t\tint[] grade18 = new int[6];\n\t\tint[] grade19 = new int[6];\n\t\tint[] grade20 = new int[6];\n\t\tint[] grade21 = new int[6];\n\t\tint[] grade22 = new int[6];\n\t\tint[] grade23 = new int[6];\n\t\tint[] grade24 = new int[6];\n\t\tint[] grade25 = new int[6];\n\t\tint[] grade26 = new int[6];\n\t\tint[] grade27 = new int[6];\n\t\tint[] grade28 = new int[6];\n\t\tint[] grade29 = new int[6];\n\t\tint[] grade30 = new int[6];\n\t\tint[] grade31 = new int[6];\n\t\tint[] grade32 = new int[6];\n\t\tint[] grade33 = new int[6];\n\t\tint[] grade34 = new\n",
        "\tstatic void main(String[] args){\n\t\tint[] marks = {50,60,70,80,90,100};\n\t\tint[] grades = {1,2,3,4,5,6};\n\t\tint[] grades2 = {1,2,3,4,5,6};\n\t\tint[] grades3 = {1,2,3,4,5,6};\n\t\tint[] grades4 = {1,2,3,4,5,6};\n\t\tint[] grades5 = {1,2,3,4,5,6};\n\t\tint[] grades6 = {1,2,3,4,5,6};\n\t\tint[] grades7 = {1,2,3,4,5,6};\n\t\tint[] grades8 = {1,2,3,4,5,6};\n\t\tint[] grades9 = {1,2,3,4,5,6};\n\t\tint[] grades10 = {1,2,3,4,5,6};\n\t\tint[] grades11 = {1,2,3,4,5,6};\n\t\tint[] grades12 = {1,2,3,4,5,6};\n\t\tint[] grades13 = {1,2,3,4,5,6};\n\t\tint[] grades14 = {1,2,3,4,5,6};\n\t\tint[] grades15 = {1,2,3,4,5,6};\n\t\tint[] grades16 = {1,2,3,4,5,6};\n\t\tint[] grades17 = {1,2,3,4,5,6};\n\t\tint[] grades18 = {1,2,3,4,5,6};\n\t\tint[] grades19 = {1,2,3,4,5,6};\n\t\tint[] grades20 = {1,2,3,4,5,6};\n\t\tint[] grades21 = {1,2,3,4,5,6};\n\t\tint[] grades22 = {1,2,3,4,5,6};\n\t\tint[] grades23 = {\n"
    ],
    "results": 5
},{
    "id": "509",
    "source": "soSearches",
    "language": "java",
    "query": "how to calculate percentage change java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble a = 10.0;\n\t\tdouble b = 20.0;\n\t\tdouble c = a/b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble oldValue = 100.0;\n\t\tdouble newValue = 120.0;\n\t\tdouble percentageChange = (newValue - oldValue)/oldValue * 100;\n\t\tSystem.out.println(\"Percentage change is \" + percentageChange);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a-b;\n\t\tSystem.out.println(c);\n\t\tdouble d=c/a;\n\t\tSystem.out.println(d);\n\t\tdouble e=d*100;\n\t\tSystem.out.println(e);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble oldValue = 100.0;\n\t\tdouble newValue = 120.0;\n\t\tdouble percentageChange = (newValue - oldValue)/oldValue * 100;\n\t\tSystem.out.println(\"Percentage Change: \" + percentageChange);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble oldValue = 100;\n\t\tdouble newValue = 200;\n\t\tdouble percentageChange = (newValue - oldValue)/oldValue * 100;\n\t\tSystem.out.println(\"Percentage change is \" + percentageChange);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble a = 100;\n\t\tdouble b = 200;\n\t\tdouble c = (b-a)/a*100;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a-b;\n\t\tdouble d=c/a;\n\t\tSystem.out.println(d);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "510",
    "source": "soSearches",
    "language": "java",
    "query": "how to select a dropdown value in selenium webdriver using java mavien",
    "snippets": [
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new ChromeDriver();\n\t\tdriver.get(\"https://www.facebook.com/\");\n\t\tdriver.findElement(By.id(\"email\")).sendKeys(\"\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new ChromeDriver();\n\t\tdriver.get(\"https://www.facebook.com/\");\n\t\tWebElement dropdown=driver.findElement(By.id(\"js_4g\"));\n\t\tSelect s=new Select(dropdown);\n\t\ts.selectByValue(\"en_GB\");\n\t\t\n\t}\n\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new ChromeDriver();\n\t\tdriver.get(\"https://www.facebook.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tWebElement dropdown=driver.findElement(By.id(\"month\"));\n\t\tSelect s=new Select(dropdown);\n\t\ts.selectByValue(\"10\");\n\t\t\n\t}\n\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new ChromeDriver();\n\t\tdriver.get(\"https://www.facebook.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tWebElement element=driver.findElement(By.id(\"month\"));\n\t\tSelect sel=new Select(element);\n\t\tsel.selectByValue(\"10\");\n\t\t\n\t}\n\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new ChromeDriver();\n\t\tdriver.get(\"https://www.facebook.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tWebElement ele=driver.findElement(By.id(\"month\"));\n\t\tSelect sel=new Select(ele);\n\t\tsel.selectByValue(\"8\");\n\t\tdriver.close();\n\t}\n\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new FirefoxDriver();\n\t\tdriver.get(\"http://www.facebook.com\");\n\t\tdriver.manage().window().maximize();\n\t\tWebElement element=driver.findElement(By.id(\"month\"));\n\t\tSelect sel=new Select(element);\n\t\tsel.selectByValue(\"8\");\n\t\t\n\t}\n\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new FirefoxDriver();\n\t\tdriver.get(\"http://www.facebook.com\");\n\t\tdriver.manage().window().maximize();\n\t\tWebElement ele=driver.findElement(By.id(\"month\"));\n\t\tSelect sel=new Select(ele);\n\t\tsel.selectByValue(\"8\");\n\t\t\n\t}\n\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new FirefoxDriver();\n\t\tdriver.get(\"http://www.facebook.com\");\n\t\tWebElement dropdown=driver.findElement(By.id(\"month\"));\n\t\tSelect s=new Select(dropdown);\n\t\ts.selectByValue(\"8\");\n\t\t\n\t}\n\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new FirefoxDriver();\n\t\tdriver.get(\"http://www.facebook.com\");\n\t\tdriver.manage().window().maximize();\n\t\tWebElement ele=driver.findElement(By.id(\"month\"));\n\t\tSelect sel=new Select(ele);\n\t\tsel.selectByValue(\"10\");\n\t\t\n\t}\n\n}\n",
        "\tvoid test() {\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.seleniumhq.org/\");\n\t\tSelect s = new Select(driver.findElement(By.id(\"selenium-version-select\")));\n\t\ts.selectByValue(\"2.53.1\");\n\t\tdriver.close();\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "511",
    "source": "soSearches",
    "language": "java",
    "query": "java how to load keystore",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"keystore.jks\"), \"password\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"password\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket s = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\ts.setNeedClientAuth(true);\n\t\t\tSSLSocket c = (SSLSocket) s.accept();\n\t\t\tSystem.out.println(c.getSession().getProtocol());\n\t\t\tc.close();\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"keystore.jks\"), \"password\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"password\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket ss = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\tss.setNeedClientAuth(true);\n\t\t\tSSLSocket s = (SSLSocket) ss.accept();\n\t\t\tSystem.out.println(s.getSession().getCipherSuite());\n\t\t\ts.close();\n\t\t\tss.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"keystore.jks\"), \"password\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"password\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket s = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\ts.setNeedClientAuth(true);\n\t\t\tSSLSocket c = (SSLSocket) s.accept();\n\t\t\tSystem.out.println(c.getSession().getCipherSuite());\n\t\t\tc.close();\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"mykeystore.jks\"), \"password\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"password\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket ss = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\tss.setNeedClientAuth(true);\n\t\t\tSSLSocket s = (SSLSocket) ss.accept();\n\t\t\tSystem.out.println(s.getSession().getProtocol());\n\t\t\ts.close();\n\t\t\tss.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"mykeystore.jks\"), \"password\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"password\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket s = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\ts.setNeedClientAuth(true);\n\t\t\tSSLSocket c = (SSLSocket) s.accept();\n\t\t\tSystem.out.println(c.getSession().getCipherSuite());\n\t\t\tc.close();\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"mykeystore.jks\"), \"password\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"password\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket s = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\ts.setNeedClientAuth(true);\n\t\t\twhile(true){\n\t\t\t\tSSLSocket c = (SSLSocket) s.accept();\n\t\t\t\tSystem.out.println(\"Accepted connection from \" + c.getInetAddress());\n\t\t\t\tc.startHandshake();\n\t\t\t\tSystem.out.println(\"Handshake completed\");\n\t\t\t\tc.close();\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"mykeystore.jks\"), \"password\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"password\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket ss = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\tss.setNeedClientAuth(true);\n\t\t\tSSLSocket s = (SSLSocket) ss.accept();\n\t\t\tSystem.out.println(\"Handshake completed\");\n\t\t\tSystem.out.println(\"Cipher: \" + s.getSession().getCipherSuite());\n\t\t\tSystem.out.println(\"PeerPrincipal: \" + s.getSession().getPeerPrincipal());\n\t\t\tSystem.out.println(\"PeerCertificates: \" + s.getSession().getPeerCertificates());\n\t\t\ts.close();\n\t\t\tss.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"mykeystore.jks\"), \"password\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"password\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket s = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\ts.setNeedClientAuth(true);\n\t\t\tSSLSocket c = (SSLSocket) s.accept();\n\t\t\tSystem.out.println(c.getSession().getPeerPrincipal());\n\t\t\tc.close();\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\keystore.jks\"), \"123456\".toCharArray());\n\t\t\tKeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n\t\t\tkmf.init(ks, \"123456\".toCharArray());\n\t\t\tSSLContext sc = SSLContext.getInstance(\"TLS\");\n\t\t\tsc.init(kmf.getKeyManagers(), null, null);\n\t\t\tSSLServerSocketFactory ssf = sc.getServerSocketFactory();\n\t\t\tSSLServerSocket ss = (SSLServerSocket) ssf.createServerSocket(443);\n\t\t\tss.setNeedClientAuth(true);\n\t\t\tSSLSocket s = (SSLSocket) ss.accept();\n\t\t\tSystem.out.println(s.getSession().getCipherSuite());\n\t\t\tSystem.out.println(s.getSession().getPeerCertificates()[0].getSubjectDN());\n\t\t\tSystem.out.println(s.getSession().getPeerCertificates()[0].getPublicKey());\n\t\t\ts.close();\n\t\t\tss.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "512",
    "source": "soSearches",
    "language": "java",
    "query": "java: how to find the range will be between 1 and 18 and the input will always be an integer.",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tint min = arr[0];\n\t\tint max = arr[0];\n\t\tfor(int i = 1; i < n; i++){\n\t\t\tif(arr[i] < min){\n\t\t\t\tmin = arr[i];\n\t\t\t}\n\t\t\tif(arr[i] > max){\n\t\t\t\tmax = arr[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(max - min);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tint max = 0;\n\t\tint min = 0;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif(arr[i] > max){\n\t\t\t\tmax = arr[i];\n\t\t\t}\n\t\t\tif(arr[i] < min){\n\t\t\t\tmin = arr[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(max - min);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tint[] count = new int[19];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tcount[arr[i]]++;\n\t\t}\n\t\tint max = 0;\n\t\tfor(int i = 1; i < 19; i++){\n\t\t\tmax = Math.max(max, count[i]);\n\t\t}\n\t\tSystem.out.println(max);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint min = n;\n\t\tint max = n;\n\t\twhile(sc.hasNextInt()){\n\t\t\tn = sc.nextInt();\n\t\t\tif(n < min)\n\t\t\t\tmin = n;\n\t\t\tif(n > max)\n\t\t\t\tmax = n;\n\t\t}\n\t\tSystem.out.println(min + \" \" + max);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint min = n;\n\t\tint max = n;\n\t\twhile(sc.hasNextInt()){\n\t\t\tn = sc.nextInt();\n\t\t\tif(n < min){\n\t\t\t\tmin = n;\n\t\t\t}\n\t\t\tif(n > max){\n\t\t\t\tmax = n;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(min + \" \" + max);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter a number between 1 and 18\");\n\t\tint number = input.nextInt();\n\t\tif(number >= 1 && number <= 18){\n\t\t\tSystem.out.println(\"The number is between 1 and 18\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"The number is not between 1 and 18\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint min = 1;\n\t\tint max = 18;\n\t\tif(n >= min && n <= max){\n\t\t\tSystem.out.println(\"yes\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"no\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "513",
    "source": "soSearches",
    "language": "java",
    "query": "java how to print money values with dollar signs",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble money = 12345.67;\n\t\tSystem.out.println(\"$\" + money);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 12345.67;\n\t\tSystem.out.println(d);\n\t\tSystem.out.println(String.format(\"$%.2f\", d));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble money = 1234567.89;\n\t\tSystem.out.println(money);\n\t\tSystem.out.println(\"$\" + money);\n\t\tSystem.out.println(\"$\" + money + \"0\");\n\t\tSystem.out.println(\"$\" + money + \"00\");\n\t\tSystem.out.println(\"$\" + money + \"000\");\n\t\tSystem.out.println(\"$\" + money + \"0000\");\n\t\tSystem.out.println(\"$\" + money + \"00000\");\n\t\tSystem.out.println(\"$\" + money + \"000000\");\n\t\tSystem.out.println(\"$\" + money + \"0000000\");\n\t\tSystem.out.println(\"$\" + money + \"00000000\");\n\t\tSystem.out.println(\"$\" + money + \"000000000\");\n\t\tSystem.out.println(\"$\" + money + \"0000000000\");\n\t\tSystem.out.println(\"$\" + money + \"00000000000\");\n\t\tSystem.out.println(\"$\" + money + \"000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"0000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"00000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"0000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"00000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"000000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"0000000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"00000000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"000000000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"0000000000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"00000000000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"000000000000000000000000\");\n\t\tSystem.out.println(\"$\" + money + \"0000000000000000000000000\");\n\t\tSystem.out.println(\"\n",
        "\tstatic void main(String[] args){\n\t\tint money = 100;\n\t\tSystem.out.println(\"$\" + money);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble money = 12345.67;\n\t\tSystem.out.printf(\"$%.2f\", money);\n\t}\n}\n"
    ],
    "results": 5
},{
    "id": "514",
    "source": "soSearches",
    "language": "java",
    "query": "how to check html elemnet exist a particular class in java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString clazz = \"class\";\n\t\tString id = \"id\";\n\t\tString tag = \"tag\";\n\t\tString tagName = \"tagName\";\n\t\tString tagType = \"tagType\";\n\t\tString tagValue = \"tagValue\";\n\t\tString tagText = \"tagText\";\n\t\tString tagAttr = \"tagAttr\";\n\t\tString tagAttrValue = \"tagAttrValue\";\n\t\tString tagAttrName = \"tagAttrName\";\n\t\tString tagAttrType = \"tagAttrType\";\n\t\tString tagAttrText = \"tagAttrText\";\n\t\tString tagAttrValueText = \"tagAttrValueText\";\n\t\tString tagAttrValueType = \"tagAttrValueType\";\n\t\tString tagAttrValueTypeText = \"tagAttrValueTypeText\";\n\t\tString tagAttrValueTypeValue = \"tagAttrValueTypeValue\";\n\t\tString tagAttrValueTypeValueText = \"tagAttrValueTypeValueText\";\n\t\tString tagAttrValueTypeValueValue = \"tagAttrValueTypeValueValue\";\n\t\tString tagAttrValueTypeValueValueText = \"tagAttrValueTypeValueValueText\";\n\t\tString tagAttrValueTypeValueValueValue = \"tagAttrValueTypeValueValueValue\";\n\t\tString tagAttrValueTypeValueValueValueText = \"tagAttrValueTypeValueValueValueText\";\n\t\tString tagAttrValueTypeValueValueValueValue = \"tagAttrValueTypeValueValueValueValue\";\n\t\tString tagAttrValueTypeValueValueValueValueText = \"tagAttrValueTypeValueValueValueValueText\";\n\t\tString tagAttrValueTypeValueValueValueValueValue = \"tagAttrValueTypeValueValueValueValueValue\";\n\t\tString tagAttrValueTypeValueValueValueValueValueText = \"tagAttrValueTypeValueValueValueValueValueText\";\n\t\tString tagAttrValueTypeValueValueValueValueValueValue = \"tagAttrValueTypeValueValueValueValueValueValue\";\n\t\tString tagAttrValueTypeValueValueValueValueValueValueText = \"tagAttrValueType\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"<html><body><div class='test'></div></body></html>\";\n\t\tDocument doc=Jsoup.parse(str);\n\t\tElement div=doc.getElementsByClass(\"test\").first();\n\t\tSystem.out.println(div.hasClass(\"test\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"<html><body><div class='test'></div></body></html>\";\n\t\tDocument doc=Jsoup.parse(str);\n\t\tElements el=doc.getElementsByClass(\"test\");\n\t\tSystem.out.println(el.size());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str1=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str2=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str3=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str4=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str5=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str6=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str7=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str8=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str9=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str10=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str11=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str12=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str13=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str14=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str15=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str16=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str17=\"<html><body><div class='test'></div></body></html>\";\n\t\tString str18=\"<html><body><div class='test'></div></body></\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"<html><body><div class='test'></div></body></html>\";\n\t\tDocument doc=Jsoup.parse(s);\n\t\tElement e=doc.getElementsByClass(\"test\").first();\n\t\tSystem.out.println(e.hasClass(\"test\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s1=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s2=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s3=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s4=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s5=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s6=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s7=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s8=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s9=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s10=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s11=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s12=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s13=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s14=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s15=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s16=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s17=\"<html><body><div class='test'></div></body></html>\";\n\t\tString s18=\"<html><body><div class='test'></div></body></\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"<html><body><div class='test'><div class='test1'><div class='test2'></div></div></div></body></html>\";\n\t\tDocument doc=Jsoup.parse(str);\n\t\tElements elements=doc.getElementsByClass(\"test2\");\n\t\tSystem.out.println(elements.size());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s1=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s2=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s3=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s4=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s5=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s6=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s7=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s8=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s9=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s10=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s11=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s12=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s13=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s14=\"<html><body><div class='test'><p>test</p></div></body></html>\";\n\t\tString s15=\"<html><body><div class='test'><p>test</p></div></\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s1 = \"</div>\";\n\t\tString s2 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s3 = \"</div>\";\n\t\tString s4 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s5 = \"</div>\";\n\t\tString s6 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s7 = \"</div>\";\n\t\tString s8 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s9 = \"</div>\";\n\t\tString s10 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s11 = \"</div>\";\n\t\tString s12 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s13 = \"</div>\";\n\t\tString s14 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s15 = \"</div>\";\n\t\tString s16 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s17 = \"</div>\";\n\t\tString s18 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s19 = \"</div>\";\n\t\tString s20 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s21 = \"</div>\";\n\t\tString s22 = \"<div class=\\\"col-md-4 col-sm-6 col-xs-12\\\">\";\n\t\tString s23 = \"</div>\";\n\t\tString s24 = \"<div class\n"
    ],
    "results": 9
},{
    "id": "515",
    "source": "soSearches",
    "language": "java",
    "query": "how to find out if a element is in array in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint num = 5;\n\t\tboolean found = false;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] == num){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(found){\n\t\t\tSystem.out.println(num + \" is in the array\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(num + \" is not in the array\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint num = 5;\n\t\tboolean found = false;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] == num){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(found){\n\t\t\tSystem.out.println(\"found\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"not found\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint num = 5;\n\t\tboolean found = false;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] == num){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(found){\n\t\t\tSystem.out.println(\"Found\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not Found\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint n = 5;\n\t\tboolean isPresent = false;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tif(arr[i]==n){\n\t\t\t\tisPresent = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(isPresent){\n\t\t\tSystem.out.println(\"Element is present\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Element is not present\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint x = 5;\n\t\tboolean found = false;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] == x){\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(found){\n\t\t\tSystem.out.println(\"Found\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not Found\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint n = 5;\n\t\tboolean flag = false;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tif(arr[i]==n){\n\t\t\t\tflag = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag){\n\t\t\tSystem.out.println(\"Element is present in array\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Element is not present in array\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "516",
    "source": "soSearches",
    "language": "java",
    "query": "how to put a one euatiion for many variables in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10,b=20,c=30;\n\t\tSystem.out.println(a+b+c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=30;\n\t\tint d=40;\n\t\tint e=50;\n\t\tint f=60;\n\t\tint g=70;\n\t\tint h=80;\n\t\tint i=90;\n\t\tint j=100;\n\t\tint k=110;\n\t\tint l=120;\n\t\tint m=130;\n\t\tint n=140;\n\t\tint o=150;\n\t\tint p=160;\n\t\tint q=170;\n\t\tint r=180;\n\t\tint s=190;\n\t\tint t=200;\n\t\tint u=210;\n\t\tint v=220;\n\t\tint w=230;\n\t\tint x=240;\n\t\tint y=250;\n\t\tint z=260;\n\t\tint aa=270;\n\t\tint bb=280;\n\t\tint cc=290;\n\t\tint dd=300;\n\t\tint ee=310;\n\t\tint ff=320;\n\t\tint gg=330;\n\t\tint hh=340;\n\t\tint ii=350;\n\t\tint jj=360;\n\t\tint kk=370;\n\t\tint ll=380;\n\t\tint mm=390;\n\t\tint nn=400;\n\t\tint oo=410;\n\t\tint pp=420;\n\t\tint qq=430;\n\t\tint rr=440;\n\t\tint ss=450;\n\t\tint tt=460;\n\t\tint uu=470;\n\t\tint vv=480;\n\t\tint ww=490;\n\t\tint xx=500;\n\t\tint yy=510;\n\t\tint zz=520;\n\t\tint aaa=530;\n\t\tint bbb=540;\n\t\tint ccc=550;\n\t\tint ddd=560;\n\t\tint eee=570;\n\t\tint fff=580;\n",
        "\tvoid method(){\n\t\tint a=1,b=2,c=3;\n\t\tSystem.out.println(a+b+c);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "517",
    "source": "soSearches",
    "language": "java",
    "query": "how to compare doubles in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble d1 = 0.1;\n\t\tdouble d2 = 0.2;\n\t\tdouble d3 = 0.3;\n\t\tdouble d4 = 0.4;\n\t\tdouble d5 = 0.5;\n\t\tdouble d6 = 0.6;\n\t\tdouble d7 = 0.7;\n\t\tdouble d8 = 0.8;\n\t\tdouble d9 = 0.9;\n\t\tdouble d10 = 1.0;\n\t\tdouble d11 = 1.1;\n\t\tdouble d12 = 1.2;\n\t\tdouble d13 = 1.3;\n\t\tdouble d14 = 1.4;\n\t\tdouble d15 = 1.5;\n\t\tdouble d16 = 1.6;\n\t\tdouble d17 = 1.7;\n\t\tdouble d18 = 1.8;\n\t\tdouble d19 = 1.9;\n\t\tdouble d20 = 2.0;\n\t\tdouble d21 = 2.1;\n\t\tdouble d22 = 2.2;\n\t\tdouble d23 = 2.3;\n\t\tdouble d24 = 2.4;\n\t\tdouble d25 = 2.5;\n\t\tdouble d26 = 2.6;\n\t\tdouble d27 = 2.7;\n\t\tdouble d28 = 2.8;\n\t\tdouble d29 = 2.9;\n\t\tdouble d30 = 3.0;\n\t\tdouble d31 = 3.1;\n\t\tdouble d32 = 3.2;\n\t\tdouble d33 = 3.3;\n\t\tdouble d34 = 3.4;\n\t\tdouble d35 = 3.5;\n\t\tdouble d36 = 3.6;\n\t\tdouble d37 = 3.7;\n\t\tdouble d38 = 3.8;\n\t\tdouble d39 = 3.9;\n\t\tdouble d40 = 4.0;\n\t\tdouble d41 = 4.1;\n\t\tdouble d42 = 4.2;\n\t\tdouble d43 = 4.3;\n\t\tdouble d44 = 4.4;\n\t\tdouble d45\n",
        "\tstatic void main(String[] args){\n\t\tdouble a = 0.1;\n\t\tdouble b = 0.2;\n\t\tdouble c = 0.3;\n\t\tdouble d = 0.4;\n\t\tdouble e = 0.5;\n\t\tdouble f = 0.6;\n\t\tdouble g = 0.7;\n\t\tdouble h = 0.8;\n\t\tdouble i = 0.9;\n\t\tdouble j = 1.0;\n\t\tdouble k = 1.1;\n\t\tdouble l = 1.2;\n\t\tdouble m = 1.3;\n\t\tdouble n = 1.4;\n\t\tdouble o = 1.5;\n\t\tdouble p = 1.6;\n\t\tdouble q = 1.7;\n\t\tdouble r = 1.8;\n\t\tdouble s = 1.9;\n\t\tdouble t = 2.0;\n\t\tdouble u = 2.1;\n\t\tdouble v = 2.2;\n\t\tdouble w = 2.3;\n\t\tdouble x = 2.4;\n\t\tdouble y = 2.5;\n\t\tdouble z = 2.6;\n\t\tdouble aa = 2.7;\n\t\tdouble bb = 2.8;\n\t\tdouble cc = 2.9;\n\t\tdouble dd = 3.0;\n\t\tdouble ee = 3.1;\n\t\tdouble ff = 3.2;\n\t\tdouble gg = 3.3;\n\t\tdouble hh = 3.4;\n\t\tdouble ii = 3.5;\n\t\tdouble jj = 3.6;\n\t\tdouble kk = 3.7;\n\t\tdouble ll = 3.8;\n\t\tdouble mm = 3.9;\n\t\tdouble nn = 4.0;\n\t\tdouble oo = 4.1;\n\t\tdouble pp = 4.2;\n\t\tdouble qq = 4.3;\n\t\tdouble rr = 4.4;\n\t\tdouble ss = 4.5;\n\t\tdouble tt = 4.6;\n\t\tdouble uu = 4.7;\n\t\tdouble vv =\n",
        "\tstatic void main(String[] args){\n\t\tdouble d1 = 1.0;\n\t\tdouble d2 = 1.0;\n\t\tdouble d3 = 1.0;\n\t\tdouble d4 = 1.0;\n\t\tdouble d5 = 1.0;\n\t\tdouble d6 = 1.0;\n\t\tdouble d7 = 1.0;\n\t\tdouble d8 = 1.0;\n\t\tdouble d9 = 1.0;\n\t\tdouble d10 = 1.0;\n\t\tdouble d11 = 1.0;\n\t\tdouble d12 = 1.0;\n\t\tdouble d13 = 1.0;\n\t\tdouble d14 = 1.0;\n\t\tdouble d15 = 1.0;\n\t\tdouble d16 = 1.0;\n\t\tdouble d17 = 1.0;\n\t\tdouble d18 = 1.0;\n\t\tdouble d19 = 1.0;\n\t\tdouble d20 = 1.0;\n\t\tdouble d21 = 1.0;\n\t\tdouble d22 = 1.0;\n\t\tdouble d23 = 1.0;\n\t\tdouble d24 = 1.0;\n\t\tdouble d25 = 1.0;\n\t\tdouble d26 = 1.0;\n\t\tdouble d27 = 1.0;\n\t\tdouble d28 = 1.0;\n\t\tdouble d29 = 1.0;\n\t\tdouble d30 = 1.0;\n\t\tdouble d31 = 1.0;\n\t\tdouble d32 = 1.0;\n\t\tdouble d33 = 1.0;\n\t\tdouble d34 = 1.0;\n\t\tdouble d35 = 1.0;\n\t\tdouble d36 = 1.0;\n\t\tdouble d37 = 1.0;\n\t\tdouble d38 = 1.0;\n\t\tdouble d39 = 1.0;\n\t\tdouble d40 = 1.0;\n\t\tdouble d41 = 1.0;\n\t\tdouble d42 = 1.0;\n\t\tdouble d43 = 1.0;\n\t\tdouble d44 = 1.0;\n\t\tdouble d45\n",
        "\tstatic void main(String[] args){\n\t\tdouble a = 0.1;\n\t\tdouble b = 0.2;\n\t\tif(a == b){\n\t\t\tSystem.out.println(\"a and b are equal\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"a and b are not equal\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "518",
    "source": "soSearches",
    "language": "java",
    "query": "how to implement blowfish algorithm in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString plaintext = \"Hello World\";\n\t\tString key = \"password\";\n\t\tString ciphertext = encrypt(plaintext, key);\n\t\tSystem.out.println(ciphertext);\n\t\tString decryptedtext = decrypt(ciphertext, key);\n\t\tSystem.out.println(decryptedtext);\n\t}\n\tpublic static String encrypt(String plaintext, String key){\n\t\tString ciphertext = \"\";\n\t\tint[] key_schedule = key_expansion(key);\n\t\tint[] plaintext_schedule = plaintext_to_schedule(plaintext);\n\t\tint[] ciphertext_schedule = encrypt_schedule(plaintext_schedule, key_schedule);\n\t\tciphertext = schedule_to_ciphertext(ciphertext_schedule);\n\t\treturn ciphertext;\n\t}\n\tpublic static String decrypt(String ciphertext, String key){\n\t\tString plaintext = \"\";\n\t\tint[] key_schedule = key_expansion(key);\n\t\tint[] ciphertext_schedule = ciphertext_to_schedule(ciphertext);\n\t\tint[] plaintext_schedule = decrypt_schedule(ciphertext_schedule, key_schedule);\n\t\tplaintext = schedule_to_plaintext(plaintext_schedule);\n\t\treturn plaintext;\n\t}\n\tpublic static int[] plaintext_to_schedule(String plaintext){\n\t\tint[] schedule = new int[plaintext.length() * 8];\n\t\tfor(int i = 0; i < plaintext.length(); i++){\n\t\t\tint temp = (int)plaintext.charAt(i);\n\t\t\tfor(int j = 0; j < 8; j++){\n\t\t\t\tschedule[i * 8 + j] = temp % 2;\n\t\t\t\ttemp = temp / 2;\n\t\t\t}\n\t\t}\n\t\treturn schedule;\n\t}\n\tpublic static int[] ciphertext_to_schedule(String ciphertext){\n\t\tint[] schedule = new int[cipher\n",
        "\tstatic void main(String[] args){\n\t\tString plaintext = \"Hello World\";\n\t\tString key = \"password\";\n\t\tString ciphertext = encrypt(plaintext, key);\n\t\tSystem.out.println(ciphertext);\n\t\tString decryptedtext = decrypt(ciphertext, key);\n\t\tSystem.out.println(decryptedtext);\n\t}\n\tpublic static String encrypt(String plaintext, String key){\n\t\tString ciphertext = \"\";\n\t\tint[] key_schedule = key_expansion(key);\n\t\tint[] plaintext_int = string_to_int(plaintext);\n\t\tint[] ciphertext_int = encrypt_block(plaintext_int, key_schedule);\n\t\tciphertext = int_to_string(ciphertext_int);\n\t\treturn ciphertext;\n\t}\n\tpublic static String decrypt(String ciphertext, String key){\n\t\tString plaintext = \"\";\n\t\tint[] key_schedule = key_expansion(key);\n\t\tint[] ciphertext_int = string_to_int(ciphertext);\n\t\tint[] plaintext_int = decrypt_block(ciphertext_int, key_schedule);\n\t\tplaintext = int_to_string(plaintext_int);\n\t\treturn plaintext;\n\t}\n\tpublic static int[] encrypt_block(int[] plaintext_int, int[] key_schedule){\n\t\tint[] ciphertext_int = new int[plaintext_int.length];\n\t\tint[] temp_int = new int[plaintext_int.length];\n\t\tfor(int i = 0; i < plaintext_int.length; i++){\n\t\t\ttemp_int[i] = plaintext_int[i];\n\t\t}\n\t\tfor(int i = 0; i < plaintext_int.length; i++){\n\t\t\tciphertext_int[i] = temp_int[i] ^ key_schedule[i];\n\t\t}\n\t\tfor(int i = 0; i < plaintext_int.length; i++){\n\t\t\tc\n",
        "\tstatic void main(String[] args){\n\t\tString plaintext = \"Hello World\";\n\t\tString key = \"password\";\n\t\tString ciphertext = encrypt(plaintext, key);\n\t\tSystem.out.println(ciphertext);\n\t\tString plaintext2 = decrypt(ciphertext, key);\n\t\tSystem.out.println(plaintext2);\n\t}\n\tpublic static String encrypt(String plaintext, String key){\n\t\tString ciphertext = \"\";\n\t\tint[] plaintext_int = string_to_int(plaintext);\n\t\tint[] key_int = string_to_int(key);\n\t\tint[] ciphertext_int = new int[plaintext_int.length];\n\t\tfor(int i = 0; i < plaintext_int.length; i++){\n\t\t\tciphertext_int[i] = plaintext_int[i] ^ key_int[i % key_int.length];\n\t\t}\n\t\tciphertext = int_to_string(ciphertext_int);\n\t\treturn ciphertext;\n\t}\n\tpublic static String decrypt(String ciphertext, String key){\n\t\tString plaintext = \"\";\n\t\tint[] ciphertext_int = string_to_int(ciphertext);\n\t\tint[] key_int = string_to_int(key);\n\t\tint[] plaintext_int = new int[ciphertext_int.length];\n\t\tfor(int i = 0; i < ciphertext_int.length; i++){\n\t\t\tplaintext_int[i] = ciphertext_int[i] ^ key_int[i % key_int.length];\n\t\t}\n\t\tplaintext = int_to_string(plaintext_int);\n\t\treturn plaintext;\n\t}\n\tpublic static int[] string_to_int(String str){\n\t\tint[] int_array = new int[str.length()];\n\t\tfor(int i = 0; i < str.length(); i++){\n\t\t\tint_array[i] = (int)str.charAt(i);\n\t\t}\n",
        "\tstatic void main(String[] args){\n\t\tString plainText = \"Hello World\";\n\t\tString key = \"password\";\n\t\tString cipherText = encrypt(plainText, key);\n\t\tSystem.out.println(cipherText);\n\t\tString decryptedText = decrypt(cipherText, key);\n\t\tSystem.out.println(decryptedText);\n\t}\n\tpublic static String encrypt(String plainText, String key){\n\t\tString cipherText = \"\";\n\t\tint keyLength = key.length();\n\t\tint plainTextLength = plainText.length();\n\t\tint i = 0;\n\t\twhile(i < plainTextLength){\n\t\t\tint j = 0;\n\t\t\twhile(j < keyLength){\n\t\t\t\tcipherText += (char)(plainText.charAt(i) ^ key.charAt(j));\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t\tif(i >= plainTextLength){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cipherText;\n\t}\n\tpublic static String decrypt(String cipherText, String key){\n\t\tString plainText = \"\";\n\t\tint keyLength = key.length();\n\t\tint cipherTextLength = cipherText.length();\n\t\tint i = 0;\n\t\twhile(i < cipherTextLength){\n\t\t\tint j = 0;\n\t\t\twhile(j < keyLength){\n\t\t\t\tplainText += (char)(cipherText.charAt(i) ^ key.charAt(j));\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t\tif(i >= cipherTextLength){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn plainText;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString plainText = \"Hello World\";\n\t\tString key = \"password\";\n\t\tString cipherText = encrypt(plainText, key);\n\t\tSystem.out.println(\"Cipher Text: \" + cipherText);\n\t\tString plainText2 = decrypt(cipherText, key);\n\t\tSystem.out.println(\"Plain Text: \" + plainText2);\n\t}\n\tpublic static String encrypt(String plainText, String key){\n\t\tString cipherText = \"\";\n\t\tint[] keyArray = new int[key.length()];\n\t\tint[] plainTextArray = new int[plainText.length()];\n\t\tint[] cipherTextArray = new int[plainText.length()];\n\t\tfor(int i = 0; i < key.length(); i++){\n\t\t\tkeyArray[i] = (int)key.charAt(i);\n\t\t}\n\t\tfor(int i = 0; i < plainText.length(); i++){\n\t\t\tplainTextArray[i] = (int)plainText.charAt(i);\n\t\t}\n\t\tfor(int i = 0; i < plainText.length(); i++){\n\t\t\tcipherTextArray[i] = plainTextArray[i] ^ keyArray[i % key.length()];\n\t\t}\n\t\tfor(int i = 0; i < plainText.length(); i++){\n\t\t\tcipherText += (char)cipherTextArray[i];\n\t\t}\n\t\treturn cipherText;\n\t}\n\tpublic static String decrypt(String cipherText, String key){\n\t\tString plainText = \"\";\n\t\tint[] keyArray = new int[key.length()];\n\t\tint[] cipherTextArray = new int[cipherText.length()];\n\t\tint[] plainTextArray = new int[cipherText.length()];\n\t\tfor(int i = 0; i < key.length(); i++){\n\t\t\tkeyArray[i] = (int)key.charAt(i);\n\t\t}\n\t\tfor(int i = 0; i\n",
        "\tstatic void main(String[] args){\n\t\tString plainText = \"Hello World\";\n\t\tString key = \"password\";\n\t\tString cipherText = encrypt(plainText, key);\n\t\tSystem.out.println(\"Cipher Text: \" + cipherText);\n\t\tString decryptedText = decrypt(cipherText, key);\n\t\tSystem.out.println(\"Decrypted Text: \" + decryptedText);\n\t}\n\tpublic static String encrypt(String plainText, String key){\n\t\tString cipherText = \"\";\n\t\tint[] keyArray = new int[key.length()];\n\t\tfor(int i = 0; i < key.length(); i++){\n\t\t\tkeyArray[i] = key.charAt(i);\n\t\t}\n\t\tint[] plainTextArray = new int[plainText.length()];\n\t\tfor(int i = 0; i < plainText.length(); i++){\n\t\t\tplainTextArray[i] = plainText.charAt(i);\n\t\t}\n\t\tint[] cipherTextArray = new int[plainText.length()];\n\t\tfor(int i = 0; i < plainText.length(); i++){\n\t\t\tcipherTextArray[i] = plainTextArray[i] ^ keyArray[i % key.length()];\n\t\t}\n\t\tfor(int i = 0; i < plainText.length(); i++){\n\t\t\tcipherText += (char)cipherTextArray[i];\n\t\t}\n\t\treturn cipherText;\n\t}\n\tpublic static String decrypt(String cipherText, String key){\n\t\tString plainText = \"\";\n\t\tint[] keyArray = new int[key.length()];\n\t\tfor(int i = 0; i < key.length(); i++){\n\t\t\tkeyArray[i] = key.charAt(i);\n\t\t}\n\t\tint[] cipherTextArray = new int[cipherText.length()];\n\t\tfor(int i = 0; i < cipherText.length(); i++){\n\t\t\tcipherTextArray[i] = cipherText.charAt(i\n",
        "\tstatic void main(String[] args){\n\t\tString plainText = \"Hello World\";\n\t\tString key = \"password\";\n\t\tString cipherText = encrypt(plainText, key);\n\t\tSystem.out.println(\"cipherText: \" + cipherText);\n\t\tString decryptedText = decrypt(cipherText, key);\n\t\tSystem.out.println(\"decryptedText: \" + decryptedText);\n\t}\n\tpublic static String encrypt(String plainText, String key){\n\t\tString cipherText = \"\";\n\t\tint keyLength = key.length();\n\t\tint plainTextLength = plainText.length();\n\t\tint i = 0;\n\t\twhile(i < plainTextLength){\n\t\t\tint j = 0;\n\t\t\twhile(j < keyLength){\n\t\t\t\tcipherText += (char)(plainText.charAt(i) ^ key.charAt(j));\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t\tif(i >= plainTextLength){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cipherText;\n\t}\n\tpublic static String decrypt(String cipherText, String key){\n\t\tString plainText = \"\";\n\t\tint keyLength = key.length();\n\t\tint cipherTextLength = cipherText.length();\n\t\tint i = 0;\n\t\twhile(i < cipherTextLength){\n\t\t\tint j = 0;\n\t\t\twhile(j < keyLength){\n\t\t\t\tplainText += (char)(cipherText.charAt(i) ^ key.charAt(j));\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t\tif(i >= cipherTextLength){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn plainText;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString key = \"password\";\n\t\tString plaintext = \"Hello World\";\n\t\tString ciphertext = encrypt(plaintext, key);\n\t\tSystem.out.println(ciphertext);\n\t\tString decrypted = decrypt(ciphertext, key);\n\t\tSystem.out.println(decrypted);\n\t}\n\tpublic static String encrypt(String plaintext, String key){\n\t\tString ciphertext = \"\";\n\t\tint key_length = key.length();\n\t\tint plaintext_length = plaintext.length();\n\t\tint i = 0;\n\t\twhile(i < plaintext_length){\n\t\t\tint j = 0;\n\t\t\twhile(j < key_length){\n\t\t\t\tciphertext += (char)(plaintext.charAt(i) ^ key.charAt(j));\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t\tif(i >= plaintext_length)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn ciphertext;\n\t}\n\tpublic static String decrypt(String ciphertext, String key){\n\t\tString plaintext = \"\";\n\t\tint key_length = key.length();\n\t\tint ciphertext_length = ciphertext.length();\n\t\tint i = 0;\n\t\twhile(i < ciphertext_length){\n\t\t\tint j = 0;\n\t\t\twhile(j < key_length){\n\t\t\t\tplaintext += (char)(ciphertext.charAt(i) ^ key.charAt(j));\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t\tif(i >= ciphertext_length)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn plaintext;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString plaintext = \"Hello World\";\n\t\tString key = \"Password\";\n\t\tString ciphertext = encrypt(plaintext, key);\n\t\tSystem.out.println(ciphertext);\n\t\tString plaintext2 = decrypt(ciphertext, key);\n\t\tSystem.out.println(plaintext2);\n\t}\n\tpublic static String encrypt(String plaintext, String key){\n\t\tString ciphertext = \"\";\n\t\tint[] plaintext_int = new int[plaintext.length()];\n\t\tint[] key_int = new int[key.length()];\n\t\tint[] ciphertext_int = new int[plaintext.length()];\n\t\tfor(int i = 0; i < plaintext.length(); i++){\n\t\t\tplaintext_int[i] = (int)plaintext.charAt(i);\n\t\t}\n\t\tfor(int i = 0; i < key.length(); i++){\n\t\t\tkey_int[i] = (int)key.charAt(i);\n\t\t}\n\t\tfor(int i = 0; i < plaintext.length(); i++){\n\t\t\tciphertext_int[i] = plaintext_int[i] ^ key_int[i];\n\t\t}\n\t\tfor(int i = 0; i < plaintext.length(); i++){\n\t\t\tciphertext += (char)ciphertext_int[i];\n\t\t}\n\t\treturn ciphertext;\n\t}\n\tpublic static String decrypt(String ciphertext, String key){\n\t\tString plaintext = \"\";\n\t\tint[] ciphertext_int = new int[ciphertext.length()];\n\t\tint[] key_int = new int[key.length()];\n\t\tint[] plaintext_int = new int[ciphertext.length()];\n\t\tfor(int i = 0; i < ciphertext.length(); i++){\n\t\t\tciphertext_int[i] = (int)ciphertext.charAt(i);\n\t\t}\n\t\tfor(int i = 0\n",
        "\tstatic void main(String[] args){\n\t\tString key = \"password\";\n\t\tString text = \"Hello World\";\n\t\tString cipher = encrypt(text, key);\n\t\tSystem.out.println(cipher);\n\t\tString plain = decrypt(cipher, key);\n\t\tSystem.out.println(plain);\n\t}\n\tpublic static String encrypt(String text, String key){\n\t\tString cipher = \"\";\n\t\tint keyLength = key.length();\n\t\tint textLength = text.length();\n\t\tint i = 0;\n\t\twhile(i < textLength){\n\t\t\tint j = 0;\n\t\t\twhile(j < keyLength){\n\t\t\t\tcipher += (char)(text.charAt(i) ^ key.charAt(j));\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t\tif(i >= textLength)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn cipher;\n\t}\n\tpublic static String decrypt(String cipher, String key){\n\t\tString text = \"\";\n\t\tint keyLength = key.length();\n\t\tint cipherLength = cipher.length();\n\t\tint i = 0;\n\t\twhile(i < cipherLength){\n\t\t\tint j = 0;\n\t\t\twhile(j < keyLength){\n\t\t\t\ttext += (char)(cipher.charAt(i) ^ key.charAt(j));\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t\tif(i >= cipherLength)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "519",
    "source": "soSearches",
    "language": "java",
    "query": "how to run java program on eclipse ee edition",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "520",
    "source": "soSearches",
    "language": "java",
    "query": "how to random percent in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint random = (int)(Math.random()*100);\n\t\tSystem.out.println(random);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint random = r.nextInt(100);\n\t\tSystem.out.println(random);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "521",
    "source": "soSearches",
    "language": "java",
    "query": "how to return double java",
    "snippets": [
        "\tdouble getDouble(){\n\t\treturn 1.0;\n\t}\n}\n",
        "\tdouble getDouble(){\n\t\treturn 0.0;\n\t}\n}\n",
        "\tstatic double getDouble(){\n\t\treturn 1.0;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "522",
    "source": "soSearches",
    "language": "java",
    "query": "how to get the directory in image stored java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\User\\\\Desktop\\\\image.jpg\";\n\t\tString dir = path.substring(0, path.lastIndexOf(\"\\\\\"));\n\t\tSystem.out.println(dir);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\image.jpg\";\n\t\tString dir = path.substring(0, path.lastIndexOf(\"\\\\\"));\n\t\tSystem.out.println(dir);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\Public\\\\Pictures\\\\Sample Pictures\\\\\";\n\t\tFile file = new File(path);\n\t\tString[] list = file.list();\n\t\tfor(int i = 0; i < list.length; i++){\n\t\t\tSystem.out.println(list[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\image.jpg\";\n\t\tString dir = path.substring(0, path.lastIndexOf(\"\\\\\"));\n\t\tSystem.out.println(dir);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\Sai\\\\Desktop\\\\image.jpg\";\n\t\tSystem.out.println(path.substring(0,path.lastIndexOf(\"\\\\\")));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\sachin\\\\Desktop\\\\image.jpg\";\n\t\tSystem.out.println(path.substring(0,path.lastIndexOf(\"\\\\\")));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\Sourav\\\\Desktop\\\\image.jpg\";\n\t\tSystem.out.println(path.substring(0,path.lastIndexOf(\"\\\\\")));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\sri\\\\Desktop\\\\image.jpg\";\n\t\tSystem.out.println(path.substring(0,path.lastIndexOf(\"\\\\\")));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\soumya\\\\Desktop\\\\image.jpg\";\n\t\tString dir = path.substring(0, path.lastIndexOf(\"\\\\\"));\n\t\tSystem.out.println(dir);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\siva\\\\Desktop\\\\image.jpg\";\n\t\tString dir = path.substring(0,path.lastIndexOf(\"\\\\\"));\n\t\tSystem.out.println(dir);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "523",
    "source": "soSearches",
    "language": "java",
    "query": "java draw line,how to define a line with",
    "snippets": [
        "\tvoid drawLine(int x1,int y1,int x2,int y2){\n\t\tSystem.out.println(\"draw line from (\"+x1+\",\"+y1+\") to (\"+x2+\",\"+y2+\")\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "524",
    "source": "soSearches",
    "language": "java",
    "query": "java how to print in console with junit",
    "snippets": [
        "\tvoid print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "525",
    "source": "soSearches",
    "language": "java",
    "query": "how to intantiate a class in java",
    "snippets": [
        "\tClazz(){\n\t\tSystem.out.println(\"I am a class\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "526",
    "source": "soSearches",
    "language": "java",
    "query": "how to check windows 10 in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString os = System.getProperty(\"os.name\");\n\t\tSystem.out.println(os);\n\t\tif(os.contains(\"Windows\")){\n\t\t\tSystem.out.println(\"Windows 10\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not Windows 10\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString os = System.getProperty(\"os.name\");\n\t\tif(os.contains(\"Windows\")){\n\t\t\tSystem.out.println(\"Windows 10\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not windows\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString os = System.getProperty(\"os.name\");\n\t\tif(os.contains(\"Windows\")){\n\t\t\tSystem.out.println(\"Windows\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not Windows\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString os = System.getProperty(\"os.name\");\n\t\tSystem.out.println(os);\n\t\tif(os.contains(\"Windows 10\")){\n\t\t\tSystem.out.println(\"Windows 10\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not Windows 10\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.getProperty(\"os.name\"));\n\t\tif(System.getProperty(\"os.name\").contains(\"Windows\")){\n\t\t\tSystem.out.println(\"Windows 10\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not Windows 10\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.getProperty(\"os.name\"));\n\t\tif(System.getProperty(\"os.name\").contains(\"Windows\")){\n\t\t\tSystem.out.println(\"Windows 10\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not windows\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.getProperty(\"os.name\"));\n\t\tif(System.getProperty(\"os.name\").contains(\"Windows\")){\n\t\t\tSystem.out.println(\"Windows\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not Windows\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString os = System.getProperty(\"os.name\");\n\t\tif(os.contains(\"Windows 10\")){\n\t\t\tSystem.out.println(\"Windows 10\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not windows 10\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "527",
    "source": "soSearches",
    "language": "java",
    "query": "how to build a website on java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "528",
    "source": "soSearches",
    "language": "java",
    "query": "how to set textarea from  javafx",
    "snippets": [
        "\tvoid setText(String text){\n\t\tSystem.out.println(text);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "529",
    "source": "soSearches",
    "language": "java",
    "query": "how to execute netstat parameters in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tProcess p = Runtime.getRuntime().exec(\"netstat -an\");\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tProcess p = Runtime.getRuntime().exec(\"netstat -an\");\n\t\t\tBufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line = null;\n\t\t\twhile((line = input.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tinput.close();\n\t\t}\n\t\tcatch(Exception err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] netstat = {\"netstat\",\"-an\"};\n\t\tProcess p = null;\n\t\ttry{\n\t\t\tp = Runtime.getRuntime().exec(netstat);\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line = null;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tProcess p;\n\t\ttry{\n\t\t\tp = Runtime.getRuntime().exec(\"netstat -an\");\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] netstatParams = {\"-an\"};\n\t\tProcess p = null;\n\t\ttry{\n\t\t\tp = Runtime.getRuntime().exec(\"netstat\", netstatParams);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\tString line = null;\n\t\ttry{\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] netstatParams = {\"-an\"};\n\t\tProcess p = null;\n\t\ttry{\n\t\t\tp = Runtime.getRuntime().exec(\"netstat\", netstatParams);\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] netstatParams = {\"-an\"};\n\t\tProcess p = null;\n\t\ttry{\n\t\t\tp = Runtime.getRuntime().exec(\"netstat\", netstatParams);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in executing netstat\");\n\t\t}\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\tString line = null;\n\t\ttry{\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception in reading from netstat\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] netstatParams = {\"netstat\",\"-an\"};\n\t\tProcessBuilder pb = new ProcessBuilder(netstatParams);\n\t\ttry{\n\t\t\tProcess p = pb.start();\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] netstatParams = {\"-a\",\"-n\",\"-o\"};\n\t\tString[] netstatParams2 = {\"-a\",\"-n\",\"-o\",\"-t\"};\n\t\tString[] netstatParams3 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\"};\n\t\tString[] netstatParams4 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\"};\n\t\tString[] netstatParams5 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\",\"-s\"};\n\t\tString[] netstatParams6 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\",\"-s\",\"-l\"};\n\t\tString[] netstatParams7 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\",\"-s\",\"-l\",\"-f\"};\n\t\tString[] netstatParams8 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\",\"-s\",\"-l\",\"-f\",\"-m\"};\n\t\tString[] netstatParams9 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\",\"-s\",\"-l\",\"-f\",\"-m\",\"-e\"};\n\t\tString[] netstatParams10 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\",\"-s\",\"-l\",\"-f\",\"-m\",\"-e\",\"-x\"};\n\t\tString[] netstatParams11 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\",\"-s\",\"-l\",\"-f\",\"-m\",\"-e\",\"-x\",\"-c\"};\n\t\tString[] netstatParams12 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\",\"-s\",\"-l\",\"-f\",\"-m\",\"-e\",\"-x\",\"-c\",\"-r\"};\n\t\tString[] netstatParams13 = {\"-a\",\"-n\",\"-o\",\"-t\",\"-p\",\"-i\n",
        "\tstatic void main(String[] args){\n\t\tString[] netstatParams = {\"-an\"};\n\t\tProcessBuilder pb = new ProcessBuilder(\"netstat\", netstatParams);\n\t\tProcess p;\n\t\ttry{\n\t\t\tp = pb.start();\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "530",
    "source": "soSearches",
    "language": "java",
    "query": "how to do decimal operations in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble a = 0.1;\n\t\tdouble b = 0.2;\n\t\tdouble c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d1 = 0.1;\n\t\tdouble d2 = 0.2;\n\t\tdouble d3 = d1 + d2;\n\t\tSystem.out.println(d3);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble a = 1.0;\n\t\tdouble b = 2.0;\n\t\tdouble c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d1 = 1.0;\n\t\tdouble d2 = 2.0;\n\t\tdouble d3 = d1 + d2;\n\t\tSystem.out.println(d3);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble a = 1.0;\n\t\tdouble b = 2.0;\n\t\tdouble c = 3.0;\n\t\tdouble d = 4.0;\n\t\tdouble e = 5.0;\n\t\tdouble f = 6.0;\n\t\tdouble g = 7.0;\n\t\tdouble h = 8.0;\n\t\tdouble i = 9.0;\n\t\tdouble j = 10.0;\n\t\tdouble k = 11.0;\n\t\tdouble l = 12.0;\n\t\tdouble m = 13.0;\n\t\tdouble n = 14.0;\n\t\tdouble o = 15.0;\n\t\tdouble p = 16.0;\n\t\tdouble q = 17.0;\n\t\tdouble r = 18.0;\n\t\tdouble s = 19.0;\n\t\tdouble t = 20.0;\n\t\tdouble u = 21.0;\n\t\tdouble v = 22.0;\n\t\tdouble w = 23.0;\n\t\tdouble x = 24.0;\n\t\tdouble y = 25.0;\n\t\tdouble z = 26.0;\n\t\tdouble aa = 27.0;\n\t\tdouble bb = 28.0;\n\t\tdouble cc = 29.0;\n\t\tdouble dd = 30.0;\n\t\tdouble ee = 31.0;\n\t\tdouble ff = 32.0;\n\t\tdouble gg = 33.0;\n\t\tdouble hh = 34.0;\n\t\tdouble ii = 35.0;\n\t\tdouble jj = 36.0;\n\t\tdouble kk = 37.0;\n\t\tdouble ll = 38.0;\n\t\tdouble mm = 39.0;\n\t\tdouble nn = 40.0;\n\t\tdouble oo = 41.0;\n\t\tdouble pp = 42.0;\n\t\tdouble qq = 43.0;\n\t\tdouble rr = 44.0;\n\t\tdouble ss = 45.0;\n\t\tdouble tt = 46.0;\n\t\tdouble uu = 47.0;\n\t\tdouble vv =\n",
        "\tstatic void main(String[] args){\n\t\tdouble d1 = 1.0;\n\t\tdouble d2 = 0.1;\n\t\tdouble d3 = 0.1;\n\t\tdouble d4 = 0.1;\n\t\tdouble d5 = 0.1;\n\t\tdouble d6 = 0.1;\n\t\tdouble d7 = 0.1;\n\t\tdouble d8 = 0.1;\n\t\tdouble d9 = 0.1;\n\t\tdouble d10 = 0.1;\n\t\tdouble d11 = 0.1;\n\t\tdouble d12 = 0.1;\n\t\tdouble d13 = 0.1;\n\t\tdouble d14 = 0.1;\n\t\tdouble d15 = 0.1;\n\t\tdouble d16 = 0.1;\n\t\tdouble d17 = 0.1;\n\t\tdouble d18 = 0.1;\n\t\tdouble d19 = 0.1;\n\t\tdouble d20 = 0.1;\n\t\tdouble d21 = 0.1;\n\t\tdouble d22 = 0.1;\n\t\tdouble d23 = 0.1;\n\t\tdouble d24 = 0.1;\n\t\tdouble d25 = 0.1;\n\t\tdouble d26 = 0.1;\n\t\tdouble d27 = 0.1;\n\t\tdouble d28 = 0.1;\n\t\tdouble d29 = 0.1;\n\t\tdouble d30 = 0.1;\n\t\tdouble d31 = 0.1;\n\t\tdouble d32 = 0.1;\n\t\tdouble d33 = 0.1;\n\t\tdouble d34 = 0.1;\n\t\tdouble d35 = 0.1;\n\t\tdouble d36 = 0.1;\n\t\tdouble d37 = 0.1;\n\t\tdouble d38 = 0.1;\n\t\tdouble d39 = 0.1;\n\t\tdouble d40 = 0.1;\n\t\tdouble d41 = 0.1;\n\t\tdouble d42 = 0.1;\n\t\tdouble d43 = 0.1;\n\t\tdouble d44 = 0.1;\n\t\tdouble d45\n"
    ],
    "results": 10
},{
    "id": "531",
    "source": "soSearches",
    "language": "java",
    "query": "[how to program exam in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "532",
    "source": "soSearches",
    "language": "java",
    "query": "how to remove whitespace from a string in javascipt",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString str2 = str.replaceAll(\"\\\\s\",\"\");\n\t\tSystem.out.println(str2);\n\t}\n}\n",
        "\tstatic String removeWhitespace(String str){\n\t\tString result = \"\";\n\t\tfor(int i = 0; i < str.length(); i++){\n\t\t\tif(str.charAt(i) != ' '){\n\t\t\t\tresult += str.charAt(i);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString str1 = str.replaceAll(\"\\\\s\",\"\");\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tstatic String removeWhitespace(String str){\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i = 0; i < str.length(); i++){\n\t\t\tif(str.charAt(i) != ' '){\n\t\t\t\tsb.append(str.charAt(i));\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"  Hello World  \";\n\t\tSystem.out.println(str.trim());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"   hello   world   \";\n\t\tSystem.out.println(str.trim());\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "533",
    "source": "soSearches",
    "language": "java",
    "query": "how to declare string table in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString[] str = new String[10];\n\t\tstr[0] = \"Hello\";\n\t\tstr[1] = \"World\";\n\t\tstr[2] = \"!\";\n\t\tSystem.out.println(str[0]+str[1]+str[2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] str = new String[10];\n\t\tstr[0] = \"Hello\";\n\t\tstr[1] = \"World\";\n\t\tstr[2] = \"!\";\n\t\tstr[3] = \"!\";\n\t\tstr[4] = \"!\";\n\t\tstr[5] = \"!\";\n\t\tstr[6] = \"!\";\n\t\tstr[7] = \"!\";\n\t\tstr[8] = \"!\";\n\t\tstr[9] = \"!\";\n\t\tSystem.out.println(str[0]);\n\t\tSystem.out.println(str[1]);\n\t\tSystem.out.println(str[2]);\n\t\tSystem.out.println(str[3]);\n\t\tSystem.out.println(str[4]);\n\t\tSystem.out.println(str[5]);\n\t\tSystem.out.println(str[6]);\n\t\tSystem.out.println(str[7]);\n\t\tSystem.out.println(str[8]);\n\t\tSystem.out.println(str[9]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\",\"Paul\",\"George\",\"Ringo\"};\n\t\tSystem.out.println(names[0]);\n\t\tSystem.out.println(names[1]);\n\t\tSystem.out.println(names[2]);\n\t\tSystem.out.println(names[3]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] str={\"hello\",\"world\",\"java\"};\n\t\tSystem.out.println(str[0]);\n\t\tSystem.out.println(str[1]);\n\t\tSystem.out.println(str[2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] str={\"hello\",\"world\",\"how\",\"are\",\"you\"};\n\t\tSystem.out.println(str[0]);\n\t\tSystem.out.println(str[1]);\n\t\tSystem.out.println(str[2]);\n\t\tSystem.out.println(str[3]);\n\t\tSystem.out.println(str[4]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] names = {\"John\",\"Tom\",\"Mary\",\"Jane\"};\n\t\tSystem.out.println(names[0]);\n\t\tSystem.out.println(names[1]);\n\t\tSystem.out.println(names[2]);\n\t\tSystem.out.println(names[3]);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "534",
    "source": "soSearches",
    "language": "java",
    "query": "how to make unit-test in java",
    "snippets": [
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"method\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "535",
    "source": "soSearches",
    "language": "java",
    "query": "how to reverse a sentence in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tString rev=\"\";\n\t\tint len=str.length();\n\t\tfor(int i=len-1;i>=0;i--){\n\t\t\trev=rev+str.charAt(i);\n\t\t}\n\t\tSystem.out.println(rev);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tString rev=\"\";\n\t\tfor(int i=str.length()-1;i>=0;i--){\n\t\t\trev=rev+str.charAt(i);\n\t\t}\n\t\tSystem.out.println(rev);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(reverse(str));\n\t}\n\tpublic static String reverse(String str){\n\t\tString rev = \"\";\n\t\tfor(int i = str.length()-1; i >= 0; i--){\n\t\t\trev += str.charAt(i);\n\t\t}\n\t\treturn rev;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"I am a good student\";\n\t\tString[] words = str.split(\" \");\n\t\tString reverse = \"\";\n\t\tfor(int i = words.length-1; i>=0; i--){\n\t\t\treverse += words[i]+\" \";\n\t\t}\n\t\tSystem.out.println(reverse);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString[] words = str.split(\" \");\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i = words.length - 1; i >= 0; i--){\n\t\t\tsb.append(words[i]);\n\t\t\tsb.append(\" \");\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"I am a good programmer\";\n\t\tString[] words = str.split(\" \");\n\t\tString reverse = \"\";\n\t\tfor(int i = words.length-1; i >= 0; i--){\n\t\t\treverse += words[i] + \" \";\n\t\t}\n\t\tSystem.out.println(reverse);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "536",
    "source": "soSearches",
    "language": "java",
    "query": "how to validate url if exist java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\ttry{\n\t\t\tURL u = new URL(url);\n\t\t\tSystem.out.println(\"url is valid\");\n\t\t}\n\t\tcatch(MalformedURLException e){\n\t\t\tSystem.out.println(\"url is invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\ttry{\n\t\t\tURL u = new URL(url);\n\t\t\tSystem.out.println(\"URL is valid\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"URL is invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\ttry{\n\t\t\tURL u = new URL(url);\n\t\t\tSystem.out.println(\"url is valid\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"url is invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\ttry{\n\t\t\tURL u = new URL(url);\n\t\t\tSystem.out.println(\"URL is valid\");\n\t\t}\n\t\tcatch(MalformedURLException e){\n\t\t\tSystem.out.println(\"URL is invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url=\"http://www.google.com\";\n\t\ttry{\n\t\t\tURL u=new URL(url);\n\t\t\tSystem.out.println(\"Valid URL\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Invalid URL\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\ttry{\n\t\t\tURL url1 = new URL(url);\n\t\t\tSystem.out.println(\"URL is valid\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"URL is invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tString url = \"http://www.google.com\";\n\t\ttry {\n\t\t\tURL url1 = new URL(url);\n\t\t\tSystem.out.println(\"url is valid\");\n\t\t} catch (MalformedURLException e) {\n\t\t\tSystem.out.println(\"url is invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tString url = \"http://www.google.com\";\n\t\ttry {\n\t\t\tURL url1 = new URL(url);\n\t\t\tSystem.out.println(\"URL is valid\");\n\t\t} catch (MalformedURLException e) {\n\t\t\tSystem.out.println(\"URL is invalid\");\n\t\t}\n\t}\n}\n",
        "\tvoid validateUrl(String url){\n\t\tif(url.startsWith(\"http://\")){\n\t\t\tSystem.out.println(\"Valid url\");\n\t\t}else{\n\t\t\tSystem.out.println(\"Invalid url\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\ttry{\n\t\t\tURL myurl = new URL(url);\n\t\t\tSystem.out.println(\"URL is valid\");\n\t\t}\n\t\tcatch(MalformedURLException e){\n\t\t\tSystem.out.println(\"URL is invalid\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "537",
    "source": "soSearches",
    "language": "java",
    "query": "how to fill in a java array",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] a = new int[5];\n\t\ta[0] = 1;\n\t\ta[1] = 2;\n\t\ta[2] = 3;\n\t\ta[3] = 4;\n\t\ta[4] = 5;\n\t\tSystem.out.println(a[0]);\n\t\tSystem.out.println(a[1]);\n\t\tSystem.out.println(a[2]);\n\t\tSystem.out.println(a[3]);\n\t\tSystem.out.println(a[4]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = new int[5];\n\t\ta[0] = 1;\n\t\ta[1] = 2;\n\t\ta[2] = 3;\n\t\ta[3] = 4;\n\t\ta[4] = 5;\n\t\tfor(int i = 0; i < a.length; i++){\n\t\t\tSystem.out.println(a[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] array = new int[5];\n\t\tarray[0] = 1;\n\t\tarray[1] = 2;\n\t\tarray[2] = 3;\n\t\tarray[3] = 4;\n\t\tarray[4] = 5;\n\t\tSystem.out.println(array[0]);\n\t\tSystem.out.println(array[1]);\n\t\tSystem.out.println(array[2]);\n\t\tSystem.out.println(array[3]);\n\t\tSystem.out.println(array[4]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] numbers = new int[5];\n\t\tnumbers[0] = 1;\n\t\tnumbers[1] = 2;\n\t\tnumbers[2] = 3;\n\t\tnumbers[3] = 4;\n\t\tnumbers[4] = 5;\n\t\tSystem.out.println(numbers[0]);\n\t\tSystem.out.println(numbers[1]);\n\t\tSystem.out.println(numbers[2]);\n\t\tSystem.out.println(numbers[3]);\n\t\tSystem.out.println(numbers[4]);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "538",
    "source": "soSearches",
    "language": "java",
    "query": "how to set a date time in .net net using java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tDateTime dt = new DateTime();\n\t\tSystem.out.println(dt);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDateTime dt = new DateTime();\n\t\tSystem.out.println(dt.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDate date = new Date();\n\t\tSystem.out.println(date);\n\t}\n}\n",
        "\tstatic void Main(){\n\t\tDateTime dt = new DateTime(2012, 1, 1);\n\t\tConsole.WriteLine(dt);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "539",
    "source": "soSearches",
    "language": "java",
    "query": "how to retain zero iwhile precising in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint i=0;\n\t\twhile(i<10){\n\t\t\tSystem.out.println(i);\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 0.0;\n\t\tSystem.out.println(d);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 0.0;\n\t\tint i = 0;\n\t\twhile(i < 10){\n\t\t\td = d + 0.1;\n\t\t\ti = i + 1;\n\t\t}\n\t\tSystem.out.println(d);\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "540",
    "source": "soSearches",
    "language": "java",
    "query": "how to extend files in java",
    "snippets": [
        "\tvoid method(){\n\t\tSystem.out.println(\"method\");\n\t}\n}\n",
        "\tvoid method1(){\n\t\tSystem.out.println(\"method1\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "541",
    "source": "soSearches",
    "language": "java",
    "query": "how to write && in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = a && b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tif(a>b && a>10){\n\t\t\tSystem.out.println(\"a is greater than b\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tint a=10;\n\t\tint b=20;\n\t\tif(a>b && a>10){\n\t\t\tSystem.out.println(\"a is greater than b\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "542",
    "source": "soSearches",
    "language": "java",
    "query": "how to remove !doctype from xml file using java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString xml = \"<!DOCTYPE html><html><head><title>Hello World</title></head><body><h1>Hello World</h1></body></html>\";\n\t\tString xml2 = xml.replaceAll(\"<!DOCTYPE html>\", \"\");\n\t\tSystem.out.println(xml2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<!DOCTYPE html><html><head><title>Hello World</title></head><body><h1>Hello World</h1></body></html>\";\n\t\tString xml2 = xml.replace(\"<!DOCTYPE html>\", \"\");\n\t\tSystem.out.println(xml2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\\n\" +\n\t\t\t\t\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n\" +\n\t\t\t\t\"<head>\\n\" +\n\t\t\t\t\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\" />\\n\" +\n\t\t\t\t\"<title>Untitled Document</title>\\n\" +\n\t\t\t\t\"</head>\\n\" +\n\t\t\t\t\"<body>\\n\" +\n\t\t\t\t\"<h1>Hello World</h1>\\n\" +\n\t\t\t\t\"</body>\\n\" +\n\t\t\t\t\"</html>\";\n\t\tString xml1 = xml.replace(\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\\n\", \"\");\n\t\tSystem.out.println(xml1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<!DOCTYPE html><html><head><title>Hello World</title></head><body><h1>Hello World</h1></body></html>\";\n\t\tString xml1 = xml.replace(\"<!DOCTYPE html>\", \"\");\n\t\tSystem.out.println(xml1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<!DOCTYPE html><html><head><title>Hello World</title></head><body><h1>Hello World</h1></body></html>\";\n\t\tString xmlWithoutDoctype = xml.replace(\"<!DOCTYPE html>\", \"\");\n\t\tSystem.out.println(xmlWithoutDoctype);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<!DOCTYPE html><html><head><title>Hello World</title></head><body><h1>Hello World</h1></body></html>\";\n\t\tString xmlWithoutDoctype = xml.replaceAll(\"<!DOCTYPE.*>\", \"\");\n\t\tSystem.out.println(xmlWithoutDoctype);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\\n\" +\n\t\t\t\t\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n\" +\n\t\t\t\t\"<head>\\n\" +\n\t\t\t\t\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\" />\\n\" +\n\t\t\t\t\"<title>Untitled Document</title>\\n\" +\n\t\t\t\t\"</head>\\n\" +\n\t\t\t\t\"<body>\\n\" +\n\t\t\t\t\"<p>&lt;!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\"&gt;</p>\\n\" +\n\t\t\t\t\"<p>&lt;html xmlns=\\\"http://www.w3.org/1999/xhtml\\\"&gt;</p>\\n\" +\n\t\t\t\t\"<p>&lt;head&gt;</p>\\n\" +\n\t\t\t\t\"<p>&lt;meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\" /&gt;</p>\\n\" +\n\t\t\t\t\"<p>&lt;title&gt;Untitled Document&lt;/title&gt;</p>\\n\" +\n\t\t\t\t\"<p>&lt;/head&gt;</p>\\n\" +\n\t\t\t\t\"<p>&lt;body&gt;</p>\\n\" +\n\t\t\t\t\"<p>&lt;p&gt;&lt;!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML\n",
        "\tvoid main(String[] args){\n\t\tString xml = \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\";\n\t\tString xml1 = xml.replace(\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\", \"\");\n\t\tSystem.out.println(xml1);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "543",
    "source": "soSearches",
    "language": "java",
    "query": "how to do pass by reference java",
    "snippets": [
        "\tvoid change(int a, int b){\n\t\ta = a + 1;\n\t\tb = b + 1;\n\t}\n}\n",
        "\tvoid change(int a, int b){\n\t\ta = b;\n\t\tb = a;\n\t}\n}\n",
        "\tvoid change(int a){\n\t\ta=a+1;\n\t}\n}\n",
        "\tvoid method(int a, int b){\n\t\tint c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tvoid change(int a){\n\t\ta=10;\n\t}\n}\n",
        "\tvoid change(int a, int b){\n\t\ta = b;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "544",
    "source": "soSearches",
    "language": "java",
    "query": "how to read file line by line java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"/home/saurabh/Desktop/java/file.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"/home/saurabh/Desktop/java/java.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"/home/saurabh/Desktop/java/java/src/java/com/java/file/file.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\Sai\\\\Desktop\\\\java\\\\java.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\siddharth\\\\Desktop\\\\java\\\\java.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "545",
    "source": "soSearches",
    "language": "java",
    "query": "how to print a grid in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint i,j;\n\t\tfor(i=1;i<=5;i++){\n\t\t\tfor(j=1;j<=5;j++){\n\t\t\t\tSystem.out.print(\"*\");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i,j;\n\t\tfor(i=1;i<=5;i++){\n\t\t\tfor(j=1;j<=5;j++){\n\t\t\t\tSystem.out.print(i*j+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tfor(int i=0;i<5;i++){\n\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\tSystem.out.print(\"*\");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i,j;\n\t\tfor(i=0;i<5;i++){\n\t\t\tfor(j=0;j<5;j++){\n\t\t\t\tSystem.out.print(\"*\");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] grid = new int[][]{\n\t\t\t{1,2,3},\n\t\t\t{4,5,6},\n\t\t\t{7,8,9}\n\t\t};\n\t\tfor(int i = 0; i < grid.length; i++){\n\t\t\tfor(int j = 0; j < grid[i].length; j++){\n\t\t\t\tSystem.out.print(grid[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] grid = new int[3][3];\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tgrid[i][j] = i*3+j;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tSystem.out.print(grid[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "546",
    "source": "soSearches",
    "language": "java",
    "query": "how to execute windows command from java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tProcess p = Runtime.getRuntime().exec(\"cmd /c dir\");\n\t\t\tp.waitFor();\n\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line = \"\";\n\t\t\twhile((line = reader.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tProcess p = Runtime.getRuntime().exec(\"cmd /c dir\");\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tProcess p = Runtime.getRuntime().exec(\"cmd /c dir\");\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "547",
    "source": "soSearches",
    "language": "java",
    "query": "how to access xml strings in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n\t\t\t\t\"<root>\\n\" +\n\t\t\t\t\"\t<node>\\n\" +\n\t\t\t\t\"\t\t<name>node1</name>\\n\" +\n\t\t\t\t\"\t\t<value>value1</value>\\n\" +\n\t\t\t\t\"\t</node>\\n\" +\n\t\t\t\t\"\t<node>\\n\" +\n\t\t\t\t\"\t\t<name>node2</name>\\n\" +\n\t\t\t\t\"\t\t<value>value2</value>\\n\" +\n\t\t\t\t\"\t</node>\\n\" +\n\t\t\t\t\"</root>\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));\n\t\tNodeList nodes = doc.getElementsByTagName(\"node\");\n\t\tfor(int i = 0; i < nodes.getLength(); i++){\n\t\t\tNode node = nodes.item(i);\n\t\t\tSystem.out.println(node.getNodeName() + \": \" + node.getTextContent());\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n\t\t\t\t\"<root>\\n\" +\n\t\t\t\t\"\\t<child>\\n\" +\n\t\t\t\t\"\\t\\t<grandchild>\\n\" +\n\t\t\t\t\"\\t\\t\\t<greatgrandchild>\\n\" +\n\t\t\t\t\"\\t\\t\\t\\t<greatgreatgrandchild>\\n\" +\n\t\t\t\t\"\\t\\t\\t\\t\\t<greatgreatgreatgrandchild>\\n\" +\n\t\t\t\t\"\\t\\t\\t\\t\\t\\t<greatgreatgreatgreatgrandchild>\\n\" +\n\t\t\t\t\"\\t\\t\\t\\t\\t\\t</greatgreatgreatgreatgrandchild>\\n\" +\n\t\t\t\t\"\\t\\t\\t\\t\\t</greatgreatgreatgrandchild>\\n\" +\n\t\t\t\t\"\\t\\t\\t\\t</greatgreatgrandchild>\\n\" +\n\t\t\t\t\"\\t\\t\\t</greatgrandchild>\\n\" +\n\t\t\t\t\"\\t\\t</grandchild>\\n\" +\n\t\t\t\t\"\\t</child>\\n\" +\n\t\t\t\t\"</root>\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));\n\t\tNodeList nl = doc.getElementsByTagName(\"greatgreatgreatgreatgrandchild\");\n\t\tSystem.out.println(nl.item(0).getTextContent());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n\t\t\t\t\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n\" +\n\t\t\t\t\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xml:lang=\\\"en\\\" lang=\\\"en\\\">\\n\" +\n\t\t\t\t\"<head>\\n\" +\n\t\t\t\t\"<title>Hello World</title>\\n\" +\n\t\t\t\t\"</head>\\n\" +\n\t\t\t\t\"<body>\\n\" +\n\t\t\t\t\"<h1>Hello World</h1>\\n\" +\n\t\t\t\t\"</body>\\n\" +\n\t\t\t\t\"</html>\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));\n\t\tNodeList nodes = doc.getElementsByTagName(\"title\");\n\t\tSystem.out.println(nodes.item(0).getTextContent());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n\t\t\t\t\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n\" +\n\t\t\t\t\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xml:lang=\\\"en\\\" lang=\\\"en\\\">\\n\" +\n\t\t\t\t\"<head>\\n\" +\n\t\t\t\t\"<title>Example</title>\\n\" +\n\t\t\t\t\"</head>\\n\" +\n\t\t\t\t\"<body>\\n\" +\n\t\t\t\t\"<p>Hello, world!</p>\\n\" +\n\t\t\t\t\"</body>\\n\" +\n\t\t\t\t\"</html>\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(xml.getBytes()));\n\t\tNodeList nodes = doc.getElementsByTagName(\"p\");\n\t\tSystem.out.println(nodes.item(0).getTextContent());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n\t\t\t\t\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n\" +\n\t\t\t\t\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xml:lang=\\\"en\\\" lang=\\\"en\\\">\\n\" +\n\t\t\t\t\"<head>\\n\" +\n\t\t\t\t\"<title>Hello World</title>\\n\" +\n\t\t\t\t\"</head>\\n\" +\n\t\t\t\t\"<body>\\n\" +\n\t\t\t\t\"<h1>Hello World</h1>\\n\" +\n\t\t\t\t\"</body>\\n\" +\n\t\t\t\t\"</html>\\n\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));\n\t\tNodeList nodes = doc.getElementsByTagName(\"title\");\n\t\tSystem.out.println(nodes.item(0).getTextContent());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n\t\t\t\t\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n\" +\n\t\t\t\t\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xml:lang=\\\"en\\\" lang=\\\"en\\\">\\n\" +\n\t\t\t\t\"<head>\\n\" +\n\t\t\t\t\"<title>Hello World</title>\\n\" +\n\t\t\t\t\"</head>\\n\" +\n\t\t\t\t\"<body>\\n\" +\n\t\t\t\t\"<p>Hello World</p>\\n\" +\n\t\t\t\t\"</body>\\n\" +\n\t\t\t\t\"</html>\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));\n\t\tNodeList nodes = doc.getElementsByTagName(\"p\");\n\t\tSystem.out.println(nodes.item(0).getTextContent());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<xml><name>John</name><age>30</age></xml>\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));\n\t\tNodeList nodes = doc.getElementsByTagName(\"name\");\n\t\tSystem.out.println(nodes.item(0).getTextContent());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<xml><name>John</name></xml>\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));\n\t\tNodeList nodes = doc.getElementsByTagName(\"name\");\n\t\tSystem.out.println(nodes.item(0).getTextContent());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" +\n\t\t\t\t\"<root>\" +\n\t\t\t\t\"<node1>value1</node1>\" +\n\t\t\t\t\"<node2>value2</node2>\" +\n\t\t\t\t\"<node3>value3</node3>\" +\n\t\t\t\t\"</root>\";\n\t\tDocument doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));\n\t\tNodeList nodes = doc.getElementsByTagName(\"node1\");\n\t\tSystem.out.println(nodes.item(0).getTextContent());\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "548",
    "source": "soSearches",
    "language": "java",
    "query": "how to compile a pakage java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "549",
    "source": "soSearches",
    "language": "java",
    "query": "how to check user input exists already in sql database java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString name = \"\";\n\t\tString email = \"\";\n\t\tString phone = \"\";\n\t\tString address = \"\";\n\t\tString city = \"\";\n\t\tString state = \"\";\n\t\tString zip = \"\";\n\t\tString country = \"\";\n\t\tString password = \"\";\n\t\tString confirmPassword = \"\";\n\t\tString userName = \"\";\n\t\tString userEmail = \"\";\n\t\tString userPhone = \"\";\n\t\tString userAddress = \"\";\n\t\tString userCity = \"\";\n\t\tString userState = \"\";\n\t\tString userZip = \"\";\n\t\tString userCountry = \"\";\n\t\tString userPassword = \"\";\n\t\tString userConfirmPassword = \"\";\n\t\tString userUserName = \"\";\n\t\tString userUserEmail = \"\";\n\t\tString userUserPhone = \"\";\n\t\tString userUserAddress = \"\";\n\t\tString userUserCity = \"\";\n\t\tString userUserState = \"\";\n\t\tString userUserZip = \"\";\n\t\tString userUserCountry = \"\";\n\t\tString userUserPassword = \"\";\n\t\tString userUserConfirmPassword = \"\";\n\t\tString userUserUserName = \"\";\n\t\tString userUserUserEmail = \"\";\n\t\tString userUserUserPhone = \"\";\n\t\tString userUserUserAddress = \"\";\n\t\tString userUserUserCity = \"\";\n\t\tString userUserUserState = \"\";\n\t\tString userUserUserZip = \"\";\n\t\tString userUserUserCountry = \"\";\n\t\tString userUserUserPassword = \"\";\n\t\tString userUserUserConfirmPassword = \"\";\n\t\tString userUserUserUserName = \"\";\n\t\tString userUserUserUserEmail = \"\";\n\t\tString userUserUserUserPhone = \"\";\n\t\tString userUserUserUserAddress = \"\";\n\t\tString userUserUserUserCity = \"\";\n\t\tString userUserUserUserState = \"\";\n\t\tString userUserUserUserZip = \"\";\n\t\tString userUserUserUserCountry = \"\";\n\t\tString userUserUser\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"\";\n\t\tString email = \"\";\n\t\tString phone = \"\";\n\t\tString address = \"\";\n\t\tString city = \"\";\n\t\tString state = \"\";\n\t\tString zip = \"\";\n\t\tString country = \"\";\n\t\tString company = \"\";\n\t\tString jobTitle = \"\";\n\t\tString website = \"\";\n\t\tString facebook = \"\";\n\t\tString twitter = \"\";\n\t\tString linkedin = \"\";\n\t\tString skype = \"\";\n\t\tString notes = \"\";\n\t\tString birthday = \"\";\n\t\tString anniversary = \"\";\n\t\tString group = \"\";\n\t\tString tags = \"\";\n\t\tString tags2 = \"\";\n\t\tString tags3 = \"\";\n\t\tString tags4 = \"\";\n\t\tString tags5 = \"\";\n\t\tString tags6 = \"\";\n\t\tString tags7 = \"\";\n\t\tString tags8 = \"\";\n\t\tString tags9 = \"\";\n\t\tString tags10 = \"\";\n\t\tString tags11 = \"\";\n\t\tString tags12 = \"\";\n\t\tString tags13 = \"\";\n\t\tString tags14 = \"\";\n\t\tString tags15 = \"\";\n\t\tString tags16 = \"\";\n\t\tString tags17 = \"\";\n\t\tString tags18 = \"\";\n\t\tString tags19 = \"\";\n\t\tString tags20 = \"\";\n\t\tString tags21 = \"\";\n\t\tString tags22 = \"\";\n\t\tString tags23 = \"\";\n\t\tString tags24 = \"\";\n\t\tString tags25 = \"\";\n\t\tString tags26 = \"\";\n\t\tString tags27 = \"\";\n\t\tString tags28 = \"\";\n\t\tString tags29 = \"\";\n\t\tString tags30 = \"\";\n\t\tString tags31 = \"\";\n\t\tString tags32 = \"\";\n\t\tString tags33 = \"\";\n\t\tString tags34 = \"\";\n\t\tString tags35 = \"\";\n\t\tString tags36 = \"\";\n\t\tString tags37 = \"\";\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"\";\n\t\tString email = \"\";\n\t\tString phone = \"\";\n\t\tString address = \"\";\n\t\tString city = \"\";\n\t\tString state = \"\";\n\t\tString zip = \"\";\n\t\tString country = \"\";\n\t\tString password = \"\";\n\t\tString confirmPassword = \"\";\n\t\tString sql = \"\";\n\t\tString sql2 = \"\";\n\t\tString sql3 = \"\";\n\t\tString sql4 = \"\";\n\t\tString sql5 = \"\";\n\t\tString sql6 = \"\";\n\t\tString sql7 = \"\";\n\t\tString sql8 = \"\";\n\t\tString sql9 = \"\";\n\t\tString sql10 = \"\";\n\t\tString sql11 = \"\";\n\t\tString sql12 = \"\";\n\t\tString sql13 = \"\";\n\t\tString sql14 = \"\";\n\t\tString sql15 = \"\";\n\t\tString sql16 = \"\";\n\t\tString sql17 = \"\";\n\t\tString sql18 = \"\";\n\t\tString sql19 = \"\";\n\t\tString sql20 = \"\";\n\t\tString sql21 = \"\";\n\t\tString sql22 = \"\";\n\t\tString sql23 = \"\";\n\t\tString sql24 = \"\";\n\t\tString sql25 = \"\";\n\t\tString sql26 = \"\";\n\t\tString sql27 = \"\";\n\t\tString sql28 = \"\";\n\t\tString sql29 = \"\";\n\t\tString sql30 = \"\";\n\t\tString sql31 = \"\";\n\t\tString sql32 = \"\";\n\t\tString sql33 = \"\";\n\t\tString sql34 = \"\";\n\t\tString sql35 = \"\";\n\t\tString sql36 = \"\";\n\t\tString sql37 = \"\";\n\t\tString sql38 = \"\";\n\t\tString sql39 = \"\";\n\t\tString sql40 = \"\";\n\t\tString sql41 = \"\";\n\t\tString sql42 = \"\";\n\t\tString sql43 = \"\";\n\t\tString sql44 = \"\";\n\t\tString sql45 = \"\";\n\t\tString sql\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"\";\n\t\tString email = \"\";\n\t\tString phone = \"\";\n\t\tString address = \"\";\n\t\tString city = \"\";\n\t\tString state = \"\";\n\t\tString zip = \"\";\n\t\tString country = \"\";\n\t\tString password = \"\";\n\t\tString confirmPassword = \"\";\n\t\tString userName = \"\";\n\t\tString userEmail = \"\";\n\t\tString userPhone = \"\";\n\t\tString userAddress = \"\";\n\t\tString userCity = \"\";\n\t\tString userState = \"\";\n\t\tString userZip = \"\";\n\t\tString userCountry = \"\";\n\t\tString userPassword = \"\";\n\t\tString userConfirmPassword = \"\";\n\t\tString userUserName = \"\";\n\t\tString userUserEmail = \"\";\n\t\tString userUserPhone = \"\";\n\t\tString userUserAddress = \"\";\n\t\tString userUserCity = \"\";\n\t\tString userUserState = \"\";\n\t\tString userUserZip = \"\";\n\t\tString userUserCountry = \"\";\n\t\tString userUserPassword = \"\";\n\t\tString userUserConfirmPassword = \"\";\n\t\tString userUserUserName = \"\";\n\t\tString userUserUserEmail = \"\";\n\t\tString userUserUserPhone = \"\";\n\t\tString userUserUserAddress = \"\";\n\t\tString userUserUserCity = \"\";\n\t\tString userUserUserState = \"\";\n\t\tString userUserUserZip = \"\";\n\t\tString userUserUserCountry = \"\";\n\t\tString userUserUserPassword = \"\";\n\t\tString userUserUserConfirmPassword = \"\";\n\t\tString userUserUserUserName = \"\";\n\t\tString userUserUserUserEmail = \"\";\n\t\tString userUserUserUserPhone = \"\";\n\t\tString userUserUserUserAddress = \"\";\n\t\tString userUserUserUserCity = \"\";\n\t\tString userUserUserUserState = \"\";\n\t\tString userUserUserUserZip = \"\";\n\t\tString userUserUserUserCountry = \"\";\n\t\tString userUser\n",
        "\tstatic void main(String[] args){\n\t\tString name = \"\";\n\t\tString email = \"\";\n\t\tString phone = \"\";\n\t\tString address = \"\";\n\t\tString city = \"\";\n\t\tString state = \"\";\n\t\tString zip = \"\";\n\t\tString country = \"\";\n\t\tString username = \"\";\n\t\tString password = \"\";\n\t\tString confirmPassword = \"\";\n\t\tString dob = \"\";\n\t\tString\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your confirm password\");\n\t\tString confirmPassword = sc.next();\n\t\tif(password.equals(confirmPassword)){\n\t\t\tSystem.out.println(\"Password matched\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password not matched\");\n\t\t}\n\t\tSystem.out.println(\"Enter your city\");\n\t\tString city = sc.next();\n\t\tSystem.out.println(\"Enter your state\");\n\t\tString state = sc.next();\n\t\tSystem.out.println(\"Enter your country\");\n\t\tString country = sc.next();\n\t\tSystem.out.println(\"Enter your zip code\");\n\t\tint zip = sc.nextInt();\n\t\tSystem.out.println(\"Enter your date of birth\");\n\t\tString dateOfBirth = sc.next();\n\t\tSystem.out.println(\"Enter your date of joining\");\n\t\tString dateOfJoining = sc.next();\n\t\tSystem.out.println(\"Enter your date of leaving\");\n\t\tString dateOfLeaving = sc.next();\n\t\tSystem.out.println(\"Enter your designation\");\n\t\tString designation = sc.next();\n\t\tSystem.out.println(\"Enter your department\");\n\t\tString department = sc.next();\n\t\tSystem.out.println(\"Enter your salary\");\n\t\tint salary =\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your city\");\n\t\tString city = sc.nextLine();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.nextLine();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your DOB\");\n\t\tString dob = sc.nextLine();\n\t\tSystem.out.println(\"Enter your\n",
        "\tstatic void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = input.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = input.nextInt();\n\t\tSystem.out.println(\"Enter your address: \");\n\t\tString address = input.nextLine();\n\t\tSystem.out.println(\"Enter your phone number: \");\n\t\tString phone = input.nextLine();\n\t\tSystem.out.println(\"Enter your email: \");\n\t\tString email = input.nextLine();\n\t\tSystem.out.println(\"Enter your password: \");\n\t\tString password = input.nextLine();\n\t\tSystem.out.println(\"Enter your confirm password: \");\n\t\tString confirm = input.nextLine();\n\t\tif(password.equals(confirm)){\n\t\t\tSystem.out.println(\"Your password is correct\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Your password is incorrect\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name: \");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age: \");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your city: \");\n\t\tString city = sc.nextLine();\n\t\tSystem.out.println(\"Enter your email: \");\n\t\tString email = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number: \");\n\t\tint phone = sc.nextInt();\n\t\tSystem.out.println(\"Enter your password: \");\n\t\tString password = sc.nextLine();\n\t\tSystem.out.println(\"Enter your confirm password: \");\n\t\tString confirmPassword = sc.nextLine();\n\t\tif(password.equals(confirmPassword)){\n\t\t\tSystem.out.println(\"Password matched\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Password not matched\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "550",
    "source": "soSearches",
    "language": "java",
    "query": "[java] how to read content from one file and write in another file",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\test1.txt\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t\tfr.close();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\input.txt\");\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\output.txt\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t\tfr.close();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFileReader fr = null;\n\t\tFileWriter fw = null;\n\t\ttry{\n\t\t\tfr = new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\Java\\\\Java_Assignments\\\\Java_Assignments\\\\src\\\\java\\\\com\\\\javaAssignments\\\\fileIO\\\\file1.txt\");\n\t\t\tfw = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\Java\\\\Java_Assignments\\\\Java_Assignments\\\\src\\\\java\\\\com\\\\javaAssignments\\\\fileIO\\\\file2.txt\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfinally{\n\t\t\ttry{\n\t\t\t\tfr.close();\n\t\t\t\tfw.close();\n\t\t\t}\n\t\t\tcatch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\User\\\\Desktop\\\\test1.txt\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t\tfr.close();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\User\\\\Desktop\\\\file1.txt\");\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\User\\\\Desktop\\\\file2.txt\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t\tfr.close();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr=new FileReader(\"C:\\\\Users\\\\User\\\\Desktop\\\\java\\\\file.txt\");\n\t\t\tFileWriter fw=new FileWriter(\"C:\\\\Users\\\\User\\\\Desktop\\\\java\\\\file1.txt\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t\tfr.close();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\java\\\\java_file_io\\\\src\\\\file_io\\\\file_io.java\");\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\java\\\\java_file_io\\\\src\\\\file_io\\\\file_io_copy.java\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t\tfr.close();\n\t\t\tfw.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\User\\\\Desktop\\\\java\\\\src\\\\java\\\\com\\\\java\\\\file\\\\file.txt\");\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\User\\\\Desktop\\\\java\\\\src\\\\java\\\\com\\\\java\\\\file\\\\file1.txt\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t\tfr.close();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\Java\\\\Java_Project\\\\src\\\\java\\\\com\\\\java_project\\\\file\\\\File.java\");\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\Java\\\\Java_Project\\\\src\\\\java\\\\com\\\\java_project\\\\file\\\\File2.java\");\n\t\t\tint i;\n\t\t\twhile((i=fr.read())!=-1){\n\t\t\t\tfw.write(i);\n\t\t\t}\n\t\t\tfr.close();\n\t\t\tfw.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "551",
    "source": "soSearches",
    "language": "java",
    "query": "how to test for sd card java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString state = Environment.getExternalStorageState();\n\t\tif(Environment.MEDIA_MOUNTED.equals(state)){\n\t\t\tSystem.out.println(\"SD card is mounted\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"SD card is not mounted\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString state = Environment.getExternalStorageState();\n\t\tif(Environment.MEDIA_MOUNTED.equals(state)){\n\t\t\tSystem.out.println(\"sd card is mounted\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"sd card is not mounted\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tif(android.os.Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED)){\n\t\t\tSystem.out.println(\"sd card is mounted\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"sd card is not mounted\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "552",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert map to list java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tMap<String,String> map = new HashMap<String,String>();\n\t\tmap.put(\"1\",\"one\");\n\t\tmap.put(\"2\",\"two\");\n\t\tmap.put(\"3\",\"three\");\n\t\tmap.put(\"4\",\"four\");\n\t\tmap.put(\"5\",\"five\");\n\t\tmap.put(\"6\",\"six\");\n\t\tmap.put(\"7\",\"seven\");\n\t\tmap.put(\"8\",\"eight\");\n\t\tmap.put(\"9\",\"nine\");\n\t\tmap.put(\"10\",\"ten\");\n\t\tmap.put(\"11\",\"eleven\");\n\t\tmap.put(\"12\",\"twelve\");\n\t\tmap.put(\"13\",\"thirteen\");\n\t\tmap.put(\"14\",\"fourteen\");\n\t\tmap.put(\"15\",\"fifteen\");\n\t\tmap.put(\"16\",\"sixteen\");\n\t\tmap.put(\"17\",\"seventeen\");\n\t\tmap.put(\"18\",\"eighteen\");\n\t\tmap.put(\"19\",\"nineteen\");\n\t\tmap.put(\"20\",\"twenty\");\n\t\tmap.put(\"21\",\"twentyone\");\n\t\tmap.put(\"22\",\"twentytwo\");\n\t\tmap.put(\"23\",\"twentythree\");\n\t\tmap.put(\"24\",\"twentyfour\");\n\t\tmap.put(\"25\",\"twentyfive\");\n\t\tmap.put(\"26\",\"twentysix\");\n\t\tmap.put(\"27\",\"twentyseven\");\n\t\tmap.put(\"28\",\"twentyeight\");\n\t\tmap.put(\"29\",\"twentynine\");\n\t\tmap.put(\"30\",\"thirty\");\n\t\tmap.put(\"31\",\"thirtyone\");\n\t\tmap.put(\"32\",\"thirtytwo\");\n\t\tmap.put(\"33\",\"thirtythree\");\n\t\tmap.put(\"34\",\"thirtyfour\");\n\t\tmap.put(\"35\",\"thirtyfive\");\n\t\tmap.put(\"36\",\"thirtysix\");\n\t\tmap.put(\"37\",\"thirtyseven\");\n\t\tmap.put(\"38\",\"thirtyeight\");\n\t\tmap\n",
        "\tstatic void main(String[] args){\n\t\tMap<String,String> map = new HashMap<String,String>();\n\t\tmap.put(\"1\",\"a\");\n\t\tmap.put(\"2\",\"b\");\n\t\tmap.put(\"3\",\"c\");\n\t\tmap.put(\"4\",\"d\");\n\t\tmap.put(\"5\",\"e\");\n\t\tmap.put(\"6\",\"f\");\n\t\tmap.put(\"7\",\"g\");\n\t\tmap.put(\"8\",\"h\");\n\t\tmap.put(\"9\",\"i\");\n\t\tmap.put(\"10\",\"j\");\n\t\tmap.put(\"11\",\"k\");\n\t\tmap.put(\"12\",\"l\");\n\t\tmap.put(\"13\",\"m\");\n\t\tmap.put(\"14\",\"n\");\n\t\tmap.put(\"15\",\"o\");\n\t\tmap.put(\"16\",\"p\");\n\t\tmap.put(\"17\",\"q\");\n\t\tmap.put(\"18\",\"r\");\n\t\tmap.put(\"19\",\"s\");\n\t\tmap.put(\"20\",\"t\");\n\t\tmap.put(\"21\",\"u\");\n\t\tmap.put(\"22\",\"v\");\n\t\tmap.put(\"23\",\"w\");\n\t\tmap.put(\"24\",\"x\");\n\t\tmap.put(\"25\",\"y\");\n\t\tmap.put(\"26\",\"z\");\n\t\tList<String> list = new ArrayList<String>(map.values());\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tMap<String,String> map=new HashMap<String,String>();\n\t\tmap.put(\"1\",\"one\");\n\t\tmap.put(\"2\",\"two\");\n\t\tmap.put(\"3\",\"three\");\n\t\tmap.put(\"4\",\"four\");\n\t\tmap.put(\"5\",\"five\");\n\t\tmap.put(\"6\",\"six\");\n\t\tmap.put(\"7\",\"seven\");\n\t\tmap.put(\"8\",\"eight\");\n\t\tmap.put(\"9\",\"nine\");\n\t\tmap.put(\"10\",\"ten\");\n\t\tList<String> list=new ArrayList<String>();\n\t\tlist.addAll(map.values());\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"1\", \"one\");\n\t\tmap.put(\"2\", \"two\");\n\t\tmap.put(\"3\", \"three\");\n\t\tmap.put(\"4\", \"four\");\n\t\tmap.put(\"5\", \"five\");\n\t\tmap.put(\"6\", \"six\");\n\t\tmap.put(\"7\", \"seven\");\n\t\tmap.put(\"8\", \"eight\");\n\t\tmap.put(\"9\", \"nine\");\n\t\tmap.put(\"10\", \"ten\");\n\t\tmap.put(\"11\", \"eleven\");\n\t\tmap.put(\"12\", \"twelve\");\n\t\tmap.put(\"13\", \"thirteen\");\n\t\tmap.put(\"14\", \"fourteen\");\n\t\tmap.put(\"15\", \"fifteen\");\n\t\tmap.put(\"16\", \"sixteen\");\n\t\tmap.put(\"17\", \"seventeen\");\n\t\tmap.put(\"18\", \"eighteen\");\n\t\tmap.put(\"19\", \"nineteen\");\n\t\tmap.put(\"20\", \"twenty\");\n\t\tmap.put(\"21\", \"twenty one\");\n\t\tmap.put(\"22\", \"twenty two\");\n\t\tmap.put(\"23\", \"twenty three\");\n\t\tmap.put(\"24\", \"twenty four\");\n\t\tmap.put(\"25\", \"twenty five\");\n\t\tmap.put(\"26\", \"twenty six\");\n\t\tmap.put(\"27\", \"twenty seven\");\n\t\tmap.put(\"28\", \"twenty eight\");\n\t\tmap.put(\"29\", \"twenty nine\");\n\t\tmap.put(\"30\", \"thirty\");\n\t\tmap.put(\"31\", \"thirty one\");\n\t\tmap.put(\"32\", \"thirty two\");\n\t\tmap.put(\"33\", \"thirty three\");\n\t\tmap.put(\"34\", \"thirty four\");\n\t\tmap.put(\"35\", \"thirty five\");\n\t\tmap.put(\"36\", \"\n"
    ],
    "results": 10
},{
    "id": "553",
    "source": "soSearches",
    "language": "java",
    "query": "how to create a clock method in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n\tpublic static void clock(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n\tpublic static void clock(){\n\t\tSystem.out.println(\"Clock\");\n\t}\n}\n",
        "\tvoid clock(){\n\t\tSystem.out.println(\"Clock is running\");\n\t}\n}\n",
        "\tvoid clock(){\n\t\tSystem.out.println(\"Clock is ticking\");\n\t}\n}\n"
    ],
    "results": 6
},{
    "id": "554",
    "source": "soSearches",
    "language": "java",
    "query": "how to use statements in java switch",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint i = 1;\n\t\tswitch(i){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"one\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"two\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"three\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"default\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 5;\n\t\tswitch(a){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"a is 1\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"a is 2\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"a is 3\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"a is not 1,2,3\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint num = 5;\n\t\tswitch(num){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"one\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"two\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"three\");\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.println(\"four\");\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.println(\"five\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"invalid\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i = 1;\n\t\tswitch(i){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"i is 1\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"i is 2\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"i is not 1 or 2\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tswitch(a){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"a is 1\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"a is 2\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"a is 3\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"a is not 1,2,3\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tswitch(a){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"one\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"two\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"three\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"default\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "555",
    "source": "soSearches",
    "language": "java",
    "query": "how to add header row in csv file using java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter writer = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.csv\");\n\t\t\twriter.append(\"Name\");\n\t\t\twriter.append(',');\n\t\t\twriter.append(\"Age\");\n\t\t\twriter.append('\\n');\n\t\t\twriter.append(\"John\");\n\t\t\twriter.append(',');\n\t\t\twriter.append(\"25\");\n\t\t\twriter.append('\\n');\n\t\t\twriter.append(\"Jane\");\n\t\t\twriter.append(',');\n\t\t\twriter.append(\"26\");\n\t\t\twriter.append('\\n');\n\t\t\twriter.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.csv\");\n\t\t\tfw.append(\"Name\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Age\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"City\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.append(\"John\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"25\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Bangalore\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.append(\"Jane\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"26\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Chennai\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.flush();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter writer = new FileWriter(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.csv\");\n\t\t\twriter.append(\"Name\");\n\t\t\twriter.append(',');\n\t\t\twriter.append(\"Age\");\n\t\t\twriter.append('\\n');\n\t\t\twriter.append(\"Suresh\");\n\t\t\twriter.append(',');\n\t\t\twriter.append(\"25\");\n\t\t\twriter.append('\\n');\n\t\t\twriter.flush();\n\t\t\twriter.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter writer = new FileWriter(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.csv\");\n\t\t\twriter.append(\"Name\");\n\t\t\twriter.append(',');\n\t\t\twriter.append(\"Age\");\n\t\t\twriter.append('\\n');\n\t\t\twriter.append(\"Suresh\");\n\t\t\twriter.append(',');\n\t\t\twriter.append(\"25\");\n\t\t\twriter.append('\\n');\n\t\t\twriter.flush();\n\t\t\twriter.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.csv\");\n\t\t\tfw.append(\"Name\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Age\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Email\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.append(\"John\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"25\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"\n",
        "\tstatic void main(String[] args) {\n\t\tString csvFile = \"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.csv\";\n\t\tString line = \"\";\n\t\tString cvsSplitBy = \",\";\n\t\ttry (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {\n\t\t\tline = br.readLine();\n\t\t\tString[] header = line.split(cvsSplitBy);\n\t\t\tSystem.out.println(\"Header length: \" + header.length);\n\t\t\tfor (int i = 0; i < header.length; i++) {\n\t\t\t\tSystem.out.println(header[i]);\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.csv\");\n\t\t\tfw.append(\"Name\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Age\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"City\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.append(\"Suresh\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"25\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Bangalore\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.append(\"Suresh\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"25\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Bangalore\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.flush();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.csv\");\n\t\t\tfw.append(\"Name\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Age\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"Country\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.append(\"Suresh\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"25\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"India\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.append(\"Suresh\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"25\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"India\");\n\t\t\tfw.append(\",\");\n\t\t\tfw.append(\"\\n\");\n\t\t\tfw.flush();\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException{\n\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\sri\\\\Desktop\\\\test.csv\");\n\t\tBufferedWriter bw = new BufferedWriter(fw);\n\t\tbw.write(\"Name,Age,City\");\n\t\tbw.newLine();\n\t\tbw.write(\"Sri,25,Chennai\");\n\t\tbw.newLine();\n\t\tbw.write(\"Raj,26,Bangalore\");\n\t\tbw.newLine();\n\t\tbw.close();\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "556",
    "source": "soSearches",
    "language": "java",
    "query": "how to read an odt file with java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tXMLReader reader = XMLReaderFactory.createXMLReader();\n\t\t\treader.setContentHandler(new ODTContentHandler());\n\t\t\treader.parse(new InputSource(new FileInputStream(\"test.odt\")));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"test.odt\");\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tXMLReader reader = XMLReaderFactory.createXMLReader();\n\t\t\tContentHandler handler = new DefaultHandler();\n\t\t\treader.setContentHandler(handler);\n\t\t\treader.parse(new InputSource(fis));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"test.odt\");\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tXMLReader xmlReader = XMLReaderFactory.createXMLReader();\n\t\t\tContentHandler contentHandler = new ContentHandler();\n\t\t\txmlReader.setContentHandler(contentHandler);\n\t\t\txmlReader.parse(new InputSource(fis));\n\t\t\tfis.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"test.odt\");\n\t\t\tXMLReader reader = XMLReaderFactory.createXMLReader();\n\t\t\treader.setContentHandler(new ODTContentHandler());\n\t\t\treader.parse(new InputSource(fis));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"test.odt\");\n\t\t\tXMLReader reader = XMLReaderFactory.createXMLReader();\n\t\t\tContentHandler handler = new DefaultHandler();\n\t\t\treader.setContentHandler(handler);\n\t\t\treader.parse(new InputSource(fis));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"/home/joe/Desktop/test.odt\");\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tXMLReader xmlReader = XMLReaderFactory.createXMLReader();\n\t\t\tContentHandler contentHandler = new DefaultHandler();\n\t\t\txmlReader.setContentHandler(contentHandler);\n\t\t\txmlReader.parse(new InputSource(fis));\n\t\t\tfis.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"/home/joe/Desktop/test.odt\");\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tXMLInputFactory factory = XMLInputFactory.newInstance();\n\t\t\tXMLStreamReader reader = factory.createXMLStreamReader(fis);\n\t\t\twhile(reader.hasNext()){\n\t\t\t\tint event = reader.next();\n\t\t\t\tif(event == XMLStreamConstants.START_ELEMENT){\n\t\t\t\t\tString name = reader.getLocalName();\n\t\t\t\t\tif(name.equals(\"text:p\")){\n\t\t\t\t\t\tSystem.out.println(reader.getElementText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFile file = new File(\"/home/joe/Desktop/test.odt\");\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tXMLInputFactory factory = XMLInputFactory.newInstance();\n\t\t\tXMLStreamReader reader = factory.createXMLStreamReader(fis);\n\t\t\twhile(reader.hasNext()){\n\t\t\t\tint event = reader.next();\n\t\t\t\tif(event == XMLStreamConstants.START_ELEMENT){\n\t\t\t\t\tSystem.out.println(reader.getLocalName());\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"/home/james/Desktop/test.odt\");\n\t\t\tXMLReader xmlReader = XMLReaderFactory.createXMLReader();\n\t\t\tContentHandler contentHandler = new ContentHandler();\n\t\t\txmlReader.setContentHandler(contentHandler);\n\t\t\txmlReader.parse(new InputSource(fis));\n\t\t\tSystem.out.println(contentHandler.getContent());\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream file = new FileInputStream(\"/home/soumya/Desktop/test.odt\");\n\t\t\tXMLInputFactory factory = XMLInputFactory.newInstance();\n\t\t\tXMLStreamReader reader = factory.createXMLStreamReader(file);\n\t\t\twhile(reader.hasNext()){\n\t\t\t\tint event = reader.next();\n\t\t\t\tif(event == XMLStreamConstants.START_ELEMENT){\n\t\t\t\t\tSystem.out.println(reader.getLocalName());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "557",
    "source": "soSearches",
    "language": "java",
    "query": "how to change the color while taking input from user in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color1=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color2=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color3=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color4=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color5=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color6=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color7=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color8=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color9=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color10=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color11=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color12=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color13=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color14=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color15=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color16=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color17=sc.nextLine();\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color18=sc.nextLine();\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the color\");\n\t\tString color=sc.nextLine();\n\t\tSystem.out.println(\"Enter the number\");\n\t\tint num=sc.nextInt();\n\t\tSystem.out.println(\"Enter the name\");\n\t\tString name=sc.next();\n\t\tSystem.out.println(\"Enter the age\");\n\t\tint age=sc.nextInt();\n\t\tSystem.out.println(\"Enter the address\");\n\t\tString address=sc.next();\n\t\tSystem.out.println(\"Enter the phone number\");\n\t\tlong phone=sc.nextLong();\n\t\tSystem.out.println(\"Enter the email\");\n\t\tString email=sc.next();\n\t\tSystem.out.println(\"Enter the password\");\n\t\tString password=sc.next();\n\t\tSystem.out.println(\"Enter the salary\");\n\t\tdouble salary=sc.nextDouble();\n\t\tSystem.out.println(\"Enter the date\");\n\t\tString date=sc.next();\n\t\tSystem.out.println(\"Enter the time\");\n\t\tString time=sc.next();\n\t\tSystem.out.println(\"Enter the date and time\");\n\t\tString datetime=sc.next();\n\t\tSystem.out.println(\"Enter the boolean\");\n\t\tboolean boolean1=sc.nextBoolean();\n\t\tSystem.out.println(\"Enter the character\");\n\t\tchar character=sc.next().charAt(0);\n\t\tSystem.out.println(\"Enter the float\");\n\t\tfloat float1=sc.nextFloat();\n\t\tSystem.out.println(\"Enter the double\");\n\t\tdouble double1=sc.nextDouble();\n\t\tSystem.out.println(\"Enter the byte\");\n\t\tbyte byte1=sc.nextByte();\n\t\tSystem.out.println(\"Enter the short\");\n\t\tshort short1=sc.nextShort();\n\t\tSystem.out.println(\"Enter the int\");\n\t\tint int1=sc.nextInt();\n\t\tSystem.out.println(\"Enter\n"
    ],
    "results": 10
},{
    "id": "558",
    "source": "soSearches",
    "language": "java",
    "query": "how to declare an integer list java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tList<Integer> list = new ArrayList<Integer>();\n\t\tlist.add(1);\n\t\tlist.add(2);\n\t\tlist.add(3);\n\t\tlist.add(4);\n\t\tlist.add(5);\n\t\tlist.add(6);\n\t\tlist.add(7);\n\t\tlist.add(8);\n\t\tlist.add(9);\n\t\tlist.add(10);\n\t\tlist.add(11);\n\t\tlist.add(12);\n\t\tlist.add(13);\n\t\tlist.add(14);\n\t\tlist.add(15);\n\t\tlist.add(16);\n\t\tlist.add(17);\n\t\tlist.add(18);\n\t\tlist.add(19);\n\t\tlist.add(20);\n\t\tlist.add(21);\n\t\tlist.add(22);\n\t\tlist.add(23);\n\t\tlist.add(24);\n\t\tlist.add(25);\n\t\tlist.add(26);\n\t\tlist.add(27);\n\t\tlist.add(28);\n\t\tlist.add(29);\n\t\tlist.add(30);\n\t\tlist.add(31);\n\t\tlist.add(32);\n\t\tlist.add(33);\n\t\tlist.add(34);\n\t\tlist.add(35);\n\t\tlist.add(36);\n\t\tlist.add(37);\n\t\tlist.add(38);\n\t\tlist.add(39);\n\t\tlist.add(40);\n\t\tlist.add(41);\n\t\tlist.add(42);\n\t\tlist.add(43);\n\t\tlist.add(44);\n\t\tlist.add(45);\n\t\tlist.add(46);\n\t\tlist.add(47);\n\t\tlist.add(48);\n\t\tlist.add(49);\n\t\tlist.add(50);\n\t\tlist.add(51);\n\t\tlist.add(52);\n\t\tlist.add\n",
        "\tstatic void main(String[] args){\n\t\tint[] list = new int[10];\n\t\tlist[0] = 1;\n\t\tlist[1] = 2;\n\t\tlist[2] = 3;\n\t\tlist[3] = 4;\n\t\tlist[4] = 5;\n\t\tlist[5] = 6;\n\t\tlist[6] = 7;\n\t\tlist[7] = 8;\n\t\tlist[8] = 9;\n\t\tlist[9] = 10;\n\t\tSystem.out.println(list[0]);\n\t\tSystem.out.println(list[1]);\n\t\tSystem.out.println(list[2]);\n\t\tSystem.out.println(list[3]);\n\t\tSystem.out.println(list[4]);\n\t\tSystem.out.println(list[5]);\n\t\tSystem.out.println(list[6]);\n\t\tSystem.out.println(list[7]);\n\t\tSystem.out.println(list[8]);\n\t\tSystem.out.println(list[9]);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "559",
    "source": "soSearches",
    "language": "java",
    "query": "how to use urls in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tURL url = null;\n\t\ttry{\n\t\t\turl = new URL(\"http://www.google.com\");\n\t\t}catch(MalformedURLException e){\n\t\t\tSystem.out.println(\"Malformed URL\");\n\t\t}\n\t\tSystem.out.println(url);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tURL u = new URL(url);\n\t\tSystem.out.println(u.getHost());\n\t\tSystem.out.println(u.getPort());\n\t\tSystem.out.println(u.getProtocol());\n\t\tSystem.out.println(u.getQuery());\n\t\tSystem.out.println(u.getPath());\n\t\tSystem.out.println(u.getRef());\n\t\tSystem.out.println(u.getUserInfo());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tSystem.out.println(url);\n\t\tString url2 = \"https://www.google.com\";\n\t\tSystem.out.println(url2);\n\t\tString url3 = \"ftp://www.google.com\";\n\t\tSystem.out.println(url3);\n\t\tString url4 = \"file:///home/user/Desktop/file.txt\";\n\t\tSystem.out.println(url4);\n\t\tString url5 = \"jar:file:///home/user/Desktop/file.txt\";\n\t\tSystem.out.println(url5);\n\t\tString url6 = \"jar:file:///home/user/Desktop/file.txt!/\";\n\t\tSystem.out.println(url6);\n\t\tString url7 = \"jar:file:///home/user/Desktop/file.txt!/file.txt\";\n\t\tSystem.out.println(url7);\n\t\tString url8 = \"jar:file:///home/user/Desktop/file.txt!/file.txt!/\";\n\t\tSystem.out.println(url8);\n\t\tString url9 = \"jar:file:///home/user/Desktop/file.txt!/file.txt!/file.txt\";\n\t\tSystem.out.println(url9);\n\t\tString url10 = \"jar:file:///home/user/Desktop/file.txt!/file.txt!/file.txt!/\";\n\t\tSystem.out.println(url10);\n\t\tString url11 = \"jar:file:///home/user/Desktop/file.txt!/file.txt!/file.txt!/file.txt\";\n\t\tSystem.out.println(url11);\n\t\tString url12 = \"jar:file:///home/user/Desktop/file.txt!/file.txt!/file.txt!/file.txt!/\";\n\t\tSystem.out.println(url12);\n\t\tString url13 = \"jar:file:///home/user/Desktop/file.txt!/file.txt!/file.txt!/file.txt!/file.txt\";\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tURL myUrl = new URL(url);\n\t\tSystem.out.println(myUrl.getHost());\n\t\tSystem.out.println(myUrl.getPath());\n\t\tSystem.out.println(myUrl.getProtocol());\n\t\tSystem.out.println(myUrl.getQuery());\n\t\tSystem.out.println(myUrl.getRef());\n\t\tSystem.out.println(myUrl.getUserInfo());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tSystem.out.println(url);\n\t\tString url2 = \"https://www.google.com\";\n\t\tSystem.out.println(url2);\n\t\tString url3 = \"ftp://www.google.com\";\n\t\tSystem.out.println(url3);\n\t\tString url4 = \"file:///home/user/file.txt\";\n\t\tSystem.out.println(url4);\n\t\tString url5 = \"file:///C:/Users/user/file.txt\";\n\t\tSystem.out.println(url5);\n\t\tString url6 = \"file:///C:/Users/user/file.txt?param=value\";\n\t\tSystem.out.println(url6);\n\t\tString url7 = \"file:///C:/Users/user/file.txt#anchor\";\n\t\tSystem.out.println(url7);\n\t\tString url8 = \"file:///C:/Users/user/file.txt?param=value#anchor\";\n\t\tSystem.out.println(url8);\n\t\tString url9 = \"file:///C:/Users/user/file.txt?param=value#anchor?param2=value2\";\n\t\tSystem.out.println(url9);\n\t\tString url10 = \"file:///C:/Users/user/file.txt?param=value#anchor?param2=value2\";\n\t\tSystem.out.println(url10);\n\t\tString url11 = \"file:///C:/Users/user/file.txt?param=value#anchor?param2=value2\";\n\t\tSystem.out.println(url11);\n\t\tString url12 = \"file:///C:/Users/user/file.txt?param=value#anchor?param2=value2\";\n\t\tSystem.out.println(url12);\n\t\tString url13 = \"file:///C:/Users/user/file.txt?param=value#anchor?param2=value2\";\n\t\tSystem.out.println(url13);\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tURL myUrl = null;\n\t\ttry{\n\t\t\tmyUrl = new URL(url);\n\t\t}catch(MalformedURLException e){\n\t\t\tSystem.out.println(\"Malformed URL\");\n\t\t}\n\t\tSystem.out.println(\"Protocol: \" + myUrl.getProtocol());\n\t\tSystem.out.println(\"Host: \" + myUrl.getHost());\n\t\tSystem.out.println(\"Port: \" + myUrl.getPort());\n\t\tSystem.out.println(\"Path: \" + myUrl.getPath());\n\t\tSystem.out.println(\"Query: \" + myUrl.getQuery());\n\t\tSystem.out.println(\"File: \" + myUrl.getFile());\n\t\tSystem.out.println(\"Ref: \" + myUrl.getRef());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tURL myUrl = new URL(url);\n\t\tSystem.out.println(myUrl.getHost());\n\t\tSystem.out.println(myUrl.getPath());\n\t\tSystem.out.println(myUrl.getPort());\n\t\tSystem.out.println(myUrl.getProtocol());\n\t\tSystem.out.println(myUrl.getQuery());\n\t\tSystem.out.println(myUrl.getRef());\n\t\tSystem.out.println(myUrl.getUserInfo());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\tURL u = new URL(url);\n\t\tSystem.out.println(u.getProtocol());\n\t\tSystem.out.println(u.getHost());\n\t\tSystem.out.println(u.getPort());\n\t\tSystem.out.println(u.getPath());\n\t\tSystem.out.println(u.getQuery());\n\t\tSystem.out.println(u.getRef());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\ttry{\n\t\t\tURL myUrl = new URL(url);\n\t\t\tSystem.out.println(myUrl.getHost());\n\t\t\tSystem.out.println(myUrl.getPort());\n\t\t\tSystem.out.println(myUrl.getProtocol());\n\t\t\tSystem.out.println(myUrl.getPath());\n\t\t\tSystem.out.println(myUrl.getQuery());\n\t\t\tSystem.out.println(myUrl.getRef());\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://www.google.com\";\n\t\ttry{\n\t\t\tURL myurl = new URL(url);\n\t\t\tSystem.out.println(myurl.getHost());\n\t\t\tSystem.out.println(myurl.getPath());\n\t\t\tSystem.out.println(myurl.getPort());\n\t\t\tSystem.out.println(myurl.getProtocol());\n\t\t\tSystem.out.println(myurl.getQuery());\n\t\t\tSystem.out.println(myurl.getRef());\n\t\t\tSystem.out.println(myurl.getUserInfo());\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Error: \" + e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "560",
    "source": "soSearches",
    "language": "java",
    "query": "how to set text in textfield from table rows in java swt",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tDisplay display = new Display();\n\t\tShell shell = new Shell(display);\n\t\tshell.setText(\"SWT Application\");\n\t\tshell.setSize(300, 300);\n\t\tshell.setLayout(new FillLayout());\n\t\tTable table = new Table(shell, SWT.BORDER | SWT.FULL_SELECTION);\n\t\ttable.setLinesVisible(true);\n\t\ttable.setHeaderVisible(true);\n\t\tTableColumn column1 = new TableColumn(table, SWT.NONE);\n\t\tcolumn1.setText(\"Column 1\");\n\t\tcolumn1.setWidth(100);\n\t\tTableColumn column2 = new TableColumn(table, SWT.NONE);\n\t\tcolumn2.setText(\"Column 2\");\n\t\tcolumn2.setWidth(100);\n\t\tTableColumn column3 = new TableColumn(table, SWT.NONE);\n\t\tcolumn3.setText(\"Column 3\");\n\t\tcolumn3.setWidth(100);\n\t\tTableItem item1 = new TableItem(table, SWT.NONE);\n\t\titem1.setText(new String[] {\"Item 1\", \"Item 2\", \"Item 3\"});\n\t\tTableItem item2 = new TableItem(table, SWT.NONE);\n\t\titem2.setText(new String[] {\"Item 4\", \"Item 5\", \"Item 6\"});\n\t\tTableItem item3 = new TableItem(table, SWT.NONE);\n\t\titem3.setText(new String[] {\"Item 7\", \"Item 8\", \"Item 9\"});\n\t\tTableItem item4 = new TableItem(table, SWT.NONE);\n\t\titem4.setText(new String[] {\"Item 10\", \"Item 11\", \"Item 12\"});\n\t\tTableItem item5 = new TableItem(table, SWT.NONE);\n\t\titem5.setText(new String[] {\"Item 13\", \"Item 14\", \"Item 15\"});\n\t\tTableItem item6 = new TableItem(table, SWT.NONE);\n\t\titem6.setText\n",
        "\tstatic void main(String[] args){\n\t\tDisplay display = new Display();\n\t\tShell shell = new Shell(display);\n\t\tshell.setText(\"SWT Application\");\n\t\tshell.setSize(400,400);\n\t\tshell.setLayout(new FillLayout());\n\t\tTable table = new Table(shell, SWT.MULTI | SWT.BORDER | SWT.FULL_SELECTION);\n\t\ttable.setLinesVisible(true);\n\t\ttable.setHeaderVisible(true);\n\t\tTableColumn column1 = new TableColumn(table, SWT.NONE);\n\t\tcolumn1.setText(\"First Name\");\n\t\tcolumn1.setWidth(100);\n\t\tTableColumn column2 = new TableColumn(table, SWT.NONE);\n\t\tcolumn2.setText(\"Last Name\");\n\t\tcolumn2.setWidth(100);\n\t\tTableColumn column3 = new TableColumn(table, SWT.NONE);\n\t\tcolumn3.setText(\"Age\");\n\t\tcolumn3.setWidth(100);\n\t\tTableItem item1 = new TableItem(table, SWT.NONE);\n\t\titem1.setText(new String[]{\"John\", \"Smith\", \"25\"});\n\t\tTableItem item2 = new TableItem(table, SWT.NONE);\n\t\titem2.setText(new String[]{\"Mary\", \"Jones\", \"32\"});\n\t\tTableItem item3 = new TableItem(table, SWT.NONE);\n\t\titem3.setText(new String[]{\"Bob\", \"Smith\", \"22\"});\n\t\tTableItem item4 = new TableItem(table, SWT.NONE);\n\t\titem4.setText(new String[]{\"Jane\", \"Doe\", \"19\"});\n\t\tTableItem item5 = new TableItem(table, SWT.NONE);\n\t\titem5.setText(new String[]{\"John\", \"Doe\", \"25\"});\n\t\tTableItem item6 = new TableItem(table, SWT.NONE);\n\t\titem6.setText(new String[]{\"Mary\",\n",
        "\tstatic void main(String[] args){\n\t\tDisplay display = new Display();\n\t\tShell shell = new Shell(display);\n\t\tshell.setText(\"SWT Application\");\n\t\tshell.setSize(400,400);\n\t\tshell.setLayout(new FillLayout());\n\t\tTable table = new Table(shell, SWT.BORDER | SWT.FULL_SELECTION);\n\t\ttable.setLinesVisible(true);\n\t\ttable.setHeaderVisible(true);\n\t\tTableColumn column = new TableColumn(table, SWT.NULL);\n\t\tcolumn.setText(\"Column\");\n\t\tcolumn.setWidth(100);\n\t\tfor(int i=0;i<10;i++){\n\t\t\tTableItem item = new TableItem(table, SWT.NULL);\n\t\t\titem.setText(0, \"Item \" + i);\n\t\t}\n\t\ttable.addSelectionListener(new SelectionAdapter(){\n\t\t\tpublic void widgetSelected(SelectionEvent e){\n\t\t\t\tTableItem item = (TableItem)e.item;\n\t\t\t\tSystem.out.println(item.getText(0));\n\t\t\t}\n\t\t});\n\t\tshell.open();\n\t\twhile(!shell.isDisposed()){\n\t\t\tif(!display.readAndDispatch()){\n\t\t\t\tdisplay.sleep();\n\t\t\t}\n\t\t}\n\t\tdisplay.dispose();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDisplay display = new Display();\n\t\tShell shell = new Shell(display);\n\t\tshell.setText(\"SWT Application\");\n\t\tshell.setSize(400,400);\n\t\tshell.setLayout(new GridLayout(2,false));\n\t\tTable table = new Table(shell,SWT.MULTI|SWT.BORDER|SWT.V_SCROLL|SWT.H_SCROLL);\n\t\ttable.setLayoutData(new GridData(SWT.FILL,SWT.FILL,true,true,1,1));\n\t\ttable.setLinesVisible(true);\n\t\ttable.setHeaderVisible(true);\n\t\tTableColumn column1 = new TableColumn(table,SWT.NONE);\n\t\tcolumn1.setText(\"Name\");\n\t\tcolumn1.setWidth(100);\n\t\tTableColumn column2 = new TableColumn(table,SWT.NONE);\n\t\tcolumn2.setText(\"Age\");\n\t\tcolumn2.setWidth(100);\n\t\tTableColumn column3 = new TableColumn(table,SWT.NONE);\n\t\tcolumn3.setText(\"Address\");\n\t\tcolumn3.setWidth(100);\n\t\tTableItem item1 = new TableItem(table,SWT.NONE);\n\t\titem1.setText(new String[]{\"John\",\"25\",\"Bangalore\"});\n\t\tTableItem item2 = new TableItem(table,SWT.NONE);\n\t\titem2.setText(new String[]{\"Peter\",\"30\",\"New York\"});\n\t\tTableItem item3 = new TableItem(table,SWT.NONE);\n\t\titem3.setText(new String[]{\"Mary\",\"25\",\"London\"});\n\t\tTableItem item4 = new TableItem(table,SWT.NONE);\n\t\titem4.setText(new String[]{\"John\",\"25\",\"Bangalore\"});\n\t\tTableItem item5 = new TableItem(table,SWT.NONE);\n\t\titem5.setText(new String[]{\"Peter\",\"30\",\"New York\"}\n",
        "\tstatic void main(String[] args){\n\t\tDisplay display = new Display();\n\t\tShell shell = new Shell(display);\n\t\tshell.setText(\"SWT Application\");\n\t\tshell.setSize(400, 400);\n\t\tshell.setLayout(new GridLayout(2, false));\n\t\tTable table = new Table(shell, SWT.BORDER | SWT.FULL_SELECTION);\n\t\ttable.setLinesVisible(true);\n\t\ttable.setHeaderVisible(true);\n\t\tTableColumn column1 = new TableColumn(table, SWT.NONE);\n\t\tcolumn1.setText(\"Column 1\");\n\t\tcolumn1.setWidth(100);\n\t\tTableColumn column2 = new TableColumn(table, SWT.NONE);\n\t\tcolumn2.setText(\"Column 2\");\n\t\tcolumn2.setWidth(100);\n\t\tTableColumn column3 = new TableColumn(table, SWT.NONE);\n\t\tcolumn3.setText(\"Column 3\");\n\t\tcolumn3.setWidth(100);\n\t\tTableItem item1 = new TableItem(table, SWT.NONE);\n\t\titem1.setText(new String[] {\"Item 1\", \"Item 2\", \"Item 3\"});\n\t\tTableItem item2 = new TableItem(table, SWT.NONE);\n\t\titem2.setText(new String[] {\"Item 4\", \"Item 5\", \"Item 6\"});\n\t\tTableItem item3 = new TableItem(table, SWT.NONE);\n\t\titem3.setText(new String[] {\"Item 7\", \"Item 8\", \"Item 9\"});\n\t\tTableItem item4 = new TableItem(table, SWT.NONE);\n\t\titem4.setText(new String[] {\"Item 10\", \"Item 11\", \"Item 12\"});\n\t\tTableItem item5 = new TableItem(table, SWT.NONE);\n\t\titem5.setText(new String[] {\"Item 13\", \"Item 14\", \"Item 15\"});\n\t\tTableItem item6 = new TableItem(table, SWT.NONE);\n\t\titem\n",
        "\tstatic void main(String[] args){\n\t\tDisplay display = new Display();\n\t\tShell shell = new Shell(display);\n\t\tshell.setText(\"SWT Application\");\n\t\tshell.setSize(400,400);\n\t\tshell.setLayout(new FillLayout());\n\t\tTable table = new Table(shell, SWT.BORDER | SWT.MULTI | SWT.FULL_SELECTION);\n\t\ttable.setLinesVisible(true);\n\t\ttable.setHeaderVisible(true);\n\t\tTableColumn column1 = new TableColumn(table, SWT.LEFT);\n\t\tcolumn1.setText(\"First Name\");\n\t\tTableColumn column2 = new TableColumn(table, SWT.LEFT);\n\t\tcolumn2.setText(\"Last Name\");\n\t\tTableColumn column3 = new TableColumn(table, SWT.LEFT);\n\t\tcolumn3.setText(\"Age\");\n\t\tTableItem item1 = new TableItem(table, SWT.NONE);\n\t\titem1.setText(new String[] {\"John\", \"Smith\", \"30\"});\n\t\tTableItem item2 = new TableItem(table, SWT.NONE);\n\t\titem2.setText(new String[] {\"Mary\", \"Jones\", \"25\"});\n\t\tTableItem item3 = new TableItem(table, SWT.NONE);\n\t\titem3.setText(new String[] {\"Bob\", \"Brown\", \"23\"});\n\t\tTableItem item4 = new TableItem(table, SWT.NONE);\n\t\titem4.setText(new String[] {\"Jane\", \"Doe\", \"22\"});\n\t\tTableItem item5 = new TableItem(table, SWT.NONE);\n\t\titem5.setText(new String[] {\"John\", \"Doe\", \"21\"});\n\t\tTableItem item6 = new TableItem(table, SWT.NONE);\n\t\titem6.setText(new String[] {\"Mary\", \"Smith\", \"30\"});\n\t\tTableItem item7 = new TableItem(table, SWT.NONE);\n\t\titem7.\n",
        "\tstatic void main(String[] args){\n\t\tDisplay display = new Display();\n\t\tShell shell = new Shell(display);\n\t\tshell.setText(\"SWT Application\");\n\t\tshell.setSize(400,400);\n\t\tshell.setLayout(new GridLayout(2,false));\n\t\tTable table = new Table(shell,SWT.BORDER|SWT.V_SCROLL|SWT.H_SCROLL);\n\t\ttable.setLayoutData(new GridData(SWT.FILL,SWT.FILL,true,true,1,1));\n\t\ttable.setHeaderVisible(true);\n\t\ttable.setLinesVisible(true);\n\t\tTableColumn column1 = new TableColumn(table,SWT.NONE);\n\t\tcolumn1.setText(\"Name\");\n\t\tcolumn1.setWidth(100);\n\t\tTableColumn column2 = new TableColumn(table,SWT.NONE);\n\t\tcolumn2.setText(\"Age\");\n\t\tcolumn2.setWidth(100);\n\t\tTableColumn column3 = new TableColumn(table,SWT.NONE);\n\t\tcolumn3.setText(\"City\");\n\t\tcolumn3.setWidth(100);\n\t\tTableItem item1 = new TableItem(table,SWT.NONE);\n\t\titem1.setText(new String[]{\"John\",\"23\",\"Bangalore\"});\n\t\tTableItem item2 = new TableItem(table,SWT.NONE);\n\t\titem2.setText(new String[]{\"Peter\",\"24\",\"Chennai\"});\n\t\tTableItem item3 = new TableItem(table,SWT.NONE);\n\t\titem3.setText(new String[]{\"Mary\",\"25\",\"Mumbai\"});\n\t\tTableItem item4 = new TableItem(table,SWT.NONE);\n\t\titem4.setText(new String[]{\"John\",\"23\",\"Bangalore\"});\n\t\tTableItem item5 = new TableItem(table,SWT.NONE);\n\t\titem5.setText(new String[]{\"Peter\",\"24\",\"Chennai\"});\n",
        "\tstatic void main(String[] args) {\n\t\tDisplay display = new Display();\n\t\tShell shell = new Shell(display);\n\t\tshell.setText(\"SWT Application\");\n\t\tshell.setSize(400, 400);\n\t\tshell.setLayout(new GridLayout(2, false));\n\t\tTable table = new Table(shell, SWT.BORDER | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL);\n\t\ttable.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));\n\t\ttable.setHeaderVisible(true);\n\t\ttable.setLinesVisible(true);\n\t\tTableColumn column1 = new TableColumn(table, SWT.NONE);\n\t\tcolumn1.setText(\"Column 1\");\n\t\tcolumn1.setWidth(100);\n\t\tTableColumn column2 = new TableColumn(table, SWT.NONE);\n\t\tcolumn2.setText(\"Column 2\");\n\t\tcolumn2.setWidth(100);\n\t\tTableColumn column3 = new TableColumn(table, SWT.NONE);\n\t\tcolumn3.setText(\"Column 3\");\n\t\tcolumn3.setWidth(100);\n\t\tTableItem item1 = new TableItem(table, SWT.NONE);\n\t\titem1.setText(new String[] {\"Item 1\", \"Item 2\", \"Item 3\"});\n\t\tTableItem item2 = new TableItem(table, SWT.NONE);\n\t\titem2.setText(new String[] {\"Item 4\", \"Item 5\", \"Item 6\"});\n\t\tTableItem item3 = new TableItem(table, SWT.NONE);\n\t\titem3.setText(new String[] {\"Item 7\", \"Item 8\", \"Item 9\"});\n\t\tTableItem item4 = new TableItem(table, SWT.NONE);\n\t\titem4.setText(new String[] {\"Item 10\", \"Item 11\", \"Item 12\"});\n\t\tTableItem item5 = new TableItem(table, SWT.NONE\n",
        "\tvoid setText(Text text, Table table){\n\t\tTableItem[] items = table.getItems();\n\t\tfor(int i=0; i<items.length; i++){\n\t\t\ttext.setText(items[i].getText(0));\n\t\t}\n\t}\n}\n",
        "\tvoid setText(Text text){\n\t\ttext.setText(getText());\n\t}\n\tpublic\n\tString getText(){\n\t\treturn \"Hello World\";\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "561",
    "source": "soSearches",
    "language": "java",
    "query": "how to java modules",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"method\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "562",
    "source": "soSearches",
    "language": "java",
    "query": "how to connect the two activities in java adt",
    "snippets": [
        "\tvoid main(String[] args){\n\t\tIntent intent = new Intent(this, SecondActivity.class);\n\t\tstartActivity(intent);\n\t}\n}\n",
        "\tvoid method(){\n\t\t//connect the two activities\n\t\tIntent intent = new Intent(this,SecondActivity.class);\n\t\tstartActivity(intent);\n\t}\n}\n",
        "\tvoid method(){\n\t\tClazz clazz = new Clazz();\n\t\tclazz.method();\n\t}\n}\n",
        "\tvoid method(){\n\t\tIntent intent = new Intent(this,OtherClazz.class);\n\t\tstartActivity(intent);\n\t}\n}\n",
        "\tvoid main(){\n\t\tClazz2 c2 = new Clazz2();\n\t\tc2.main();\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "563",
    "source": "soSearches",
    "language": "java",
    "query": "how to change the data type of a string variable to character in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello\";\n\t\tchar ch = str.charAt(0);\n\t\tSystem.out.println(ch);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tchar ch = str.charAt(0);\n\t\tSystem.out.println(ch);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello\";\n\t\tchar c = s.charAt(0);\n\t\tSystem.out.println(c);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "564",
    "source": "soSearches",
    "language": "java",
    "query": "how to add specific value to arraylist from constructor java",
    "snippets": [
        "\tClazz(int a,int b,int c){\n\t\tArrayList<Integer> list=new ArrayList<Integer>();\n\t\tlist.add(a);\n\t\tlist.add(b);\n\t\tlist.add(c);\n\t}\n}\n",
        "\tClazz(int a,int b,int c){\n\t\tArrayList<Integer> list=new ArrayList<Integer>();\n\t\tlist.add(a);\n\t\tlist.add(b);\n\t\tlist.add(c);\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tClazz(int a,int b){\n\t\tArrayList<Integer> al=new ArrayList<Integer>();\n\t\tal.add(a);\n\t\tal.add(b);\n\t\tSystem.out.println(al);\n\t}\n}\n",
        "\tClazz(int a,int b){\n\t\tArrayList<Integer> list=new ArrayList<Integer>();\n\t\tlist.add(a);\n\t\tlist.add(b);\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tClazz(int a,int b,int c){\n\t\tArrayList<Integer> al=new ArrayList<Integer>();\n\t\tal.add(a);\n\t\tal.add(b);\n\t\tal.add(c);\n\t\tSystem.out.println(al);\n\t}\n}\n",
        "\tClazz(int a){\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\tlist.add(a);\n\t}\n}\n",
        "\tClazz(int i){\n\t\tArrayList<Integer> a=new ArrayList<Integer>();\n\t\ta.add(i);\n\t}\n}\n",
        "\tClazz(int i){\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\tlist.add(i);\n\t}\n}\n",
        "\tClazz(String name){\n\t\tSystem.out.println(\"Clazz constructor\");\n\t\tSystem.out.println(\"name: \"+name);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "565",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert aaabcdd to a3bcd2 in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"aaabcdd\";\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint count = 1;\n\t\tfor(int i = 0; i < s.length(); i++){\n\t\t\tif(i == s.length() - 1){\n\t\t\t\tsb.append(count);\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t}\n\t\t\tif(s.charAt(i) == s.charAt(i + 1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(count);\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"aaabcdd\";\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint count = 1;\n\t\tfor(int i = 0; i < s.length(); i++){\n\t\t\tif(i == s.length() - 1){\n\t\t\t\tsb.append(count);\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t}\n\t\t\telse if(s.charAt(i) == s.charAt(i + 1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(count);\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"aaabcdd\";\n\t\tStringBuilder sb=new StringBuilder();\n\t\tint count=1;\n\t\tfor(int i=0;i<s.length()-1;i++){\n\t\t\tif(s.charAt(i)==s.charAt(i+1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t\tsb.append(count);\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t}\n\t\tsb.append(s.charAt(s.length()-1));\n\t\tsb.append(count);\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"aaabcdd\";\n\t\tStringBuilder sb=new StringBuilder();\n\t\tint count=1;\n\t\tfor(int i=0;i<s.length();i++){\n\t\t\tif(i+1<s.length()&&s.charAt(i)==s.charAt(i+1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t\tsb.append(count);\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"aaabcdd\";\n\t\tStringBuffer sb=new StringBuffer();\n\t\tint count=1;\n\t\tfor(int i=0;i<str.length();i++){\n\t\t\tif(i+1<str.length()&&str.charAt(i)==str.charAt(i+1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(str.charAt(i));\n\t\t\t\tsb.append(count);\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sb);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"aaabcdd\";\n\t\tStringBuilder sb=new StringBuilder();\n\t\tint count=1;\n\t\tfor(int i=0;i<s.length();i++){\n\t\t\tif(s.charAt(i)==s.charAt(i+1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t\tsb.append(count);\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"aaabcdd\";\n\t\tStringBuilder sb=new StringBuilder();\n\t\tint count=1;\n\t\tfor(int i=0;i<str.length()-1;i++){\n\t\t\tif(str.charAt(i)==str.charAt(i+1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(str.charAt(i));\n\t\t\t\tsb.append(count);\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t}\n\t\tsb.append(str.charAt(str.length()-1));\n\t\tsb.append(count);\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"aaabcdd\";\n\t\tStringBuffer sb=new StringBuffer();\n\t\tint count=1;\n\t\tfor(int i=0;i<s.length();i++){\n\t\t\tif(s.charAt(i)==s.charAt(i+1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t\tsb.append(count);\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"aaabcdd\";\n\t\tStringBuffer sb=new StringBuffer();\n\t\tint count=1;\n\t\tfor(int i=0;i<s.length();i++){\n\t\t\tif(i+1<s.length()&&s.charAt(i)==s.charAt(i+1)){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\t\tsb.append(count);\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "566",
    "source": "soSearches",
    "language": "java",
    "query": "how to put javafx button",
    "snippets": [
        "\tvoid method(){\n\t\tButton button = new Button(\"Click me\");\n\t\tbutton.setOnAction(new EventHandler<ActionEvent>(){\n\t\t\tpublic void handle(ActionEvent event){\n\t\t\t\tSystem.out.println(\"Hello World\");\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tButton btn = new Button(\"Click me\");\n\t\tbtn.setOnAction(e -> System.out.println(\"Hello World\"));\n\t\tStage stage = new Stage();\n\t\tstage.setScene(new Scene(btn));\n\t\tstage.show();\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tButton btn = new Button(\"Click me\");\n\t\tbtn.setOnAction(e -> System.out.println(\"Hello World!\"));\n\t\tbtn.setStyle(\"-fx-background-color: #090a0c\");\n\t\tbtn.setPrefSize(200, 200);\n\t\tbtn.setTranslateX(100);\n\t\tbtn.setTranslateY(100);\n\t\tbtn.setFont(new Font(\"Arial\", 20));\n\t\tbtn.setTextFill(Color.WHITE);\n\t\tbtn.setEffect(new DropShadow());\n\t\tbtn.setCursor(Cursor.HAND);\n\t\tbtn.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(10), new BorderWidths(1))));\n\t\tbtn.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(10), new BorderWidths(1))));\n\t\tbtn.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(10), new BorderWidths(1))));\n\t\tbtn.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(10), new BorderWidths(1))));\n\t\tbtn.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(10), new BorderWidths(1))));\n\t\tbtn.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(10), new BorderWidths(1))));\n\t\tbtn.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, new CornerRadii(10), new BorderWidths(1))));\n\t\tbtn.setBorder(new Border(new Border\n",
        "\tvoid method(){\n\t\tButton button = new Button();\n\t\tbutton.setText(\"Click me\");\n\t\tbutton.setOnAction(e -> System.out.println(\"Hello\"));\n\t}\n}\n"
    ],
    "results": 5
},{
    "id": "567",
    "source": "soSearches",
    "language": "java",
    "query": "how to use print\\\" statements to display a question in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"What is your name?\");\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tSystem.out.println(\"What is your name?\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "568",
    "source": "soSearches",
    "language": "java",
    "query": "how to get total count of number in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=30;\n\t\tint d=40;\n\t\tint e=50;\n\t\tint f=60;\n\t\tint g=70;\n\t\tint h=80;\n\t\tint i=90;\n\t\tint j=100;\n\t\tint k=110;\n\t\tint l=120;\n\t\tint m=130;\n\t\tint n=140;\n\t\tint o=150;\n\t\tint p=160;\n\t\tint q=170;\n\t\tint r=180;\n\t\tint s=190;\n\t\tint t=200;\n\t\tint u=210;\n\t\tint v=220;\n\t\tint w=230;\n\t\tint x=240;\n\t\tint y=250;\n\t\tint z=260;\n\t\tint aa=270;\n\t\tint bb=280;\n\t\tint cc=290;\n\t\tint dd=300;\n\t\tint ee=310;\n\t\tint ff=320;\n\t\tint gg=330;\n\t\tint hh=340;\n\t\tint ii=350;\n\t\tint jj=360;\n\t\tint kk=370;\n\t\tint ll=380;\n\t\tint mm=390;\n\t\tint nn=400;\n\t\tint oo=410;\n\t\tint pp=420;\n\t\tint qq=430;\n\t\tint rr=440;\n\t\tint ss=450;\n\t\tint tt=460;\n\t\tint uu=470;\n\t\tint vv=480;\n\t\tint ww=490;\n\t\tint xx=500;\n\t\tint yy=510;\n\t\tint zz=520;\n\t\tint aaa=530;\n\t\tint bbb=540;\n\t\tint ccc=550;\n\t\tint ddd=560;\n\t\tint eee=570;\n\t\tint fff=580;\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(\"sum of a and b is\"+c);\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=30;\n\t\tint d=40;\n\t\tint e=50;\n\t\tint f=60;\n\t\tint g=70;\n\t\tint h=80;\n\t\tint i=90;\n\t\tint j=100;\n\t\tint k=110;\n\t\tint l=120;\n\t\tint m=130;\n\t\tint n=140;\n\t\tint o=150;\n\t\tint p=160;\n\t\tint q=170;\n\t\tint r=180;\n\t\tint s=190;\n\t\tint t=200;\n\t\tint u=210;\n\t\tint v=220;\n\t\tint w=230;\n\t\tint x=240;\n\t\tint y=250;\n\t\tint z=260;\n\t\tint a1=270;\n\t\tint b1=280;\n\t\tint c1=290;\n\t\tint d1=300;\n\t\tint e1=310;\n\t\tint f1=320;\n\t\tint g1=330;\n\t\tint h1=340;\n\t\tint i1=350;\n\t\tint j1=360;\n\t\tint k1=370;\n\t\tint l1=380;\n\t\tint m1=390;\n\t\tint n1=400;\n\t\tint o1=410;\n\t\tint p1=420;\n\t\tint q1=430;\n\t\tint r1=440;\n\t\tint s1=450;\n\t\tint t1=460;\n\t\tint u1=470;\n\t\tint v1=480;\n\t\tint w1=490;\n\t\tint x1=500;\n\t\tint y1=510;\n\t\tint z1=520;\n\t\tint a2=530;\n\t\tint b2=540;\n\t\tint c2=550;\n\t\tint d2=560;\n\t\tint e2=570;\n"
    ],
    "results": 10
},{
    "id": "569",
    "source": "soSearches",
    "language": "java",
    "query": "how to change label color when mouse is entered in java",
    "snippets": [
        "\tvoid mouseEntered(MouseEvent e){\n\t\tlabel.setForeground(Color.red);\n\t}\n\tpublic\n\tvoid mouseExited(MouseEvent e){\n\t\tlabel.setForeground(Color.black);\n\t}\n}\n",
        "\tvoid mouseEntered(MouseEvent e){\n\t\tlabel.setForeground(Color.red);\n\t}\n}\n",
        "\tvoid mouseEntered(MouseEvent e){\n\t\tJLabel label = (JLabel)e.getSource();\n\t\tlabel.setForeground(Color.red);\n\t}\n\tpublic\n\tvoid mouseExited(MouseEvent e){\n\t\tJLabel label = (JLabel)e.getSource();\n\t\tlabel.setForeground(Color.black);\n\t}\n}\n",
        "\tvoid mouseEntered(MouseEvent e){\n\t\tJLabel label = (JLabel)e.getSource();\n\t\tlabel.setForeground(Color.RED);\n\t}\n\tpublic\n\tvoid mouseExited(MouseEvent e){\n\t\tJLabel label = (JLabel)e.getSource();\n\t\tlabel.setForeground(Color.BLACK);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Mouse Enter\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJLabel label = new JLabel(\"Click Me\");\n\t\tlabel.addMouseListener(new MouseAdapter(){\n\t\t\tpublic void mouseEntered(MouseEvent e){\n\t\t\t\tlabel.setForeground(Color.RED);\n\t\t\t}\n\t\t\tpublic void mouseExited(MouseEvent e){\n\t\t\t\tlabel.setForeground(Color.BLACK);\n\t\t\t}\n\t\t});\n\t\tframe.add(label);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "570",
    "source": "soSearches",
    "language": "java",
    "query": "how to implement a predefiled *.java file in a java project in netbeans 8.2",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "571",
    "source": "soSearches",
    "language": "java",
    "query": "spring boot - how to avoid “failed to instantiate [java.util.list]: specified class is an interface” in http controller handler?",
    "snippets": [
        "}\n",
        "\tstatic void main(String[] args) {\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"1\");\n\t\tlist.add(\"2\");\n\t\tlist.add(\"3\");\n\t\tlist.add(\"4\");\n\t\tlist.add(\"5\");\n\t\tlist.add(\"6\");\n\t\tlist.add(\"7\");\n\t\tlist.add(\"8\");\n\t\tlist.add(\"9\");\n\t\tlist.add(\"10\");\n\t\tlist.add(\"11\");\n\t\tlist.add(\"12\");\n\t\tlist.add(\"13\");\n\t\tlist.add(\"14\");\n\t\tlist.add(\"15\");\n\t\tlist.add(\"16\");\n\t\tlist.add(\"17\");\n\t\tlist.add(\"18\");\n\t\tlist.add(\"19\");\n\t\tlist.add(\"20\");\n\t\tlist.add(\"21\");\n\t\tlist.add(\"22\");\n\t\tlist.add(\"23\");\n\t\tlist.add(\"24\");\n\t\tlist.add(\"25\");\n\t\tlist.add(\"26\");\n\t\tlist.add(\"27\");\n\t\tlist.add(\"28\");\n\t\tlist.add(\"29\");\n\t\tlist.add(\"30\");\n\t\tlist.add(\"31\");\n\t\tlist.add(\"32\");\n\t\tlist.add(\"33\");\n\t\tlist.add(\"34\");\n\t\tlist.add(\"35\");\n\t\tlist.add(\"36\");\n\t\tlist.add(\"37\");\n\t\tlist.add(\"38\");\n\t\tlist.add(\"39\");\n\t\tlist.add(\"40\");\n\t\tlist.add(\"41\");\n\t\tlist.add(\"42\");\n\t\tlist.add(\"43\");\n\t\tlist.add(\"44\");\n\t\tlist.add(\"45\");\n\t\tlist.add(\"46\");\n\t\tlist.add(\"47\");\n\t\tlist.add(\"48\");\n\t\tlist.add(\"49\");\n\t\tlist.add(\"50\");\n\t\tlist.add(\"51\");\n\t\tlist.add(\"52\");\n\t\tlist.\n",
        "\tvoid doSomething(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add(\"0\");\n",
        "\tvoid doSomething(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"1\");\n\t\tlist.add(\"2\");\n\t\tlist.add(\"3\");\n\t\tlist.add(\"4\");\n\t\tlist.add(\"5\");\n\t\tlist.add(\"6\");\n\t\tlist.add(\"7\");\n\t\tlist.add(\"8\");\n\t\tlist.add(\"9\");\n\t\tlist.add(\"10\");\n\t\tlist.add(\"11\");\n\t\tlist.add(\"12\");\n\t\tlist.add(\"13\");\n\t\tlist.add(\"14\");\n\t\tlist.add(\"15\");\n\t\tlist.add(\"16\");\n\t\tlist.add(\"17\");\n\t\tlist.add(\"18\");\n\t\tlist.add(\"19\");\n\t\tlist.add(\"20\");\n\t\tlist.add(\"21\");\n\t\tlist.add(\"22\");\n\t\tlist.add(\"23\");\n\t\tlist.add(\"24\");\n\t\tlist.add(\"25\");\n\t\tlist.add(\"26\");\n\t\tlist.add(\"27\");\n\t\tlist.add(\"28\");\n\t\tlist.add(\"29\");\n\t\tlist.add(\"30\");\n\t\tlist.add(\"31\");\n\t\tlist.add(\"32\");\n\t\tlist.add(\"33\");\n\t\tlist.add(\"34\");\n\t\tlist.add(\"35\");\n\t\tlist.add(\"36\");\n\t\tlist.add(\"37\");\n\t\tlist.add(\"38\");\n\t\tlist.add(\"39\");\n\t\tlist.add(\"40\");\n\t\tlist.add(\"41\");\n\t\tlist.add(\"42\");\n\t\tlist.add(\"43\");\n\t\tlist.add(\"44\");\n\t\tlist.add(\"45\");\n\t\tlist.add(\"46\");\n\t\tlist.add(\"47\");\n\t\tlist.add(\"48\");\n\t\tlist.add(\"49\");\n\t\tlist.add(\"50\");\n\t\tlist.add(\"51\");\n\t\tlist.add(\"52\");\n\t\tlist.add(\"53\");\n",
        "\tvoid method(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add(\"0\");\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"test\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"hello\");\n\t\tlist.add(\"world\");\n\t\tlist.add(\"!\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "572",
    "source": "soSearches",
    "language": "java",
    "query": "how to select the key in sorted list java code",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tCollections.sort(list);\n\t\tSystem.out.println(list);\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(1));\n\t\tSystem.out.println(list.get(2));\n\t\tSystem.out.println(list.get(3));\n\t\tSystem.out.println(list.get(4));\n\t\tSystem.out.println(list.get(5));\n\t\tSystem.out.println(list.get(6));\n\t\tSystem.out.println(list.get(7));\n\t\tSystem.out.println(list.get(8));\n\t\tSystem.out.println(list.get(9));\n\t\tSystem.out.println(list.get(10));\n\t\tSystem.out.println(list.get(11));\n\t\tSystem.out.println(list.get(12));\n\t\tSystem.out.println(list.get(13));\n\t\tSystem.out.println(\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tCollections.sort(list);\n\t\tSystem.out.println(list);\n\t\tSystem.out.println(\"Enter the key to search\");\n\t\tScanner sc = new Scanner(System.in);\n\t\tString key = sc.nextLine();\n\t\tint index = Collections.binarySearch(list, key);\n\t\tif(index>=0){\n\t\t\tSystem.out.println(\"Key found at index \"+index);\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Key not found\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tSystem.out.println(list);\n\t\tCollections.sort(list);\n\t\tSystem.out.println(list);\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(1));\n\t\tSystem.out.println(list.get(2));\n\t\tSystem.out.println(list.get(3));\n\t\tSystem.out.println(list.get(4));\n\t\tSystem.out.println(list.get(5));\n\t\tSystem.out.println(list.get(6));\n\t\tSystem.out.println(list.get(7));\n\t\tSystem.out.println(list.get(8));\n\t\tSystem.out.println(list.get(9));\n\t\tSystem.out.println(list.get(10));\n\t\tSystem.out.println(list.get(11));\n\t\tSystem.out.println(list.get(12));\n\t\tSystem.out.println(list.get(\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add(\"AA\");\n\t\tlist.add(\"BB\");\n\t\tlist.add(\"CC\");\n\t\tlist.add(\"DD\");\n\t\tlist.add(\"EE\");\n\t\tlist.add(\"FF\");\n\t\tlist.add(\"GG\");\n\t\tlist.add(\"HH\");\n\t\tlist.add(\"II\");\n\t\tlist.add(\"JJ\");\n\t\tlist.add(\"KK\");\n\t\tlist.add(\"LL\");\n\t\tlist.add(\"MM\");\n\t\tlist.add(\"NN\");\n\t\tlist.add(\"OO\");\n\t\tlist.add(\"PP\");\n\t\tlist.add(\"QQ\");\n\t\tlist.add(\"RR\");\n\t\tlist.add(\"SS\");\n\t\tlist.add(\"TT\");\n\t\tlist.add(\"UU\");\n\t\tlist.add(\"VV\");\n\t\tlist.add(\"WW\");\n\t\tlist.add(\"XX\");\n\t\tlist.add(\"YY\");\n\t\tlist.add(\"ZZ\");\n\t\tlist\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint key = 5;\n\t\tint low = 0;\n\t\tint high = arr.length - 1;\n\t\tint mid = 0;\n\t\twhile(low <= high){\n\t\t\tmid = (low + high)/2;\n\t\t\tif(arr[mid] == key){\n\t\t\t\tSystem.out.println(\"key found at index \" + mid);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(arr[mid] < key){\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "573",
    "source": "soSearches",
    "language": "java",
    "query": "how to create a pushing system java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid push(){\n\t\tSystem.out.println(\"push\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "574",
    "source": "soSearches",
    "language": "java",
    "query": "how to java.util.logging.level",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Level.OFF);\n\t\tSystem.out.println(Level.SEVERE);\n\t\tSystem.out.println(Level.WARNING);\n\t\tSystem.out.println(Level.INFO);\n\t\tSystem.out.println(Level.CONFIG);\n\t\tSystem.out.println(Level.FINE);\n\t\tSystem.out.println(Level.FINER);\n\t\tSystem.out.println(Level.FINEST);\n\t\tSystem.out.println(Level.ALL);\n\t}\n}\n",
        "\tvoid method(){\n\t\tjava.util.logging.Level level = java.util.logging.Level.INFO;\n\t\tSystem.out.println(level);\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"method\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "575",
    "source": "soSearches",
    "language": "java",
    "query": "how to print patterns using for loops in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tfor(int i=1;i<=5;i++){\n\t\t\tfor(int j=1;j<=i;j++){\n\t\t\t\tSystem.out.print(\"*\");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i,j;\n\t\tfor(i=1;i<=5;i++){\n\t\t\tfor(j=1;j<=i;j++){\n\t\t\t\tSystem.out.print(\"*\");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "576",
    "source": "soSearches",
    "language": "java",
    "query": "how to enter name in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Enter your name\");\n\t\tScanner sc = new Scanner(System.in);\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Hello \" + name);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Hello \"+name);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString name;\n\t\tSystem.out.println(\"Enter your name\");\n\t\tname = System.console().readLine();\n\t\tSystem.out.println(\"Hello \"+name);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "577",
    "source": "soSearches",
    "language": "java",
    "query": "[java] how to fill an arraylist",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"Hello\");\n\t\tlist.add(\"World\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tSystem.out.println(list);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "578",
    "source": "soSearches",
    "language": "java",
    "query": "how to free memory using java unsafe, using a java reference",
    "snippets": [
        "\tvoid free(Object o){\n\t\tSystem.out.println(\"freeing memory\");\n\t\tUnsafe u = Unsafe.getUnsafe();\n\t\tu.freeMemory(o);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tClazz clazz = new Clazz();\n\t\tclazz.doSomething();\n\t}\n\tpublic void doSomething(){\n\t\tSystem.out.println(\"doSomething\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tClazz clazz = new Clazz();\n\t\tclazz.doSomething();\n\t}\n\tpublic void doSomething(){\n\t\tint[] array = new int[10];\n\t\tfor(int i = 0; i < array.length; i++){\n\t\t\tarray[i] = i;\n\t\t}\n\t\tSystem.out.println(array[0]);\n\t}\n}\n",
        "\tvoid free(Object o){\n\t\tSystem.out.println(\"freeing memory\");\n\t\tUnsafe u = Unsafe.getUnsafe();\n\t\tu.freeMemory(o.getClass().getName().hashCode());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t\tClazz clazz = new Clazz();\n\t\tclazz.free();\n\t}\n\tpublic void free(){\n\t\tSystem.out.println(\"Freeing memory\");\n\t\tint[] arr = new int[10];\n\t\tarr = null;\n\t}\n}\n"
    ],
    "results": 8
},{
    "id": "579",
    "source": "soSearches",
    "language": "java",
    "query": "how to upload file into database using jsp and servlet in java",
    "snippets": [
        "\tvoid uploadFile(String fileName,String filePath){\n\t\ttry{\n\t\t\tFile file=new File(filePath);\n\t\t\tFileInputStream fis=new FileInputStream(file);\n\t\t\tPreparedStatement ps=con.prepareStatement(\"insert into clazz values(?,?)\");\n\t\t\tps.setString(1,fileName);\n\t\t\tps.setBinaryStream(2,fis,(int)file.length());\n\t\t\tps.executeUpdate();\n\t\t\tfis.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid uploadFile(String fileName,String filePath){\n\t\ttry{\n\t\t\tFile file=new File(filePath);\n\t\t\tFileInputStream fis=new FileInputStream(file);\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tPreparedStatement ps=con.prepareStatement(\"insert into clazz values(?,?)\");\n\t\t\tps.setString(1,fileName);\n\t\t\tps.setBinaryStream(2,fis,(int)file.length());\n\t\t\tps.executeUpdate();\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid uploadFile(String fileName,String filePath){\n\t\ttry{\n\t\t\tFile file=new File(filePath);\n\t\t\tFileInputStream fis=new FileInputStream(file);\n\t\t\tPreparedStatement ps=con.prepareStatement(\"insert into clazz values(?,?)\");\n\t\t\tps.setString(1,fileName);\n\t\t\tps.setBinaryStream(2,fis,(int)file.length());\n\t\t\tps.executeUpdate();\n\t\t\tfis.close();\n\t\t\tps.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid uploadFile(String fileName, String filePath){\n\t\ttry{\n\t\t\tFile file = new File(filePath);\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tPreparedStatement ps = con.prepareStatement(\"insert into files values(?,?)\");\n\t\t\tps.setString(1, fileName);\n\t\t\tps.setBinaryStream(2, fis, (int)file.length());\n\t\t\tps.executeUpdate();\n\t\t\tfis.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid uploadFile(String fileName,String filePath){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tPreparedStatement ps=con.prepareStatement(\"insert into clazz values(?,?)\");\n\t\t\tps.setString(1,fileName);\n\t\t\tps.setString(2,filePath);\n\t\t\tps.executeUpdate();\n\t\t\tcon.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid uploadFile(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException{\n\t\t//get the file\n\t\tPart filePart = request.getPart(\"file\");\n\t\t//get the file name\n\t\tString fileName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString();\n\t\t//get the file content\n\t\tInputStream fileContent = filePart.getInputStream();\n\t\t//get the file type\n\t\tString fileType = filePart.getContentType();\n\t\t//get the file size\n\t\tlong fileSize = filePart.getSize();\n\t\t//get the file name\n\t\tString fileName = filePart.getSubmittedFileName();\n\t\t//get the file content\n\t\tInputStream fileContent = filePart.getInputStream();\n\t\t//get the file type\n\t\tString fileType = filePart.getContentType();\n\t\t//get the file size\n\t\tlong fileSize = filePart.getSize();\n\t\t//get the file name\n\t\tString fileName = filePart.getSubmittedFileName();\n\t\t//get the file content\n\t\tInputStream fileContent = filePart.getInputStream();\n\t\t//get the file type\n\t\tString fileType = filePart.getContentType();\n\t\t//get the file size\n\t\tlong fileSize = filePart.getSize();\n\t\t//get the file name\n\t\tString fileName = filePart.getSubmittedFileName();\n\t\t//get the file content\n\t\tInputStream fileContent = filePart.getInputStream();\n\t\t//get the file type\n\t\tString fileType = filePart.getContentType();\n\t\t//get the file size\n\t\tlong fileSize = filePart.getSize();\n\t\t//get the file name\n\t\tString fileName = filePart.getSubmittedFileName();\n\t\t//get the file content\n\t\tInputStream fileContent = filePart.getInputStream();\n\t\t//get the file type\n\t\tString fileType = filePart.getContentType();\n\t\t//get the file size\n",
        "\tvoid uploadFile(String fileName,String filePath){\n\t\ttry{\n\t\t\tFileInputStream fis=new FileInputStream(filePath);\n\t\t\tPreparedStatement ps=con.prepareStatement(\"insert into clazz values(?,?,?)\");\n\t\t\tps.setString(1,fileName);\n\t\t\tps.setBinaryStream(2,fis,fis.available());\n\t\t\tps.setString(3,filePath);\n\t\t\tps.executeUpdate();\n\t\t\t\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid uploadFile(String fileName, String filePath){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(filePath);\n\t\t\tPreparedStatement ps = con.prepareStatement(\"insert into clazz values(?,?)\");\n\t\t\tps.setString(1, fileName);\n\t\t\tps.setBinaryStream(2, fis, (int)file.length());\n\t\t\tps.executeUpdate();\n\t\t\tfis.close();\n\t\t\tps.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid uploadFile(){\n\t\ttry{\n\t\t\tString path = \"C:\\\\Users\\\\user\\\\Desktop\\\\\";\n\t\t\tString fileName = \"\";\n\t\t\tString fileExtension = \"\";\n\t\t\tString filePath = path + fileName + \".\" + fileExtension;\n\t\t\tFile file = new File(filePath);\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tString sql = \"insert into file_upload values(?,?)\";\n\t\t\tPreparedStatement ps = con.prepareStatement(sql);\n\t\t\tps.setString(1, fileName);\n\t\t\tps.setBinaryStream(2, fis, (int)file.length());\n\t\t\tint i = ps.executeUpdate();\n\t\t\tif(i>0){\n\t\t\t\tSystem.out.println(\"File uploaded successfully\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"File not uploaded\");\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "580",
    "source": "soSearches",
    "language": "java",
    "query": "how to parse expression in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"1+2*3\";\n\t\tString[] strs = str.split(\"\\\\+\");\n\t\tSystem.out.println(strs[0]);\n\t\tSystem.out.println(strs[1]);\n\t\tString[] strs2 = str.split(\"\\\\*\");\n\t\tSystem.out.println(strs2[0]);\n\t\tSystem.out.println(strs2[1]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"1+2*3\";\n\t\tString[] strs = str.split(\"\\\\+\");\n\t\tSystem.out.println(strs[0]);\n\t\tSystem.out.println(strs[1]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString expression = \"2+3*4\";\n\t\tString[] tokens = expression.split(\"\\\\+|\\\\*\");\n\t\tSystem.out.println(tokens[0]);\n\t\tSystem.out.println(tokens[1]);\n\t\tSystem.out.println(tokens[2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"1+2+3+4+5\";\n\t\tString[] strs = str.split(\"\\\\+\");\n\t\tint sum = 0;\n\t\tfor(String s:strs){\n\t\t\tsum += Integer.parseInt(s);\n\t\t}\n\t\tSystem.out.println(sum);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"1+2*3\";\n\t\tString[] tokens = s.split(\"\\\\+|\\\\*\");\n\t\tSystem.out.println(tokens[0]);\n\t\tSystem.out.println(tokens[1]);\n\t\tSystem.out.println(tokens[2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"1+2*3\";\n\t\tString[] tokens = str.split(\"\\\\+|\\\\*\");\n\t\tSystem.out.println(tokens[0]);\n\t\tSystem.out.println(tokens[1]);\n\t\tSystem.out.println(tokens[2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString expression = \"1+2*3\";\n\t\tString[] tokens = expression.split(\"\\\\+|\\\\*\");\n\t\tSystem.out.println(tokens[0]);\n\t\tSystem.out.println(tokens[1]);\n\t\tSystem.out.println(tokens[2]);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "581",
    "source": "soSearches",
    "language": "java",
    "query": "how to make cup of tea in java code",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 8
},{
    "id": "582",
    "source": "soSearches",
    "language": "java",
    "query": "how to set path for java inn window",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "583",
    "source": "soSearches",
    "language": "java",
    "query": "how to read alist in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"one\");\n\t\tlist.add(\"two\");\n\t\tlist.add(\"three\");\n\t\tlist.add(\"four\");\n\t\tlist.add(\"five\");\n\t\tlist.add(\"six\");\n\t\tlist.add(\"seven\");\n\t\tlist.add(\"eight\");\n\t\tlist.add(\"nine\");\n\t\tlist.add(\"ten\");\n\t\tlist.add(\"eleven\");\n\t\tlist.add(\"twelve\");\n\t\tlist.add(\"thirteen\");\n\t\tlist.add(\"fourteen\");\n\t\tlist.add(\"fifteen\");\n\t\tlist.add(\"sixteen\");\n\t\tlist.add(\"seventeen\");\n\t\tlist.add(\"eighteen\");\n\t\tlist.add(\"nineteen\");\n\t\tlist.add(\"twenty\");\n\t\tlist.add(\"twentyone\");\n\t\tlist.add(\"twentytwo\");\n\t\tlist.add(\"twentythree\");\n\t\tlist.add(\"twentyfour\");\n\t\tlist.add(\"twentyfive\");\n\t\tlist.add(\"twentysix\");\n\t\tlist.add(\"twentyseven\");\n\t\tlist.add(\"twentyeight\");\n\t\tlist.add(\"twentynine\");\n\t\tlist.add(\"thirty\");\n\t\tlist.add(\"thirtyone\");\n\t\tlist.add(\"thirtytwo\");\n\t\tlist.add(\"thirtythree\");\n\t\tlist.add(\"thirtyfour\");\n\t\tlist.add(\"thirtyfive\");\n\t\tlist.add(\"thirtysix\");\n\t\tlist.add(\"thirtyseven\");\n\t\tlist.add(\"thirtyeight\");\n\t\tlist.add(\"thirtynine\");\n\t\tlist.add(\"forty\");\n\t\tlist.add(\"fortyone\");\n\t\tlist.add(\"fortytwo\");\n\t\tlist.add(\"fortythree\");\n\t\tlist.add(\"fortyfour\");\n\t\tlist.add(\"fortyfive\");\n\t\tlist.add(\"fort\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tfor(String s:list){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "584",
    "source": "soSearches",
    "language": "java",
    "query": "how to verify java concurrency structure",
    "snippets": [
        "\tvoid m1(){\n\t\tSystem.out.println(\"m1\");\n\t}\n\tpublic\n\tvoid m2(){\n\t\tSystem.out.println(\"m2\");\n\t}\n\tpublic\n\tvoid m3(){\n\t\tSystem.out.println(\"m3\");\n\t}\n\tpublic\n\tvoid m4(){\n\t\tSystem.out.println(\"m4\");\n\t}\n\tpublic\n\tvoid m5(){\n\t\tSystem.out.println(\"m5\");\n\t}\n\tpublic\n\tvoid m6(){\n\t\tSystem.out.println(\"m6\");\n\t}\n\tpublic\n\tvoid m7(){\n\t\tSystem.out.println(\"m7\");\n\t}\n\tpublic\n\tvoid m8(){\n\t\tSystem.out.println(\"m8\");\n\t}\n\tpublic\n\tvoid m9(){\n\t\tSystem.out.println(\"m9\");\n\t}\n\tpublic\n\tvoid m10(){\n\t\tSystem.out.println(\"m10\");\n\t}\n\tpublic\n\tvoid m11(){\n\t\tSystem.out.println(\"m11\");\n\t}\n\tpublic\n\tvoid m12(){\n\t\tSystem.out.println(\"m12\");\n\t}\n\tpublic\n\tvoid m13(){\n\t\tSystem.out.println(\"m13\");\n\t}\n\tpublic\n\tvoid m14(){\n\t\tSystem.out.println(\"m14\");\n\t}\n\tpublic\n\tvoid m15(){\n\t\tSystem.out.println(\"m15\");\n\t}\n\tpublic\n\tvoid m16(){\n\t\tSystem.out.println(\"m16\");\n\t}\n\tpublic\n\tvoid m17(){\n\t\tSystem.out.println(\"m17\");\n\t}\n\tpublic\n\tvoid m18(){\n\t\tSystem.out.println(\"m18\");\n\t}\n\tpublic\n\tvoid m19(){\n\t\tSystem.out.println(\"m19\");\n\t}\n\tpublic\n\tvoid m20(){\n\t\tSystem.out.println(\"m20\");\n\t}\n\tpublic\n\tvoid m21(){\n\t\tSystem.out.println(\"m21\");\n",
        "\tvoid method1(){\n\t\tSystem.out.println(\"method1\");\n\t}\n\tpublic\n\tvoid method2(){\n\t\tSystem.out.println(\"method2\");\n\t}\n}\n",
        "\tvoid m(){\n\t\tsynchronized(this){\n\t\t\tSystem.out.println(\"m\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\t\n\t}\n}\n",
        "\tvoid m(){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "585",
    "source": "soSearches",
    "language": "java",
    "query": "how to count the letter in strings in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tint count = 0;\n\t\tfor(int i = 0; i < str.length(); i++){\n\t\t\tif(str.charAt(i) == 'o'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint count=0;\n\t\tfor(int i=0;i<str.length();i++){\n\t\t\tif(str.charAt(i)=='o'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"The number of o's in the string is \"+count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint count=0;\n\t\tfor(int i=0;i<str.length();i++){\n\t\t\tif(str.charAt(i)=='o'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Number of o's in the string is \"+count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint count=0;\n\t\tfor(int i=0;i<str.length();i++){\n\t\t\tif(str.charAt(i)=='l'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Number of l's in the string is:\"+count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint count=0;\n\t\tfor(int i=0;i<str.length();i++){\n\t\t\tif(str.charAt(i)=='l'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"The number of l is \"+count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint count=0;\n\t\tfor(int i=0;i<str.length();i++){\n\t\t\tif(str.charAt(i)=='l'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"The number of l in \"+str+\" is \"+count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"java is a programming language\";\n\t\tint count=0;\n\t\tfor(int i=0;i<str.length();i++){\n\t\t\tif(str.charAt(i)=='a'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"the count of letter a is \"+count);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "586",
    "source": "soSearches",
    "language": "java",
    "query": "how to open new window using java without refreshing",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"New Window\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLocationRelativeTo(null);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString url = \"http://www.google.com\";\n\t\t\tjava.awt.Desktop.getDesktop().browse(java.net.URI.create(url));\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass c=Class.forName(\"Clazz\");\n\t\t\tMethod m=c.getMethod(\"openWindow\",null);\n\t\t\tm.invoke(null,null);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\tpublic static void openWindow(){\n\t\ttry{\n\t\t\tClass c=Class.forName(\"Clazz\");\n\t\t\tMethod m=c.getMethod(\"openWindow\",null);\n\t\t\tm.invoke(null,null);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tnew Clazz().openWindow();\n\t}\n\tpublic void openWindow(){\n\t\ttry{\n\t\t\tClass.forName(\"java.awt.Frame\");\n\t\t\tClass.forName(\"java.awt.Button\");\n\t\t\tClass.forName(\"java.awt.TextField\");\n\t\t\tClass.forName(\"java.awt.Label\");\n\t\t\tClass.forName(\"java.awt.Panel\");\n\t\t\tClass.forName(\"java.awt.Color\");\n\t\t\tClass.forName(\"java.awt.Font\");\n\t\t\tClass.forName(\"java.awt.event.ActionListener\");\n\t\t\tClass.forName(\"java.awt.event.ActionEvent\");\n\t\t\tClass.forName(\"java.awt.event.WindowAdapter\");\n\t\t\tClass.forName(\"java.awt.event.WindowEvent\");\n\t\t\tClass.forName(\"java.awt.event.TextListener\");\n\t\t\tClass.forName(\"java.awt.event.TextEvent\");\n\t\t\tClass.forName(\"java.awt.event.KeyListener\");\n\t\t\tClass.forName(\"java.awt.event.KeyEvent\");\n\t\t\tClass.forName(\"java.awt.event.MouseListener\");\n\t\t\tClass.forName(\"java.awt.event.MouseEvent\");\n\t\t\tClass.forName(\"java.awt.event.MouseMotionListener\");\n\t\t\tClass.forName(\"java.awt.event.MouseMotionEvent\");\n\t\t\tClass.forName(\"java.awt.event.ItemListener\");\n\t\t\tClass.forName(\"java.awt.event.ItemEvent\");\n\t\t\tClass.forName(\"java.awt.event.WindowListener\");\n\t\t\tClass.forName(\"java.awt.event.WindowStateListener\");\n\t\t\tClass.forName(\"java.awt.event.MouseWheelListener\");\n\t\t\tClass.forName(\"java.awt.event.MouseWheelEvent\");\n\t\t\tClass\n"
    ],
    "results": 9
},{
    "id": "587",
    "source": "soSearches",
    "language": "java",
    "query": "how to cast char into int in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tchar c = 'a';\n\t\tint i = (int)c;\n\t\tSystem.out.println(i);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "588",
    "source": "soSearches",
    "language": "java",
    "query": "how to use the logic of flag in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = 30;\n\t\tint d = 40;\n\t\tint e = 50;\n\t\tint f = 60;\n\t\tint g = 70;\n\t\tint h = 80;\n\t\tint i = 90;\n\t\tint j = 100;\n\t\tint k = 110;\n\t\tint l = 120;\n\t\tint m = 130;\n\t\tint n = 140;\n\t\tint o = 150;\n\t\tint p = 160;\n\t\tint q = 170;\n\t\tint r = 180;\n\t\tint s = 190;\n\t\tint t = 200;\n\t\tint u = 210;\n\t\tint v = 220;\n\t\tint w = 230;\n\t\tint x = 240;\n\t\tint y = 250;\n\t\tint z = 260;\n\t\tint aa = 270;\n\t\tint bb = 280;\n\t\tint cc = 290;\n\t\tint dd = 300;\n\t\tint ee = 310;\n\t\tint ff = 320;\n\t\tint gg = 330;\n\t\tint hh = 340;\n\t\tint ii = 350;\n\t\tint jj = 360;\n\t\tint kk = 370;\n\t\tint ll = 380;\n\t\tint mm = 390;\n\t\tint nn = 400;\n\t\tint oo = 410;\n\t\tint pp = 420;\n\t\tint qq = 430;\n\t\tint rr = 440;\n\t\tint ss = 450;\n\t\tint tt = 460;\n\t\tint uu = 470;\n\t\tint vv = 480;\n\t\tint ww = 490;\n\t\tint xx = 500;\n\t\tint yy = 510;\n\t\tint zz = 520;\n\t\tint aaa = 530;\n\t\tint bbb = 540;\n\t\tint ccc = 550;\n\t\tint ddd = 560;\n\t\tint eee = 570;\n\t\tint fff = 580;\n",
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = 30;\n\t\tint d = 40;\n\t\tint e = 50;\n\t\tint f = 60;\n\t\tint g = 70;\n\t\tint h = 80;\n\t\tint i = 90;\n\t\tint j = 100;\n\t\tint k = 110;\n\t\tint l = 120;\n\t\tint m = 130;\n\t\tint n = 140;\n\t\tint o = 150;\n\t\tint p = 160;\n\t\tint q = 170;\n\t\tint r = 180;\n\t\tint s = 190;\n\t\tint t = 200;\n\t\tint u = 210;\n\t\tint v = 220;\n\t\tint w = 230;\n\t\tint x = 240;\n\t\tint y = 250;\n\t\tint z = 260;\n\t\tint a1 = 270;\n\t\tint b1 = 280;\n\t\tint c1 = 290;\n\t\tint d1 = 300;\n\t\tint e1 = 310;\n\t\tint f1 = 320;\n\t\tint g1 = 330;\n\t\tint h1 = 340;\n\t\tint i1 = 350;\n\t\tint j1 = 360;\n\t\tint k1 = 370;\n\t\tint l1 = 380;\n\t\tint m1 = 390;\n\t\tint n1 = 400;\n\t\tint o1 = 410;\n\t\tint p1 = 420;\n\t\tint q1 = 430;\n\t\tint r1 = 440;\n\t\tint s1 = 450;\n\t\tint t1 = 460;\n\t\tint u1 = 470;\n\t\tint v1 = 480;\n\t\tint w1 = 490;\n\t\tint x1 = 500;\n\t\tint y1 = 510;\n\t\tint z1 = 520;\n\t\tint a2 = 530;\n\t\tint b2 = 540;\n\t\tint c2 = 550;\n\t\tint d2 = 560;\n\t\tint e2 = 570;\n",
        "\tstatic void main(String[] args){\n\t\tint a = 1;\n\t\tint b = 2;\n\t\tint c = 3;\n\t\tint d = 4;\n\t\tint e = 5;\n\t\tint f = 6;\n\t\tint g = 7;\n\t\tint h = 8;\n\t\tint i = 9;\n\t\tint j = 10;\n\t\tint k = 11;\n\t\tint l = 12;\n\t\tint m = 13;\n\t\tint n = 14;\n\t\tint o = 15;\n\t\tint p = 16;\n\t\tint q = 17;\n\t\tint r = 18;\n\t\tint s = 19;\n\t\tint t = 20;\n\t\tint u = 21;\n\t\tint v = 22;\n\t\tint w = 23;\n\t\tint x = 24;\n\t\tint y = 25;\n\t\tint z = 26;\n\t\tint aa = 27;\n\t\tint bb = 28;\n\t\tint cc = 29;\n\t\tint dd = 30;\n\t\tint ee = 31;\n\t\tint ff = 32;\n\t\tint gg = 33;\n\t\tint hh = 34;\n\t\tint ii = 35;\n\t\tint jj = 36;\n\t\tint kk = 37;\n\t\tint ll = 38;\n\t\tint mm = 39;\n\t\tint nn = 40;\n\t\tint oo = 41;\n\t\tint pp = 42;\n\t\tint qq = 43;\n\t\tint rr = 44;\n\t\tint ss = 45;\n\t\tint tt = 46;\n\t\tint uu = 47;\n\t\tint vv = 48;\n\t\tint ww = 49;\n\t\tint xx = 50;\n\t\tint yy = 51;\n\t\tint zz = 52;\n\t\tint aaa = 53;\n\t\tint bbb = 54;\n\t\tint ccc = 55;\n\t\tint ddd = 56;\n\t\tint eee = 57;\n\t\tint fff = 58;\n",
        "\tvoid method(){\n\t\tboolean flag = true;\n\t\tif(flag){\n\t\t\tSystem.out.println(\"flag is true\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"flag is false\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tint a=1;\n\t\tint b=2;\n\t\tif(a==1){\n\t\t\tSystem.out.println(\"a is 1\");\n\t\t}\n\t\telse if(b==2){\n\t\t\tSystem.out.println(\"b is 2\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"a and b are not 1 and 2\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "589",
    "source": "soSearches",
    "language": "java",
    "query": "how to read from a table file in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"table.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(\"table.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(\"Error\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString filename = \"table.txt\";\n\t\tString line = null;\n\t\ttry{\n\t\t\tFileReader fileReader = new FileReader(filename);\n\t\t\tBufferedReader bufferedReader = new BufferedReader(fileReader);\n\t\t\twhile((line = bufferedReader.readLine()) != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n\t\t\tbufferedReader.close();\n\t\t}\n\t\tcatch(FileNotFoundException ex){\n\t\t\tSystem.out.println(\"Unable to open file '\" + filename + \"'\");\n\t\t}\n\t\tcatch(IOException ex){\n\t\t\tSystem.out.println(\"Error reading file '\" + filename + \"'\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"/home/james/Desktop/table.txt\");\n\t\t\tDataInputStream dis = new DataInputStream(fis);\n\t\t\tint i = dis.readInt();\n\t\t\tSystem.out.println(i);\n\t\t\tdis.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString filename = \"table.txt\";\n\t\tScanner input = new Scanner(new File(filename));\n\t\twhile(input.hasNextLine()){\n\t\t\tString line = input.nextLine();\n\t\t\tString[] tokens = line.split(\" \");\n\t\t\tSystem.out.println(tokens[0]);\n\t\t\tSystem.out.println(tokens[1]);\n\t\t\tSystem.out.println(tokens[2]);\n\t\t}\n\t\tinput.close();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"/home/sachin/Desktop/table.txt\");\n\t\t\tDataInputStream dis = new DataInputStream(fis);\n\t\t\tint i = 0;\n\t\t\twhile(dis.available()>0){\n\t\t\t\tSystem.out.println(dis.readLine());\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tdis.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "590",
    "source": "soSearches",
    "language": "java",
    "query": "how to append a class using javasvript",
    "snippets": [
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz constructor\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "591",
    "source": "soSearches",
    "language": "java",
    "query": "how to add new user in wso2 by java",
    "snippets": [
        "\tvoid addUser(String userName, String password, String email, String firstName, String lastName, String role){\n\t\tUser user = new User();\n\t\tuser.setUserName(userName);\n\t\tuser.setPassword(password);\n\t\tuser.setEmail(email);\n\t\tuser.setFirstName(firstName);\n\t\tuser.setLastName(lastName);\n\t\tuser.setRole(role);\n\t\tuser.setEnabled(true);\n\t\tuser.setCreatedDate(new Date());\n\t\tuser.setLastModifiedDate(new Date());\n\t\tuser.setCreatedBy(\"admin\");\n\t\tuser.setLastModifiedBy(\"admin\");\n\t\tuser.setTenantId(0);\n\t\tuser.setUserStoreDomain(\"wso2.com\");\n\t\tuser.setClaims(new HashMap<String, String>());\n\t\tuser.getClaims().put(\"http://wso2.com/claims/organization\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com/claims/department\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com/claims/location\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com/claims/job_title\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com/claims/manager\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com/claims/manager_email\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com/claims/manager_name\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com/claims/manager_phone\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com/claims/manager_title\", \"WSO2\");\n\t\tuser.getClaims().put(\"http://wso2.com\n",
        "\tvoid addUser(String userName, String password, String firstName, String lastName, String email, String role){\n\t\tString url = \"http://localhost:9763/services/UserAdmin\";\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" +\n\t\t\t\t\"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\">\" +\n\t\t\t\t\"<soapenv:Body>\" +\n\t\t\t\t\"<xsd:addUser>\" +\n\t\t\t\t\"<xsd:userName>\" + userName + \"</xsd:userName>\" +\n\t\t\t\t\"<xsd:password>\" + password + \"</xsd:password>\" +\n\t\t\t\t\"<xsd:firstName>\" + firstName + \"</xsd:firstName>\" +\n\t\t\t\t\"<xsd:lastName>\" + lastName + \"</xsd:lastName>\" +\n\t\t\t\t\"<xsd:email>\" + email + \"</xsd:email>\" +\n\t\t\t\t\"<xsd:role>\" + role + \"</xsd:role>\" +\n\t\t\t\t\"</xsd:addUser>\" +\n\t\t\t\t\"</soapenv:Body>\" +\n\t\t\t\t\"</soapenv:Envelope>\";\n\t\tURL urlObj = new URL(url);\n\t\tHttpURLConnection conn = (HttpURLConnection) urlObj.openConnection();\n\t\tconn.setDoOutput(true);\n\t\tconn.setRequestMethod(\"POST\");\n\t\tconn.setRequestProperty(\"Content-Type\", \"text/xml\");\n\t\tconn.setRequestProperty(\"Content-Length\", Integer.toString(xml.length()));\n\t\tOutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());\n\t\twr.write(xml);\n",
        "\tvoid addUser(String userName, String password, String firstName, String lastName, String email, String role){\n\t\tString url = \"http://localhost:8080/wso2/services/UserAdminService\";\n\t\tString soapAction = \"http://www.wso2.org/projects/wsf/ws/usermgt/UserAdminService/addUser\";\n\t\tString xml = \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:ns=\\\"http://www.wso2.org/projects/wsf/ws/usermgt/UserAdminService\\\">\"\n\t\t\t\t+ \"<soapenv:Header/>\"\n\t\t\t\t+ \"<soapenv:Body>\"\n\t\t\t\t+ \"<ns:addUser>\"\n\t\t\t\t+ \"<ns:userName>\"+userName+\"</ns:userName>\"\n\t\t\t\t+ \"<ns:password>\"+password+\"</ns:password>\"\n\t\t\t\t+ \"<ns:firstName>\"+firstName+\"</ns:firstName>\"\n\t\t\t\t+ \"<ns:lastName>\"+lastName+\"</ns:lastName>\"\n\t\t\t\t+ \"<ns:email>\"+email+\"</ns:email>\"\n\t\t\t\t+ \"<ns:role>\"+role+\"</ns:role>\"\n\t\t\t\t+ \"</ns:addUser>\"\n\t\t\t\t+ \"</soapenv:Body>\"\n\t\t\t\t+ \"</soapenv:Envelope>\";\n\t\tString response = new HttpRequest().sendPost(url, soapAction, xml);\n\t\tSystem.out.println(response);\n\t}\n}\n",
        "\tvoid addUser(String userName, String password, String firstName, String lastName, String email, String role){\n\t\tString url = \"http://localhost:8080/tenant/admin/add-user\";\n\t\tString json = \"{\\\"username\\\":\\\"\" + userName + \"\\\",\\\"password\\\":\\\"\" + password + \"\\\",\\\"firstName\\\":\\\"\" + firstName + \"\\\",\\\"lastName\\\":\\\"\" + lastName + \"\\\",\\\"email\\\":\\\"\" + email + \"\\\",\\\"role\\\":\\\"\" + role + \"\\\"}\";\n\t\tString response = HttpRequest.post(url).body(json).contentType(\"application/json\").send().readToText();\n\t\tSystem.out.println(response);\n\t}\n}\n",
        "\tvoid addUser(String userName, String password, String firstName, String lastName, String email, String role){\n\t\tString url = \"http://localhost:8080/services/registration\";\n\t\tString xml = \"<user><username>\"+userName+\"</username><password>\"+password+\"</password><firstname>\"+firstName+\"</firstname><lastname>\"+lastName+\"</lastname><email>\"+email+\"</email><role>\"+role+\"</role></user>\";\n\t\tString response = sendPost(url, xml);\n\t\tSystem.out.println(response);\n\t}\n\tpublic\n\tString sendPost(String url, String xml){\n\t\tString response = \"\";\n\t\ttry{\n\t\t\tURL obj = new URL(url);\n\t\t\tHttpURLConnection con = (HttpURLConnection) obj.openConnection();\n\t\t\tcon.setRequestMethod(\"POST\");\n\t\t\tcon.setRequestProperty(\"Content-Type\", \"application/xml\");\n\t\t\tcon.setDoOutput(true);\n\t\t\tOutputStream os = con.getOutputStream();\n\t\t\tos.write(xml.getBytes());\n\t\t\tos.flush();\n\t\t\tif(con.getResponseCode() == HttpURLConnection.HTTP_OK){\n\t\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream()));\n\t\t\t\tString line = \"\";\n\t\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\t\tresponse += line;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn response;\n\t}\n}\n",
        "\tvoid addUser(String name, String password, String email){\n\t\tString url = \"http://localhost:8080/wso2/services/UserAdminService\";\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" +\n\t\t\t\t\"<ns2:addUserRequest xmlns:ns2=\\\"http://org.wso2.carbon.user.mgt.ws.adduser.stub\\\">\" +\n\t\t\t\t\"<userName>\" + name + \"</userName>\" +\n\t\t\t\t\"<password>\" + password + \"</password>\" +\n\t\t\t\t\"<email>\" + email + \"</email>\" +\n\t\t\t\t\"</ns2:addUserRequest>\";\n\t\tString response = sendRequest(url, xml);\n\t\tSystem.out.println(response);\n\t}\n\tpublic\n\tString sendRequest(String url, String xml){\n\t\tString response = \"\";\n\t\ttry{\n\t\t\tURL obj = new URL(url);\n\t\t\tHttpURLConnection con = (HttpURLConnection) obj.openConnection();\n\t\t\tcon.setRequestMethod(\"POST\");\n\t\t\tcon.setRequestProperty(\"Content-Type\", \"text/xml\");\n\t\t\tcon.setDoOutput(true);\n\t\t\tOutputStream os = con.getOutputStream();\n\t\t\tos.write(xml.getBytes());\n\t\t\tos.flush();\n\t\t\tif(con.getResponseCode() == HttpURLConnection.HTTP_OK){\n\t\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream()));\n\t\t\t\tString line;\n\t\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\t\tresponse += line;\n\t\t\t\t}\n\t\t\t\tbr.close();\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn response;\n\t}\n}\n"
    ],
    "results": 6
},{
    "id": "592",
    "source": "soSearches",
    "language": "java",
    "query": "how to resolve the java heap space error for windows",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\twhile(true){\n\t\t\t\tnew Clazz();\n\t\t\t}\n\t\t}catch(OutOfMemoryError e){\n\t\t\tSystem.out.println(\"OutOfMemoryError\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "593",
    "source": "soSearches",
    "language": "java",
    "query": "[java]how to compare integer number in if condition",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tif(a>b){\n\t\t\tSystem.out.println(\"a is greater than b\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"b is greater than a\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "594",
    "source": "soSearches",
    "language": "java",
    "query": "how to initialize an array list in java?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"hello\");\n\t\tlist.add(\"world\");\n\t\tlist.add(\"java\");\n\t\tlist.add(\"programming\");\n\t\tlist.add(\"is\");\n\t\tlist.add(\"fun\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"hello\");\n\t\tlist.add(\"world\");\n\t\tlist.add(\"java\");\n\t\tlist.add(\"is\");\n\t\tlist.add(\"awesome\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"Hello\");\n\t\tlist.add(\"World\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "595",
    "source": "soSearches",
    "language": "java",
    "query": "how to retrieve elements from 2d array java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[][] arr = {{1,2,3},{4,5,6},{7,8,9}};\n\t\tSystem.out.println(arr[1][1]);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "596",
    "source": "soSearches",
    "language": "java",
    "query": "how to put number in boxes java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 5;\n\t\tint b = 10;\n\t\tint c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = 30;\n\t\tint d = 40;\n\t\tint e = 50;\n\t\tint f = 60;\n\t\tint g = 70;\n\t\tint h = 80;\n\t\tint i = 90;\n\t\tint j = 100;\n\t\tint k = 110;\n\t\tint l = 120;\n\t\tint m = 130;\n\t\tint n = 140;\n\t\tint o = 150;\n\t\tint p = 160;\n\t\tint q = 170;\n\t\tint r = 180;\n\t\tint s = 190;\n\t\tint t = 200;\n\t\tint u = 210;\n\t\tint v = 220;\n\t\tint w = 230;\n\t\tint x = 240;\n\t\tint y = 250;\n\t\tint z = 260;\n\t\tint aa = 270;\n\t\tint bb = 280;\n\t\tint cc = 290;\n\t\tint dd = 300;\n\t\tint ee = 310;\n\t\tint ff = 320;\n\t\tint gg = 330;\n\t\tint hh = 340;\n\t\tint ii = 350;\n\t\tint jj = 360;\n\t\tint kk = 370;\n\t\tint ll = 380;\n\t\tint mm = 390;\n\t\tint nn = 400;\n\t\tint oo = 410;\n\t\tint pp = 420;\n\t\tint qq = 430;\n\t\tint rr = 440;\n\t\tint ss = 450;\n\t\tint tt = 460;\n\t\tint uu = 470;\n\t\tint vv = 480;\n\t\tint ww = 490;\n\t\tint xx = 500;\n\t\tint yy = 510;\n\t\tint zz = 520;\n\t\tint aaa = 530;\n\t\tint bbb = 540;\n\t\tint ccc = 550;\n\t\tint ddd = 560;\n\t\tint eee = 570;\n\t\tint fff = 580;\n",
        "\tstatic void main(String[] args){\n\t\tint num1 = 10;\n\t\tint num2 = 20;\n\t\tint num3 = 30;\n\t\tint num4 = 40;\n\t\tint num5 = 50;\n\t\tint num6 = 60;\n\t\tint num7 = 70;\n\t\tint num8 = 80;\n\t\tint num9 = 90;\n\t\tint num10 = 100;\n\t\tint num11 = 110;\n\t\tint num12 = 120;\n\t\tint num13 = 130;\n\t\tint num14 = 140;\n\t\tint num15 = 150;\n\t\tint num16 = 160;\n\t\tint num17 = 170;\n\t\tint num18 = 180;\n\t\tint num19 = 190;\n\t\tint num20 = 200;\n\t\tint num21 = 210;\n\t\tint num22 = 220;\n\t\tint num23 = 230;\n\t\tint num24 = 240;\n\t\tint num25 = 250;\n\t\tint num26 = 260;\n\t\tint num27 = 270;\n\t\tint num28 = 280;\n\t\tint num29 = 290;\n\t\tint num30 = 300;\n\t\tint num31 = 310;\n\t\tint num32 = 320;\n\t\tint num33 = 330;\n\t\tint num34 = 340;\n\t\tint num35 = 350;\n\t\tint num36 = 360;\n\t\tint num37 = 370;\n\t\tint num38 = 380;\n\t\tint num39 = 390;\n\t\tint num40 = 400;\n\t\tint num41 = 410;\n\t\tint num42 = 420;\n\t\tint num43 = 430;\n\t\tint num44 = 440;\n\t\tint num45 = 450;\n\t\tint num46 = 460;\n\t\tint num47 = 470;\n\t\tint num48 = 480;\n\t\tint num49 = 490;\n\t\tint num50 = 500;\n\t\tint num51 = 510;\n\t\tint num52 = 520;\n\t\tint num53 = 530;\n\t\tint num54 = 540;\n\t\tint\n"
    ],
    "results": 10
},{
    "id": "597",
    "source": "soSearches",
    "language": "java",
    "query": "how to get first and last element in an arraylist in java?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(list.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(list.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"first\");\n\t\tlist.add(\"second\");\n\t\tlist.add(\"third\");\n\t\tlist.add(\"fourth\");\n\t\tlist.add(\"fifth\");\n\t\tlist.add(\"sixth\");\n\t\tlist.add(\"seventh\");\n\t\tlist.add(\"eighth\");\n\t\tlist.add(\"ninth\");\n\t\tlist.add(\"tenth\");\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(list.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"one\");\n\t\tlist.add(\"two\");\n\t\tlist.add(\"three\");\n\t\tlist.add(\"four\");\n\t\tlist.add(\"five\");\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(list.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> al = new ArrayList<String>();\n\t\tal.add(\"a\");\n\t\tal.add(\"b\");\n\t\tal.add(\"c\");\n\t\tal.add(\"d\");\n\t\tal.add(\"e\");\n\t\tal.add(\"f\");\n\t\tal.add(\"g\");\n\t\tal.add(\"h\");\n\t\tal.add(\"i\");\n\t\tal.add(\"j\");\n\t\tal.add(\"k\");\n\t\tal.add(\"l\");\n\t\tal.add(\"m\");\n\t\tal.add(\"n\");\n\t\tal.add(\"o\");\n\t\tal.add(\"p\");\n\t\tal.add(\"q\");\n\t\tal.add(\"r\");\n\t\tal.add(\"s\");\n\t\tal.add(\"t\");\n\t\tal.add(\"u\");\n\t\tal.add(\"v\");\n\t\tal.add(\"w\");\n\t\tal.add(\"x\");\n\t\tal.add(\"y\");\n\t\tal.add(\"z\");\n\t\tSystem.out.println(al.get(0));\n\t\tSystem.out.println(al.get(al.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> al = new ArrayList<String>();\n\t\tal.add(\"one\");\n\t\tal.add(\"two\");\n\t\tal.add(\"three\");\n\t\tal.add(\"four\");\n\t\tal.add(\"five\");\n\t\tSystem.out.println(al.get(0));\n\t\tSystem.out.println(al.get(al.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(list.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"hello\");\n\t\tlist.add(\"world\");\n\t\tlist.add(\"java\");\n\t\tlist.add(\"programming\");\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(list.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"Hello\");\n\t\tlist.add(\"World\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list.get(0));\n\t\tSystem.out.println(list.get(list.size()-1));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> al = new ArrayList<String>();\n\t\tal.add(\"1\");\n\t\tal.add(\"2\");\n\t\tal.add(\"3\");\n\t\tal.add(\"4\");\n\t\tal.add(\"5\");\n\t\tal.add(\"6\");\n\t\tal.add(\"7\");\n\t\tal.add(\"8\");\n\t\tal.add(\"9\");\n\t\tal.add(\"10\");\n\t\tSystem.out.println(al.get(0));\n\t\tSystem.out.println(al.get(al.size()-1));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "598",
    "source": "soSearches",
    "language": "java",
    "query": "how to comment out block of code java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 8
},{
    "id": "599",
    "source": "soSearches",
    "language": "java",
    "query": "how to format a number in comma using java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble d = 123456789.123456789;\n\t\tSystem.out.println(d);\n\t\tSystem.out.println(String.format(\"%.2f\", d));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 123456789.123456789;\n\t\tSystem.out.println(d);\n\t\tSystem.out.println(String.format(\"%.2f\", d));\n\t\tSystem.out.println(String.format(\"%,.2f\", d));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint num = 123456789;\n\t\tSystem.out.println(num);\n\t\tSystem.out.println(String.format(\"%,d\", num));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "600",
    "source": "soSearches",
    "language": "java",
    "query": "how to use booleans in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tboolean b1 = true;\n\t\tboolean b2 = false;\n\t\tSystem.out.println(b1);\n\t\tSystem.out.println(b2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tboolean b1 = true;\n\t\tboolean b2 = false;\n\t\tboolean b3 = b1 && b2;\n\t\tboolean b4 = b1 || b2;\n\t\tboolean b5 = !b1;\n\t\tSystem.out.println(b3);\n\t\tSystem.out.println(b4);\n\t\tSystem.out.println(b5);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tboolean b = true;\n\t\tSystem.out.println(b);\n\t\tb = false;\n\t\tSystem.out.println(b);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tboolean b = true;\n\t\tSystem.out.println(b);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "601",
    "source": "soSearches",
    "language": "java",
    "query": "how to use a for loop to take in command line args  in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tfor(int i = 0; i < args.length; i++){\n\t\t\tSystem.out.println(args[i]);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "602",
    "source": "soSearches",
    "language": "java",
    "query": "how to hide jtextfield in java netbeans",
    "snippets": [
        "\tvoid method(){\n\t\tJTextField textField = new JTextField();\n\t\ttextField.setVisible(false);\n\t}\n}\n",
        "\tvoid method(){\n\t\tJTextField jtf = new JTextField();\n\t\tjtf.setVisible(false);\n\t}\n}\n",
        "\tvoid method(){\n\t\tJTextField jt=new JTextField();\n\t\tjt.setVisible(false);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "603",
    "source": "soSearches",
    "language": "java",
    "query": "how to remove space from string in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tString str1=str.replace(\" \",\"\");\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"hello world\";\n\t\tString str1=str.replace(\" \",\"\");\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str.replace(\" \",\"\"));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "604",
    "source": "soSearches",
    "language": "java",
    "query": "how to find the maximum value in a java array",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint max = arr[0];\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] > max){\n\t\t\t\tmax = arr[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(max);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] array = {1,2,3,4,5,6,7,8,9,10};\n\t\tint max = array[0];\n\t\tfor(int i = 0; i < array.length; i++){\n\t\t\tif(array[i] > max){\n\t\t\t\tmax = array[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(max);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5,6,7,8,9,10};\n\t\tint max = a[0];\n\t\tfor(int i = 0; i < a.length; i++){\n\t\t\tif(a[i] > max){\n\t\t\t\tmax = a[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(max);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5,6,7,8,9,10};\n\t\tint max = a[0];\n\t\tfor(int i = 1; i < a.length; i++){\n\t\t\tif(a[i] > max){\n\t\t\t\tmax = a[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(max);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "605",
    "source": "soSearches",
    "language": "java",
    "query": "how to keep data from firebase into mysql using java application",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\t//connect to firebase\n\t\tFirebaseDatabase database = FirebaseDatabase.getInstance();\n\t\tDatabaseReference myRef = database.getReference(\"message\");\n\t\t//read data from firebase\n\t\tmyRef.addValueEventListener(new ValueEventListener() {\n\t\t\t@Override\n\t\t\tpublic void onDataChange(DataSnapshot dataSnapshot) {\n\t\t\t\t// This method is called once with the initial value and again\n\t\t\t\t// whenever data at this location is updated.\n\t\t\t\tString value = dataSnapshot.getValue(String.class);\n\t\t\t\tSystem.out.println(\"Value is: \" + value);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onCancelled(DatabaseError error) {\n\t\t\t\t// Failed to read value\n\t\t\t\tSystem.out.println(\"Failed to read value.\" + error.toException());\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tClazz(){\n\t}\n\tpublic\n\tClazz(String name, String description, String teacher, String room, String time, String day){\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.teacher = teacher;\n\t\tthis.room = room;\n\t\tthis.time = time;\n\t\tthis.day = day;\n\t}\n\tpublic\n\tString name;\n\tpublic\n\tString description;\n\tpublic\n\tString teacher;\n\tpublic\n\tString room;\n\tpublic\n\tString time;\n\tpublic\n\tString day;\n}\n",
        "\tString name;\n\tString id;\n\tString section;\n\tString teacher;\n\tString subject;\n\tString date;\n\tString time;\n\tString venue;\n\tString description;\n\tString status;\n\tString type;\n\tString date_time;\n\tString date_time_end;\n\tString date_time_start;\n\tString date_time_end_start;\n\tString date_time_end_end;\n\tString date_time_start_start;\n\tString date_time_start_end;\n\tString date_time_end_start_start;\n\tString date_time_end_start_end;\n\tString date_time_end_end_start;\n\tString date_time_end_end_end;\n\tString date_time_start_start_start;\n\tString date_time_start_start_end;\n\tString date_time_start_end_start;\n\tString date_time_start_end_end;\n\tString date_time_end_start_start_start;\n\tString date_time_end_start_start_end;\n\tString date_time_end_start_end_start;\n\tString date_time_end_start_end_end;\n\tString date_time_end_end_start_start;\n\tString date_time_end_end_start_end;\n\tString date_time_end_end_end_start;\n\tString date_time_end_end_end_end;\n\tString date_time_start_start_start_start;\n\tString date_time_start_start_start_end;\n\tString date_time_start_start_end_start;\n\tString date_time_start_start_end_end;\n\tString date_time_start_end_start_start;\n\tString date_time_start_end_start_end;\n\tString date_time_start_end_end_start;\n\tString date_time_start_end_end_end;\n\tString date_time_end_start_start_start_start;\n\tString date_time_end_start_start_start_\n",
        "\tString name;\n\tString id;\n\tString section;\n\tString teacher;\n\tString subject;\n\tString date;\n\tString time;\n\tString venue;\n\tString description;\n\tString status;\n\tString type;\n\tString date1;\n\tString time1;\n\tString venue1;\n\tString description1;\n\tString status1;\n\tString type1;\n\tString date2;\n\tString time2;\n\tString venue2;\n\tString description2;\n\tString status2;\n\tString type2;\n\tString date3;\n\tString time3;\n\tString venue3;\n\tString description3;\n\tString status3;\n\tString type3;\n\tString date4;\n\tString time4;\n\tString venue4;\n\tString description4;\n\tString status4;\n\tString type4;\n\tString date5;\n\tString time5;\n\tString venue5;\n\tString description5;\n\tString status5;\n\tString type5;\n\tString date6;\n\tString time6;\n\tString venue6;\n\tString description6;\n\tString status6;\n\tString type6;\n\tString date7;\n\tString time7;\n\tString venue7;\n\tString description7;\n\tString status7;\n\tString type7;\n\tString date8;\n\tString time8;\n\tString venue8;\n\tString description8;\n\tString status8;\n\tString type8;\n\tString date9;\n\tString time9;\n\tString venue9;\n\tString description9;\n\tString status9;\n\tString type9;\n\tString date10;\n\tString time10;\n\tString venue10;\n\tString description10;\n\tString status10;\n\tString type10;\n\tString date11;\n\tString time11;\n\tString venue11;\n\tString description11;\n\tString status11;\n\tString type11;\n\tString date12;\n\tString time12;\n\tString venue12;\n\tString description12;\n\tString status12;\n\tString type12;\n\tString date13;\n\tString time13;\n",
        "\tString name;\n\tString id;\n\tString section;\n\tString subject;\n\tString teacher;\n\tString date;\n\tString time;\n\tString venue;\n\tString description;\n\tString status;\n\tString type;\n\tString date1;\n\tString time1;\n\tString venue1;\n\tString description1;\n\tString status1;\n\tString type1;\n\tString date2;\n\tString time2;\n\tString venue2;\n\tString description2;\n\tString status2;\n\tString type2;\n\tString date3;\n\tString time3;\n\tString venue3;\n\tString description3;\n\tString status3;\n\tString type3;\n\tString date4;\n\tString time4;\n\tString venue4;\n\tString description4;\n\tString status4;\n\tString type4;\n\tString date5;\n\tString time5;\n\tString venue5;\n\tString description5;\n\tString status5;\n\tString type5;\n\tString date6;\n\tString time6;\n\tString venue6;\n\tString description6;\n\tString status6;\n\tString type6;\n\tString date7;\n\tString time7;\n\tString venue7;\n\tString description7;\n\tString status7;\n\tString type7;\n\tString date8;\n\tString time8;\n\tString venue8;\n\tString description8;\n\tString status8;\n\tString type8;\n\tString date9;\n\tString time9;\n\tString venue9;\n\tString description9;\n\tString status9;\n\tString type9;\n\tString date10;\n\tString time10;\n\tString venue10;\n\tString description10;\n\tString status10;\n\tString type10;\n\tString date11;\n\tString time11;\n\tString venue11;\n\tString description11;\n\tString status11;\n\tString type11;\n\tString date12;\n\tString time12;\n\tString venue12;\n\tString description12;\n\tString status12;\n\tString type12;\n\tString date13;\n\tString time13;\n",
        "\tString id;\n\tString name;\n\tString description;\n\tString image;\n\tString teacher;\n\tString teacher_id;\n\tString teacher_image;\n\tString teacher_description;\n\tString teacher_email;\n\tString teacher_phone;\n\tString teacher_address;\n\tString teacher_birthday;\n\tString teacher_created_at;\n\tString teacher_updated_at;\n\tString teacher_deleted_at;\n\tString teacher_created_by;\n\tString teacher_updated_by;\n\tString teacher_deleted_by;\n\tString teacher_status\n",
        "\tString name;\n\tString code;\n\tString teacher;\n\tString room;\n\tString time;\n\tString day;\n\tString semester;\n\tString year;\n\tString type;\n\tString id;\n\tString date;\n\tString status;\n\tString description;\n\tString subject;\n\tString subject_code;\n\tString subject_teacher;\n\tString subject_room;\n\tString subject_time;\n\tString subject_day;\n\tString subject_semester;\n\tString subject_year;\n\tString subject_type;\n\tString subject_id;\n\tString subject_date;\n\tString subject_status;\n\tString subject_description;\n\tString subject_subject;\n\tString subject_subject_code;\n\tString subject_subject_teacher;\n\tString subject_subject_room;\n\tString subject_subject_time;\n\tString subject_subject_day;\n\tString subject_subject_semester;\n\tString subject_subject_year;\n\tString subject_subject_type;\n\tString subject_subject_id;\n\tString subject_subject_date;\n\tString subject_subject_status;\n\tString subject_subject_description;\n\tString subject_subject_subject;\n\tString subject_subject_subject_code;\n\tString subject_subject_subject_teacher;\n\tString subject_subject_subject_room;\n\tString subject_subject_subject_time;\n\tString subject_subject_subject_day;\n\tString subject_subject_subject_semester;\n\tString subject_subject_subject_year;\n\tString subject_subject_subject_type;\n\tString subject_subject_subject_id;\n\tString subject_subject_subject_date;\n\tString subject_subject_subject_status;\n\tString subject_subject_subject_description;\n\tString subject_subject_subject_subject;\n\tString subject_subject_subject_subject_code;\n\tString subject_subject_subject_subject_teacher;\n\tString subject_subject_subject_subject_room;\n\tString subject_subject_subject_subject_time;\n\tString subject_subject_subject_subject_day;\n\tString subject\n",
        "\tString name;\n\tString id;\n\tString teacher;\n\tString room;\n\tString time;\n\tString day;\n\tString subject;\n\tString semester;\n\tString year;\n\tString section;\n\tString type;\n\tString date;\n\tString date2;\n\tString date3;\n\tString date4;\n\tString date5;\n\tString date6;\n\tString date7;\n\tString date8;\n\tString date9;\n\tString date10;\n\tString date11;\n\tString date12;\n\tString date13;\n\tString date14;\n\tString date15;\n\tString date16;\n\tString date17;\n\tString date18;\n\tString date19;\n\tString date20;\n\tString date21;\n\tString date22;\n\tString date23;\n\tString date24;\n\tString date25;\n\tString date26;\n\tString date27;\n\tString date28;\n\tString date29;\n\tString date30;\n\tString date31;\n\tString date32;\n\tString date33;\n\tString date34;\n\tString date35;\n\tString date36;\n\tString date37;\n\tString date38;\n\tString date39;\n\tString date40;\n\tString date41;\n\tString date42;\n\tString date43;\n\tString date44;\n\tString date45;\n\tString date46;\n\tString date47;\n\tString date48;\n\tString date49;\n\tString date50;\n\tString date51;\n\tString date52;\n\tString date53;\n\tString date54;\n\tString date55;\n\tString date56;\n\tString date57;\n\tString date58;\n\tString date59;\n\tString date60;\n\tString date61;\n\tString date62;\n\tString date63;\n\tString date64;\n\tString date65;\n\tString date66;\n\tString date67;\n\tString date68;\n\tString date69;\n\tString date70;\n\tString date71;\n\tString date72;\n\tString date73;\n\tString date74;\n",
        "\tString name;\n\tString id;\n\tString section;\n\tString teacher;\n\tString subject;\n\tString time;\n\tString day;\n\tString room;\n\tString year;\n\tString semester;\n\tString date;\n\tString month;\n\tString day_name;\n\tString day_number;\n\tString day_year;\n\tString day_month;\n\tString day_date;\n\tString day_week;\n\tString day_day;\n\tString day_week_number;\n\tString day_week_day;\n\tString day_week_name;\n\tString day_week_year;\n\tString day_week_month;\n\tString day_week_date;\n\tString day_week_day_number;\n\tString day_week_day_name;\n\tString day_week_day_year;\n\tString day_week_day_month;\n\tString day_week_day_date;\n\tString day_week_day_week;\n\tString day_week_day_week_number;\n\tString day_week_day_week_day;\n\tString day_week_day_week_name;\n\tString day_week_day_week_year;\n\tString day_week_day_week_month;\n\tString day_week_day_week_date;\n\tString day_week_day_week_day_number;\n\tString day_week_day_week_day_name;\n\tString day_week_day_week_day_year;\n\tString day_week_day_week_day_month;\n\tString day_week_day_week_day_date;\n\tString day_week_day_week_day_week;\n\tString day_week_day_week_day_week_number;\n\tString day_week_day_week_day_week_day;\n\tString day_week_day_week_day_week_name;\n\tString day_week_day_week_day_week_year;\n\tString day_week_day_week_day_week_month;\n\tString day_week_day_week_day_week_date;\n",
        "\tString name;\n\tString id;\n\tString code;\n\tString teacher;\n\tString time;\n\tString day;\n\tString room;\n\tString type;\n\tString semester;\n\tString year;\n\tString subject;\n\tString subject_id;\n\tString subject_code;\n\tString subject_teacher;\n\tString subject_time;\n\tString subject_day;\n\tString subject_room;\n\tString subject_type;\n\tString subject_semester;\n\tString subject_year;\n\tString subject_subject;\n\tString subject_subject_id;\n\tString subject_subject_code;\n\tString subject_subject_teacher;\n\tString subject_subject_time;\n\tString subject_subject_day;\n\tString subject_subject_room;\n\tString subject_subject_type;\n\tString subject_subject_semester;\n\tString subject_subject_year;\n\tString subject_subject_subject;\n\tString subject_subject_subject_id;\n\tString subject_subject_subject_code;\n\tString subject_subject_subject_teacher;\n\tString subject_subject_subject_time;\n\tString subject_subject_subject_day;\n\tString subject_subject_subject_room;\n\tString subject_subject_subject_type;\n\tString subject_subject_subject_semester;\n\tString subject_subject_subject_year;\n\tString subject_subject_subject_subject;\n\tString subject_subject_subject_subject_id;\n\tString subject_subject_subject_subject_code;\n\tString subject_subject_subject_subject_teacher;\n\tString subject_subject_subject_subject_time;\n\tString subject_subject_subject_subject_day;\n\tString subject_subject_subject_subject_room;\n\tString subject_subject_subject_subject_type;\n\tString subject_subject_subject_semester;\n\tString subject_subject_subject_year;\n\tString subject_subject_subject_subject_subject;\n\tString subject_subject_subject_subject_id;\n\tString subject_subject_subject_subject_code;\n\tString subject_subject_subject_subject_\n"
    ],
    "results": 10
},{
    "id": "606",
    "source": "soSearches",
    "language": "java",
    "query": "how to add item to data property object in javascriopt",
    "snippets": [
        "\tClazz(){\n\t\tthis.data = {\n\t\t\t\"name\": \"John\",\n\t\t\t\"age\": 30,\n\t\t\t\"cars\": [\n\t\t\t\t\"Ford\",\n\t\t\t\t\"BMW\",\n\t\t\t\t\"Fiat\"\n\t\t\t]\n\t\t};\n\t}\n\tpublic Object data;\n}\n",
        "\tvar data:Object = {};\n\tpublic function addItem(key:String, value:Object):void{\n\t\tdata[key] = value;\n\t}\n}\n",
        "\tfunction addItem(item){\n\t\tthis.data.push(item);\n\t}\n}\n",
        "\tClazz(){\n\t\tthis.data = {};\n\t}\n\tpublic\n\tClazz(object data){\n\t\tthis.data = data;\n\t}\n\tpublic\n\tobject data;\n}\n",
        "\tClazz(){\n\t\tthis.data = new ArrayList<>();\n\t}\n\tpublic List<String> data;\n}\n",
        "\tClazz(){\n\t\tthis.data = new ArrayList<>();\n\t}\n\tpublic ArrayList<String> data;\n}\n",
        "\tfunction addItem(item:Object){\n\t\tthis.data.push(item);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "607",
    "source": "soSearches",
    "language": "java",
    "query": "how to read and write from excel using java",
    "snippets": [
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.xls\");\n\t\t\twb.write(fos);\n\t\t\tfos.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tString value = cell.getStringCellValue();\n\t\t\tSystem.out.println(value);\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFRow row1 = sheet.createRow(1);\n\t\t\tHSSFCell cell1 = row1.createCell(0);\n\t\t\tcell1.setCellValue(\"Suresh\");\n\t\t\twb.write(fos);\n\t\t\tfos.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\test.xls\");\n\t\t\twb.write(fos);\n\t\t\tfos.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFRow row1 = sheet.createRow(1);\n\t\t\tHSSFCell cell1 = row1.createCell(0);\n\t\t\tcell1.setCellValue(\"Saurabh\");\n\t\t\twb.write(fos);\n\t\t\tfos.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\sri\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\sri\\\\Desktop\\\\test.xls\");\n\t\t\twb.write(fos);\n\t\t\tfos.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Sachin\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tString value = cell.getStringCellValue();\n\t\t\tSystem.out.println(value);\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\Sachin\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFRow row1 = sheet.createRow(1);\n\t\t\tHSSFCell cell1 = row1.createCell(0);\n\t\t\tcell1.setCellValue(\"Sachin\");\n\t\t\twb.write(fos);\n\t\t\tfos.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) throws IOException {\n\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\test.xls\");\n\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\tHSSFRow row = sheet.getRow(0);\n\t\tHSSFCell cell = row.getCell(0);\n\t\tSystem.out.println(cell.getStringCellValue());\n\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\test.xls\");\n\t\twb.write(fos);\n\t\tfos.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Sanket\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\Sanket\\\\Desktop\\\\test.xls\");\n\t\t\twb.write(fos);\n\t\t\tfos.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\ttry {\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\sri\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook wb = new HSSFWorkbook(fis);\n\t\t\tHSSFSheet sheet = wb.getSheetAt(0);\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tString value = cell.getStringCellValue();\n\t\t\tSystem.out.println(value);\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\sri\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFRow row1 = sheet.createRow(1);\n\t\t\tHSSFCell cell1 = row1.createCell(0);\n\t\t\tcell1.setCellValue(\"Hello\");\n\t\t\twb.write(fos);\n\t\t\tfos.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\ttry {\n\t\t\tFileInputStream file = new FileInputStream(\"C:\\\\Users\\\\Soumya\\\\Desktop\\\\test.xls\");\n\t\t\tHSSFWorkbook workbook = new HSSFWorkbook(file);\n\t\t\tHSSFSheet sheet = workbook.getSheet(\"Sheet1\");\n\t\t\tHSSFRow row = sheet.getRow(0);\n\t\t\tHSSFCell cell = row.getCell(0);\n\t\t\tSystem.out.println(cell.getStringCellValue());\n\t\t\tFileOutputStream outFile = new FileOutputStream(\"C:\\\\Users\\\\Soumya\\\\Desktop\\\\test.xls\");\n\t\t\tworkbook.write(outFile);\n\t\t\toutFile.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "608",
    "source": "soSearches",
    "language": "java",
    "query": "how to end program after execution  java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t\tSystem.exit(0);\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "609",
    "source": "soSearches",
    "language": "java",
    "query": "how to implement window listener in java",
    "snippets": [
        "\tvoid method(){\n\t\tJFrame frame = new JFrame();\n\t\tframe.addWindowListener(new WindowAdapter(){\n\t\t\tpublic void windowClosing(WindowEvent e){\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tvoid addWindowListener(WindowListener wl){\n\t\tSystem.out.println(\"addWindowListener\");\n\t}\n\tpublic\n\tvoid removeWindowListener(WindowListener wl){\n\t\tSystem.out.println(\"removeWindowListener\");\n\t}\n\tpublic\n\tvoid windowOpened(WindowEvent we){\n\t\tSystem.out.println(\"windowOpened\");\n\t}\n\tpublic\n\tvoid windowClosing(WindowEvent we){\n\t\tSystem.out.println(\"windowClosing\");\n\t}\n\tpublic\n\tvoid windowClosed(WindowEvent we){\n\t\tSystem.out.println(\"windowClosed\");\n\t}\n\tpublic\n\tvoid windowIconified(WindowEvent we){\n\t\tSystem.out.println(\"windowIconified\");\n\t}\n\tpublic\n\tvoid windowDeiconified(WindowEvent we){\n\t\tSystem.out.println(\"windowDeiconified\");\n\t}\n\tpublic\n\tvoid windowActivated(WindowEvent we){\n\t\tSystem.out.println(\"windowActivated\");\n\t}\n\tpublic\n\tvoid windowDeactivated(WindowEvent we){\n\t\tSystem.out.println(\"windowDeactivated\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tJFrame frame = new JFrame(\"frame\");\n\t\tframe.addWindowListener(new WindowAdapter(){\n\t\t\tpublic void windowClosing(WindowEvent e){\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t\tframe.setVisible(true);\n\t}\n}\n",
        "\tvoid addWindowListener(WindowListener wl){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "610",
    "source": "soSearches",
    "language": "java",
    "query": "how to add arrays in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5};\n\t\tint[] b = {6,7,8,9,10};\n\t\tint[] c = new int[a.length+b.length];\n\t\tfor(int i=0;i<a.length;i++){\n\t\t\tc[i] = a[i];\n\t\t}\n\t\tfor(int i=0;i<b.length;i++){\n\t\t\tc[i+a.length] = b[i];\n\t\t}\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]+\" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[5];\n\t\tarr[0] = 1;\n\t\tarr[1] = 2;\n\t\tarr[2] = 3;\n\t\tarr[3] = 4;\n\t\tarr[4] = 5;\n\t\tSystem.out.println(arr[0]);\n\t\tSystem.out.println(arr[1]);\n\t\tSystem.out.println(arr[2]);\n\t\tSystem.out.println(arr[3]);\n\t\tSystem.out.println(arr[4]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = new int[5];\n\t\ta[0] = 1;\n\t\ta[1] = 2;\n\t\ta[2] = 3;\n\t\ta[3] = 4;\n\t\ta[4] = 5;\n\t\tSystem.out.println(a[0]);\n\t\tSystem.out.println(a[1]);\n\t\tSystem.out.println(a[2]);\n\t\tSystem.out.println(a[3]);\n\t\tSystem.out.println(a[4]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = new int[5];\n\t\ta[0] = 1;\n\t\ta[1] = 2;\n\t\ta[2] = 3;\n\t\ta[3] = 4;\n\t\ta[4] = 5;\n\t\tint[] b = new int[5];\n\t\tb[0] = 6;\n\t\tb[1] = 7;\n\t\tb[2] = 8;\n\t\tb[3] = 9;\n\t\tb[4] = 10;\n\t\tint[] c = new int[10];\n\t\tfor(int i = 0; i < 5; i++){\n\t\t\tc[i] = a[i];\n\t\t}\n\t\tfor(int i = 5; i < 10; i++){\n\t\t\tc[i] = b[i-5];\n\t\t}\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\tSystem.out.print(c[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = new int[5];\n\t\tint[] b = new int[5];\n\t\tint[] c = new int[5];\n\t\tfor(int i=0;i<5;i++){\n\t\t\ta[i] = i;\n\t\t\tb[i] = i;\n\t\t\tc[i] = i;\n\t\t}\n\t\tint[] d = new int[5];\n\t\tfor(int i=0;i<5;i++){\n\t\t\td[i] = a[i]+b[i]+c[i];\n\t\t}\n\t\tfor(int i=0;i<5;i++){\n\t\t\tSystem.out.println(d[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = new int[5];\n\t\tint[] b = new int[5];\n\t\tint[] c = new int[5];\n\t\tfor(int i=0;i<5;i++){\n\t\t\ta[i] = i;\n\t\t\tb[i] = i*2;\n\t\t\tc[i] = a[i]+b[i];\n\t\t}\n\t\tfor(int i=0;i<5;i++){\n\t\t\tSystem.out.println(c[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = new int[5];\n\t\tint[] b = new int[5];\n\t\tint[] c = new int[5];\n\t\tint[] d = new int[5];\n\t\tint[] e = new int[5];\n\t\tint[] f = new int[5];\n\t\tint[] g = new int[5];\n\t\tint[] h = new int[5];\n\t\tint[] i = new int[5];\n\t\tint[] j = new int[5];\n\t\tint[] k = new int[5];\n\t\tint[] l = new int[5];\n\t\tint[] m = new int[5];\n\t\tint[] n = new int[5];\n\t\tint[] o = new int[5];\n\t\tint[] p = new int[5];\n\t\tint[] q = new int[5];\n\t\tint[] r = new int[5];\n\t\tint[] s = new int[5];\n\t\tint[] t = new int[5];\n\t\tint[] u = new int[5];\n\t\tint[] v = new int[5];\n\t\tint[] w = new int[5];\n\t\tint[] x = new int[5];\n\t\tint[] y = new int[5];\n\t\tint[] z = new int[5];\n\t\tint[] aa = new int[5];\n\t\tint[] bb = new int[5];\n\t\tint[] cc = new int[5];\n\t\tint[] dd = new int[5];\n\t\tint[] ee = new int[5];\n\t\tint[] ff = new int[5];\n\t\tint[] gg = new int[5];\n\t\tint[] hh = new int[5];\n\t\tint[] ii = new int[5];\n\t\tint[] jj = new int[5];\n\t\tint[] kk = new int[5];\n\t\tint[] ll = new int[5];\n\t\tint[] mm = new int[5];\n\t\tint[] nn = new int[5];\n"
    ],
    "results": 10
},{
    "id": "611",
    "source": "soSearches",
    "language": "java",
    "query": "how to set up gson in java",
    "snippets": [
        "\tString name;\n\tint age;\n\tpublic Clazz(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n}\n",
        "\tString name;\n\tint age;\n\tpublic Clazz(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String toString(){\n\t\treturn \"name: \" + name + \" age: \" + age;\n\t}\n}\n",
        "\tString name;\n\tint age;\n\tpublic Clazz(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic String toString(){\n\t\treturn name + \" \" + age;\n\t}\n}\n",
        "\tString name;\n\tpublic\n\tint age;\n\tpublic\n\tString address;\n\tpublic\n\tString getName(){\n\t\treturn name;\n\t}\n\tpublic\n\tvoid setName(String name){\n\t\tthis.name = name;\n\t}\n\tpublic\n\tint getAge(){\n\t\treturn age;\n\t}\n\tpublic\n\tvoid setAge(int age){\n\t\tthis.age = age;\n\t}\n\tpublic\n\tString getAddress(){\n\t\treturn address;\n\t}\n\tpublic\n\tvoid setAddress(String address){\n\t\tthis.address = address;\n\t}\n}\n",
        "\tString name;\n\tpublic\n\tint age;\n\tpublic\n\tString address;\n\tpublic\n\tString phone;\n\tpublic\n\tString email;\n\tpublic\n\tString password;\n\tpublic\n\tString role;\n\tpublic\n\tString status;\n\tpublic\n\tString created_at;\n\tpublic\n\tString updated_at;\n\tpublic\n\tString deleted_at;\n\tpublic\n\tString id;\n\tpublic\n\tString created_by;\n\tpublic\n\tString updated_by;\n\tpublic\n\tString deleted_by;\n\tpublic\n\tString deleted_reason;\n\tpublic\n\tString deleted_reason_detail;\n\tpublic\n\tString deleted_reason_detail_other;\n\tpublic\n\tString deleted_reason_detail_other_detail;\n\tpublic\n\tString deleted_reason_detail_other_detail_other;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail_other;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail_other_detail;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail_other_detail_other;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail_other_detail_other_detail;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail_other_detail_other_detail_other;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail_other_detail_other_detail_other_detail;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail_other_detail_other_detail_other_detail_other;\n\tpublic\n\tString deleted_reason_detail_other_detail_other_detail_other_detail_other_detail_other_detail_other_detail;\n\tpublic\n\tString\n"
    ],
    "results": 10
},{
    "id": "612",
    "source": "soSearches",
    "language": "java",
    "query": "how to add sound on java",
    "snippets": [
        "\tvoid playSound(){\n\t\tSystem.out.println(\"Playing sound\");\n\t}\n}\n",
        "\tvoid playSound(){\n\t\tSystem.out.println(\"Sound is playing\");\n\t}\n}\n",
        "\tvoid playSound(){\n\t\tSystem.out.println(\"sound\");\n\t}\n}\n"
    ],
    "results": 8
},{
    "id": "613",
    "source": "soSearches",
    "language": "java",
    "query": "how to get the difference of two calendar in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(Calendar.YEAR, 2015);\n\t\tcal1.set(Calendar.MONTH, Calendar.JANUARY);\n\t\tcal1.set(Calendar.DATE, 1);\n\t\tcal2.set(Calendar.YEAR, 2015);\n\t\tcal2.set(Calendar.MONTH, Calendar.JANUARY);\n\t\tcal2.set(Calendar.DATE, 2);\n\t\tlong diff = cal2.getTimeInMillis() - cal1.getTimeInMillis();\n\t\tSystem.out.println(diff);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(Calendar.YEAR,2012);\n\t\tcal1.set(Calendar.MONTH,11);\n\t\tcal1.set(Calendar.DATE,31);\n\t\tcal2.set(Calendar.YEAR,2013);\n\t\tcal2.set(Calendar.MONTH,0);\n\t\tcal2.set(Calendar.DATE,1);\n\t\tlong diff = cal1.getTimeInMillis() - cal2.getTimeInMillis();\n\t\tlong diffDays = diff / (24 * 60 * 60 * 1000);\n\t\tSystem.out.println(\"days: \" + diffDays);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(Calendar.YEAR, 2014);\n\t\tcal1.set(Calendar.MONTH, Calendar.JANUARY);\n\t\tcal1.set(Calendar.DATE, 1);\n\t\tcal2.set(Calendar.YEAR, 2014);\n\t\tcal2.set(Calendar.MONTH, Calendar.FEBRUARY);\n\t\tcal2.set(Calendar.DATE, 1);\n\t\tlong diff = cal2.getTimeInMillis() - cal1.getTimeInMillis();\n\t\tSystem.out.println(\"difference in milliseconds: \" + diff);\n\t\tlong diffDays = diff / (24 * 60 * 60 * 1000);\n\t\tSystem.out.println(\"difference in days: \" + diffDays);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(2012, 1, 20);\n\t\tcal2.set(2012, 1, 21);\n\t\tlong mils = cal2.getTimeInMillis() - cal1.getTimeInMillis();\n\t\tlong days = mils / (24 * 60 * 60 * 1000);\n\t\tSystem.out.println(\"days: \" + days);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(2012, 1, 20);\n\t\tcal2.set(2012, 1, 21);\n\t\tlong diff = cal2.getTimeInMillis() - cal1.getTimeInMillis();\n\t\tSystem.out.println(\"diff: \" + diff);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(2012, 1, 20);\n\t\tcal2.set(2012, 1, 21);\n\t\tlong mils = cal2.getTimeInMillis() - cal1.getTimeInMillis();\n\t\tlong days = mils / (24 * 60 * 60 * 1000);\n\t\tSystem.out.println(days);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(2014, Calendar.JANUARY, 1);\n\t\tcal2.set(2014, Calendar.JANUARY, 2);\n\t\tlong diff = cal2.getTimeInMillis() - cal1.getTimeInMillis();\n\t\tSystem.out.println(diff);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(2012, 9, 1);\n\t\tcal2.set(2012, 9, 2);\n\t\tlong mils1 = cal1.getTimeInMillis();\n\t\tlong mils2 = cal2.getTimeInMillis();\n\t\tlong diff = mils2 - mils1;\n\t\tlong diffDays = diff / (24 * 60 * 60 * 1000);\n\t\tSystem.out.println(\"days: \" + diffDays);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(2012, 9, 1);\n\t\tcal2.set(2012, 9, 2);\n\t\tlong mils = cal2.getTimeInMillis() - cal1.getTimeInMillis();\n\t\tlong days = mils / (24 * 60 * 60 * 1000);\n\t\tSystem.out.println(\"days: \" + days);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal1 = Calendar.getInstance();\n\t\tCalendar cal2 = Calendar.getInstance();\n\t\tcal1.set(2012, 9, 1);\n\t\tcal2.set(2012, 9, 2);\n\t\tlong mils = cal2.getTimeInMillis() - cal1.getTimeInMillis();\n\t\tlong days = mils / (24 * 60 * 60 * 1000);\n\t\tSystem.out.println(days);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "614",
    "source": "soSearches",
    "language": "java",
    "query": "how to change a value in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tSystem.out.println(a);\n\t\ta = 20;\n\t\tSystem.out.println(a);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tSystem.out.println(\"a = \" + a);\n\t\ta = 20;\n\t\tSystem.out.println(\"a = \" + a);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = a;\n\t\ta = b;\n\t\tb = c;\n\t\tSystem.out.println(\"a = \" + a);\n\t\tSystem.out.println(\"b = \" + b);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "615",
    "source": "soSearches",
    "language": "java",
    "query": "how to take user input for matrix in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[][] matrix = new int[3][3];\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tSystem.out.println(\"Enter the value of matrix[\"+i+\"][\"+j+\"]\");\n\t\t\t\tmatrix[i][j] = Integer.parseInt(System.console().readLine());\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tSystem.out.print(matrix[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] matrix = new int[3][3];\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tSystem.out.println(\"Enter the element at row \"+i+\" column \"+j);\n\t\t\t\tmatrix[i][j] = Integer.parseInt(System.console().readLine());\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tSystem.out.print(matrix[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of rows\");\n\t\tint rows = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of columns\");\n\t\tint columns = sc.nextInt();\n\t\tint[][] matrix = new int[rows][columns];\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tSystem.out.println(\"Enter the element at row \"+i+\" and column \"+j);\n\t\t\t\tmatrix[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"The matrix is\");\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tSystem.out.print(matrix[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of rows\");\n\t\tint rows = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of columns\");\n\t\tint columns = sc.nextInt();\n\t\tint[][] matrix = new int[rows][columns];\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tSystem.out.println(\"Enter the value of matrix[\"+i+\"][\"+j+\"]\");\n\t\t\t\tmatrix[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"The matrix is\");\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tSystem.out.print(matrix[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of rows\");\n\t\tint rows = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of columns\");\n\t\tint columns = sc.nextInt();\n\t\tint[][] matrix = new int[rows][columns];\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tSystem.out.println(\"Enter the value of matrix[\"+i+\"][\"+j+\"]\");\n\t\t\t\tmatrix[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tSystem.out.print(matrix[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of rows\");\n\t\tint rows = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of columns\");\n\t\tint columns = sc.nextInt();\n\t\tint[][] matrix = new int[rows][columns];\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tSystem.out.println(\"Enter the element at row \"+i+\" column \"+j);\n\t\t\t\tmatrix[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"The matrix is\");\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tSystem.out.print(matrix[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of rows\");\n\t\tint row=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of columns\");\n\t\tint col=sc.nextInt();\n\t\tint[][] matrix=new int[row][col];\n\t\tfor(int i=0;i<row;i++){\n\t\t\tfor(int j=0;j<col;j++){\n\t\t\t\tSystem.out.println(\"Enter the element at row \"+i+\" and column \"+j);\n\t\t\t\tmatrix[i][j]=sc.nextInt();\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"The matrix is\");\n\t\tfor(int i=0;i<row;i++){\n\t\t\tfor(int j=0;j<col;j++){\n\t\t\t\tSystem.out.print(matrix[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number of rows and columns\");\n\t\tint r = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tint[][] a = new int[r][c];\n\t\tSystem.out.println(\"Enter the elements of matrix\");\n\t\tfor(int i=0;i<r;i++){\n\t\t\tfor(int j=0;j<c;j++){\n\t\t\t\ta[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"The matrix is\");\n\t\tfor(int i=0;i<r;i++){\n\t\t\tfor(int j=0;j<c;j++){\n\t\t\t\tSystem.out.print(a[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "616",
    "source": "soSearches",
    "language": "java",
    "query": "how to code a multiplayer dice game[java]",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint dice1 = (int)(Math.random()*6)+1;\n\t\tint dice2 = (int)(Math.random()*6)+1;\n\t\tint dice3 = (int)(Math.random()*6)+1;\n\t\tint dice4 = (int)(Math.random()*6)+1;\n\t\tint dice5 = (int)(Math.random()*6)+1;\n\t\tint dice6 = (int)(Math.random()*6)+1;\n\t\tint dice7 = (int)(Math.random()*6)+1;\n\t\tint dice8 = (int)(Math.random()*6)+1;\n\t\tint dice9 = (int)(Math.random()*6)+1;\n\t\tint dice10 = (int)(Math.random()*6)+1;\n\t\tint dice11 = (int)(Math.random()*6)+1;\n\t\tint dice12 = (int)(Math.random()*6)+1;\n\t\tint dice13 = (int)(Math.random()*6)+1;\n\t\tint dice14 = (int)(Math.random()*6)+1;\n\t\tint dice15 = (int)(Math.random()*6)+1;\n\t\tint dice16 = (int)(Math.random()*6)+1;\n\t\tint dice17 = (int)(Math.random()*6)+1;\n\t\tint dice18 = (int)(Math.random()*6)+1;\n\t\tint dice19 = (int)(Math.random()*6)+1;\n\t\tint dice20 = (int)(Math.random()*6)+1;\n\t\tint dice21 = (int)(Math.random()*6)+1;\n\t\tint dice22 = (int)(Math.random()*6)+1;\n\t\tint dice23 = (int)(Math.random()*6)+1;\n\t\tint dice24 = (int)(Math.random()*6)+1;\n\t\tint dice25 = (int)(Math.random()*6)+1;\n\t\tint dice26 = (int)(Math.random()*\n",
        "\tstatic void main(String[] args){\n\t\tint dice1 = (int) (Math.random() * 6) + 1;\n\t\tint dice2 = (int) (Math.random() * 6) + 1;\n\t\tint dice3 = (int) (Math.random() * 6) + 1;\n\t\tint dice4 = (int) (Math.random() * 6) + 1;\n\t\tint dice5 = (int) (Math.random() * 6) + 1;\n\t\tint dice6 = (int) (Math.random() * 6) + 1;\n\t\tint dice7 = (int) (Math.random() * 6) + 1;\n\t\tint dice8 = (int) (Math.random() * 6) + 1;\n\t\tint dice9 = (int) (Math.random() * 6) + 1;\n\t\tint dice10 = (int) (Math.random() * 6) + 1;\n\t\tint dice11 = (int) (Math.random() * 6) + 1;\n\t\tint dice12 = (int) (Math.random() * 6) + 1;\n\t\tint dice13 = (int) (Math.random() * 6) + 1;\n\t\tint dice14 = (int) (Math.random() * 6) + 1;\n\t\tint dice15 = (int) (Math.random() * 6) + 1;\n\t\tint dice16 = (int) (Math.random() * 6) + 1;\n\t\tint dice17 = (int) (Math.random() * 6) + 1;\n\t\tint dice18 = (int) (Math.random() * 6) + 1;\n\t\tint dice19 = (int) (Math.random() * 6) + 1;\n\t\tint dice20 = (int) (Math.random() * 6) + 1;\n\t\tint dice21 = (int) (Math.random() * 6) + 1;\n\t\tint dice22 = (int) (Math.random() * 6) + 1;\n\t\tint dice23 = (int) (Math.random() * 6) + 1;\n\t\tint dice24 =\n"
    ],
    "results": 10
},{
    "id": "617",
    "source": "soSearches",
    "language": "java",
    "query": "java how to connect cache database",
    "snippets": [
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/cache\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tResultSet rs=st.executeQuery(\"select * from cache\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tResultSet rs=stmt.executeQuery(\"select * from student\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(\"id\")+\" \"+rs.getString(\"name\")+\" \"+rs.getString(\"email\"));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString url = \"jdbc:mysql://localhost:3306/\";\n\t\tString dbName = \"test\";\n\t\tString driver = \"com.mysql.jdbc.Driver\";\n\t\tString userName = \"root\";\n\t\tString password = \"\";\n\t\ttry{\n\t\t\tClass.forName(driver).newInstance();\n\t\t\tConnection conn = DriverManager.getConnection(url+dbName,userName,password);\n\t\t\tStatement stmt = conn.createStatement();\n\t\t\tResultSet rs = stmt.executeQuery(\"select * from user\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(\"name\"));\n\t\t\t}\n\t\t\trs.close();\n\t\t\tstmt.close();\n\t\t\tconn.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid test(){\n\t\tString url = \"jdbc:mysql://localhost:3306/\";\n\t\tString dbName = \"test\";\n\t\tString driver = \"com.mysql.jdbc.Driver\";\n\t\tString userName = \"root\";\n\t\tString password = \"\";\n\t\ttry{\n\t\t\tClass.forName(driver);\n\t\t\tConnection conn = DriverManager.getConnection(url+dbName,userName,password);\n\t\t\tStatement stmt = conn.createStatement();\n\t\t\tResultSet rs = stmt.executeQuery(\"select * from user\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(\"name\"));\n\t\t\t}\n\t\t\trs.close();\n\t\t\tstmt.close();\n\t\t\tconn.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid test(){\n\t\tString url = \"jdbc:mysql://localhost:3306/test\";\n\t\tString user = \"root\";\n\t\tString password = \"\";\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection conn = DriverManager.getConnection(url, user, password);\n\t\t\tStatement stmt = conn.createStatement();\n\t\t\tResultSet rs = stmt.executeQuery(\"select * from user\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(\"name\"));\n\t\t\t}\n\t\t\trs.close();\n\t\t\tstmt.close();\n\t\t\tconn.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tConnection conn = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tconn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\", \"root\", \"root\");\n\t\t\tStatement stmt = conn.createStatement();\n\t\t\tResultSet rs = stmt.executeQuery(\"select * from user\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(\"name\"));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tconn.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void connect(){\n\t\tSystem.out.println(\"connect\");\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void connect(){\n\t\tSystem.out.println(\"connect to cache database\");\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void connect(){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "618",
    "source": "soSearches",
    "language": "java",
    "query": "how to let the user edit an array in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr2 = new int[10];\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tarr2[i] = arr[i];\n\t\t}\n\t\tfor(int i = 0; i < arr2.length; i++){\n\t\t\tSystem.out.println(arr2[i]);\n\t\t}\n\t\tSystem.out.println(\"Enter the index of the element you want to edit\");\n\t\tint index = Integer.parseInt(System.console().readLine());\n\t\tSystem.out.println(\"Enter the new value\");\n\t\tint value = Integer.parseInt(System.console().readLine());\n\t\tarr2[index] = value;\n\t\tfor(int i = 0; i < arr2.length; i++){\n\t\t\tSystem.out.println(arr2[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tSystem.out.println(\"Enter a number to replace a value in the array: \");\n\t\tint num = Clazz.readInt();\n\t\tSystem.out.println(\"Enter a new value: \");\n\t\tint newNum = Clazz.readInt();\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] == num){\n\t\t\t\tarr[i] = newNum;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n\tpublic static int readInt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\t\treturn num;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr2 = new int[10];\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tarr2[i] = arr[i];\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.println(arr2[i]);\n\t\t}\n\t\tSystem.out.println(\"Enter a number to edit the array: \");\n\t\tint num = Clazz.input();\n\t\tSystem.out.println(\"Enter a new number: \");\n\t\tint num2 = Clazz.input();\n\t\tarr2[num] = num2;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.println(arr2[i]);\n\t\t}\n\t}\n\tpublic static int input(){\n\t\tScanner input = new Scanner(System.in);\n\t\tint num = input.nextInt();\n\t\treturn num;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] array = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array2 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array3 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array4 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array5 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array6 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array7 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array8 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array9 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array10 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array11 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array12 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array13 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array14 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array15 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array16 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] array17 = {1,2,3,4,5,6,7,8,9,\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tSystem.out.println(\"Before edit:\");\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tarr[0] = 0;\n\t\tSystem.out.println(\"After edit:\");\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tSystem.out.println(\"Before edit: \");\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tarr[0] = 10;\n\t\tSystem.out.println(\"After edit: \");\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tSystem.out.println(\"Before editing the array\");\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tSystem.out.println(\"After editing the array\");\n\t\tarr[0]=10;\n\t\tarr[1]=20;\n\t\tarr[2]=30;\n\t\tarr[3]=40;\n\t\tarr[4]=50;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tSystem.out.println(\"Before editing:\");\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tSystem.out.println(\"After editing:\");\n\t\tarr[0] = 10;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "619",
    "source": "soSearches",
    "language": "java",
    "query": "how to cache java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"method\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "620",
    "source": "soSearches",
    "language": "java",
    "query": "[java]how to access protected function outside package",
    "snippets": [
        "\tvoid publicMethod(){\n\t\tSystem.out.println(\"publicMethod\");\n\t}\n\tprotected\n\tvoid protectedMethod(){\n\t\tSystem.out.println(\"protectedMethod\");\n\t}\n\tvoid defaultMethod(){\n\t\tSystem.out.println(\"defaultMethod\");\n\t}\n\tprivate\n\tvoid privateMethod(){\n\t\tSystem.out.println(\"privateMethod\");\n\t}\n}\n",
        "\t\tvoid publicMethod(){\n\t\t\tSystem.out.println(\"publicMethod\");\n\t\t}\n\tprotected\n\t\tvoid protectedMethod(){\n\t\t\tSystem.out.println(\"protectedMethod\");\n\t\t}\n\tprivate\n\t\tvoid privateMethod(){\n\t\t\tSystem.out.println(\"privateMethod\");\n\t\t}\n}\n"
    ],
    "results": 10
},{
    "id": "621",
    "source": "soSearches",
    "language": "java",
    "query": "how to create a forgot password page in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "622",
    "source": "soSearches",
    "language": "java",
    "query": "java xchart how to create bar",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] data = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\t\tString[] labels = {\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"};\n\t\tXChart xchart = new XChart(data, labels);\n\t\txchart.createBarChart();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tXYChart chart = new XYChartBuilder().width(800).height(600).title(\"Bar Chart\").xAxisTitle(\"X\").yAxisTitle(\"Y\").build();\n\t\tchart.addSeries(\"Series 1\", new double[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10});\n\t\tnew SwingWrapper(chart).displayChart();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tXYChart chart = new XYChart(500, 400);\n\t\tchart.setTitle(\"My Chart\");\n\t\tchart.setXAxisTitle(\"X\");\n\t\tchart.setYAxisTitle(\"Y\");\n\t\tchart.addSeries(\"My Series\", new double[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10});\n\t\tchart.getStyler().setLegendPosition(LegendPosition.InsideNW);\n\t\tchart.getStyler().setPlotBackgroundColor(Color.WHITE);\n\t\tchart.getStyler().setPlotGridLinesVisible(false);\n\t\tchart.getStyler().setChartBackgroundColor(Color.WHITE);\n\t\tchart.getStyler().setChartTitleBoxVisible(false);\n\t\tchart.getStyler().setAxisTitlesVisible(false);\n\t\tchart.getStyler().setAxisTickMarksVisible(false);\n\t\tchart.getStyler().setPlotMargin(0);\n\t\tchart.getStyler().setPlotBorderVisible(false);\n\t\tchart.getStyler().setLegendVisible(false);\n\t\tchart.getStyler().setAxisTickLabelsVisible(false);\n\t\tchart.getStyler().setPlotGridLinesColor(Color.WHITE);\n\t\tchart.getStyler().setPlotBackgroundColor(Color.WHITE);\n\t\tchart.getStyler().setChartBackgroundColor(Color.WHITE);\n\t\tchart.getStyler().setChartTitleBoxVisible(false);\n\t\tchart.getStyler().setAxisTitlesVisible(false);\n\t\tchart.getStyler().setAxisTickMarksVisible(false);\n\t\tchart.getStyler().setPlotMargin(0);\n\t\tchart.getStyler().setPlotBorderVisible(false);\n\t\tchart.getStyler().setLegendVisible(false);\n\t\tchart.getStyler().setAxisTickLabelsVisible(false);\n\t\tchart.getStyler().setPlotGrid\n",
        "\tstatic void main(String[] args){\n\t\tString[] series = {\"Series 1\", \"Series 2\", \"Series 3\"};\n\t\tint[] series1 = {1, 2, 3};\n\t\tint[] series2 = {4, 5, 6};\n\t\tint[] series3 = {7, 8, 9};\n\t\tXYChart chart = new XYChart(500, 400);\n\t\tchart.addSeries(series[0], series1);\n\t\tchart.addSeries(series[1], series2);\n\t\tchart.addSeries(series[2], series3);\n\t\tchart.setTitle(\"XYChart Demo\");\n\t\tchart.setXAxisTitle(\"X\");\n\t\tchart.setYAxisTitle(\"Y\");\n\t\tchart.getStyler().setPlotBackgroundColor(Color.WHITE);\n\t\tchart.getStyler().setPlotGridLinesVisible(false);\n\t\tchart.getStyler().setChartBackgroundColor(Color.WHITE);\n\t\tchart.getStyler().setChartFontColor(Color.BLACK);\n\t\tchart.getStyler().setLegendBackgroundColor(Color.WHITE);\n\t\tchart.getStyler().setLegendBorderColor(Color.WHITE);\n\t\tchart.getStyler().setLegendFontColor(Color.BLACK);\n\t\tchart.getStyler().setLegendFont(new Font(\"Dialog\", Font.BOLD, 12));\n\t\tchart.getStyler().setAxisTickPadding(0);\n\t\tchart.getStyler().setAxisTitlePadding(0);\n\t\tchart.getStyler().setAxisTickMarkLength(0);\n\t\tchart.getStyler().setPlotMargin(0);\n\t\tchart.getStyler().setPlotPadding(0);\n\t\tchart.getStyler().setChartTitlePadding(0);\n\t\tchart.getStyler().setChartPadding(0);\n\t\tchart.getStyler().setLegendPosition(LegendPosition.InsideSW);\n\t\tchart.getStyler().setLegendPadding(0);\n\t\tchart.getStyler().setLegendIconHeight\n",
        "\tstatic void main(String[] args){\n\t\tString[] seriesNames = {\"Series 1\", \"Series 2\", \"Series 3\"};\n\t\tint[] series1 = {1, 3, 4};\n\t\tint[] series2 = {5, 7, 8};\n\t\tint[] series3 = {9, 11, 12};\n\t\tXYSeriesCollection dataset = new XYSeriesCollection();\n\t\tXYSeries series1 = new XYSeries(seriesNames[0]);\n\t\tXYSeries series2 = new XYSeries(seriesNames[1]);\n\t\tXYSeries series3 = new XYSeries(seriesNames[2]);\n\t\tfor(int i = 0; i < series1.length; i++){\n\t\t\tseries1.add(i, series1[i]);\n\t\t}\n\t\tfor(int i = 0; i < series2.length; i++){\n\t\t\tseries2.add(i, series2[i]);\n\t\t}\n\t\tfor(int i = 0; i < series3.length; i++){\n\t\t\tseries3.add(i, series3[i]);\n\t\t}\n\t\tdataset.addSeries(series1);\n\t\tdataset.addSeries(series2);\n\t\tdataset.addSeries(series3);\n\t\tJFreeChart chart = ChartFactory.createXYBarChart(\"Bar Chart\", \"X\", false, \"Y\", dataset, PlotOrientation.VERTICAL, true, true, false);\n\t\tChartFrame frame = new ChartFrame(\"Bar Chart\", chart);\n\t\tframe.setVisible(true);\n\t\tframe.setSize(450, 350);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\t//create a new chart object\n\t\tChart chart = new ChartBuilder().width(800).height(600).title(\"Bar Chart\").xAxisTitle(\"X\").yAxisTitle(\"Y\").build();\n\t\t//create a new data set object\n\t\tDataSet dataSet = chart.addDataSet();\n\t\t//add data to the data set\n\t\tdataSet.add(1, 2);\n\t\tdataSet.add(2, 3);\n\t\tdataSet.add(3, 4);\n\t\tdataSet.add(4, 5);\n\t\tdataSet.add(5, 6);\n\t\tdataSet.add(6, 7);\n\t\tdataSet.add(7, 8);\n\t\tdataSet.add(8, 9);\n\t\tdataSet.add(9, 10);\n\t\tdataSet.add(10, 11);\n\t\tdataSet.add(11, 12);\n\t\tdataSet.add(12, 13);\n\t\tdataSet.add(13, 14);\n\t\tdataSet.add(14, 15);\n\t\tdataSet.add(15, 16);\n\t\tdataSet.add(16, 17);\n\t\tdataSet.add(17, 18);\n\t\tdataSet.add(18, 19);\n\t\tdataSet.add(19, 20);\n\t\tdataSet.add(20, 21);\n\t\tdataSet.add(21, 22);\n\t\tdataSet.add(22, 23);\n\t\tdataSet.add(23, 24);\n\t\tdataSet.add(24, 25);\n\t\tdataSet.add(25, 26);\n\t\tdataSet.add(26, 27);\n\t\tdataSet.add(27, 28);\n\t\tdataSet.add(28, 29);\n\t\tdataSet.add(29, 30);\n\t\tdataSet.add(30, 31);\n\t\tdataSet.add(31, 32);\n\t\tdataSet.add(32, 33);\n\t\tdataSet.add(33, 34);\n\t\tdataSet.add(34, 35);\n",
        "\tstatic void main(String[] args){\n\t\t\n\t\t//create a chart\n\t\tChart chart = new ChartBuilder().width(800).height(600).title(\"Bar Chart\").xAxisTitle(\"X\").yAxisTitle(\"Y\").build();\n\t\t\n\t\t//add data\n\t\tchart.addSeries(\"Series 1\", new double[]{1, 3, 2, 4});\n\t\tchart.addSeries(\"Series 2\", new double[]{1, 3, 2, 4});\n\t\tchart.addSeries(\"Series 3\", new double[]{1, 3, 2, 4});\n\t\t\n\t\t//save it\n\t\tnew SwingWrapper(chart).displayChart();\n\t\t\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\t//create a chart\n\t\tXChart chart = new XChart(XChart.ChartType.Bar);\n\t\t//add data\n\t\tchart.addData(\"data1\", new double[]{1,2,3,4,5});\n\t\tchart.addData(\"data2\", new double[]{2,3,4,5,6});\n\t\tchart.addData(\"data3\", new double[]{3,4,5,6,7});\n\t\t//set title\n\t\tchart.setTitle(\"Bar Chart\");\n\t\t//set x-axis title\n\t\tchart.setXAxisTitle(\"X-Axis\");\n\t\t//set y-axis title\n\t\tchart.setYAxisTitle(\"Y-Axis\");\n\t\t//set x-axis labels\n\t\tchart.setXAxisLabels(new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"});\n\t\t//set y-axis labels\n\t\tchart.setYAxisLabels(new String[]{\"0\",\"100\",\"200\",\"300\",\"400\"});\n\t\t//set x-axis scale\n\t\tchart.setXAxisScale(XChart.AxisScale.Linear);\n\t\t//set y-axis scale\n\t\tchart.setYAxisScale(XChart.AxisScale.Linear);\n\t\t//set x-axis scale\n\t\tchart.setXAxisScale(XChart.AxisScale.Linear);\n\t\t//set y-axis scale\n\t\tchart.setYAxisScale(XChart.AxisScale.Linear);\n\t\t//set x-axis scale\n\t\tchart.setXAxisScale(XChart.AxisScale.Linear);\n\t\t//set y-axis scale\n\t\tchart.setYAxisScale(XChart.AxisScale.Linear);\n\t\t//set x-axis scale\n\t\tchart.setXAxisScale(XChart.AxisScale.Linear);\n\t\t//set y-axis scale\n\t\tchart.setYAxisScale(XChart.AxisScale.Linear);\n\t\t//\n"
    ],
    "results": 8
},{
    "id": "623",
    "source": "soSearches",
    "language": "java",
    "query": "[java]how to make dashboard",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "624",
    "source": "soSearches",
    "language": "java",
    "query": "how to concenate two string in java with + operator",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s1 = \"Hello\";\n\t\tString s2 = \"World\";\n\t\tString s3 = s1 + \" \" + s2;\n\t\tSystem.out.println(s3);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s1=\"hello\";\n\t\tString s2=\"world\";\n\t\tString s3=s1+\" \"+s2;\n\t\tSystem.out.println(s3);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "625",
    "source": "soSearches",
    "language": "java",
    "query": "how to access image folder in spring java",
    "snippets": [
        "\tvoid method(){\n\t\tString path = \"src/main/resources/images/\";\n\t\tFile file = new File(path);\n\t\tFile[] files = file.listFiles();\n\t\tfor(File f: files){\n\t\t\tSystem.out.println(f.getName());\n\t\t}\n\t}\n}\n",
        "\tvoid showImage(){\n\t\tString path = \"C:\\\\Users\\\\user\\\\Desktop\\\\image\\\\\";\n\t\tFile file = new File(path);\n\t\tFile[] files = file.listFiles();\n\t\tfor(File f:files){\n\t\t\tSystem.out.println(f.getName());\n\t\t}\n\t}\n}\n",
        "\tvoid showImage(){\n\t\tString path = \"C:\\\\Users\\\\User\\\\Desktop\\\\image\\\\\";\n\t\tFile file = new File(path);\n\t\tFile[] files = file.listFiles();\n\t\tfor(File f:files){\n\t\t\tSystem.out.println(f.getName());\n\t\t}\n\t}\n}\n",
        "\tvoid showImage(){\n\t\tString path = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\image\\\\\";\n\t\tFile file = new File(path);\n\t\tFile[] files = file.listFiles();\n\t\tfor(File f:files){\n\t\t\tSystem.out.println(f.getName());\n\t\t}\n\t}\n}\n",
        "\tvoid showImage(){\n\t\tString path = \"src/main/resources/images/\";\n\t\tString fileName = \"image.png\";\n\t\tString fullPath = path + fileName;\n\t\tSystem.out.println(fullPath);\n\t}\n}\n",
        "\tvoid showImage(){\n\t\tString path = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\image\\\\\";\n\t\tString fileName = \"image.jpg\";\n\t\tString fullPath = path + fileName;\n\t\tSystem.out.println(fullPath);\n\t}\n}\n",
        "\tvoid showImage(){\n\t\tString path = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\image\\\\\";\n\t\tFile file = new File(path);\n\t\tFile[] listFiles = file.listFiles();\n\t\tfor(File f:listFiles){\n\t\t\tSystem.out.println(f.getName());\n\t\t}\n\t}\n}\n",
        "\tvoid showImage(){\n\t\tString path = \"C:\\\\Users\\\\Sachin\\\\Desktop\\\\image\\\\\";\n\t\tFile file = new File(path);\n\t\tFile[] files = file.listFiles();\n\t\tfor(File f: files){\n\t\t\tSystem.out.println(f.getName());\n\t\t}\n\t}\n}\n",
        "\tvoid show(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n",
        "\tvoid m1(){\n\t\tString path=\"C:\\\\Users\\\\suresh\\\\Desktop\\\\image\\\\\";\n\t\tFile f=new File(path);\n\t\tFile[] files=f.listFiles();\n\t\tfor(File file:files){\n\t\t\tSystem.out.println(file.getName());\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "626",
    "source": "soSearches",
    "language": "java",
    "query": "how to use your own unchecked exceprions in java",
    "snippets": [
        "\tvoid method(){\n\t\ttry{\n\t\t\tthrow new Exception();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Exception handled\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry{\n\t\t\tthrow new Exception();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Exception caught\");\n\t\t}\n\t}\n}\n",
        "\tvoid m1(){\n\t\ttry{\n\t\t\tm2();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Exception in m1\");\n\t\t}\n\t}\n\tpublic\n\tvoid m2(){\n\t\tthrow new RuntimeException();\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "627",
    "source": "soSearches",
    "language": "java",
    "query": "how to pick a word in a text line in java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString text = \"This is a text line\";\n\t\tint index = text.indexOf(\"is\");\n\t\tSystem.out.println(index);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tint index = str.indexOf(\"World\");\n\t\tSystem.out.println(index);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint index=str.indexOf(\"o\");\n\t\tSystem.out.println(index);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString text = \"This is a test\";\n\t\tint index = text.indexOf(\"is\");\n\t\tSystem.out.println(index);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"This is a string\";\n\t\tint index = str.indexOf(\"string\");\n\t\tSystem.out.println(index);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tint i=str.indexOf(\"World\");\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str.charAt(5));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "628",
    "source": "soSearches",
    "language": "java",
    "query": "how to read xml in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder db = dbf.newDocumentBuilder();\n\t\t\tDocument doc = db.parse(\"/home/sachin/Desktop/xml/employee.xml\");\n\t\t\tdoc.getDocumentElement().normalize();\n\t\t\tSystem.out.println(\"Root element: \" + doc.getDocumentElement().getNodeName());\n\t\t\tNodeList nodeList = doc.getElementsByTagName(\"employee\");\n\t\t\tSystem.out.println(\"Information of all employees\");\n\t\t\tfor(int i = 0; i < nodeList.getLength(); i++){\n\t\t\t\tNode node = nodeList.item(i);\n\t\t\t\tif(node.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement element = (Element) node;\n\t\t\t\t\tSystem.out.println(\"Employee id: \" + getValue(\"id\", element));\n\t\t\t\t\tSystem.out.println(\"Employee name: \" + getValue(\"name\", element));\n\t\t\t\t\tSystem.out.println(\"Employee age: \" + getValue(\"age\", element));\n\t\t\t\t\tSystem.out.println(\"Employee salary: \" + getValue(\"salary\", element));\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\tpublic static String getValue(String tag, Element element){\n\t\tNodeList nodeList = element.getElementsByTagName(tag).item(0).getChildNodes();\n\t\tNode node = nodeList.item(0);\n\t\treturn node.getNodeValue();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder db = dbf.newDocumentBuilder();\n\t\t\tDocument doc = db.parse(\"/home/saurabh/Desktop/xml.xml\");\n\t\t\tdoc.getDocumentElement().normalize();\n\t\t\tSystem.out.println(\"Root element: \" + doc.getDocumentElement().getNodeName());\n\t\t\tNodeList nodeLst = doc.getElementsByTagName(\"student\");\n\t\t\tSystem.out.println(\"Information of all students\");\n\t\t\tfor(int s = 0; s < nodeLst.getLength(); s++){\n\t\t\t\tNode fstNode = nodeLst.item(s);\n\t\t\t\tif(fstNode.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement fstElmnt = (Element) fstNode;\n\t\t\t\t\tNodeList fstNmElmntLst = fstElmnt.getElementsByTagName(\"name\");\n\t\t\t\t\tElement fstNmElmnt = (Element) fstNmElmntLst.item(0);\n\t\t\t\t\tNodeList fstNm = fstNmElmnt.getChildNodes();\n\t\t\t\t\tSystem.out.println(\"Name: \" + ((Node)fstNm.item(0)).getNodeValue());\n\t\t\t\t\tNodeList lstNmElmntLst = fstElmnt.getElementsByTagName(\"lastname\");\n\t\t\t\t\tElement lstNmElmnt = (Element) lstNmElmntLst.item(0);\n\t\t\t\t\tNodeList lstNm = lstNmElmnt.getChildNodes();\n\t\t\t\t\tSystem.out.println(\"Last Name: \" + ((Node)lstNm.item(0)).getNodeValue());\n\t\t\t\t\tNodeList ageElmntLst = fstElmnt\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder db = dbf.newDocumentBuilder();\n\t\t\tDocument doc = db.parse(\"/home/sachin/Desktop/xml/student.xml\");\n\t\t\tdoc.getDocumentElement().normalize();\n\t\t\tSystem.out.println(\"Root element :\" + doc.getDocumentElement().getNodeName());\n\t\t\tNodeList nodeLst = doc.getElementsByTagName(\"student\");\n\t\t\tSystem.out.println(\"Information of all students\");\n\t\t\tfor(int s = 0; s < nodeLst.getLength(); s++){\n\t\t\t\tNode fstNode = nodeLst.item(s);\n\t\t\t\tif(fstNode.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement fstElmnt = (Element)fstNode;\n\t\t\t\t\tNodeList fstNm = fstElmnt.getElementsByTagName(\"name\");\n\t\t\t\t\tElement fstNmElmnt = (Element)fstNm.item(0);\n\t\t\t\t\tNodeList fstNmNl = fstNmElmnt.getChildNodes();\n\t\t\t\t\tSystem.out.println(\"Name : \" + ((Node)fstNmNl.item(0)).getNodeValue());\n\t\t\t\t\tNodeList lstNm = fstElmnt.getElementsByTagName(\"age\");\n\t\t\t\t\tElement lstNmElmnt = (Element)lstNm.item(0);\n\t\t\t\t\tNodeList lstNmNl = lstNmElmnt.getChildNodes();\n\t\t\t\t\tSystem.out.println(\"Age : \" + ((Node)lstNmNl.item(0)).getNodeValue());\n\t\t\t\t\tNodeList email = fstElmnt.getElementsByTagName(\"email\");\n\t\t\t\t\tElement email\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder builder = factory.newDocumentBuilder();\n\t\t\tDocument doc = builder.parse(\"/home/sachin/Desktop/xml/employee.xml\");\n\t\t\tElement root = doc.getDocumentElement();\n\t\t\tNodeList list = root.getChildNodes();\n\t\t\tfor(int i=0;i<list.getLength();i++){\n\t\t\t\tNode node = list.item(i);\n\t\t\t\tif(node.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement element = (Element)node;\n\t\t\t\t\tSystem.out.println(element.getTagName()+\" : \"+element.getTextContent());\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder db = dbf.newDocumentBuilder();\n\t\t\tDocument doc = db.parse(\"/home/siva/Desktop/xml/employee.xml\");\n\t\t\tdoc.getDocumentElement().normalize();\n\t\t\tSystem.out.println(\"Root element: \" + doc.getDocumentElement().getNodeName());\n\t\t\tNodeList nodeLst = doc.getElementsByTagName(\"employee\");\n\t\t\tSystem.out.println(\"Information of all employees\");\n\t\t\tfor(int s=0;s<nodeLst.getLength();s++){\n\t\t\t\tNode fstNode = nodeLst.item(s);\n\t\t\t\tif(fstNode.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement fstElmnt = (Element)fstNode;\n\t\t\t\t\tNodeList fstNm = fstElmnt.getElementsByTagName(\"firstname\");\n\t\t\t\t\tElement fstNmElmnt = (Element)fstNm.item(0);\n\t\t\t\t\tNodeList fstNmNd = fstNmElmnt.getChildNodes();\n\t\t\t\t\tSystem.out.println(\"First name : \" + ((Node)fstNmNd.item(0)).getNodeValue());\n\t\t\t\t\tNodeList lstNm = fstElmnt.getElementsByTagName(\"lastname\");\n\t\t\t\t\tElement lstNmElmnt = (Element)lstNm.item(0);\n\t\t\t\t\tNodeList lstNmNd = lstNmElmnt.getChildNodes();\n\t\t\t\t\tSystem.out.println(\"Last name : \" + ((Node)lstNmNd.item(0)).getNodeValue());\n\t\t\t\t\tNodeList job = fstElmnt.getElementsByTagName(\"job\");\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder builder = factory.newDocumentBuilder();\n\t\t\tDocument document = builder.parse(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.xml\");\n\t\t\tElement root = document.getDocumentElement();\n\t\t\tNodeList list = root.getElementsByTagName(\"student\");\n\t\t\tfor(int i=0;i<list.getLength();i++){\n\t\t\t\tElement element = (Element)list.item(i);\n\t\t\t\tString name = element.getAttribute(\"name\");\n\t\t\t\tString age = element.getAttribute(\"age\");\n\t\t\t\tSystem.out.println(name+\":\"+age);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder builder = factory.newDocumentBuilder();\n\t\t\tDocument doc = builder.parse(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.xml\");\n\t\t\tNodeList list = doc.getElementsByTagName(\"student\");\n\t\t\tfor(int i=0;i<list.getLength();i++){\n\t\t\t\tNode node = list.item(i);\n\t\t\t\tElement element = (Element)node;\n\t\t\t\tString name = element.getElementsByTagName(\"name\").item(0).getTextContent();\n\t\t\t\tString age = element.getElementsByTagName(\"age\").item(0).getTextContent();\n\t\t\t\tString\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder builder = factory.newDocumentBuilder();\n\t\t\tDocument doc = builder.parse(\"test.xml\");\n\t\t\tNodeList nodes = doc.getElementsByTagName(\"student\");\n\t\t\tfor(int i=0;i<nodes.getLength();i++){\n\t\t\t\tNode node = nodes.item(i);\n\t\t\t\tif(node.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tElement element = (Element)node;\n\t\t\t\t\tString name = element.getAttribute(\"name\");\n\t\t\t\t\tString age = element.getAttribute(\"age\");\n\t\t\t\t\tSystem.out.println(\"name:\"+name+\" age:\"+age);\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder builder = factory.newDocumentBuilder();\n\t\t\tDocument doc = builder.parse(\"/home/sachin/Desktop/test.xml\");\n\t\t\tNodeList list = doc.getElementsByTagName(\"student\");\n\t\t\tfor(int i=0;i<list.getLength();i++){\n\t\t\t\tNode node = list.item(i);\n\t\t\t\tElement element = (Element)node;\n\t\t\t\tSystem.out.println(\"Name: \"+element.getAttribute(\"name\"));\n\t\t\t\tSystem.out.println(\"Age: \"+element.getAttribute(\"age\"));\n\t\t\t\tSystem.out.println(\"Rollno: \"+element.getAttribute(\"rollno\"));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n\t\t\t\t\"<root>\\n\" +\n\t\t\t\t\"\t<node>\\n\" +\n\t\t\t\t\"\t\t<name>node1</name>\\n\" +\n\t\t\t\t\"\t\t<value>value1</value>\\n\" +\n\t\t\t\t\"\t</node>\\n\" +\n\t\t\t\t\"\t<node>\\n\" +\n\t\t\t\t\"\t\t<name>node2</name>\\n\" +\n\t\t\t\t\"\t\t<value>value2</value>\\n\" +\n\t\t\t\t\"\t</node>\\n\" +\n\t\t\t\t\"</root>\";\n\t\tDocument doc = null;\n\t\ttry{\n\t\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\t\tDocumentBuilder db = dbf.newDocumentBuilder();\n\t\t\tdoc = db.parse(new InputSource(new StringReader(xml)));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tNodeList nodes = doc.getElementsByTagName(\"node\");\n\t\tfor(int i = 0; i < nodes.getLength(); i++){\n\t\t\tNode node = nodes.item(i);\n\t\t\tNodeList childNodes = node.getChildNodes();\n\t\t\tfor(int j = 0; j < childNodes.getLength(); j++){\n\t\t\t\tNode childNode = childNodes.item(j);\n\t\t\t\tif(childNode.getNodeType() == Node.ELEMENT_NODE){\n\t\t\t\t\tSystem.out.println(childNode.getNodeName() + \":\" + childNode.getTextContent());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "629",
    "source": "soSearches",
    "language": "java",
    "query": "how to catch an exception java",
    "snippets": [
        "\tvoid method(){\n\t\ttry{\n\t\t\tthrow new Exception();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Exception caught\");\n\t\t}\n\t}\n}\n",
        "\tvoid m1(){\n\t\ttry{\n\t\t\tthrow new Exception();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Exception caught\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry{\n\t\t\tSystem.out.println(\"try\");\n\t\t\tthrow new Exception();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"catch\");\n\t\t}finally{\n\t\t\tSystem.out.println(\"finally\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "630",
    "source": "soSearches",
    "language": "java",
    "query": "how to read input stream java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStreamReader isr = new InputStreamReader(System.in);\n\t\t\tBufferedReader br = new BufferedReader(isr);\n\t\t\tSystem.out.println(\"Enter the name of the file\");\n\t\t\tString fileName = br.readLine();\n\t\t\tFileReader fr = new FileReader(fileName);\n\t\t\tBufferedReader br1 = new BufferedReader(fr);\n\t\t\tString line = br1.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tline = br1.readLine();\n\t\t\t}\n\t\t\tbr1.close();\n\t\t\tfr.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Error\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStreamReader isr = new InputStreamReader(System.in);\n\t\t\tBufferedReader br = new BufferedReader(isr);\n\t\t\tSystem.out.println(\"Enter your name\");\n\t\t\tString name = br.readLine();\n\t\t\tSystem.out.println(\"Hello \" + name);\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(\"Error\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStreamReader isr = new InputStreamReader(System.in);\n\t\t\tBufferedReader br = new BufferedReader(isr);\n\t\t\tSystem.out.println(\"Enter your name\");\n\t\t\tString name = br.readLine();\n\t\t\tSystem.out.println(\"Enter your age\");\n\t\t\tint age = Integer.parseInt(br.readLine());\n\t\t\tSystem.out.println(\"Enter your address\");\n\t\t\tString address = br.readLine();\n\t\t\tSystem.out.println(\"Enter your phone number\");\n\t\t\tlong phone = Long.parseLong(br.readLine());\n\t\t\tSystem.out.println(\"Enter your email\");\n\t\t\tString email = br.readLine();\n\t\t\tSystem.out.println(\"Enter your password\");\n\t\t\tString password = br.readLine();\n\t\t\tSystem.out.println(\"Enter your confirm password\");\n\t\t\tString confirm = br.readLine();\n\t\t\tif(password.equals(confirm)){\n\t\t\t\tSystem.out.println(\"Your name is \"+name);\n\t\t\t\tSystem.out.println(\"Your age is \"+age);\n\t\t\t\tSystem.out.println(\"Your address is \"+address);\n\t\t\t\tSystem.out.println(\"Your phone number is \"+phone);\n\t\t\t\tSystem.out.println(\"Your email is \"+email);\n\t\t\t\tSystem.out.println(\"Your password is \"+password);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"Password does not match\");\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStreamReader isr = new InputStreamReader(System.in);\n\t\t\tBufferedReader br = new BufferedReader(isr);\n\t\t\tString s = br.readLine();\n\t\t\tSystem.out.println(s);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStreamReader isr = new InputStreamReader(System.in);\n\t\t\tBufferedReader br = new BufferedReader(isr);\n\t\t\tString s = br.readLine();\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStream is = System.in;\n\t\t\tInputStreamReader isr = new InputStreamReader(is);\n\t\t\tBufferedReader br = new BufferedReader(isr);\n\t\t\tString s = br.readLine();\n\t\t\tSystem.out.println(s);\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStream is = System.in;\n\t\t\tInputStreamReader isr = new InputStreamReader(is);\n\t\t\tBufferedReader br = new BufferedReader(isr);\n\t\t\tString s = br.readLine();\n\t\t\tSystem.out.println(s);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStream is = System.in;\n\t\t\tInputStreamReader isr = new InputStreamReader(is);\n\t\t\tBufferedReader br = new BufferedReader(isr);\n\t\t\tString s = br.readLine();\n\t\t\tSystem.out.println(s);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tInputStream is = System.in;\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(is));\n\t\t\tString s = br.readLine();\n\t\t\tSystem.out.println(s);\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the number\");\n\t\tint n = sc.nextInt();\n\t\tSystem.out.println(\"Enter the string\");\n\t\tString s = sc.next();\n\t\tSystem.out.println(\"Enter the double\");\n\t\tdouble d = sc.nextDouble();\n\t\tSystem.out.println(\"Enter the boolean\");\n\t\tboolean b = sc.nextBoolean();\n\t\tSystem.out.println(\"Enter the char\");\n\t\tchar c = sc.next().charAt(0);\n\t\tSystem.out.println(\"Enter the float\");\n\t\tfloat f = sc.nextFloat();\n\t\tSystem.out.println(\"Enter the long\");\n\t\tlong l = sc.nextLong();\n\t\tSystem.out.println(\"Enter the short\");\n\t\tshort s1 = sc.nextShort();\n\t\tSystem.out.println(\"Enter the byte\");\n\t\tbyte b1 = sc.nextByte();\n\t\tSystem.out.println(\"Enter the int\");\n\t\tint i = sc.nextInt();\n\t\tSystem.out.println(\"Enter the String\");\n\t\tString s2 = sc.next();\n\t\tSystem.out.println(\"Enter the double\");\n\t\tdouble d1 = sc.nextDouble();\n\t\tSystem.out.println(\"Enter the boolean\");\n\t\tboolean b2 = sc.nextBoolean();\n\t\tSystem.out.println(\"Enter the char\");\n\t\tchar c1 = sc.next().charAt(0);\n\t\tSystem.out.println(\"Enter the float\");\n\t\tfloat f1 = sc.nextFloat();\n\t\tSystem.out.println(\"Enter the long\");\n\t\tlong l1 = sc.nextLong();\n\t\tSystem.out.println(\"Enter the short\");\n\t\tshort s2 = sc.nextShort();\n\t\tSystem.out.println(\"Enter the byte\");\n\t\tbyte b2 = sc.nextByte();\n\t\tSystem.out.println(\"Enter the int\");\n\t\tint i1 = sc.next\n"
    ],
    "results": 10
},{
    "id": "631",
    "source": "soSearches",
    "language": "java",
    "query": "how to write class to txt file in java",
    "snippets": [
        "\tvoid writeToFile(String fileName, String content){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(fileName);\n\t\t\tfw.write(content);\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid writeToFile(String fileName, String content){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(fileName);\n\t\t\tfw.write(content);\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid writeToFile(String fileName, String text){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(fileName);\n\t\t\tfw.write(text);\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw=new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\java.txt\");\n\t\t\tfw.write(\"hello\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "632",
    "source": "soSearches",
    "language": "java",
    "query": "how to count number of objects created in subclass in java",
    "snippets": [
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz constructor\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz created\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "633",
    "source": "soSearches",
    "language": "java",
    "query": "how to add text to an image in java?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g = image.createGraphics();\n\t\tg.setColor(Color.RED);\n\t\tg.drawString(\"Hello World\", 10, 50);\n\t\tg.dispose();\n\t\ttry{\n\t\t\tImageIO.write(image, \"png\", new File(\"image.png\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g = image.createGraphics();\n\t\tg.setColor(Color.BLACK);\n\t\tg.fillRect(0, 0, 100, 100);\n\t\tg.setColor(Color.WHITE);\n\t\tg.drawString(\"Hello World\", 10, 50);\n\t\tg.dispose();\n\t\ttry{\n\t\t\tImageIO.write(image, \"png\", new File(\"hello.png\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g = image.createGraphics();\n\t\tg.setColor(Color.BLUE);\n\t\tg.drawString(\"Hello World\", 10, 50);\n\t\tg.dispose();\n\t\ttry{\n\t\t\tImageIO.write(image, \"png\", new File(\"hello.png\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g2d = image.createGraphics();\n\t\tg2d.setColor(Color.BLACK);\n\t\tg2d.fillRect(0, 0, 100, 100);\n\t\tg2d.setColor(Color.WHITE);\n\t\tg2d.setFont(new Font(\"Arial\", Font.BOLD, 20));\n\t\tg2d.drawString(\"Hello World\", 10, 50);\n\t\tg2d.dispose();\n\t\ttry{\n\t\t\tImageIO.write(image, \"png\", new File(\"hello.png\"));\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g = image.createGraphics();\n\t\tg.setColor(Color.BLACK);\n\t\tg.fillRect(0, 0, 100, 100);\n\t\tg.setColor(Color.WHITE);\n\t\tg.drawString(\"Hello World\", 10, 10);\n\t\tg.dispose();\n\t\ttry{\n\t\t\tImageIO.write(image, \"png\", new File(\"test.png\"));\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g2d = image.createGraphics();\n\t\tg2d.setColor(Color.BLACK);\n\t\tg2d.fillRect(0, 0, 100, 100);\n\t\tg2d.setColor(Color.WHITE);\n\t\tg2d.drawString(\"Hello World\", 10, 10);\n\t\tg2d.dispose();\n\t\ttry{\n\t\t\tImageIO.write(image, \"png\", new File(\"image.png\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g2d = image.createGraphics();\n\t\tg2d.setColor(Color.BLACK);\n\t\tg2d.fillRect(0, 0, 100, 100);\n\t\tg2d.setColor(Color.WHITE);\n\t\tg2d.drawString(\"Hello World\", 10, 50);\n\t\tg2d.dispose();\n\t\ttry{\n\t\t\tImageIO.write(image, \"png\", new File(\"hello.png\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage img = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g2d = img.createGraphics();\n\t\tg2d.setColor(Color.BLACK);\n\t\tg2d.drawString(\"Hello World\", 10, 50);\n\t\tg2d.dispose();\n\t\ttry{\n\t\t\tImageIO.write(img, \"png\", new File(\"hello.png\"));\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tBufferedImage image = ImageIO.read(new File(\"/Users/james/Desktop/test.png\"));\n\t\t\tGraphics2D g = image.createGraphics();\n\t\t\tg.setColor(Color.RED);\n\t\t\tg.setFont(new Font(\"TimesRoman\", Font.BOLD, 20));\n\t\t\tg.drawString(\"Hello World\", 10, 10);\n\t\t\tg.dispose();\n\t\t\tImageIO.write(image, \"png\", new File(\"/Users/james/Desktop/test2.png\"));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "634",
    "source": "soSearches",
    "language": "java",
    "query": "how to efficiently iterate over each entry in a java map?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tMap<String,String> map = new HashMap<String,String>();\n\t\tmap.put(\"a\",\"a\");\n\t\tmap.put(\"b\",\"b\");\n\t\tmap.put(\"c\",\"c\");\n\t\tmap.put(\"d\",\"d\");\n\t\tmap.put(\"e\",\"e\");\n\t\tmap.put(\"f\",\"f\");\n\t\tmap.put(\"g\",\"g\");\n\t\tmap.put(\"h\",\"h\");\n\t\tmap.put(\"i\",\"i\");\n\t\tmap.put(\"j\",\"j\");\n\t\tmap.put(\"k\",\"k\");\n\t\tmap.put(\"l\",\"l\");\n\t\tmap.put(\"m\",\"m\");\n\t\tmap.put(\"n\",\"n\");\n\t\tmap.put(\"o\",\"o\");\n\t\tmap.put(\"p\",\"p\");\n\t\tmap.put(\"q\",\"q\");\n\t\tmap.put(\"r\",\"r\");\n\t\tmap.put(\"s\",\"s\");\n\t\tmap.put(\"t\",\"t\");\n\t\tmap.put(\"u\",\"u\");\n\t\tmap.put(\"v\",\"v\");\n\t\tmap.put(\"w\",\"w\");\n\t\tmap.put(\"x\",\"x\");\n\t\tmap.put(\"y\",\"y\");\n\t\tmap.put(\"z\",\"z\");\n\t\tmap.put(\"A\",\"A\");\n\t\tmap.put(\"B\",\"B\");\n\t\tmap.put(\"C\",\"C\");\n\t\tmap.put(\"D\",\"D\");\n\t\tmap.put(\"E\",\"E\");\n\t\tmap.put(\"F\",\"F\");\n\t\tmap.put(\"G\",\"G\");\n\t\tmap.put(\"H\",\"H\");\n\t\tmap.put(\"I\",\"I\");\n\t\tmap.put(\"J\",\"J\");\n\t\tmap.put(\"K\",\"K\");\n\t\tmap.put(\"L\",\"L\");\n\t\tmap.put(\"M\",\"M\");\n\t\tmap.put(\"N\",\"N\");\n\t\tmap.put(\"O\",\"O\");\n\t\tmap.put(\"P\",\"P\");\n\t\tmap.put(\"Q\n",
        "\tstatic void main(String[] args){\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"a\", \"A\");\n\t\tmap.put(\"b\", \"B\");\n\t\tmap.put(\"c\", \"C\");\n\t\tmap.put(\"d\", \"D\");\n\t\tmap.put(\"e\", \"E\");\n\t\tmap.put(\"f\", \"F\");\n\t\tmap.put(\"g\", \"G\");\n\t\tmap.put(\"h\", \"H\");\n\t\tmap.put(\"i\", \"I\");\n\t\tmap.put(\"j\", \"J\");\n\t\tmap.put(\"k\", \"K\");\n\t\tmap.put(\"l\", \"L\");\n\t\tmap.put(\"m\", \"M\");\n\t\tmap.put(\"n\", \"N\");\n\t\tmap.put(\"o\", \"O\");\n\t\tmap.put(\"p\", \"P\");\n\t\tmap.put(\"q\", \"Q\");\n\t\tmap.put(\"r\", \"R\");\n\t\tmap.put(\"s\", \"S\");\n\t\tmap.put(\"t\", \"T\");\n\t\tmap.put(\"u\", \"U\");\n\t\tmap.put(\"v\", \"V\");\n\t\tmap.put(\"w\", \"W\");\n\t\tmap.put(\"x\", \"X\");\n\t\tmap.put(\"y\", \"Y\");\n\t\tmap.put(\"z\", \"Z\");\n\t\t\n\t\tfor(Map.Entry<String, String> entry : map.entrySet()){\n\t\t\tSystem.out.println(entry.getKey() + \" \" + entry.getValue());\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"a\", \"A\");\n\t\tmap.put(\"b\", \"B\");\n\t\tmap.put(\"c\", \"C\");\n\t\tmap.put(\"d\", \"D\");\n\t\tmap.put(\"e\", \"E\");\n\t\tmap.put(\"f\", \"F\");\n\t\tmap.put(\"g\", \"G\");\n\t\tmap.put(\"h\", \"H\");\n\t\tmap.put(\"i\", \"I\");\n\t\tmap.put(\"j\", \"J\");\n\t\tmap.put(\"k\", \"K\");\n\t\tmap.put(\"l\", \"L\");\n\t\tmap.put(\"m\", \"M\");\n\t\tmap.put(\"n\", \"N\");\n\t\tmap.put(\"o\", \"O\");\n\t\tmap.put(\"p\", \"P\");\n\t\tmap.put(\"q\", \"Q\");\n\t\tmap.put(\"r\", \"R\");\n\t\tmap.put(\"s\", \"S\");\n\t\tmap.put(\"t\", \"T\");\n\t\tmap.put(\"u\", \"U\");\n\t\tmap.put(\"v\", \"V\");\n\t\tmap.put(\"w\", \"W\");\n\t\tmap.put(\"x\", \"X\");\n\t\tmap.put(\"y\", \"Y\");\n\t\tmap.put(\"z\", \"Z\");\n\t\tmap.put(\"1\", \"1\");\n\t\tmap.put(\"2\", \"2\");\n\t\tmap.put(\"3\", \"3\");\n\t\tmap.put(\"4\", \"4\");\n\t\tmap.put(\"5\", \"5\");\n\t\tmap.put(\"6\", \"6\");\n\t\tmap.put(\"7\", \"7\");\n\t\tmap.put(\"8\", \"8\");\n\t\tmap.put(\"9\", \"9\");\n\t\tmap.put(\"0\", \"0\");\n\t\tmap.put(\" \", \" \");\n\t\tmap.put(\".\", \".\");\n\t\tmap.put(\",\", \",\");\n\t\tmap\n",
        "\tvoid method(){\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"key1\", \"value1\");\n\t\tmap.put(\"key2\", \"value2\");\n\t\tmap.put(\"key3\", \"value3\");\n\t\tfor(Map.Entry<String, String> entry : map.entrySet()){\n\t\t\tSystem.out.println(entry.getKey() + \" \" + entry.getValue());\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"1\", \"a\");\n\t\tmap.put(\"2\", \"b\");\n\t\tmap.put(\"3\", \"c\");\n\t\tmap.put(\"4\", \"d\");\n\t\tmap.put(\"5\", \"e\");\n\t\tmap.put(\"6\", \"f\");\n\t\tmap.put(\"7\", \"g\");\n\t\tmap.put(\"8\", \"h\");\n\t\tmap.put(\"9\", \"i\");\n\t\tmap.put(\"10\", \"j\");\n\t\tmap.put(\"11\", \"k\");\n\t\tmap.put(\"12\", \"l\");\n\t\tmap.put(\"13\", \"m\");\n\t\tmap.put(\"14\", \"n\");\n\t\tmap.put(\"15\", \"o\");\n\t\tmap.put(\"16\", \"p\");\n\t\tmap.put(\"17\", \"q\");\n\t\tmap.put(\"18\", \"r\");\n\t\tmap.put(\"19\", \"s\");\n\t\tmap.put(\"20\", \"t\");\n\t\tmap.put(\"21\", \"u\");\n\t\tmap.put(\"22\", \"v\");\n\t\tmap.put(\"23\", \"w\");\n\t\tmap.put(\"24\", \"x\");\n\t\tmap.put(\"25\", \"y\");\n\t\tmap.put(\"26\", \"z\");\n\t\tmap.put(\"27\", \"A\");\n\t\tmap.put(\"28\", \"B\");\n\t\tmap.put(\"29\", \"C\");\n\t\tmap.put(\"30\", \"D\");\n\t\tmap.put(\"31\", \"E\");\n\t\tmap.put(\"32\", \"F\");\n\t\tmap.put(\"33\", \"G\");\n\t\tmap.put(\"34\", \"H\");\n\t\tmap.put(\"35\", \"I\");\n\t\tmap.put(\"36\", \"J\");\n\t\tmap.put(\"37\", \"K\");\n\t\tmap.put(\"38\", \"L\");\n\t\tmap.put(\"39\", \"M\");\n",
        "\tstatic void main(String[] args){\n\t\tMap<String,String> map = new HashMap<String,String>();\n\t\tmap.put(\"a\",\"1\");\n\t\tmap.put(\"b\",\"2\");\n\t\tmap.put(\"c\",\"3\");\n\t\tmap.put(\"d\",\"4\");\n\t\tmap.put(\"e\",\"5\");\n\t\tmap.put(\"f\",\"6\");\n\t\tmap.put(\"g\",\"7\");\n\t\tmap.put(\"h\",\"8\");\n\t\tmap.put(\"i\",\"9\");\n\t\tmap.put(\"j\",\"10\");\n\t\tmap.put(\"k\",\"11\");\n\t\tmap.put(\"l\",\"12\");\n\t\tmap.put(\"m\",\"13\");\n\t\tmap.put(\"n\",\"14\");\n\t\tmap.put(\"o\",\"15\");\n\t\tmap.put(\"p\",\"16\");\n\t\tmap.put(\"q\",\"17\");\n\t\tmap.put(\"r\",\"18\");\n\t\tmap.put(\"s\",\"19\");\n\t\tmap.put(\"t\",\"20\");\n\t\tmap.put(\"u\",\"21\");\n\t\tmap.put(\"v\",\"22\");\n\t\tmap.put(\"w\",\"23\");\n\t\tmap.put(\"x\",\"24\");\n\t\tmap.put(\"y\",\"25\");\n\t\tmap.put(\"z\",\"26\");\n\t\tSet<String> keys = map.keySet();\n\t\tIterator<String> it = keys.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tString key = it.next();\n\t\t\tSystem.out.println(key + \":\" + map.get(key));\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tMap<String,String> map = new HashMap<String,String>();\n\t\tmap.put(\"a\",\"b\");\n\t\tmap.put(\"c\",\"d\");\n\t\tmap.put(\"e\",\"f\");\n\t\tfor(Map.Entry<String,String> entry:map.entrySet()){\n\t\t\tSystem.out.println(entry.getKey()+\" \"+entry.getValue());\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "635",
    "source": "soSearches",
    "language": "java",
    "query": "how to decide type of class field variables in java",
    "snippets": [
        "\tint a;\n\tint b;\n\tint c;\n\tint d;\n\tint e;\n\tint f;\n\tint g;\n\tint h;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\tint m;\n\tint n;\n\tint o;\n\tint p;\n\tint q;\n\tint r;\n\tint s;\n\tint t;\n\tint u;\n\tint v;\n\tint w;\n\tint x;\n\tint y;\n\tint z;\n\tint aa;\n\tint bb;\n\tint cc;\n\tint dd;\n\tint ee;\n\tint ff;\n\tint gg;\n\tint hh;\n\tint ii;\n\tint jj;\n\tint kk;\n\tint ll;\n\tint mm;\n\tint nn;\n\tint oo;\n\tint pp;\n\tint qq;\n\tint rr;\n\tint ss;\n\tint tt;\n\tint uu;\n\tint vv;\n\tint ww;\n\tint xx;\n\tint yy;\n\tint zz;\n\tint aaa;\n\tint bbb;\n\tint ccc;\n\tint ddd;\n\tint eee;\n\tint fff;\n\tint ggg;\n\tint hhh;\n\tint iii;\n"
    ],
    "results": 10
},{
    "id": "636",
    "source": "soSearches",
    "language": "java",
    "query": "how to send pdf files through socket in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",1234);\n\t\t\tFileInputStream fis=new FileInputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\socket\\\\socket.pdf\");\n\t\t\tbyte[] b=new byte[1024];\n\t\t\tint count;\n\t\t\twhile((count=fis.read(b))!=-1){\n\t\t\t\ts.getOutputStream().write(b,0,count);\n\t\t\t}\n\t\t\ts.close();\n\t\t\tfis.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString host=\"localhost\";\n\t\t\tint port=8080;\n\t\t\tSocket socket=new Socket(host,port);\n\t\t\tSystem.out.println(\"Connected to server\");\n\t\t\tFile file=new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.pdf\");\n\t\t\tFileInputStream fis=new FileInputStream(file);\n\t\t\tbyte[] buffer=new byte[(int)file.length()];\n\t\t\tfis.read(buffer);\n\t\t\tOutputStream os=socket.getOutputStream();\n\t\t\tos.write(buffer);\n\t\t\tos.close();\n\t\t\tfis.close();\n\t\t\tsocket.close();\n\t\t\tSystem.out.println(\"File sent to server\");\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",8080);\n\t\t\tDataOutputStream dout=new DataOutputStream(s.getOutputStream());\n\t\t\tFileInputStream fin=new FileInputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\java.pdf\");\n\t\t\tint ch;\n\t\t\twhile((ch=fin.read())!=-1){\n\t\t\t\tdout.write(ch);\n\t\t\t}\n\t\t\tfin.close();\n\t\t\tdout.close();\n\t\t\ts.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",1234);\n\t\t\tFile f=new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\socket\\\\socket.pdf\");\n\t\t\tFileInputStream fis=new FileInputStream(f);\n\t\t\tbyte[] b=new byte[(int)f.length()];\n\t\t\tfis.read(b);\n\t\t\tOutputStream os=s.getOutputStream();\n\t\t\tos.write(b);\n\t\t\tos.close();\n\t\t\tfis.close();\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",1234);\n\t\t\tFile f=new File(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\Java\\\\Java_Socket\\\\Java_Socket\\\\src\\\\test.pdf\");\n\t\t\tFileInputStream fis=new FileInputStream(f);\n\t\t\tbyte[] b=new byte[(int)f.length()];\n\t\t\tfis.read(b);\n\t\t\tOutputStream os=s.getOutputStream();\n\t\t\tos.write(b);\n\t\t\tos.close();\n\t\t\tfis.close();\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",1234);\n\t\t\tFile f=new File(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\java.pdf\");\n\t\t\tFileInputStream fis=new FileInputStream(f);\n\t\t\tDataInputStream dis=new DataInputStream(fis);\n\t\t\tDataOutputStream dos=new DataOutputStream(s.getOutputStream());\n\t\t\tint ch;\n\t\t\twhile((ch=dis.read())!=-1){\n\t\t\t\tdos.write(ch);\n\t\t\t}\n\t\t\tdis.close();\n\t\t\tdos.close();\n\t\t\ts.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",1234);\n\t\t\tFile f=new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.pdf\");\n\t\t\tFileInputStream fis=new FileInputStream(f);\n\t\t\tbyte[] b=new byte[(int)f.length()];\n\t\t\tfis.read(b);\n\t\t\tDataOutputStream dos=new DataOutputStream(s.getOutputStream());\n\t\t\tdos.write(b);\n\t\t\tfis.close();\n\t\t\tdos.close();\n\t\t\ts.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",1234);\n\t\t\tFile f=new File(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\Java\\\\Java_Socket\\\\Socket_Pdf.pdf\");\n\t\t\tFileInputStream fis=new FileInputStream(f);\n\t\t\tbyte[] b=new byte[(int)f.length()];\n\t\t\tfis.read(b);\n\t\t\tOutputStream os=s.getOutputStream();\n\t\t\tos.write(b);\n\t\t\tfis.close();\n\t\t\tos.close();\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",1234);\n\t\t\tFile f=new File(\"C:\\\\Users\\\\saurabh\\\\Desktop\\\\test.pdf\");\n\t\t\tFileInputStream fis=new FileInputStream(f);\n\t\t\tbyte[] b=new byte[(int)f.length()];\n\t\t\tfis.read(b);\n\t\t\tOutputStream os=s.getOutputStream();\n\t\t\tos.write(b);\n\t\t\tos.close();\n\t\t\tfis.close();\n\t\t\ts.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",8080);\n\t\t\tFile f=new File(\"C:\\\\Users\\\\Sai\\\\Desktop\\\\test.pdf\");\n\t\t\tFileInputStream fis=new FileInputStream(f);\n\t\t\tbyte[] b=new byte[(int)f.length()];\n\t\t\tfis.read(b);\n\t\t\tOutputStream os=s.getOutputStream();\n\t\t\tos.write(b);\n\t\t\tos.close();\n\t\t\tfis.close();\n\t\t\ts.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "637",
    "source": "soSearches",
    "language": "java",
    "query": "how to change edittext inputtype java",
    "snippets": [
        "\tvoid main(String[] args){\n\t\tEditText editText = new EditText(this);\n\t\teditText.setInputType(InputType.TYPE_CLASS_NUMBER);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tEditText editText = new EditText(MainActivity.this);\n\t\teditText.setInputType(InputType.TYPE_CLASS_NUMBER);\n\t}\n}\n",
        "\tvoid main(){\n\t\tEditText editText = (EditText)findViewById(R.id.editText1);\n\t\teditText.setInputType(InputType.TYPE_CLASS_NUMBER);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "638",
    "source": "soSearches",
    "language": "java",
    "query": "how to get time and convert to second in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tlong time = System.currentTimeMillis();\n\t\tSystem.out.println(time);\n\t\tlong second = time/1000;\n\t\tSystem.out.println(second);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDate date = new Date();\n\t\tSystem.out.println(date);\n\t\tlong time = date.getTime();\n\t\tSystem.out.println(time);\n\t\tlong second = time/1000;\n\t\tSystem.out.println(second);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.currentTimeMillis());\n\t\tSystem.out.println(System.currentTimeMillis()/1000);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tCalendar cal = Calendar.getInstance();\n\t\tint hour = cal.get(Calendar.HOUR_OF_DAY);\n\t\tint minute = cal.get(Calendar.MINUTE);\n\t\tint second = cal.get(Calendar.SECOND);\n\t\tint milli = cal.get(Calendar.MILLISECOND);\n\t\tSystem.out.println(\"Current time is \" + hour + \":\" + minute + \":\" + second + \":\" + milli);\n\t\tint totalSecond = hour * 60 * 60 + minute * 60 + second;\n\t\tSystem.out.println(\"Total seconds is \" + totalSecond);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "639",
    "source": "soSearches",
    "language": "java",
    "query": "how to display array java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5};\n\t\tfor(int i=0;i<a.length;i++){\n\t\t\tSystem.out.print(a[i]+\" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tSystem.out.println(arr[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5,6,7,8,9,10};\n\t\tfor(int i=0;i<a.length;i++){\n\t\t\tSystem.out.print(a[i]+\" \");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "640",
    "source": "soSearches",
    "language": "java",
    "query": "how to check whole number java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t\tif(c%2==0){\n\t\t\tSystem.out.println(\"even\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"odd\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = 30;\n\t\tint d = 40;\n\t\tint e = 50;\n\t\tint f = 60;\n\t\tint g = 70;\n\t\tint h = 80;\n\t\tint i = 90;\n\t\tint j = 100;\n\t\tint k = 110;\n\t\tint l = 120;\n\t\tint m = 130;\n\t\tint n = 140;\n\t\tint o = 150;\n\t\tint p = 160;\n\t\tint q = 170;\n\t\tint r = 180;\n\t\tint s = 190;\n\t\tint t = 200;\n\t\tint u = 210;\n\t\tint v = 220;\n\t\tint w = 230;\n\t\tint x = 240;\n\t\tint y = 250;\n\t\tint z = 260;\n\t\tint aa = 270;\n\t\tint bb = 280;\n\t\tint cc = 290;\n\t\tint dd = 300;\n\t\tint ee = 310;\n\t\tint ff = 320;\n\t\tint gg = 330;\n\t\tint hh = 340;\n\t\tint ii = 350;\n\t\tint jj = 360;\n\t\tint kk = 370;\n\t\tint ll = 380;\n\t\tint mm = 390;\n\t\tint nn = 400;\n\t\tint oo = 410;\n\t\tint pp = 420;\n\t\tint qq = 430;\n\t\tint rr = 440;\n\t\tint ss = 450;\n\t\tint tt = 460;\n\t\tint uu = 470;\n\t\tint vv = 480;\n\t\tint ww = 490;\n\t\tint xx = 500;\n\t\tint yy = 510;\n\t\tint zz = 520;\n\t\tint aaa = 530;\n\t\tint bbb = 540;\n\t\tint ccc = 550;\n\t\tint ddd = 560;\n\t\tint eee = 570;\n\t\tint fff = 580;\n"
    ],
    "results": 10
},{
    "id": "641",
    "source": "soSearches",
    "language": "java",
    "query": "how to expect no exceptionjava junit",
    "snippets": [
        "\tvoid method(){\n\t\tthrow new RuntimeException();\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "642",
    "source": "soSearches",
    "language": "java",
    "query": "how to use files in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(f);\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile file = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(file);\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"/home/user/file.txt\");\n\t\tSystem.out.println(f.exists());\n\t\tSystem.out.println(f.isFile());\n\t\tSystem.out.println(f.isDirectory());\n\t\tSystem.out.println(f.canRead());\n\t\tSystem.out.println(f.canWrite());\n\t\tSystem.out.println(f.canExecute());\n\t\tSystem.out.println(f.length());\n\t\tSystem.out.println(f.lastModified());\n\t\tSystem.out.println(f.getAbsolutePath());\n\t\tSystem.out.println(f.getName());\n\t\tSystem.out.println(f.getParent());\n\t\tSystem.out.println(f.getPath());\n\t\tSystem.out.println(f.getFreeSpace());\n\t\tSystem.out.println(f.getTotalSpace());\n\t\tSystem.out.println(f.getUsableSpace());\n\t\tSystem.out.println(f.isHidden());\n\t\tSystem.out.println(f.isAbsolute());\n\t\tSystem.out.println(f.isReadOnly());\n\t\tSystem.out.println(f.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"/home/sachin/Desktop/java/java.txt\");\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(f);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString s;\n\t\t\twhile((s=br.readLine())!=null){\n\t\t\t\tSystem.out.println(s);\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "643",
    "source": "soSearches",
    "language": "java",
    "query": "java - how to deserialize a json array with nested objects and lists?",
    "snippets": [
        "\tString name;\n\tpublic\n\tList<Clazz> children;\n\tpublic\n\tClazz(String name, List<Clazz> children){\n\t\tthis.name = name;\n\t\tthis.children = children;\n\t}\n}\n",
        "\tList<Nested> nested;\n\tpublic\n\tList<Nested> getNested(){\n\t\treturn nested;\n\t}\n\tpublic\n\tvoid setNested(List<Nested> nested){\n\t\tthis.nested = nested;\n\t}\n\tpublic\n\tstatic class Nested{\n\t\tpublic\n\t\tString name;\n\t\tpublic\n\t\tString getName(){\n\t\t\treturn name;\n\t\t}\n\t\tpublic\n\t\tvoid setName(String name){\n\t\t\tthis.name = name;\n\t\t}\n\t\tpublic\n\t\tList<String> list;\n\t\tpublic\n\t\tList<String> getList(){\n\t\t\treturn list;\n\t\t}\n\t\tpublic\n\t\tvoid setList(List<String> list){\n\t\t\tthis.list = list;\n\t\t}\n\t}\n}\n",
        "\tClazz(){\n\t}\n\tpublic\n\tClazz(String name, int age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tpublic\n\tString name;\n\tpublic\n\tint age;\n}\n",
        "\tList<String> list;\n\tpublic\n\tList<Nested> nested;\n\tpublic\n\tList<Nested> nested2;\n\tpublic\n\tList<Nested> nested3;\n\tpublic\n\tList<Nested> nested4;\n\tpublic\n\tList<Nested> nested5;\n\tpublic\n\tList<Nested> nested6;\n\tpublic\n\tList<Nested> nested7;\n\tpublic\n\tList<Nested> nested8;\n\tpublic\n\tList<Nested> nested9;\n\tpublic\n\tList<Nested> nested10;\n\tpublic\n\tList<Nested> nested11;\n\tpublic\n\tList<Nested> nested12;\n\tpublic\n\tList<Nested> nested13;\n\tpublic\n\tList<Nested> nested14;\n\tpublic\n\tList<Nested> nested15;\n\tpublic\n\tList<Nested> nested16;\n\tpublic\n\tList<Nested> nested17;\n\tpublic\n\tList<Nested> nested18;\n\tpublic\n\tList<Nested> nested19;\n\tpublic\n\tList<Nested> nested20;\n\tpublic\n\tList<Nested> nested21;\n\tpublic\n\tList<Nested> nested22;\n\tpublic\n\tList<Nested> nested23;\n\tpublic\n\tList<Nested> nested24;\n\tpublic\n\tList<Nested> nested25;\n\tpublic\n\tList<Nested> nested26;\n\tpublic\n\tList<Nested> nested27;\n\tpublic\n\tList<Nested> nested28;\n\tpublic\n\tList<Nested> nested29;\n\tpublic\n\tList<Nested> nested30;\n\tpublic\n\tList<Nested> nested31;\n\tpublic\n\tList<Nested> nested32;\n\tpublic\n\tList<Nested> nested33;\n\tpublic\n\tList<Nested> nested34;\n\tpublic\n\tList<Nested> nested35;\n\tpublic\n\tList<Nested> nested36;\n\tpublic\n\tList<Nested> nested37;\n\tpublic\n\tList<Nested> nested38\n",
        "\tList<Clazz> list;\n\tpublic\n\tClazz clazz;\n}\n",
        "\tList<NestedClazz> nestedClazzList;\n}\n",
        "\tList<NestedClazz> list;\n}\n"
    ],
    "results": 10
},{
    "id": "644",
    "source": "soSearches",
    "language": "java",
    "query": "how to incremwnt projects by one in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a = 10;\n\t\tint b = a++;\n\t\tSystem.out.println(a);\n\t\tSystem.out.println(b);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i=0;\n\t\ti++;\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "645",
    "source": "soSearches",
    "language": "java",
    "query": "how to json object to json file usig java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", new Integer(34));\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"married\", new Boolean(true));\n\t\tjsonObject.put(\"children\", new Integer(3));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Ford\").put(\"model\", \"Mustang\"));\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Dodge\").put(\"model\", \"Viper\"));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Ford\").put(\"model\", \"Mustang\"));\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Dodge\").put(\"model\", \"Viper\"));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Ford\").put(\"model\", \"Mustang\"));\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Dodge\").put(\"model\", \"Viper\"));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Ford\").put(\"model\", \"Mustang\"));\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Dodge\").put(\"model\", \"Viper\"));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Ford\").put(\"model\", \"Mustang\"));\n\t\tjsonObject.getJSONArray(\"cars\").put(new JSONObject().put(\"make\", \"Dodge\").\n",
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", new Integer(30));\n\t\tjsonObject.put(\"phone\", \"123-456-789\");\n\t\tjsonObject.put(\"address\", \"123 Main Street\");\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"state\", \"New York\");\n\t\tjsonObject.put(\"zip\", \"10001\");\n\t\tjsonObject.put(\"country\", \"USA\");\n\t\tjsonObject.put(\"email\", \"\n",
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", new Integer(34));\n\t\tjsonObject.put(\"city\", \"New York\");\n\t\tjsonObject.put(\"married\", new Boolean(true));\n\t\tjsonObject.put(\"children\", new Integer(3));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\tjsonObject.getJSONArray(\"cars\").add(\"BMW\");\n\t\tjsonObject.getJSONArray(\"cars\").add(\"Audi\");\n\t\tjsonObject.getJSONArray(\"cars\").add(\"Mercedes\");\n\t\tSystem.out.println(jsonObject.toJSONString());\n\t\ttry{\n\t\t\tFileWriter file = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\json.json\");\n\t\t\tfile.write(jsonObject.toJSONString());\n\t\t\tfile.flush();\n\t\t\tfile.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", new Integer(34));\n\t\tjsonObject.put(\"married\", new Boolean(true));\n\t\tjsonObject.put(\"children\", new Integer(3));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\tjsonObject.getJSONArray(\"cars\").add(\"Ford\");\n\t\tjsonObject.getJSONArray(\"cars\").add(\"BMW\");\n\t\tjsonObject.getJSONArray(\"cars\").add(\"Fiat\");\n\t\tSystem.out.println(jsonObject.toJSONString());\n\t\ttry{\n\t\t\tFileWriter file = new FileWriter(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\json.json\");\n\t\t\tfile.write(jsonObject.toJSONString());\n\t\t\tfile.flush();\n\t\t\tfile.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", new Integer(34));\n\t\tjsonObject.put(\"married\", new Boolean(true));\n\t\tjsonObject.put(\"children\", new Integer(3));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\tjsonObject.getJSONArray(\"cars\").add(\"Ford\");\n\t\tjsonObject.getJSONArray(\"cars\").add(\"BMW\");\n\t\tjsonObject.getJSONArray(\"cars\").add(\"Fiat\");\n\t\tjsonObject.getJSONArray(\"cars\").add(\"Volvo\");\n\t\tSystem.out.println(jsonObject.toJSONString());\n\t\ttry{\n\t\t\tFileWriter file = new FileWriter(\"C:\\\\Users\\\\user\\\\Desktop\\\\json.txt\");\n\t\t\tfile.write(jsonObject.toJSONString());\n\t\t\tfile.flush();\n\t\t\tfile.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"John\");\n\t\tjsonObject.put(\"age\", new Integer(30));\n\t\tjsonObject.put(\"married\", new Boolean(false));\n\t\tjsonObject.put(\"children\", new Integer(0));\n\t\tjsonObject.put(\"cars\", new JSONArray());\n\t\t\n\t\ttry{\n\t\t\tFileWriter file = new FileWriter(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\json.txt\");\n\t\t\tfile.write(jsonObject.toJSONString());\n\t\t\tfile.flush();\n\t\t\tfile.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Rajesh\");\n\t\tjsonObject.put(\"age\", \"25\");\n\t\tjsonObject.put(\"city\", \"Bangalore\");\n\t\tjsonObject.put(\"country\", \"India\");\n\t\tjsonObject.put(\"salary\", \"50000\");\n\t\tjsonObject.put(\"designation\", \"Software Engineer\");\n\t\tjsonObject.put(\"company\", \"Infosys\");\n\t\tjsonObject.put(\"email\", \"\n",
        "\tstatic void main(String[] args) {\n\t\tJSONObject jsonObject = new JSONObject();\n\t\tjsonObject.put(\"name\", \"Rajesh\");\n\t\tjsonObject.put(\"age\", \"25\");\n\t\tjsonObject.put(\"city\", \"Bangalore\");\n\t\tjsonObject.put(\"country\", \"India\");\n\t\tjsonObject.put(\"salary\", \"25000\");\n\t\t\n\t\ttry {\n\t\t\tFileWriter file = new FileWriter(\"C:\\\\Users\\\\Rajesh\\\\Desktop\\\\json.json\");\n\t\t\tfile.write(jsonObject.toJSONString());\n\t\t\tfile.flush();\n\t\t\tfile.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "646",
    "source": "soSearches",
    "language": "java",
    "query": "how to link javascrupt with node",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "647",
    "source": "soSearches",
    "language": "java",
    "query": "how to create a delete fields in java script with onclick button",
    "snippets": [
        "\tvoid deleteFields(){\n\t\tSystem.out.println(\"delete fields\");\n\t}\n}\n",
        "\tvoid deleteFields(){\n\t\tString[] fields = {\"field1\",\"field2\",\"field3\"};\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out.println(\"----------------\");\n\t\tfor(int i=0;i<fields.length;i++){\n\t\t\tSystem.out.println(fields[i]);\n\t\t}\n\t\tSystem.out\n",
        "\tvoid deleteFields(){\n\t\tvar button = document.getElementById(\"button\");\n\t\tbutton.onclick = function(){\n\t\t\tvar fields = document.getElementsByClassName(\"field\");\n\t\t\tfor(var i = 0; i < fields.length; i++){\n\t\t\t\tfields[i].remove();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid deleteFields(){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "648",
    "source": "soSearches",
    "language": "java",
    "query": "how to round the doubles in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tSystem.out.println(Math.round(d));\n\t\tSystem.out.println(Math.round(d*100)/100.0);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tSystem.out.println(Math.round(d));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.14159;\n\t\tdouble e = 3.14159;\n\t\tdouble f = 3.14159;\n\t\tdouble g = 3.14159;\n\t\tdouble h = 3.14159;\n\t\tdouble i = 3.14159;\n\t\tdouble j = 3.14159;\n\t\tdouble k = 3.14159;\n\t\tdouble l = 3.14159;\n\t\tdouble m = 3.14159;\n\t\tdouble n = 3.14159;\n\t\tdouble o = 3.14159;\n\t\tdouble p = 3.14159;\n\t\tdouble q = 3.14159;\n\t\tdouble r = 3.14159;\n\t\tdouble s = 3.14159;\n\t\tdouble t = 3.14159;\n\t\tdouble u = 3.14159;\n\t\tdouble v = 3.14159;\n\t\tdouble w = 3.14159;\n\t\tdouble x = 3.14159;\n\t\tdouble y = 3.14159;\n\t\tdouble z = 3.14159;\n\t\tdouble aa = 3.14159;\n\t\tdouble bb = 3.14159;\n\t\tdouble cc = 3.14159;\n\t\tdouble dd = 3.14159;\n\t\tdouble ee = 3.14159;\n\t\tdouble ff = 3.14159;\n\t\tdouble gg = 3.14159;\n\t\tdouble hh = 3.14159;\n\t\tdouble ii = 3.14159;\n\t\tdouble jj = 3.14159;\n\t\tdouble kk = 3.14159;\n\t\tdouble ll = 3.14159;\n\t\tdouble mm = 3.14159;\n\t\tdouble nn = 3.14159;\n\t\tdouble oo = 3.14159;\n\t\tdouble pp = 3.14159;\n\t\tdouble qq = 3.14159;\n\t\tdouble rr = 3.14159;\n\t\tdouble ss = 3.14159;\n\t\tdouble tt = 3.14159;\n\t\tdouble u\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tdouble d2 = 3.141592654;\n\t\tdouble d3 = 3.141592654;\n\t\tdouble d4 = 3.141592654;\n\t\tdouble d5 = 3.141592654;\n\t\tdouble d6 = 3.141592654;\n\t\tdouble d7 = 3.141592654;\n\t\tdouble d8 = 3.141592654;\n\t\tdouble d9 = 3.141592654;\n\t\tdouble d10 = 3.141592654;\n\t\tdouble d11 = 3.141592654;\n\t\tdouble d12 = 3.141592654;\n\t\tdouble d13 = 3.141592654;\n\t\tdouble d14 = 3.141592654;\n\t\tdouble d15 = 3.141592654;\n\t\tdouble d16 = 3.141592654;\n\t\tdouble d17 = 3.141592654;\n\t\tdouble d18 = 3.141592654;\n\t\tdouble d19 = 3.141592654;\n\t\tdouble d20 = 3.141592654;\n\t\tdouble d21 = 3.141592654;\n\t\tdouble d22 = 3.141592654;\n\t\tdouble d23 = 3.141592654;\n\t\tdouble d24 = 3.141592654;\n\t\tdouble d25 = 3.141592654;\n\t\tdouble d26 = 3.141592654;\n\t\tdouble d27 = 3.141592654;\n\t\tdouble d28 = 3.141592654;\n\t\tdouble d29 = 3.141592654;\n\t\tdouble d30 = 3.141592654;\n\t\tdouble d31 = 3.141592654;\n\t\tdouble d32 = 3.141592654;\n\t\tdouble d33 = 3.141592654;\n\t\tdouble d34 = 3.141592654;\n\t\tdouble d35 = 3.141592654;\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 0.123456789;\n\t\tSystem.out.println(Math.round(d*100)/100.0);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592653;\n\t\tdouble e = 3.141592653;\n\t\tdouble f = 3.141592653;\n\t\tdouble g = 3.141592653;\n\t\tdouble h = 3.141592653;\n\t\tdouble i = 3.141592653;\n\t\tdouble j = 3.141592653;\n\t\tdouble k = 3.141592653;\n\t\tdouble l = 3.141592653;\n\t\tdouble m = 3.141592653;\n\t\tdouble n = 3.141592653;\n\t\tdouble o = 3.141592653;\n\t\tdouble p = 3.141592653;\n\t\tdouble q = 3.141592653;\n\t\tdouble r = 3.141592653;\n\t\tdouble s = 3.141592653;\n\t\tdouble t = 3.141592653;\n\t\tdouble u = 3.141592653;\n\t\tdouble v = 3.141592653;\n\t\tdouble w = 3.141592653;\n\t\tdouble x = 3.141592653;\n\t\tdouble y = 3.141592653;\n\t\tdouble z = 3.141592653;\n\t\tdouble aa = 3.141592653;\n\t\tdouble bb = 3.141592653;\n\t\tdouble cc = 3.141592653;\n\t\tdouble dd = 3.141592653;\n\t\tdouble ee = 3.141592653;\n\t\tdouble ff = 3.141592653;\n\t\tdouble gg = 3.141592653;\n\t\tdouble hh = 3.141592653;\n\t\tdouble ii = 3.141592653;\n\t\tdouble jj = 3.141592653;\n\t\tdouble kk = 3.141592653;\n\t\tdouble ll = 3.141592653;\n\t\tdouble mm = 3.141592653;\n\t\tdouble nn = 3.141592653;\n"
    ],
    "results": 7
},{
    "id": "649",
    "source": "soSearches",
    "language": "java",
    "query": "how to check java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "650",
    "source": "soSearches",
    "language": "java",
    "query": "how to do random option on java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint random = (int)(Math.random()*10);\n\t\tSystem.out.println(random);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint x = (int) (Math.random()*10);\n\t\tSystem.out.println(x);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = (int)(Math.random()*10);\n\t\tSystem.out.println(a);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i = (int)Math.random()*10;\n\t\tSystem.out.println(i);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "651",
    "source": "soSearches",
    "language": "java",
    "query": "java  how to get file folder",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.txt\");\n\t\tSystem.out.println(f.getParent());\n\t\tSystem.out.println(f.getAbsolutePath());\n\t\tSystem.out.println(f.getName());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.txt\");\n\t\tSystem.out.println(f.getParent());\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tString path = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.txt\";\n\t\tString path2 = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.txt\";\n\t\tSystem.out.println(path.substring(0, path.lastIndexOf(\"\\\\\")));\n\t\tSystem.out.println(path2.substring(0, path2.lastIndexOf(\"\\\\\")));\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tFile file = new File(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.txt\");\n\t\tSystem.out.println(file.getParent());\n\t\tSystem.out.println(file.getAbsolutePath());\n\t\tSystem.out.println(file.getName());\n\t}\n}\n",
        "\tvoid getFileFolder(){\n\t\tFile f = new File(\".\");\n\t\tString[] files = f.list();\n\t\tfor(String s:files){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "652",
    "source": "soSearches",
    "language": "java",
    "query": "how to write a word in 2d using java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tchar[][] word = {{'a','b','c'},{'d','e','f'},{'g','h','i'}};\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tSystem.out.print(word[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar[][] word = new char[5][5];\n\t\tfor(int i=0;i<5;i++){\n\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\tword[i][j]=' ';\n\t\t\t}\n\t\t}\n\t\tword[0][0]='A';\n\t\tword[0][1]='B';\n\t\tword[0][2]='C';\n\t\tword[0][3]='D';\n\t\tword[0][4]='E';\n\t\tword[1][0]='F';\n\t\tword[1][1]='G';\n\t\tword[1][2]='H';\n\t\tword[1][3]='I';\n\t\tword[1][4]='J';\n\t\tword[2][0]='K';\n\t\tword[2][1]='L';\n\t\tword[2][2]='M';\n\t\tword[2][3]='N';\n\t\tword[2][4]='O';\n\t\tword[3][0]='P';\n\t\tword[3][1]='Q';\n\t\tword[3][2]='R';\n\t\tword[3][3]='S';\n\t\tword[3][4]='T';\n\t\tword[4][0]='U';\n\t\tword[4][1]='V';\n\t\tword[4][2]='W';\n\t\tword[4][3]='X';\n\t\tword[4][4]='Y';\n\t\tfor(int i=0;i<5;i++){\n\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\tSystem.out.print(word[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar[][] word = new char[5][5];\n\t\tword[0][0] = 'A';\n\t\tword[0][1] = 'B';\n\t\tword[0][2] = 'C';\n\t\tword[0][3] = 'D';\n\t\tword[0][4] = 'E';\n\t\tword[1][0] = 'F';\n\t\tword[1][1] = 'G';\n\t\tword[1][2] = 'H';\n\t\tword[1][3] = 'I';\n\t\tword[1][4] = 'J';\n\t\tword[2][0] = 'K';\n\t\tword[2][1] = 'L';\n\t\tword[2][2] = 'M';\n\t\tword[2][3] = 'N';\n\t\tword[2][4] = 'O';\n\t\tword[3][0] = 'P';\n\t\tword[3][1] = 'Q';\n\t\tword[3][2] = 'R';\n\t\tword[3][3] = 'S';\n\t\tword[3][4] = 'T';\n\t\tword[4][0] = 'U';\n\t\tword[4][1] = 'V';\n\t\tword[4][2] = 'W';\n\t\tword[4][3] = 'X';\n\t\tword[4][4] = 'Y';\n\t\tfor(int i = 0; i < 5; i++){\n\t\t\tfor(int j = 0; j < 5; j++){\n\t\t\t\tSystem.out.print(word[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar[][] word = {{'a','b','c','d'},{'e','f','g','h'},{'i','j','k','l'},{'m','n','o','p'}};\n\t\tfor(int i=0;i<word.length;i++){\n\t\t\tfor(int j=0;j<word[i].length;j++){\n\t\t\t\tSystem.out.print(word[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar[][] word = {{'a','b','c','d','e'},{'f','g','h','i','j'},{'k','l','m','n','o'},{'p','q','r','s','t'},{'u','v','w','x','y'}};\n\t\tint row = word.length;\n\t\tint col = word[0].length;\n\t\tint i = 0;\n\t\tint j = 0;\n\t\twhile(i<row){\n\t\t\twhile(j<col){\n\t\t\t\tSystem.out.print(word[i][j]);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\ti++;\n\t\t\tj = 0;\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "653",
    "source": "soSearches",
    "language": "java",
    "query": "how to check if a string is numeric or not in java",
    "snippets": [
        "\tstatic boolean isNumeric(String str){\n\t\ttry{\n\t\t\tDouble.parseDouble(str);\n\t\t}\n\t\tcatch(NumberFormatException nfe){\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n",
        "\tstatic boolean isNumeric(String str){\n\t\treturn str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"123\";\n\t\tSystem.out.println(s.matches(\"[0-9]+\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"123\";\n\t\tif(s.matches(\"[0-9]+\")){\n\t\t\tSystem.out.println(\"String is numeric\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"String is not numeric\");\n\t\t}\n\t}\n}\n",
        "\tstatic boolean isNumeric(String str){\n\t\ttry{\n\t\t\tDouble.parseDouble(str);\n\t\t\treturn true;\n\t\t}\n\t\tcatch(NumberFormatException nfe){\n\t\t\treturn false;\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "654",
    "source": "soSearches",
    "language": "java",
    "query": "how to fix socket refused error in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s = new Socket(\"localhost\",8080);\n\t\t\tSystem.out.println(\"Connected to server\");\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Error: \" + e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s = new Socket(\"localhost\",8080);\n\t\t\tSystem.out.println(\"Connected to server\");\n\t\t\ts.close();\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(\"Error connecting to server\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s = new Socket(\"localhost\",8080);\n\t\t\tSystem.out.println(\"Connected\");\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Error\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s = new Socket(\"localhost\",8080);\n\t\t\tSystem.out.println(\"Connected to server\");\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Error in connecting to server\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s = new Socket(\"localhost\",8080);\n\t\t\tSystem.out.println(\"Connected to server\");\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Error connecting to server\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry{\n\t\t\tSocket s = new Socket(\"localhost\",8080);\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s = new Socket(\"localhost\", 8080);\n\t\t\tSystem.out.println(\"Connected\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Socket refused\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "655",
    "source": "soSearches",
    "language": "java",
    "query": "java how to get date and time",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tDate date = new Date();\n\t\tSystem.out.println(date);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tDate d = new Date();\n\t\tSystem.out.println(d);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "656",
    "source": "soSearches",
    "language": "java",
    "query": "how to use boolean datatype in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tboolean b1 = true;\n\t\tboolean b2 = false;\n\t\tSystem.out.println(b1);\n\t\tSystem.out.println(b2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tboolean b=true;\n\t\tSystem.out.println(b);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "657",
    "source": "soSearches",
    "language": "java",
    "query": "how to verify a certificate using .cer file in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\t//create a keystore object\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\t//load the keystore\n\t\t\tks.load(new FileInputStream(\"mykeystore.jks\"), \"password\".toCharArray());\n\t\t\t//get the certificate from the keystore\n\t\t\tCertificate cert = ks.getCertificate(\"mycert\");\n\t\t\t//get the public key from the certificate\n\t\t\tPublicKey publicKey = cert.getPublicKey();\n\t\t\t//get the signature from the certificate\n\t\t\tSignature signature = Signature.getInstance(\"SHA1withRSA\");\n\t\t\tsignature.initVerify(publicKey);\n\t\t\t//get the data to be signed\n\t\t\tbyte[] data = \"Hello World\".getBytes();\n\t\t\t//sign the data\n\t\t\tsignature.update(data);\n\t\t\t//verify the signature\n\t\t\tboolean verified = signature.verify(cert.getSignature());\n\t\t\tSystem.out.println(\"verified: \" + verified);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\t//create a keystore object\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\t//load the keystore\n\t\t\tks.load(new FileInputStream(\"mykeystore.jks\"), \"password\".toCharArray());\n\t\t\t//get the certificate from the keystore\n\t\t\tCertificate cert = ks.getCertificate(\"mycert\");\n\t\t\t//get the public key from the certificate\n\t\t\tPublicKey publicKey = cert.getPublicKey();\n\t\t\t//get the certificate from the keystore\n\t\t\tCertificate cert2 = ks.getCertificate(\"mycert\");\n\t\t\t//get the public key from the certificate\n\t\t\tPublicKey publicKey2 = cert2.getPublicKey();\n\t\t\t//verify the certificate using the public key\n\t\t\tcert.verify(publicKey);\n\t\t\t//verify the certificate using the public key\n\t\t\tcert2.verify(publicKey2);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\t//create a keystore object\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\t//load the keystore\n\t\t\tks.load(new FileInputStream(\"keystore.jks\"), \"password\".toCharArray());\n\t\t\t//get the certificate from the keystore\n\t\t\tCertificate cert = ks.getCertificate(\"alias\");\n\t\t\t//get the public key from the certificate\n\t\t\tPublicKey publicKey = cert.getPublicKey();\n\t\t\t//get the private key from the keystore\n\t\t\tPrivateKey privateKey = (PrivateKey)ks.getKey(\"alias\", \"password\".toCharArray());\n\t\t\t//create a signature object\n\t\t\tSignature signature = Signature.getInstance(\"SHA1withRSA\");\n\t\t\t//initialize the signature object with the private key\n\t\t\tsignature.initSign(privateKey);\n\t\t\t//sign the data\n\t\t\tsignature.update(\"data\".getBytes());\n\t\t\t//get the signature\n\t\t\tbyte[] signatureBytes = signature.sign();\n\t\t\t//create a signature object\n\t\t\tSignature signature2 = Signature.getInstance(\"SHA1withRSA\");\n\t\t\t//initialize the signature object with the public key\n\t\t\tsignature2.initVerify(publicKey);\n\t\t\t//verify the signature\n\t\t\tsignature2.update(\"data\".getBytes());\n\t\t\t//verify the signature\n\t\t\tboolean verified = signature2.verify(signatureBytes);\n\t\t\tSystem.out.println(verified);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\certificate.cer\");\n\t\t\tCertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n\t\t\tX509Certificate cert = (X509Certificate)cf.generateCertificate(fis);\n\t\t\tSystem.out.println(\"Certificate details:\");\n\t\t\tSystem.out.println(\"Subject DN: \" + cert.getSubjectDN());\n\t\t\tSystem.out.println(\"Issuer DN: \" + cert.getIssuerDN());\n\t\t\tSystem.out.println(\"Serial number: \" + cert.getSerialNumber());\n\t\t\tSystem.out.println(\"Valid from: \" + cert.getNotBefore());\n\t\t\tSystem.out.println(\"Valid to: \" + cert.getNotAfter());\n\t\t\tSystem.out.println(\"Signature algorithm: \" + cert.getSignatureAlgorithm());\n\t\t\tSystem.out.println(\"Hash algorithm: \" + cert.getEncoded());\n\t\t\tSystem.out.println(\"Public key: \" + cert.getPublicKey());\n\t\t\tSystem.out.println(\"Version: \" + cert.getVersion());\n\t\t\tSystem.out.println(\"Fingerprint: \" + cert.getFingerprint());\n\t\t\tSystem.out.println(\"Signature: \" + cert.getSignature());\n\t\t\tSystem.out.println(\"Signature algorithm: \" + cert.getSignatureAlgorithm());\n\t\t\tSystem.out.println(\"Hash algorithm: \" + cert.getEncoded());\n\t\t\tSystem.out.println(\"Public key: \" + cert.getPublicKey());\n\t\t\tSystem.out.println(\"Version: \" + cert.getVersion());\n\t\t\tSystem.out.println(\"Fingerprint: \" + cert.getFingerprint());\n\t\t\tSystem.out.println(\"Signature: \" + cert.getSignature());\n\t\t\tSystem.out.println(\"Signature algorithm: \" + cert.getSignatureAlgorithm());\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\certificate.cer\");\n\t\t\tCertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n\t\t\tX509Certificate cert = (X509Certificate)cf.generateCertificate(fis);\n\t\t\tSystem.out.println(\"Certificate details:\");\n\t\t\tSystem.out.println(\"Subject DN: \" + cert.getSubjectDN());\n\t\t\tSystem.out.println(\"Issuer DN: \" + cert.getIssuerDN());\n\t\t\tSystem.out.println(\"Serial number: \" + cert.getSerialNumber());\n\t\t\tSystem.out.println(\"Valid from: \" + cert.getNotBefore());\n\t\t\tSystem.out.println(\"Valid to: \" + cert.getNotAfter());\n\t\t\tSystem.out.println(\"Signature algorithm: \" + cert.getSigAlgName());\n\t\t\tSystem.out.println(\"Hash algorithm: \" + cert.getPublicKey().getAlgorithm());\n\t\t\tSystem.out.println(\"Key size: \" + cert.getPublicKey().getEncoded().length * 8);\n\t\t\tSystem.out.println(\"Version: \" + cert.getVersion());\n\t\t\tSystem.out.println(\"---------------------------------\");\n\t\t\tSystem.out.println(\"Fingerprint:\");\n\t\t\tMessageDigest md = MessageDigest.getInstance(\"SHA-1\");\n\t\t\tbyte[] der = cert.getEncoded();\n\t\t\tmd.update(der);\n\t\t\tbyte[] digest = md.digest();\n\t\t\tfor(byte b : digest){\n\t\t\t\tSystem.out.format(\"%02x\", b);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------------------\");\n\t\t\tSystem.out.println(\"Public key:\");\n\t\t\tbyte[] key = cert.getPublicKey().getEncoded();\n\t\t\tfor(byte b : key){\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\t//get the certificate from the file\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\certificate.cer\");\n\t\t\tCertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n\t\t\tX509Certificate cert = (X509Certificate)cf.generateCertificate(fis);\n\t\t\t//get the public key from the certificate\n\t\t\tPublicKey publicKey = cert.getPublicKey();\n\t\t\t//get the private key from the certificate\n\t\t\tPrivateKey privateKey = cert.getPrivateKey();\n\t\t\t//verify the certificate\n\t\t\tcert.verify(publicKey);\n\t\t\tSystem.out.println(\"Certificate verified\");\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Certificate not verified\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\t//get the certificate from the file\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Public\\\\Documents\\\\test.cer\");\n\t\t\tCertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n\t\t\tX509Certificate cert = (X509Certificate)cf.generateCertificate(fis);\n\t\t\t//get the public key from the certificate\n\t\t\tPublicKey pk = cert.getPublicKey();\n\t\t\t//get the private key from the file\n\t\t\tFileInputStream fis2 = new FileInputStream(\"C:\\\\Users\\\\Public\\\\Documents\\\\test.key\");\n\t\t\tPKCS8EncodedKeySpec pkcs = new PKCS8EncodedKeySpec(fis2.readAllBytes());\n\t\t\tKeyFactory kf = KeyFactory.getInstance(\"RSA\");\n\t\t\tPrivateKey prk = kf.generatePrivate(pkcs);\n\t\t\t//verify the certificate using the public key\n\t\t\tcert.verify(pk);\n\t\t\tSystem.out.println(\"Certificate verified\");\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(\"C:\\\\Users\\\\Sachin\\\\Desktop\\\\cert.cer\");\n\t\t\tCertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n\t\t\tX509Certificate cert = (X509Certificate)cf.generateCertificate(fis);\n\t\t\tSystem.out.println(\"Subject DN: \" + cert.getSubjectDN());\n\t\t\tSystem.out.println(\"Issuer DN: \" + cert.getIssuerDN());\n\t\t\tSystem.out.println(\"Serial number: \" + cert.getSerialNumber());\n\t\t\tSystem.out.println(\"Valid from: \" + cert.getNotBefore());\n\t\t\tSystem.out.println(\"Valid until: \" + cert.getNotAfter());\n\t\t\tSystem.out.println(\"Signature algorithm: \" + cert.getSignatureAlgorithm());\n\t\t\tSystem.out.println(\"Hash algorithm: \" + cert.getPublicKey().getAlgorithm());\n\t\t\tSystem.out.println(\"Keysize: \" + cert.getPublicKey().getEncoded().length);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 8
},{
    "id": "658",
    "source": "soSearches",
    "language": "java",
    "query": "how to exit from a void method java",
    "snippets": [
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t\tSystem.exit(0);\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"method\");\n\t\tSystem.exit(0);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "659",
    "source": "soSearches",
    "language": "java",
    "query": "how to input a file records into the database java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt = con.createStatement();\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tString[] arr = line.split(\",\");\n\t\t\t\tString sql = \"insert into clazz values('\"+arr[0]+\"','\"+arr[1]+\"','\"+arr[2]+\"','\"+arr[3]+\"','\"+arr[4]+\"','\"+arr[5]+\"','\"+arr[6]+\"','\"+arr[7]+\"','\"+arr[8]+\"','\"+arr[9]+\"','\"+arr[10]+\"','\"+arr[11]+\"','\"+arr[12]+\"','\"+arr[13]+\"','\"+arr[14]+\"','\"+arr[15]+\"','\"+arr[16]+\"','\"+arr[17]+\"','\"+arr[18]+\"','\"+arr[19]+\"','\"+arr[20]+\"','\"+arr[21]+\"','\"+arr[22]+\"','\"+arr[23]+\"','\"+arr[24]+\"','\"+arr[25]+\"','\"+arr[26]+\"','\"+arr[27]+\"','\"+arr[28]+\"','\"+arr[29]+\"','\"+arr[30]+\"','\"+arr[31]+\"','\"+arr[32]+\"','\"+arr[33]+\"','\"+arr[34]+\"','\"+arr[35]+\"','\"+arr[36]+\"','\"+arr[37]+\"','\"+arr[38]+\"','\"+arr[39]+\"','\"+arr[40]+\"',\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt = con.createStatement();\n\t\t\tFileReader fr = new FileReader(\"C:\\\\Users\\\\Sachin\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tString[] tokens = line.split(\",\");\n\t\t\t\tString sql = \"insert into clazz values('\"+tokens[0]+\"','\"+tokens[1]+\"','\"+tokens[2]+\"','\"+tokens[3]+\"','\"+tokens[4]+\"','\"+tokens[5]+\"','\"+tokens[6]+\"','\"+tokens[7]+\"','\"+tokens[8]+\"','\"+tokens[9]+\"','\"+tokens[10]+\"','\"+tokens[11]+\"','\"+tokens[12]+\"','\"+tokens[13]+\"','\"+tokens[14]+\"','\"+tokens[15]+\"','\"+tokens[16]+\"','\"+tokens[17]+\"','\"+tokens[18]+\"','\"+tokens[19]+\"','\"+tokens[20]+\"','\"+tokens[21]+\"','\"+tokens[22]+\"','\"+tokens[23]+\"','\"+tokens[24]+\"','\"+tokens[25]+\"','\"+tokens[26]+\"','\"+tokens[27]+\"','\"+tokens[28]+\"','\"+tokens[29]+\"','\"+tokens[30]+\"','\"+tokens[31]+\"','\"+tokens[\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tFileReader fr=new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br=new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line=br.readLine())!=null){\n\t\t\t\tString[] data=line.split(\",\");\n\t\t\t\tString sql=\"insert into clazz values('\"+data[0]+\"','\"+data[1]+\"','\"+data[2]+\"','\"+data[3]+\"','\"+data[4]+\"','\"+data[5]+\"','\"+data[6]+\"','\"+data[7]+\"','\"+data[8]+\"','\"+data[9]+\"','\"+data[10]+\"','\"+data[11]+\"','\"+data[12]+\"','\"+data[13]+\"','\"+data[14]+\"','\"+data[15]+\"','\"+data[16]+\"','\"+data[17]+\"','\"+data[18]+\"','\"+data[19]+\"','\"+data[20]+\"','\"+data[21]+\"','\"+data[22]+\"','\"+data[23]+\"','\"+data[24]+\"','\"+data[25]+\"','\"+data[26]+\"','\"+data[27]+\"','\"+data[28]+\"','\"+data[29]+\"','\"+data[30]+\"','\"+data[31]+\"','\"+data[32]+\"','\"+data[33]+\"','\"+data[34]+\"','\"+data[35]+\"','\"+data[36]+\"','\"+data[37]+\"','\"+data[38]+\"','\"+data[39]+\"','\"+data[40]+\"',\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tFileReader fr=new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br=new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line=br.readLine())!=null){\n\t\t\t\tString[] tokens=line.split(\",\");\n\t\t\t\tString sql=\"insert into clazz values('\"+tokens[0]+\"','\"+tokens[1]+\"','\"+tokens[2]+\"','\"+tokens[3]+\"','\"+tokens[4]+\"','\"+tokens[5]+\"','\"+tokens[6]+\"','\"+tokens[7]+\"','\"+tokens[8]+\"','\"+tokens[9]+\"','\"+tokens[10]+\"','\"+tokens[11]+\"','\"+tokens[12]+\"','\"+tokens[13]+\"','\"+tokens[14]+\"','\"+tokens[15]+\"','\"+tokens[16]+\"','\"+tokens[17]+\"','\"+tokens[18]+\"','\"+tokens[19]+\"','\"+tokens[20]+\"','\"+tokens[21]+\"','\"+tokens[22]+\"','\"+tokens[23]+\"','\"+tokens[24]+\"','\"+tokens[25]+\"','\"+tokens[26]+\"','\"+tokens[27]+\"','\"+tokens[28]+\"','\"+tokens[29]+\"','\"+tokens[30]+\"','\"+tokens[31]+\"','\"+tokens[32]+\"\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tFileInputStream fis=new FileInputStream(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\");\n\t\t\tDataInputStream dis=new DataInputStream(fis);\n\t\t\tBufferedReader br=new BufferedReader(new InputStreamReader(dis));\n\t\t\tString line;\n\t\t\twhile((line=br.readLine())!=null){\n\t\t\t\tStringTokenizer st=new StringTokenizer(line,\",\");\n\t\t\t\tString name=st.nextToken();\n\t\t\t\tString email=st.nextToken();\n\t\t\t\tString phone=st.nextToken();\n\t\t\t\tString sql=\"insert into student values('\"+name+\"','\"+email+\"','\"+phone+\"')\";\n\t\t\t\tstmt.executeUpdate(sql);\n\t\t\t}\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tFileReader fr=new FileReader(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\t\tBufferedReader br=new BufferedReader(fr);\n\t\t\tString line;\n\t\t\twhile((line=br.readLine())!=null){\n\t\t\t\tString[] data=line.split(\",\");\n\t\t\t\tString sql=\"insert into clazz values('\"+data[0]+\"','\"+data[1]+\"','\"+data[2]+\"','\"+data[3]+\"','\"+data[4]+\"','\"+data[5]+\"','\"+data[6]+\"','\"+data[7]+\"','\"+data[8]+\"','\"+data[9]+\"','\"+data[10]+\"','\"+data[11]+\"','\"+data[12]+\"','\"+data[13]+\"','\"+data[14]+\"','\"+data[15]+\"','\"+data[16]+\"','\"+data[17]+\"','\"+data[18]+\"','\"+data[19]+\"','\"+data[20]+\"','\"+data[21]+\"','\"+data[22]+\"','\"+data[23]+\"','\"+data[24]+\"','\"+data[25]+\"','\"+data[26]+\"','\"+data[27]+\"','\"+data[28]+\"','\"+data[29]+\"','\"+data[30]+\"','\"+data[31]+\"','\"+data[32]+\"','\"+data[33]+\"','\"+data[34]+\"','\"+data[35]+\"','\"+data[36]+\"','\"+data[37]+\"','\"+data[38]+\"','\"+data[39]+\"','\"+data[40]+\"','\"\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void insert(String fileName){\n\t\ttry{\n\t\t\tFile file = new File(fileName);\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tString[] tokens = line.split(\",\");\n\t\t\t\tString name = tokens[0];\n\t\t\t\tString major = tokens[1];\n\t\t\t\tString year = tokens[2];\n\t\t\t\tString gpa = tokens[3];\n\t\t\t\tString id = tokens[4];\n\t\t\t\tStudent student = new Student(name, major, year, gpa, id);\n\t\t\t\tstudent.insert();\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void insert(String fileName){\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(fileName);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\twhile(line != null){\n\t\t\t\tString[] fields = line.split(\",\");\n\t\t\t\tString name = fields[0];\n\t\t\t\tString major = fields[1];\n\t\t\t\tString year = fields[2];\n\t\t\t\tString gpa = fields[3];\n\t\t\t\tString id = fields[4];\n\t\t\t\tString sql = \"insert into student values('\"+id+\"','\"+name+\"','\"+major+\"','\"+year+\"','\"+gpa+\"')\";\n\t\t\t\tSystem.out.println(sql);\n\t\t\t\tline = br.readLine();\n\t\t\t}\n\t\t\tbr.close();\n\t\t\tfr.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\";\n\t\tFile file = new File(fileName);\n\t\tScanner input = new Scanner(file);\n\t\twhile(input.hasNextLine()){\n\t\t\tString line = input.nextLine();\n\t\t\tString[] tokens = line.split(\",\");\n\t\t\tString name = tokens[0];\n\t\t\tString age = tokens[1];\n\t\t\tString address = tokens[2];\n\t\t\tString phone = tokens[3];\n\t\t\tString email = tokens[4];\n\t\t\tString sql = \"INSERT INTO Clazz(name, age, address, phone, email) VALUES('\"+name+\"','\"+age+\"','\"+address+\"','\"+phone+\"','\"+email+\"')\";\n\t\t\tSystem.out.println(sql);\n\t\t}\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void insert(String name, String description, String teacher, String time, String location, String date){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt = con.createStatement();\n\t\t\tString sql = \"INSERT INTO clazz (name, description, teacher, time, location, date) VALUES ('\"+name+\"','\"+description+\"','\"+teacher+\"','\"+time+\"','\"+location+\"','\"+date+\"')\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n\tpublic void delete(String name){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt = con.createStatement();\n\t\t\tString sql = \"DELETE FROM clazz WHERE name = '\"+name+\"'\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n\tpublic void update(String name, String description, String teacher, String time, String location, String date){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt = con.createStatement();\n\t\t\tString sql = \"UPDATE clazz SET description = '\"+description+\"', teacher = '\"+teacher+\"', time = '\"\n"
    ],
    "results": 10
},{
    "id": "660",
    "source": "soSearches",
    "language": "java",
    "query": "how to read full table in sorting order in java code",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tConnection con = null;\n\t\tStatement stmt = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tstmt = con.createStatement();\n\t\t\trs = stmt.executeQuery(\"select * from emp order by id\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(1)+\" \"+rs.getString(2)+\" \"+rs.getString(3));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs!=null)\n\t\t\t\t\trs.close();\n\t\t\t\tif(stmt!=null)\n\t\t\t\t\tstmt.close();\n\t\t\t\tif(con!=null)\n\t\t\t\t\tcon.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tConnection con = null;\n\t\tStatement stmt = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tstmt = con.createStatement();\n\t\t\trs = stmt.executeQuery(\"select * from student order by name\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(\"name\")+\" \"+rs.getString(\"rollno\"));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs!=null) rs.close();\n\t\t\t\tif(stmt!=null) stmt.close();\n\t\t\t\tif(con!=null) con.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tConnection con = null;\n\t\tStatement stmt = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tstmt = con.createStatement();\n\t\t\trs = stmt.executeQuery(\"select * from emp order by empno\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(1)+\" \"+rs.getString(2)+\" \"+rs.getString(3));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs != null)\n\t\t\t\t\trs.close();\n\t\t\t\tif(stmt != null)\n\t\t\t\t\tstmt.close();\n\t\t\t\tif(con != null)\n\t\t\t\t\tcon.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tConnection con = null;\n\t\tStatement stmt = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tstmt = con.createStatement();\n\t\t\trs = stmt.executeQuery(\"select * from student order by name\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2)+\" \"+rs.getString(3));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs!=null)\n\t\t\t\t\trs.close();\n\t\t\t\tif(stmt!=null)\n\t\t\t\t\tstmt.close();\n\t\t\t\tif(con!=null)\n\t\t\t\t\tcon.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tConnection con = null;\n\t\tStatement stmt = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tstmt = con.createStatement();\n\t\t\trs = stmt.executeQuery(\"select * from student order by id\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(1)+\" \"+rs.getString(2)+\" \"+rs.getString(3));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs!=null)\n\t\t\t\t\trs.close();\n\t\t\t\tif(stmt!=null)\n\t\t\t\t\tstmt.close();\n\t\t\t\tif(con!=null)\n\t\t\t\t\tcon.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tConnection con = null;\n\t\tStatement stmt = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tstmt = con.createStatement();\n\t\t\trs = stmt.executeQuery(\"select * from student order by name\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs!=null)\n\t\t\t\t\trs.close();\n\t\t\t\tif(stmt!=null)\n\t\t\t\t\tstmt.close();\n\t\t\t\tif(con!=null)\n\t\t\t\t\tcon.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tResultSet rs=stmt.executeQuery(\"select * from student\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(1)+\" \"+rs.getString(2)+\" \"+rs.getString(3));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tResultSet rs=stmt.executeQuery(\"select * from student\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(1)+\" \"+rs.getString(2)+\" \"+rs.getString(3));\n\t\t\t}\n\t\t\trs.close();\n\t\t\tstmt.close();\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"root\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tResultSet rs=st.executeQuery(\"select * from student\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(1)+\" \"+rs.getString(2)+\" \"+rs.getString(3));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "661",
    "source": "soSearches",
    "language": "java",
    "query": "how to find size of an object array in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString[] str = new String[10];\n\t\tSystem.out.println(str.length);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] strArray = new String[10];\n\t\tSystem.out.println(strArray.length);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] strs = new String[10];\n\t\tSystem.out.println(strs.length);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "662",
    "source": "soSearches",
    "language": "java",
    "query": "how to store the mobile number in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tlong mobileNumber = 9876543210L;\n\t\tSystem.out.println(mobileNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint mobileNumber=9888888888;\n\t\tSystem.out.println(mobileNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong mobileNumber = 987654321;\n\t\tSystem.out.println(mobileNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint mobile=9876543210;\n\t\tSystem.out.println(mobile);\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString mobile=\"9888888888\";\n\t\tSystem.out.println(mobile);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint mobileNumber=9888888888;\n\t\tSystem.out.println(\"Mobile Number is:\"+mobileNumber);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "663",
    "source": "soSearches",
    "language": "java",
    "query": "how to setting testonborrow in java config",
    "snippets": [
        "\tvoid test(){\n\t\tSystem.out.println(\"test\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"hello world\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "664",
    "source": "soSearches",
    "language": "java",
    "query": "how to import math package java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Math.PI);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Math.sqrt(25));\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tSystem.out.println(Math.sqrt(25));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "665",
    "source": "soSearches",
    "language": "java",
    "query": "how to import array utils in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr2 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr3 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr4 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr5 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr6 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr7 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr8 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr9 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr10 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr11 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr12 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr13 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr14 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr15 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr16 = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] arr17 = {1,2,3,4,5,6,7,8,9,\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tint[] arr2 = {1,2,3,4,5};\n\t\tint[] arr3 = {1,2,3,4,5};\n\t\tint[] arr4 = {1,2,3,4,5};\n\t\tint[] arr5 = {1,2,3,4,5};\n\t\tint[] arr6 = {1,2,3,4,5};\n\t\tint[] arr7 = {1,2,3,4,5};\n\t\tint[] arr8 = {1,2,3,4,5};\n\t\tint[] arr9 = {1,2,3,4,5};\n\t\tint[] arr10 = {1,2,3,4,5};\n\t\tint[] arr11 = {1,2,3,4,5};\n\t\tint[] arr12 = {1,2,3,4,5};\n\t\tint[] arr13 = {1,2,3,4,5};\n\t\tint[] arr14 = {1,2,3,4,5};\n\t\tint[] arr15 = {1,2,3,4,5};\n\t\tint[] arr16 = {1,2,3,4,5};\n\t\tint[] arr17 = {1,2,3,4,5};\n\t\tint[] arr18 = {1,2,3,4,5};\n\t\tint[] arr19 = {1,2,3,4,5};\n\t\tint[] arr20 = {1,2,3,4,5};\n\t\tint[] arr21 = {1,2,3,4,5};\n\t\tint[] arr22 = {1,2,3,4,5};\n\t\tint[] arr23 = {1,2,3,4,5};\n\t\tint[] arr24 = {1,2,3,4,5};\n\t\tint[] arr25 = {1,2,3,4,5};\n\t\tint[] arr26 = {1,2,3,4\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5};\n\t\tint[] arr2 = {1,2,3,4,5};\n\t\tSystem.out.println(Arrays.toString(arr));\n\t\tSystem.out.println(Arrays.toString(arr2));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr, arr));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2, arr));\n\t\tSystem.out.println(Arrays.equals(arr2, arr2));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2, arr));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2, arr));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2, arr));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2, arr));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2, arr));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2, arr));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2, arr));\n\t\tSystem.out.println(Arrays.equals(arr, arr2));\n\t\tSystem.out.println(Arrays.equals(arr2,\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] b = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] c = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] d = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] e = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] f = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] g = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] h = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] i = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] j = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] k = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] l = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] m = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] n = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] o = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] p = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] q = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] r = {1,2,3,\n"
    ],
    "results": 10
},{
    "id": "666",
    "source": "soSearches",
    "language": "java",
    "query": "how to word segment in the java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"I am a student\";\n\t\tString[] words = str.split(\" \");\n\t\tfor(String word:words){\n\t\t\tSystem.out.println(word);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString[] words = str.split(\" \");\n\t\tfor(String word : words){\n\t\t\tSystem.out.println(word);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString[] strs = str.split(\" \");\n\t\tfor(String s:strs){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"I am a good student\";\n\t\tString[] words = str.split(\" \");\n\t\tfor(String word:words){\n\t\t\tSystem.out.println(word);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"I am a student\";\n\t\tString[] words = s.split(\" \");\n\t\tfor(String word:words){\n\t\t\tSystem.out.println(word);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"I am a student\";\n\t\tString[] strs = str.split(\" \");\n\t\tfor(String s:strs){\n\t\t\tSystem.out.println(s);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str.split(\" \"));\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString str = \"I am a student\";\n\t\tString[] words = str.split(\" \");\n\t\tfor(String word:words){\n\t\t\tSystem.out.println(word);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "667",
    "source": "soSearches",
    "language": "java",
    "query": "java how to make random() into a custom class?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World!\");\n\t\tSystem.out.println(\"Random number: \" + random());\n\t}\n\tpublic static int random(){\n\t\treturn (int)(Math.random()*100);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World!\");\n\t\tSystem.out.println(\"Random number: \" + random());\n\t}\n\tpublic static int random(){\n\t\treturn (int)(Math.random() * 10);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint random = r.nextInt(10);\n\t\tSystem.out.println(random);\n\t}\n}\n",
        "\tstatic int random(){\n\t\treturn (int)(Math.random()*100);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World!\");\n\t\tSystem.out.println(\"Random: \" + random());\n\t}\n\tpublic static int random(){\n\t\treturn (int) (Math.random() * 10);\n\t}\n}\n"
    ],
    "results": 6
},{
    "id": "668",
    "source": "soSearches",
    "language": "java",
    "query": "how to create the array with for loop in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[5];\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tarr[i] = i;\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.println(arr[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[10];\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tarr[i] = i;\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.println(arr[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[10];\n\t\tfor(int i=0;i<10;i++){\n\t\t\tarr[i] = i;\n\t\t}\n\t\tfor(int i=0;i<10;i++){\n\t\t\tSystem.out.println(arr[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[5];\n\t\tfor(int i=0;i<5;i++){\n\t\t\tarr[i] = i;\n\t\t}\n\t\tfor(int i=0;i<5;i++){\n\t\t\tSystem.out.println(arr[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] a = new int[10];\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\ta[i] = i;\n\t\t}\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\tSystem.out.println(a[i]);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "669",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert bigint to long in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tBigInteger bi = new BigInteger(\"123456789012345678901234567890\");\n\t\tlong l = bi.longValue();\n\t\tSystem.out.println(l);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBigInteger bi = new BigInteger(\"1234567890123456789012345678901234567890\");\n\t\tlong l = bi.longValue();\n\t\tSystem.out.println(l);\n\t}\n}\n"
    ],
    "results": 8
},{
    "id": "670",
    "source": "soSearches",
    "language": "java",
    "query": "java how to import user data to table",
    "snippets": [
        "\tvoid main(String[] args){\n\t\tString url = \"jdbc:mysql://localhost:3306/\";\n\t\tString dbName = \"test\";\n\t\tString driver = \"com.mysql.jdbc.Driver\";\n\t\tString userName = \"root\";\n\t\tString password = \"root\";\n\t\tConnection conn = null;\n\t\tStatement stmt = null;\n\t\ttry{\n\t\t\tClass.forName(driver).newInstance();\n\t\t\tconn = DriverManager.getConnection(url+dbName,userName,password);\n\t\t\tstmt = conn.createStatement();\n\t\t\tString sql = \"INSERT INTO user(name,age) VALUES('\"+args[0]+\"','\"+args[1]+\"')\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t\tSystem.out.println(\"Inserted\");\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tstmt.close();\n\t\t\t\tconn.close();\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString url = \"jdbc:mysql://localhost:3306/\";\n\t\tString dbName = \"test\";\n\t\tString driver = \"com.mysql.jdbc.Driver\";\n\t\tString userName = \"root\";\n\t\tString password = \"\";\n\t\tConnection conn = null;\n\t\tStatement stmt = null;\n\t\ttry{\n\t\t\tClass.forName(driver);\n\t\t\tconn = DriverManager.getConnection(url+dbName,userName,password);\n\t\t\tstmt = conn.createStatement();\n\t\t\tString sql = \"INSERT INTO user(name, age) VALUES('\"+args[0]+\"','\"+args[1]+\"')\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t}catch(ClassNotFoundException e){\n\t\t\te.printStackTrace();\n\t\t}catch(SQLException e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tconn.close();\n\t\t\t}catch(SQLException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tConnection con = null;\n\t\tStatement stmt = null;\n\t\tResultSet rs = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tstmt = con.createStatement();\n\t\t\trs = stmt.executeQuery(\"select * from user\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(\"name\"));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(rs != null){\n\t\t\t\t\trs.close();\n\t\t\t\t}\n\t\t\t\tif(stmt != null){\n\t\t\t\t\tstmt.close();\n\t\t\t\t}\n\t\t\t\tif(con != null){\n\t\t\t\t\tcon.close();\n\t\t\t\t}\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void insert(String name, String email, String password){\n\t\tString sql = \"INSERT INTO Clazz (name, email, password) VALUES (?, ?, ?)\";\n\t\ttry{\n\t\t\tConnection conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\", \"root\", \"root\");\n\t\t\tPreparedStatement ps = conn.prepareStatement(sql);\n\t\t\tps.setString(1, name);\n\t\t\tps.setString(2, email);\n\t\t\tps.setString(3, password);\n\t\t\tps.executeUpdate();\n\t\t\tconn.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String email, String password){\n\t\tString sql = \"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\";\n\t\tConnection conn = null;\n\t\tPreparedStatement ps = null;\n\t\ttry{\n\t\t\tconn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\", \"root\", \"root\");\n\t\t\tps = conn.prepareStatement(sql);\n\t\t\tps.setString(1, name);\n\t\t\tps.setString(2, email);\n\t\t\tps.setString(3, password);\n\t\t\tps.executeUpdate();\n\t\t}catch(SQLException e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(ps != null) ps.close();\n\t\t\t\tif(conn != null) conn.close();\n\t\t\t}catch(SQLException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String email, String password){\n\t\tString sql = \"INSERT INTO Clazz (name, email, password) VALUES (?, ?, ?)\";\n\t\ttry{\n\t\t\tPreparedStatement ps = conn.prepareStatement(sql);\n\t\t\tps.setString(1, name);\n\t\t\tps.setString(2, email);\n\t\t\tps.setString(3, password);\n\t\t\tps.executeUpdate();\n\t\t}catch(SQLException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String age, String address){\n\t\tString sql = \"insert into clazz values(?,?,?)\";\n\t\tConnection conn = null;\n\t\tPreparedStatement pstmt = null;\n\t\ttry{\n\t\t\tconn = DBUtil.getConnection();\n\t\t\tpstmt = conn.prepareStatement(sql);\n\t\t\tpstmt.setString(1, name);\n\t\t\tpstmt.setString(2, age);\n\t\t\tpstmt.setString(3, address);\n\t\t\tpstmt.executeUpdate();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\tDBUtil.close(pstmt);\n\t\t\tDBUtil.close(conn);\n\t\t}\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void insert(String name, String email, String password){\n\t\tConnection conn = null;\n\t\tStatement stmt = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tconn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\", \"root\", \"root\");\n\t\t\tstmt = conn.createStatement();\n\t\t\tString sql = \"INSERT INTO Clazz (name, email, password) VALUES ('\" + name + \"', '\" + email + \"', '\" + password + \"')\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\ttry{\n\t\t\t\tif(stmt != null) stmt.close();\n\t\t\t}catch(SQLException se){\n\t\t\t\tse.printStackTrace();\n\t\t\t}\n\t\t\ttry{\n\t\t\t\tif(conn != null) conn.close();\n\t\t\t}catch(SQLException se){\n\t\t\t\tse.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n\tpublic void update(String name, String email, String password){\n\t\tConnection conn = null;\n\t\tStatement stmt = null;\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tconn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\", \"root\", \"root\");\n\t\t\tstmt = conn.createStatement();\n\t\t\tString sql = \"UPDATE Clazz SET name = '\" + name + \"', email = '\" + email + \"', password = '\" + password + \"' WHERE name = '\" + name + \"'\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void insert(String name, String email, String password){\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\ttry{\n\t\t\tcon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tps = con.prepareStatement(\"insert into user values(?,?,?)\");\n\t\t\tps.setString(1,name);\n\t\t\tps.setString(2,email);\n\t\t\tps.setString(3,password);\n\t\t\tps.executeUpdate();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfinally{\n\t\t\ttry{\n\t\t\t\tif(ps != null)\n\t\t\t\t\tps.close();\n\t\t\t\tif(con != null)\n\t\t\t\t\tcon.close();\n\t\t\t}\n\t\t\tcatch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid insert(String name, String email, String password){\n\t\tString sql = \"insert into user(name, email, password) values('\"+name+\"','\"+email+\"','\"+password+\"')\";\n\t\tDB.execute(sql);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "671",
    "source": "soSearches",
    "language": "java",
    "query": "how to reduce the decimals of a long number in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tlong num = 1234567890123456789L;\n\t\tSystem.out.println(num);\n\t\tSystem.out.println(num/10000000000L);\n\t\tSystem.out.println(num/100000000L);\n\t\tSystem.out.println(num/1000000000L);\n\t\tSystem.out.println(num/1000000L);\n\t\tSystem.out.println(num/100000L);\n\t\tSystem.out.println(num/10000L);\n\t\tSystem.out.println(num/1000L);\n\t\tSystem.out.println(num/100L);\n\t\tSystem.out.println(num/10L);\n\t\tSystem.out.println(num/1L);\n\t\tSystem.out.println(num%10L);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong num = 1234567890123456789L;\n\t\tSystem.out.println(num);\n\t\tSystem.out.println(num/10000000000L);\n\t\tSystem.out.println(num/100000000L);\n\t\tSystem.out.println(num/1000000000L);\n\t\tSystem.out.println(num/1000000L);\n\t\tSystem.out.println(num/100000L);\n\t\tSystem.out.println(num/10000L);\n\t\tSystem.out.println(num/1000L);\n\t\tSystem.out.println(num/100L);\n\t\tSystem.out.println(num/10L);\n\t\tSystem.out.println(num/1L);\n\t\tSystem.out.println(num%1L);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong num = 1234567890123456789L;\n\t\tSystem.out.println(num);\n\t\tSystem.out.println(num/10000000000L);\n\t\tSystem.out.println(num/100000000L);\n\t\tSystem.out.println(num/1000000000L);\n\t\tSystem.out.println(num/1000000L);\n\t\tSystem.out.println(num/100000L);\n\t\tSystem.out.println(num/10000L);\n\t\tSystem.out.println(num/1000L);\n\t\tSystem.out.println(num/100L);\n\t\tSystem.out.println(num/10L);\n\t\tSystem.out.println(num/1L);\n\t\tSystem.out.println(num/10L);\n\t\tSystem.out.println(num/100L);\n\t\tSystem.out.println(num/1000L);\n\t\tSystem.out.println(num/10000L);\n\t\tSystem.out.println(num/100000L);\n\t\tSystem.out.println(num/1000000L);\n\t\tSystem.out.println(num/1000000000L);\n\t\tSystem.out.println(num/100000000L);\n\t\tSystem.out.println(num/10000000000L);\n\t\tSystem.out.println(num/10000000000L);\n\t\tSystem.out.println(num/100000000000L);\n\t\tSystem.out.println(num/1000000000000L);\n\t\tSystem.out.println(num/10000000000000L);\n\t\tSystem.out.println(num/100000000000000L);\n\t\tSystem.out.println(num/1000000000000000L);\n\t\tSystem.out.println(num/10000000000000000L);\n\t\tSystem.out.println(num/100000000000000000L);\n\t\tSystem.out.println(num/1000000000000000000L);\n\t\tSystem.out.println(num/10000000000000000000L);\n\t\tSystem.out.println(num/100000000000000000000L);\n\t\tSystem.out\n",
        "\tstatic void main(String[] args){\n\t\tlong num = 1234567890123456789L;\n\t\tlong num2 = num/10000000000L;\n\t\tSystem.out.println(num2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong num = 1234567890123456789L;\n\t\tlong num1 = num/1000000000;\n\t\tlong num2 = num%1000000000;\n\t\tlong num3 = num2/1000000;\n\t\tlong num4 = num2%1000000;\n\t\tlong num5 = num4/100000;\n\t\tlong num6 = num4%100000;\n\t\tlong num7 = num6/10000;\n\t\tlong num8 = num6%10000;\n\t\tlong num9 = num8/1000;\n\t\tlong num10 = num8%1000;\n\t\tlong num11 = num10/100;\n\t\tlong num12 = num10%100;\n\t\tlong num13 = num12/10;\n\t\tlong num14 = num12%10;\n\t\tlong num15 = num14/1;\n\t\tlong num16 = num14%1;\n\t\tSystem.out.println(num1+\" \"+num3+\" \"+num5+\" \"+num7+\" \"+num9+\" \"+num11+\" \"+num13+\" \"+num15+\" \"+num16);\n\t}\n}\n"
    ],
    "results": 8
},{
    "id": "672",
    "source": "soSearches",
    "language": "java",
    "query": "how to round the nearest whole number in java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.14159;\n\t\tint i = (int)Math.round(d);\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tint i = (int)Math.round(d);\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tdouble e = Math.round(d);\n\t\tSystem.out.println(e);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble d = 3.141592654;\n\t\tSystem.out.println(Math.round(d));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble num = 3.14159;\n\t\tdouble round = Math.round(num);\n\t\tSystem.out.println(round);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble num = 3.14159;\n\t\tdouble rounded = Math.round(num);\n\t\tSystem.out.println(rounded);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "673",
    "source": "soSearches",
    "language": "java",
    "query": "how to download and install itext for java pdf",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "674",
    "source": "soSearches",
    "language": "java",
    "query": "how to remove java installed in ubuntu",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "675",
    "source": "soSearches",
    "language": "java",
    "query": "how to start and close time in selenium java",
    "snippets": [
        "\tvoid startTime(){\n\t\tSystem.out.println(\"start time\");\n\t}\n\tpublic\n\tvoid endTime(){\n\t\tSystem.out.println(\"end time\");\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.name(\"q\")).sendKeys(\"Selenium\");\n\t\tdriver.findElement(By.name(\"btnG\")).click();\n\t\tdriver.close();\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "676",
    "source": "soSearches",
    "language": "java",
    "query": "[java] how to append to a file",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"test.txt\", true);\n\t\t\tfw.write(\"\\nThis is a new line\");\n\t\t\tfw.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(\"test.txt\", true);\n\t\t\tfw.write(\"\\nHello World\");\n\t\t\tfw.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "677",
    "source": "soSearches",
    "language": "java",
    "query": "how to see available classes in package in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Clazz.class.getPackage().getName());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Classes in package java.lang:\");\n\t\tClass[] classes = java.lang.Class.getDeclaredClasses();\n\t\tfor(int i = 0; i < classes.length; i++){\n\t\t\tSystem.out.println(classes[i].getName());\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Classes in package: \");\n\t\tString packageName = \"java.lang\";\n\t\tString[] classes = ClassFinder.getClasses(packageName);\n\t\tfor(String clazz: classes){\n\t\t\tSystem.out.println(clazz);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Classes in package: \");\n\t\tString packageName = \"java.lang\";\n\t\tString[] classes = ClassLoader.getSystemClassLoader().getPackage(packageName).getImportedPackages();\n\t\tfor(String clazz: classes){\n\t\t\tSystem.out.println(clazz);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Classes in package java.lang:\");\n\t\tSystem.out.println(\"----------------------------\");\n\t\tClass[] classes = ClassLoader.getSystemClassLoader().getPackage(\"java.lang\").getClasses();\n\t\tfor(Class clazz:classes){\n\t\t\tSystem.out.println(clazz.getName());\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "678",
    "source": "soSearches",
    "language": "java",
    "query": "how to add fraction in java main",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=a+b;\n\t\tSystem.out.println(c);\n\t\tint d=a-b;\n\t\tSystem.out.println(d);\n\t\tint e=a*b;\n\t\tSystem.out.println(e);\n\t\tint f=a/b;\n\t\tSystem.out.println(f);\n\t\tint g=a%b;\n\t\tSystem.out.println(g);\n\t\tint h=a++;\n\t\tSystem.out.println(h);\n\t\tint i=a--;\n\t\tSystem.out.println(i);\n\t\tint j=++a;\n\t\tSystem.out.println(j);\n\t\tint k=--a;\n\t\tSystem.out.println(k);\n\t\tint l=a+b;\n\t\tSystem.out.println(l);\n\t\tint m=a-b;\n\t\tSystem.out.println(m);\n\t\tint n=a*b;\n\t\tSystem.out.println(n);\n\t\tint o=a/b;\n\t\tSystem.out.println(o);\n\t\tint p=a%b;\n\t\tSystem.out.println(p);\n\t\tint q=a+b;\n\t\tSystem.out.println(q);\n\t\tint r=a-b;\n\t\tSystem.out.println(r);\n\t\tint s=a*b;\n\t\tSystem.out.println(s);\n\t\tint t=a/b;\n\t\tSystem.out.println(t);\n\t\tint u=a%b;\n\t\tSystem.out.println(u);\n\t\tint v=a+b;\n\t\tSystem.out.println(v);\n\t\tint w=a-b;\n\t\tSystem.out.println(w);\n\t\tint x=a*b;\n\t\tSystem.out.println(x);\n\t\tint y=a/b;\n\t\tSystem.out\n"
    ],
    "results": 10
},{
    "id": "679",
    "source": "soSearches",
    "language": "java",
    "query": "how to include strings in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s1 = \"Hello\";\n\t\tString s2 = \"World\";\n\t\tString s3 = s1 + \" \" + s2;\n\t\tSystem.out.println(s3);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello World\";\n\t\tSystem.out.println(s);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello\";\n\t\tSystem.out.println(s);\n\t}\n}\n",
        "\tstatic String str = \"Hello World\";\n\tpublic static void main(String[] args){\n\t\tSystem.out.println(str);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "680",
    "source": "soSearches",
    "language": "java",
    "query": "how to strip html code from string in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString html = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html2 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html3 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html4 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html5 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html6 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html7 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html8 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html9 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html10 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html11 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html12 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html13 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html14 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html15 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html16 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html17 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html18 = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString html19 = \"<html><body><h1>Hello World</h1></body></\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString str1 = str.replaceAll(\"<.*?>\", \"\");\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString s1 = s.replaceAll(\"<.*?>\", \"\");\n\t\tSystem.out.println(s1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tString str1 = str.replaceAll(\"<[^>]*>\", \"\");\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"<html> <head> <title>Test</title> </head> <body> <h1>Test</h1> <p>Test</p> </body> </html>\";\n\t\tString str2 = str.replaceAll(\"<[^>]*>\", \"\");\n\t\tSystem.out.println(str2);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "681",
    "source": "soSearches",
    "language": "java",
    "query": "how to do file handling  java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(f);\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f=new File(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\java\\\\file.txt\");\n\t\ttry{\n\t\t\tFileWriter fw=new FileWriter(f);\n\t\t\tfw.write(\"hello\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f=new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\java.txt\");\n\t\ttry{\n\t\t\tFileWriter fw=new FileWriter(f);\n\t\t\tfw.write(\"hello java\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f=new File(\"C:\\\\Users\\\\sai\\\\Desktop\\\\java\\\\java.txt\");\n\t\ttry{\n\t\t\tFileWriter fw=new FileWriter(f);\n\t\t\tfw.write(\"hello java\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f=new File(\"C:\\\\Users\\\\Sai\\\\Desktop\\\\java.txt\");\n\t\ttry{\n\t\t\tFileWriter fw=new FileWriter(f);\n\t\t\tfw.write(\"Hello\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile file = new File(\"C:\\\\Users\\\\Sai\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(file);\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile file = new File(\"C:\\\\Users\\\\Sankar\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(file);\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"C:\\\\Users\\\\Sourav\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(f);\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"C:\\\\Users\\\\Saurabh\\\\Desktop\\\\java\\\\java.txt\");\n\t\ttry{\n\t\t\tFileWriter fw = new FileWriter(f);\n\t\t\tfw.write(\"Hello World\");\n\t\t\tfw.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\tSystem.out.println(\"Error\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile f = new File(\"C:\\\\Users\\\\Sai\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tif(f.createNewFile()){\n\t\t\t\tSystem.out.println(\"File created\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"File already exists\");\n\t\t\t}\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "682",
    "source": "soSearches",
    "language": "java",
    "query": "java how to make a random number generator",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint randomNumber = r.nextInt(10);\n\t\tSystem.out.println(randomNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint randomNumber = r.nextInt(100);\n\t\tSystem.out.println(randomNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint randomNumber = (int) (Math.random() * 10);\n\t\tSystem.out.println(randomNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint randomNumber = (int)(Math.random()*100);\n\t\tSystem.out.println(\"The random number is \" + randomNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint random = (int)(Math.random()*100);\n\t\tSystem.out.println(random);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "683",
    "source": "soSearches",
    "language": "java",
    "query": "java how to iterate over a map key set",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"1\", \"one\");\n\t\tmap.put(\"2\", \"two\");\n\t\tmap.put(\"3\", \"three\");\n\t\tmap.put(\"4\", \"four\");\n\t\tmap.put(\"5\", \"five\");\n\t\tmap.put(\"6\", \"six\");\n\t\tmap.put(\"7\", \"seven\");\n\t\tmap.put(\"8\", \"eight\");\n\t\tmap.put(\"9\", \"nine\");\n\t\tmap.put(\"10\", \"ten\");\n\t\tmap.put(\"11\", \"eleven\");\n\t\tmap.put(\"12\", \"twelve\");\n\t\tmap.put(\"13\", \"thirteen\");\n\t\tmap.put(\"14\", \"fourteen\");\n\t\tmap.put(\"15\", \"fifteen\");\n\t\tmap.put(\"16\", \"sixteen\");\n\t\tmap.put(\"17\", \"seventeen\");\n\t\tmap.put(\"18\", \"eighteen\");\n\t\tmap.put(\"19\", \"nineteen\");\n\t\tmap.put(\"20\", \"twenty\");\n\t\tmap.put(\"21\", \"twenty one\");\n\t\tmap.put(\"22\", \"twenty two\");\n\t\tmap.put(\"23\", \"twenty three\");\n\t\tmap.put(\"24\", \"twenty four\");\n\t\tmap.put(\"25\", \"twenty five\");\n\t\tmap.put(\"26\", \"twenty six\");\n\t\tmap.put(\"27\", \"twenty seven\");\n\t\tmap.put(\"28\", \"twenty eight\");\n\t\tmap.put(\"29\", \"twenty nine\");\n\t\tmap.put(\"30\", \"thirty\");\n\t\tmap.put(\"31\", \"thirty one\");\n\t\tmap.put(\"32\", \"thirty two\");\n\t\tmap.put(\"33\", \"thirty three\");\n\t\tmap.put(\"34\", \"thirty four\");\n\t\tmap.put(\"35\", \"thirty five\");\n\t\tmap.put(\"36\", \"\n",
        "\tstatic void main(String[] args){\n\t\tMap<String,String> map = new HashMap<String,String>();\n\t\tmap.put(\"1\",\"one\");\n\t\tmap.put(\"2\",\"two\");\n\t\tmap.put(\"3\",\"three\");\n\t\tmap.put(\"4\",\"four\");\n\t\tmap.put(\"5\",\"five\");\n\t\tmap.put(\"6\",\"six\");\n\t\tmap.put(\"7\",\"seven\");\n\t\tmap.put(\"8\",\"eight\");\n\t\tmap.put(\"9\",\"nine\");\n\t\tmap.put(\"10\",\"ten\");\n\t\tmap.put(\"11\",\"eleven\");\n\t\tmap.put(\"12\",\"twelve\");\n\t\tmap.put(\"13\",\"thirteen\");\n\t\tmap.put(\"14\",\"fourteen\");\n\t\tmap.put(\"15\",\"fifteen\");\n\t\tmap.put(\"16\",\"sixteen\");\n\t\tmap.put(\"17\",\"seventeen\");\n\t\tmap.put(\"18\",\"eighteen\");\n\t\tmap.put(\"19\",\"nineteen\");\n\t\tmap.put(\"20\",\"twenty\");\n\t\tmap.put(\"21\",\"twenty one\");\n\t\tmap.put(\"22\",\"twenty two\");\n\t\tmap.put(\"23\",\"twenty three\");\n\t\tmap.put(\"24\",\"twenty four\");\n\t\tmap.put(\"25\",\"twenty five\");\n\t\tmap.put(\"26\",\"twenty six\");\n\t\tmap.put(\"27\",\"twenty seven\");\n\t\tmap.put(\"28\",\"twenty eight\");\n\t\tmap.put(\"29\",\"twenty nine\");\n\t\tmap.put(\"30\",\"thirty\");\n\t\tmap.put(\"31\",\"thirty one\");\n\t\tmap.put(\"32\",\"thirty two\");\n\t\tmap.put(\"33\",\"thirty three\");\n\t\tmap.put(\"34\",\"thirty four\");\n\t\tmap.put(\"35\",\"thirty five\");\n\t\tmap.put(\"36\",\"thirty six\");\n\t\tmap.put(\"37\",\"thirty seven\");\n\t\tmap.put(\"38\",\"thirty eight\");\n\t\tmap.put\n",
        "\tstatic void main(String[] args){\n\t\tMap<String,String> map = new HashMap<String,String>();\n\t\tmap.put(\"1\",\"one\");\n\t\tmap.put(\"2\",\"two\");\n\t\tmap.put(\"3\",\"three\");\n\t\tmap.put(\"4\",\"four\");\n\t\tmap.put(\"5\",\"five\");\n\t\tmap.put(\"6\",\"six\");\n\t\tmap.put(\"7\",\"seven\");\n\t\tmap.put(\"8\",\"eight\");\n\t\tmap.put(\"9\",\"nine\");\n\t\tmap.put(\"10\",\"ten\");\n\t\tmap.put(\"11\",\"eleven\");\n\t\tmap.put(\"12\",\"twelve\");\n\t\tmap.put(\"13\",\"thirteen\");\n\t\tmap.put(\"14\",\"fourteen\");\n\t\tmap.put(\"15\",\"fifteen\");\n\t\tmap.put(\"16\",\"sixteen\");\n\t\tmap.put(\"17\",\"seventeen\");\n\t\tmap.put(\"18\",\"eighteen\");\n\t\tmap.put(\"19\",\"nineteen\");\n\t\tmap.put(\"20\",\"twenty\");\n\t\tmap.put(\"21\",\"twentyone\");\n\t\tmap.put(\"22\",\"twentytwo\");\n\t\tmap.put(\"23\",\"twentythree\");\n\t\tmap.put(\"24\",\"twentyfour\");\n\t\tmap.put(\"25\",\"twentyfive\");\n\t\tmap.put(\"26\",\"twentysix\");\n\t\tmap.put(\"27\",\"twentyseven\");\n\t\tmap.put(\"28\",\"twentyeight\");\n\t\tmap.put(\"29\",\"twentynine\");\n\t\tmap.put(\"30\",\"thirty\");\n\t\tmap.put(\"31\",\"thirtyone\");\n\t\tmap.put(\"32\",\"thirtytwo\");\n\t\tmap.put(\"33\",\"thirtythree\");\n\t\tmap.put(\"34\",\"thirtyfour\");\n\t\tmap.put(\"35\",\"thirtyfive\");\n\t\tmap.put(\"36\",\"thirtysix\");\n\t\tmap.put(\"37\",\"thirtyseven\");\n\t\tmap.put(\"38\",\"thirtyeight\");\n\t\tmap\n",
        "\tvoid method(){\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"key1\", \"value1\");\n\t\tmap.put(\"key2\", \"value2\");\n\t\tmap.put(\"key3\", \"value3\");\n\t\tmap.put(\"key4\", \"value4\");\n\t\tmap.put(\"key5\", \"value5\");\n\t\tmap.put(\"key6\", \"value6\");\n\t\tmap.put(\"key7\", \"value7\");\n\t\tmap.put(\"key8\", \"value8\");\n\t\tmap.put(\"key9\", \"value9\");\n\t\tmap.put(\"key10\", \"value10\");\n\t\tmap.put(\"key11\", \"value11\");\n\t\tmap.put(\"key12\", \"value12\");\n\t\tmap.put(\"key13\", \"value13\");\n\t\tmap.put(\"key14\", \"value14\");\n\t\tmap.put(\"key15\", \"value15\");\n\t\tmap.put(\"key16\", \"value16\");\n\t\tmap.put(\"key17\", \"value17\");\n\t\tmap.put(\"key18\", \"value18\");\n\t\tmap.put(\"key19\", \"value19\");\n\t\tmap.put(\"key20\", \"value20\");\n\t\tmap.put(\"key21\", \"value21\");\n\t\tmap.put(\"key22\", \"value22\");\n\t\tmap.put(\"key23\", \"value23\");\n\t\tmap.put(\"key24\", \"value24\");\n\t\tmap.put(\"key25\", \"value25\");\n\t\tmap.put(\"key26\", \"value26\");\n\t\tmap.put(\"key27\", \"value27\");\n\t\tmap.put(\"key28\", \"value28\");\n\t\tmap.put(\"key29\", \"value29\");\n\t\tmap.put(\"key30\", \"value30\");\n\t\tmap.put(\"key31\", \"value31\");\n\t\tmap.put(\"key32\", \"value32\");\n\t\tmap.put(\"key33\", \"value33\");\n\t\tmap.put(\"key34\", \"value34\n",
        "\tstatic void main(String[] args){\n\t\tMap<String, String> map = new HashMap<String, String>();\n\t\tmap.put(\"key1\", \"value1\");\n\t\tmap.put(\"key2\", \"value2\");\n\t\tmap.put(\"key3\", \"value3\");\n\t\tmap.put(\"key4\", \"value4\");\n\t\tmap.put(\"key5\", \"value5\");\n\t\tmap.put(\"key6\", \"value6\");\n\t\tmap.put(\"key7\", \"value7\");\n\t\tmap.put(\"key8\", \"value8\");\n\t\tmap.put(\"key9\", \"value9\");\n\t\tmap.put(\"key10\", \"value10\");\n\t\tmap.put(\"key11\", \"value11\");\n\t\tmap.put(\"key12\", \"value12\");\n\t\tmap.put(\"key13\", \"value13\");\n\t\tmap.put(\"key14\", \"value14\");\n\t\tmap.put(\"key15\", \"value15\");\n\t\tmap.put(\"key16\", \"value16\");\n\t\tmap.put(\"key17\", \"value17\");\n\t\tmap.put(\"key18\", \"value18\");\n\t\tmap.put(\"key19\", \"value19\");\n\t\tmap.put(\"key20\", \"value20\");\n\t\tmap.put(\"key21\", \"value21\");\n\t\tmap.put(\"key22\", \"value22\");\n\t\tmap.put(\"key23\", \"value23\");\n\t\tmap.put(\"key24\", \"value24\");\n\t\tmap.put(\"key25\", \"value25\");\n\t\tmap.put(\"key26\", \"value26\");\n\t\tmap.put(\"key27\", \"value27\");\n\t\tmap.put(\"key28\", \"value28\");\n\t\tmap.put(\"key29\", \"value29\");\n\t\tmap.put(\"key30\", \"value30\");\n\t\tmap.put(\"key31\", \"value31\");\n\t\tmap.put(\"key32\", \"value32\");\n\t\tmap.put(\"key33\", \"value33\");\n\t\tmap.put(\"key\n",
        "\tvoid method(Map<String, String> map){\n\t\tfor(String key : map.keySet()){\n\t\t\tSystem.out.println(key);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "684",
    "source": "soSearches",
    "language": "java",
    "query": "how to set a background in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Background\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setBackground(Color.BLUE);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Hello World\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setBackground(Color.RED);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Hello World\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setBackground(Color.red);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"My Frame\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setBackground(Color.red);\n\t}\n}\n"
    ],
    "results": 4
},{
    "id": "685",
    "source": "soSearches",
    "language": "java",
    "query": "how to check internet conection java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.google.com\");\n\t\t\tHttpURLConnection urlConnect = (HttpURLConnection)url.openConnection();\n\t\t\turlConnect.setConnectTimeout(3000);\n\t\t\turlConnect.connect();\n\t\t\tif(urlConnect.getResponseCode()==200){\n\t\t\t\tSystem.out.println(\"Connected\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"Not Connected\");\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Not Connected\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.google.com\");\n\t\t\tHttpURLConnection urlConnect = (HttpURLConnection)url.openConnection();\n\t\t\turlConnect.setConnectTimeout(3000);\n\t\t\turlConnect.connect();\n\t\t\tif(urlConnect.getResponseCode()==200){\n\t\t\t\tSystem.out.println(\"Connected to the Internet\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"Not connected to the Internet\");\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Not connected to the Internet\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.google.com\");\n\t\t\tHttpURLConnection urlConnect = (HttpURLConnection)url.openConnection();\n\t\t\turlConnect.setConnectTimeout(3000);\n\t\t\turlConnect.connect();\n\t\t\tif(urlConnect.getResponseCode()==200){\n\t\t\t\tSystem.out.println(\"Internet is connected\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"Internet is not connected\");\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Internet is not connected\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.google.com\");\n\t\t\tURLConnection urlConn = url.openConnection();\n\t\t\turlConn.connect();\n\t\t\tSystem.out.println(\"Internet is connected\");\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Internet is not connected\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.google.com\");\n\t\t\tURLConnection urlConn = url.openConnection();\n\t\t\turlConn.connect();\n\t\t\tSystem.out.println(\"Connection established\");\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"No connection\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.google.com\");\n\t\t\tURLConnection urlConnection = url.openConnection();\n\t\t\turlConnection.connect();\n\t\t\tSystem.out.println(\"Connection established\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"No internet connection\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tURL url = new URL(\"http://www.google.com\");\n\t\t\tURLConnection urlConnection = url.openConnection();\n\t\t\turlConnection.connect();\n\t\t\tSystem.out.println(\"Internet is connected\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(\"Internet is not connected\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "686",
    "source": "soSearches",
    "language": "java",
    "query": "[java]how to work with date in java?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tDate date = new Date();\n\t\tSystem.out.println(date);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "687",
    "source": "soSearches",
    "language": "java",
    "query": "how to access first element of linkedlist java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tLinkedList<String> list = new LinkedList<String>();\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tSystem.out.println(list.get(0));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tLinkedList<String> list = new LinkedList<String>();\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tSystem.out.println(list.get(0));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tLinkedList<String> l=new LinkedList<String>();\n\t\tl.add(\"A\");\n\t\tl.add(\"B\");\n\t\tl.add(\"C\");\n\t\tl.add(\"D\");\n\t\tl.add(\"E\");\n\t\tSystem.out.println(l.get(0));\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tLinkedList<String> list = new LinkedList<String>();\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tSystem.out.println(list.get(0));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "688",
    "source": "soSearches",
    "language": "java",
    "query": "how to get data from a data table in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString[][] data = {\n\t\t\t{\"1\",\"2\",\"3\"},\n\t\t\t{\"4\",\"5\",\"6\"},\n\t\t\t{\"7\",\"8\",\"9\"}\n\t\t};\n\t\tSystem.out.println(data[1][1]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] data = {\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"};\n\t\tfor(int i=0;i<data.length;i++){\n\t\t\tSystem.out.println(data[i]);\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tString[][] data = {{\"1\",\"2\",\"3\"},{\"4\",\"5\",\"6\"},{\"7\",\"8\",\"9\"}};\n\t\tSystem.out.println(data[0][0]);\n\t\tSystem.out.println(data[1][1]);\n\t\tSystem.out.println(data[2][2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str);\n\t\tString str1 = \"Hello World\";\n\t\tSystem.out.println(str1);\n\t\tString str2 = \"Hello World\";\n\t\tSystem.out.println(str2);\n\t\tString str3 = \"Hello World\";\n\t\tSystem.out.println(str3);\n\t\tString str4 = \"Hello World\";\n\t\tSystem.out.println(str4);\n\t\tString str5 = \"Hello World\";\n\t\tSystem.out.println(str5);\n\t\tString str6 = \"Hello World\";\n\t\tSystem.out.println(str6);\n\t\tString str7 = \"Hello World\";\n\t\tSystem.out.println(str7);\n\t\tString str8 = \"Hello World\";\n\t\tSystem.out.println(str8);\n\t\tString str9 = \"Hello World\";\n\t\tSystem.out.println(str9);\n\t\tString str10 = \"Hello World\";\n\t\tSystem.out.println(str10);\n\t\tString str11 = \"Hello World\";\n\t\tSystem.out.println(str11);\n\t\tString str12 = \"Hello World\";\n\t\tSystem.out.println(str12);\n\t\tString str13 = \"Hello World\";\n\t\tSystem.out.println(str13);\n\t\tString str14 = \"Hello World\";\n\t\tSystem.out.println(str14);\n\t\tString str15 = \"Hello World\";\n\t\tSystem.out.println(str15);\n\t\tString str16 = \"Hello World\";\n\t\tSystem.out.println(str16);\n\t\tString str17 = \"Hello World\";\n\t\tSystem.out.println(str17);\n\t\tString str18 = \"Hello World\";\n\t\tSystem.out.println(str18);\n\t\tString str19 = \"Hello World\";\n\t\tSystem.out.println(str19);\n\t\tString str20 = \"Hello World\";\n\t\tSystem.out.println(str20);\n\t\tString str21 = \"Hello\n",
        "\tstatic void main(String[] args){\n\t\t//create a data table\n\t\tDataTable table = new DataTable();\n\t\t//add data to the table\n\t\ttable.add(\"name\", \"John\");\n\t\ttable.add(\"age\", \"30\");\n\t\ttable.add(\"city\", \"New York\");\n\t\t//get data from the table\n\t\tString name = table.get(\"name\");\n\t\tString age = table.get(\"age\");\n\t\tString city = table.get(\"city\");\n\t\t//print the data\n\t\tSystem.out.println(\"name: \" + name);\n\t\tSystem.out.println(\"age: \" + age);\n\t\tSystem.out.println(\"city: \" + city);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] data = {\"1\",\"2\",\"3\",\"4\",\"5\"};\n\t\tfor(int i = 0; i < data.length; i++){\n\t\t\tSystem.out.println(data[i]);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "689",
    "source": "soSearches",
    "language": "java",
    "query": "how to compare the aski value of a number in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tif(a==b){\n\t\t\tSystem.out.println(\"a and b are equal\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"a and b are not equal\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tif(a>b){\n\t\t\tSystem.out.println(\"a is greater than b\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"b is greater than a\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "690",
    "source": "soSearches",
    "language": "java",
    "query": "how to get the size of the 2d array in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[][] a = {{1,2,3},{4,5,6},{7,8,9}};\n\t\tSystem.out.println(a.length);\n\t\tSystem.out.println(a[0].length);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] arr = {{1,2,3},{4,5,6},{7,8,9}};\n\t\tSystem.out.println(arr.length);\n\t\tSystem.out.println(arr[0].length);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] a = {{1,2,3},{4,5,6},{7,8,9}};\n\t\tint row = a.length;\n\t\tint col = a[0].length;\n\t\tSystem.out.println(\"row: \" + row);\n\t\tSystem.out.println(\"col: \" + col);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "691",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert list<integer> to int[] in java? [duplicate]",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tList<Integer> list = new ArrayList<Integer>();\n\t\tlist.add(1);\n\t\tlist.add(2);\n\t\tlist.add(3);\n\t\tlist.add(4);\n\t\tlist.add(5);\n\t\tlist.add(6);\n\t\tlist.add(7);\n\t\tlist.add(8);\n\t\tlist.add(9);\n\t\tlist.add(10);\n\t\tlist.add(11);\n\t\tlist.add(12);\n\t\tlist.add(13);\n\t\tlist.add(14);\n\t\tlist.add(15);\n\t\tlist.add(16);\n\t\tlist.add(17);\n\t\tlist.add(18);\n\t\tlist.add(19);\n\t\tlist.add(20);\n\t\tlist.add(21);\n\t\tlist.add(22);\n\t\tlist.add(23);\n\t\tlist.add(24);\n\t\tlist.add(25);\n\t\tlist.add(26);\n\t\tlist.add(27);\n\t\tlist.add(28);\n\t\tlist.add(29);\n\t\tlist.add(30);\n\t\tlist.add(31);\n\t\tlist.add(32);\n\t\tlist.add(33);\n\t\tlist.add(34);\n\t\tlist.add(35);\n\t\tlist.add(36);\n\t\tlist.add(37);\n\t\tlist.add(38);\n\t\tlist.add(39);\n\t\tlist.add(40);\n\t\tlist.add(41);\n\t\tlist.add(42);\n\t\tlist.add(43);\n\t\tlist.add(44);\n\t\tlist.add(45);\n\t\tlist.add(46);\n\t\tlist.add(47);\n\t\tlist.add(48);\n\t\tlist.add(49);\n\t\tlist.add(50);\n\t\tlist.add(51);\n\t\tlist.add(52);\n\t\tlist.add\n",
        "\tstatic void main(String[] args){\n\t\tList<Integer> list = new ArrayList<Integer>();\n\t\tlist.add(1);\n\t\tlist.add(2);\n\t\tlist.add(3);\n\t\tlist.add(4);\n\t\tlist.add(5);\n\t\tint[] arr = new int[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++){\n\t\t\tarr[i] = list.get(i);\n\t\t}\n\t\tSystem.out.println(Arrays.toString(arr));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<Integer> list = new ArrayList<Integer>();\n\t\tlist.add(1);\n\t\tlist.add(2);\n\t\tlist.add(3);\n\t\tlist.add(4);\n\t\tlist.add(5);\n\t\tlist.add(6);\n\t\tlist.add(7);\n\t\tlist.add(8);\n\t\tlist.add(9);\n\t\tlist.add(10);\n\t\tint[] arr = new int[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++){\n\t\t\tarr[i] = list.get(i);\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.println(arr[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<Integer> list = new ArrayList<Integer>();\n\t\tlist.add(1);\n\t\tlist.add(2);\n\t\tlist.add(3);\n\t\tlist.add(4);\n\t\tlist.add(5);\n\t\tlist.add(6);\n\t\tlist.add(7);\n\t\tlist.add(8);\n\t\tlist.add(9);\n\t\tlist.add(10);\n\t\tint[] array = new int[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++){\n\t\t\tarray[i] = list.get(i);\n\t\t}\n\t\tSystem.out.println(Arrays.toString(array));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<Integer> list = new ArrayList<Integer>();\n\t\tlist.add(1);\n\t\tlist.add(2);\n\t\tlist.add(3);\n\t\tlist.add(4);\n\t\tlist.add(5);\n\t\tlist.add(6);\n\t\tlist.add(7);\n\t\tlist.add(8);\n\t\tlist.add(9);\n\t\tlist.add(10);\n\t\tint[] arr = new int[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++){\n\t\t\tarr[i] = list.get(i);\n\t\t}\n\t\tSystem.out.println(Arrays.toString(arr));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "692",
    "source": "soSearches",
    "language": "java",
    "query": "how to shuffle cards java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] cards = new int[52];\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tcards[i] = i;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tint r = (int)(Math.random() * 52);\n\t\t\tint temp = cards[i];\n\t\t\tcards[i] = cards[r];\n\t\t\tcards[r] = temp;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tSystem.out.println(cards[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] cards = new int[52];\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tcards[i] = i;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tint random = (int)(Math.random() * 52);\n\t\t\tint temp = cards[i];\n\t\t\tcards[i] = cards[random];\n\t\t\tcards[random] = temp;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tSystem.out.print(cards[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] cards = new int[52];\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tcards[i] = i;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tint random = (int)(Math.random() * 52);\n\t\t\tint temp = cards[i];\n\t\t\tcards[i] = cards[random];\n\t\t\tcards[random] = temp;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tSystem.out.println(cards[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] cards = new int[52];\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tcards[i] = i;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tint j = (int) (Math.random() * 52);\n\t\t\tint temp = cards[i];\n\t\t\tcards[i] = cards[j];\n\t\t\tcards[j] = temp;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tSystem.out.println(cards[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] cards = new int[52];\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tcards[i] = i + 1;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tint r = (int)(Math.random() * 52);\n\t\t\tint temp = cards[i];\n\t\t\tcards[i] = cards[r];\n\t\t\tcards[r] = temp;\n\t\t}\n\t\tfor(int i = 0; i < 52; i++){\n\t\t\tSystem.out.print(cards[i] + \" \");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "693",
    "source": "soSearches",
    "language": "java",
    "query": "how to click on a button which has java",
    "snippets": [
        "\tvoid main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.findElement(By.name(\"q\")).sendKeys(\"java\");\n\t\tdriver.findElement(By.name(\"btnG\")).click();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Hello World\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300, 300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button = new JButton(\"Click Me\");\n\t\tframe.add(button);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tSystem.out.println(\"Hello World\");\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Click me\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button = new JButton(\"Click me\");\n\t\tframe.add(button);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tSystem.out.println(\"You clicked me\");\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 5
},{
    "id": "694",
    "source": "soSearches",
    "language": "java",
    "query": "how to write an array list in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"Hello\");\n\t\tlist.add(\"World\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"hello\");\n\t\tlist.add(\"world\");\n\t\tlist.add(\"java\");\n\t\tlist.add(\"programming\");\n\t\tlist.add(\"is\");\n\t\tlist.add(\"fun\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> list = new ArrayList<String>();\n\t\tlist.add(\"one\");\n\t\tlist.add(\"two\");\n\t\tlist.add(\"three\");\n\t\tlist.add(\"four\");\n\t\tlist.add(\"five\");\n\t\tlist.add(\"six\");\n\t\tlist.add(\"seven\");\n\t\tlist.add(\"eight\");\n\t\tlist.add(\"nine\");\n\t\tlist.add(\"ten\");\n\t\tlist.add(\"eleven\");\n\t\tlist.add(\"twelve\");\n\t\tlist.add(\"thirteen\");\n\t\tlist.add(\"fourteen\");\n\t\tlist.add(\"fifteen\");\n\t\tlist.add(\"sixteen\");\n\t\tlist.add(\"seventeen\");\n\t\tlist.add(\"eighteen\");\n\t\tlist.add(\"nineteen\");\n\t\tlist.add(\"twenty\");\n\t\tlist.add(\"twenty one\");\n\t\tlist.add(\"twenty two\");\n\t\tlist.add(\"twenty three\");\n\t\tlist.add(\"twenty four\");\n\t\tlist.add(\"twenty five\");\n\t\tlist.add(\"twenty six\");\n\t\tlist.add(\"twenty seven\");\n\t\tlist.add(\"twenty eight\");\n\t\tlist.add(\"twenty nine\");\n\t\tlist.add(\"thirty\");\n\t\tlist.add(\"thirty one\");\n\t\tlist.add(\"thirty two\");\n\t\tlist.add(\"thirty three\");\n\t\tlist.add(\"thirty four\");\n\t\tlist.add(\"thirty five\");\n\t\tlist.add(\"thirty six\");\n\t\tlist.add(\"thirty seven\");\n\t\tlist.add(\"thirty eight\");\n\t\tlist.add(\"thirty nine\");\n\t\tlist.add(\"forty\");\n\t\tlist.add(\"forty one\");\n\t\tlist.add(\"forty two\");\n\t\tlist.add(\"forty three\");\n\t\tlist.add(\"forty four\");\n\t\tlist.add(\"forty five\");\n\t\tlist.add(\"forty\n",
        "\tstatic void main(String[] args){\n\t\tArrayList<String> al = new ArrayList<String>();\n\t\tal.add(\"A\");\n\t\tal.add(\"B\");\n\t\tal.add(\"C\");\n\t\tal.add(\"D\");\n\t\tal.add(\"E\");\n\t\tal.add(\"F\");\n\t\tal.add(\"G\");\n\t\tal.add(\"H\");\n\t\tal.add(\"I\");\n\t\tal.add(\"J\");\n\t\tal.add(\"K\");\n\t\tal.add(\"L\");\n\t\tal.add(\"M\");\n\t\tal.add(\"N\");\n\t\tal.add(\"O\");\n\t\tal.add(\"P\");\n\t\tal.add(\"Q\");\n\t\tal.add(\"R\");\n\t\tal.add(\"S\");\n\t\tal.add(\"T\");\n\t\tal.add(\"U\");\n\t\tal.add(\"V\");\n\t\tal.add(\"W\");\n\t\tal.add(\"X\");\n\t\tal.add(\"Y\");\n\t\tal.add(\"Z\");\n\t\tSystem.out.println(al);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "695",
    "source": "soSearches",
    "language": "java",
    "query": "how to set a remender on mysql using java netbeans",
    "snippets": [
        "\tvoid setReminder(String reminder){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tString sql=\"insert into reminder values('\"+reminder+\"')\";\n\t\t\tstmt.executeUpdate(sql);\n\t\t\tcon.close();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid setReminder(String reminder){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement st=con.createStatement();\n\t\t\tst.executeUpdate(\"insert into reminder values('\"+reminder+\"')\");\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid setReminder(String reminder){\n\t\ttry{\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/reminder\",\"root\",\"\");\n\t\t\tStatement stmt = con.createStatement();\n\t\t\tstmt.executeUpdate(\"insert into reminder values('\"+reminder+\"')\");\n\t\t\tcon.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid setReminder(String reminder){\n\t\tSystem.out.println(\"Reminder set\");\n\t}\n}\n",
        "\tvoid setReminder(String reminder){\n\t\tSystem.out.println(\"Reminder set to: \"+reminder);\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void setReminder(String reminder){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "696",
    "source": "soSearches",
    "language": "java",
    "query": "how to select specific date in calender java selenium",
    "snippets": [
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new ChromeDriver();\n\t\tdriver.get(\"https://www.google.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(\"calender\");\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENT\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new ChromeDriver();\n\t\tdriver.get(\"https://www.google.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(\"selenium\");\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//a[@class='l'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='gb_b gb_db gb_R']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new FirefoxDriver();\n\t\tdriver.get(\"https://www.google.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(\"selenium\");\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www.seleniumhq.org/']\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@href='https://www\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tWebDriver driver=new FirefoxDriver();\n\t\tdriver.get(\"https://www.google.com/\");\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).sendKeys(\"selenium\");\n\t\tdriver.findElement(By.xpath(\"//input[@id='lst-ib']\")).submit();\n\t\tdriver.findElement(By.xpath(\"//a[@class='l'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][contains(text(),'Selenium - Web Browser Automation')]\")).click();\n\t\tdriver.findElement(By.xpath(\"//a[@class='g'][\n",
        "\tstatic void main(String[] args) {\n\t\tWebDriver driver=new ChromeDriver();\n\t\tdriver.get(\"https://www.google\n"
    ],
    "results": 5
},{
    "id": "697",
    "source": "soSearches",
    "language": "java",
    "query": "how to use variable storing data in another java class in android",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tClazz clazz = new Clazz();\n\t\tclazz.print();\n\t}\n\tpublic void print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tString name;\n\tint age;\n\tpublic void setName(String name){\n\t\tthis.name=name;\n\t}\n\tpublic void setAge(int age){\n\t\tthis.age=age;\n\t}\n\tpublic String getName(){\n\t\treturn name;\n\t}\n\tpublic int getAge(){\n\t\treturn age;\n\t}\n}\n",
        "\tvoid setData(int data){\n\t\tthis.data=data;\n\t}\n\tpublic\n\tint getData(){\n\t\treturn data;\n\t}\n\tprivate int data;\n}\n",
        "\tvoid setData(String data){\n\t\tthis.data = data;\n\t}\n\tpublic\n\tString getData(){\n\t\treturn data;\n\t}\n\tprivate\n\tString data;\n}\n",
        "\tstatic String name;\n\tpublic static String getName(){\n\t\treturn name;\n\t}\n\tpublic static void setName(String name){\n\t\tClazz.name = name;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tClazz clazz = new Clazz();\n\t\tclazz.doSomething();\n\t}\n\tpublic void doSomething(){\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tint c = a + b;\n\t\tSystem.out.println(c);\n\t}\n}\n",
        "\tvoid print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "698",
    "source": "soSearches",
    "language": "java",
    "query": "how to add listeners on picture in java swing",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Picture\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJLabel label = new JLabel();\n\t\tImageIcon icon = new ImageIcon(\"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\java.png\");\n\t\tlabel.setIcon(icon);\n\t\tframe.add(label);\n\t\tframe.addMouseListener(new MouseAdapter(){\n\t\t\tpublic void mouseClicked(MouseEvent e){\n\t\t\t\tSystem.out.println(\"Mouse Clicked\");\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tvoid addListener(Component c, ActionListener l){\n\t\tif(c instanceof JButton){\n\t\t\t((JButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextField){\n\t\t\t((JTextField)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextArea){\n\t\t\t((JTextArea)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JComboBox){\n\t\t\t((JComboBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JCheckBox){\n\t\t\t((JCheckBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JRadioButton){\n\t\t\t((JRadioButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JList){\n\t\t\t((JList)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTable){\n\t\t\t((JTable)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSpinner){\n\t\t\t((JSpinner)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSlider){\n\t\t\t((JSlider)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JProgressBar){\n\t\t\t((JProgressBar)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JPanel){\n\t\t\tfor(Component c1:((JPanel)c).getComponents()){\n\t\t\t\taddListener(c1,l);\n\t\t\t}\n\t\t}\n\t\telse if(c instanceof JScrollPane){\n\t\t\taddListener(((JScrollPane)c).getViewport().getView(),l);\n\t\t}\n\t\telse if(c instanceof JViewport){\n\t\t\taddListener((\n",
        "\tvoid addListener(Component c, ActionListener l){\n\t\tif(c instanceof JButton){\n\t\t\t((JButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextField){\n\t\t\t((JTextField)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextArea){\n\t\t\t((JTextArea)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JComboBox){\n\t\t\t((JComboBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JCheckBox){\n\t\t\t((JCheckBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JRadioButton){\n\t\t\t((JRadioButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSlider){\n\t\t\t((JSlider)c).addChangeListener(l);\n\t\t}\n\t\telse if(c instanceof JSpinner){\n\t\t\t((JSpinner)c).addChangeListener(l);\n\t\t}\n\t\telse if(c instanceof JProgressBar){\n\t\t\t((JProgressBar)c).addChangeListener(l);\n\t\t}\n\t\telse if(c instanceof JList){\n\t\t\t((JList)c).addListSelectionListener(l);\n\t\t}\n\t\telse if(c instanceof JTable){\n\t\t\t((JTable)c).addMouseListener(l);\n\t\t}\n\t\telse if(c instanceof JTree){\n\t\t\t((JTree)c).addTreeSelectionListener(l);\n\t\t}\n\t\telse if(c instanceof JTabbedPane){\n\t\t\t((JTabbedPane)c).addChangeListener(l);\n\t\t}\n\t\telse if(c instanceof JScrollPane){\n\t\t\t((JScrollPane)c).getViewport().addChangeListener(l);\n\t\t}\n\t\telse\n",
        "\tvoid addListener(Component c, ActionListener l){\n\t\tif(c instanceof JButton){\n\t\t\t((JButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextField){\n\t\t\t((JTextField)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextArea){\n\t\t\t((JTextArea)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JComboBox){\n\t\t\t((JComboBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JCheckBox){\n\t\t\t((JCheckBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JRadioButton){\n\t\t\t((JRadioButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JToggleButton){\n\t\t\t((JToggleButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JList){\n\t\t\t((JList)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTable){\n\t\t\t((JTable)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSpinner){\n\t\t\t((JSpinner)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSlider){\n\t\t\t((JSlider)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JProgressBar){\n\t\t\t((JProgressBar)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JPanel){\n\t\t\tfor(int i=0;i<((JPanel)c).getComponentCount();i++){\n\t\t\t\taddListener(((JPanel)c).getComponent(i),l);\n\t\t\t}\n\t\t}\n\t\telse if(c instanceof JScrollP\n",
        "\tvoid addListener(Component c, ActionListener l){\n\t\tif(c instanceof JButton){\n\t\t\t((JButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextField){\n\t\t\t((JTextField)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextArea){\n\t\t\t((JTextArea)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JComboBox){\n\t\t\t((JComboBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JCheckBox){\n\t\t\t((JCheckBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JRadioButton){\n\t\t\t((JRadioButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JList){\n\t\t\t((JList)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTable){\n\t\t\t((JTable)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTree){\n\t\t\t((JTree)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JScrollPane){\n\t\t\t((JScrollPane)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSlider){\n\t\t\t((JSlider)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSpinner){\n\t\t\t((JSpinner)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JProgressBar){\n\t\t\t((JProgressBar)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JPanel){\n\t\t\tfor(int i=0;i<((JPanel)c).getComponentCount();i++){\n\t\t\t\taddListener(((JPan\n",
        "\tvoid addListener(Component c, ActionListener l){\n\t\tif(c instanceof JButton){\n\t\t\t((JButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextField){\n\t\t\t((JTextField)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTextArea){\n\t\t\t((JTextArea)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JComboBox){\n\t\t\t((JComboBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JCheckBox){\n\t\t\t((JCheckBox)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JRadioButton){\n\t\t\t((JRadioButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JList){\n\t\t\t((JList)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTable){\n\t\t\t((JTable)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSpinner){\n\t\t\t((JSpinner)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JSlider){\n\t\t\t((JSlider)c).addChangeListener(l);\n\t\t}\n\t\telse if(c instanceof JProgressBar){\n\t\t\t((JProgressBar)c).addChangeListener(l);\n\t\t}\n\t\telse if(c instanceof JToggleButton){\n\t\t\t((JToggleButton)c).addActionListener(l);\n\t\t}\n\t\telse if(c instanceof JTabbedPane){\n\t\t\t((JTabbedPane)c).addChangeListener(l);\n\t\t}\n\t\telse if(c instanceof JTree){\n\t\t\t((JTree)c).addTreeSelectionListener(l);\n\t\t}\n\t\telse if(c instanceof J\n",
        "\tvoid addListeners(JFrame frame){\n\t\tframe.addWindowListener(new WindowAdapter(){\n\t\t\tpublic void windowClosing(WindowEvent e){\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tvoid addListener(Component c, MouseListener l){\n\t\tc.addMouseListener(l);\n\t}\n}\n",
        "\tvoid addListener(MouseListener listener){\n\t\t\n\t}\n}\n",
        "\tvoid addListener(ActionListener l){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "699",
    "source": "soSearches",
    "language": "java",
    "query": "java how to replace underscore",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello_World\";\n\t\tString str1 = str.replace(\"_\", \" \");\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tvoid method(){\n\t\tString str = \"Hello_World\";\n\t\tstr = str.replace(\"_\", \" \");\n\t\tSystem.out.println(str);\n\t}\n}\n",
        "\tvoid method(){\n\t\tString str = \"Hello_World\";\n\t\tString str1 = str.replace(\"_\", \" \");\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello_World\";\n\t\tString s1 = s.replace(\"_\",\" \");\n\t\tSystem.out.println(s1);\n\t}\n}\n",
        "\tvoid method(){\n\t\tString str = \"Hello_World\";\n\t\tString str2 = str.replace(\"_\",\" \");\n\t\tSystem.out.println(str2);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "700",
    "source": "soSearches",
    "language": "java",
    "query": "how to install java 9 on linux devian",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "701",
    "source": "soSearches",
    "language": "java",
    "query": "how to start the code in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "702",
    "source": "soSearches",
    "language": "java",
    "query": "how to add  br tag to text in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tSystem.out.println(str.replace(\"World\", \"<br>World\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tSystem.out.println(str.replace(\"World\",\"World<br>\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello World\";\n\t\tSystem.out.println(s.replace(\"World\", \"<br>World\"));\n\t}\n}\n",
        "\tvoid addBr(String text){\n\t\tString[] words = text.split(\" \");\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(String word:words){\n\t\t\tsb.append(word);\n\t\t\tsb.append(\"<br>\");\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tvoid addBrTag(String text){\n\t\tString[] words = text.split(\" \");\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(String word:words){\n\t\t\tsb.append(word);\n\t\t\tsb.append(\"<br>\");\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"<html><body><h1>Hello World</h1></body></html>\";\n\t\tSystem.out.println(str);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "703",
    "source": "soSearches",
    "language": "java",
    "query": "how to run java code in android and display it in the app",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid display(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "704",
    "source": "soSearches",
    "language": "java",
    "query": "[java] how to create a  mystery word game grid",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint row = 5;\n\t\tint col = 5;\n\t\tchar[][] grid = new char[row][col];\n\t\tfor(int i = 0; i < row; i++){\n\t\t\tfor(int j = 0; j < col; j++){\n\t\t\t\tgrid[i][j] = '*';\n\t\t\t}\n\t\t}\n\t\tgrid[0][0] = 'A';\n\t\tgrid[0][1] = 'B';\n\t\tgrid[0][2] = 'C';\n\t\tgrid[0][3] = 'D';\n\t\tgrid[0][4] = 'E';\n\t\tgrid[1][0] = 'F';\n\t\tgrid[1][1] = 'G';\n\t\tgrid[1][2] = 'H';\n\t\tgrid[1][3] = 'I';\n\t\tgrid[1][4] = 'J';\n\t\tgrid[2][0] = 'K';\n\t\tgrid[2][1] = 'L';\n\t\tgrid[2][2] = 'M';\n\t\tgrid[2][3] = 'N';\n\t\tgrid[2][4] = 'O';\n\t\tgrid[3][0] = 'P';\n\t\tgrid[3][1] = 'Q';\n\t\tgrid[3][2] = 'R';\n\t\tgrid[3][3] = 'S';\n\t\tgrid[3][4] = 'T';\n\t\tgrid[4][0] = 'U';\n\t\tgrid[4][1] = 'V';\n\t\tgrid[4][2] = 'W';\n\t\tgrid[4][3] = 'X';\n\t\tgrid[4][4] = 'Y';\n\t\tgrid[4][5] = 'Z';\n\t\tfor(int i = 0; i < row; i++){\n\t\t\tfor(int j = 0; j < col; j++){\n\t\t\t\tSystem.out.print(grid[i][j] + \" \");\n\t\t\t}\n",
        "\tstatic void main(String[] args){\n\t\tint rows = 10;\n\t\tint columns = 10;\n\t\tchar[][] grid = new char[rows][columns];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tgrid[i][j] = '-';\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(grid[0][0]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint rows = 5;\n\t\tint cols = 5;\n\t\tchar[][] grid = new char[rows][cols];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < cols; j++){\n\t\t\t\tgrid[i][j] = '-';\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(grid[0][0]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint rows = 10;\n\t\tint cols = 10;\n\t\tchar[][] grid = new char[rows][cols];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < cols; j++){\n\t\t\t\tgrid[i][j] = '*';\n\t\t\t}\n\t\t}\n\t\tgrid[0][0] = 'A';\n\t\tgrid[0][1] = 'B';\n\t\tgrid[0][2] = 'C';\n\t\tgrid[0][3] = 'D';\n\t\tgrid[0][4] = 'E';\n\t\tgrid[0][5] = 'F';\n\t\tgrid[0][6] = 'G';\n\t\tgrid[0][7] = 'H';\n\t\tgrid[0][8] = 'I';\n\t\tgrid[0][9] = 'J';\n\t\tgrid[1][0] = 'K';\n\t\tgrid[1][1] = 'L';\n\t\tgrid[1][2] = 'M';\n\t\tgrid[1][3] = 'N';\n\t\tgrid[1][4] = 'O';\n\t\tgrid[1][5] = 'P';\n\t\tgrid[1][6] = 'Q';\n\t\tgrid[1][7] = 'R';\n\t\tgrid[1][8] = 'S';\n\t\tgrid[1][9] = 'T';\n\t\tgrid[2][0] = 'U';\n\t\tgrid[2][1] = 'V';\n\t\tgrid[2][2] = 'W';\n\t\tgrid[2][3] = 'X';\n\t\tgrid[2][4] = 'Y';\n\t\tgrid[2][5] = 'Z';\n\t\tgrid[2][6] = 'A';\n\t\tgrid[2][7] = 'B';\n\t\tgrid[2][8] = 'C';\n\t\tgrid[2][9] = 'D';\n\t\tgrid[3\n",
        "\tstatic void main(String[] args){\n\t\tint rows = 5;\n\t\tint columns = 5;\n\t\tString[][] grid = new String[rows][columns];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tgrid[i][j] = \"*\";\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(grid[0][0]);\n\t\tSystem.out.println(grid[0][1]);\n\t\tSystem.out.println(grid[0][2]);\n\t\tSystem.out.println(grid[0][3]);\n\t\tSystem.out.println(grid[0][4]);\n\t\tSystem.out.println(grid[1][0]);\n\t\tSystem.out.println(grid[1][1]);\n\t\tSystem.out.println(grid[1][2]);\n\t\tSystem.out.println(grid[1][3]);\n\t\tSystem.out.println(grid[1][4]);\n\t\tSystem.out.println(grid[2][0]);\n\t\tSystem.out.println(grid[2][1]);\n\t\tSystem.out.println(grid[2][2]);\n\t\tSystem.out.println(grid[2][3]);\n\t\tSystem.out.println(grid[2][4]);\n\t\tSystem.out.println(grid[3][0]);\n\t\tSystem.out.println(grid[3][1]);\n\t\tSystem.out.println(grid[3][2]);\n\t\tSystem.out.println(grid[3][3]);\n\t\tSystem.out.println(grid[3][4]);\n\t\tSystem.out.println(grid[4][0]);\n\t\tSystem.out.println(grid[4][1]);\n\t\tSystem.out.println(grid[4][2]);\n\t\tSystem.out.println(grid[4][3]);\n\t\tSystem.out.println(grid[4][4]);\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tint row = 5;\n\t\tint col = 5;\n\t\tchar[][] grid = new char[row][col];\n\t\tfor(int i = 0; i < row; i++){\n\t\t\tfor(int j = 0; j < col; j++){\n\t\t\t\tgrid[i][j] = '-';\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(grid[0][0]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] words = {\"apple\",\"banana\",\"orange\",\"coconut\",\"strawberry\",\"lime\",\"grapefruit\",\"watermelon\",\"peach\",\"cherry\"};\n\t\tString word = words[(int)(Math.random()*words.length)];\n\t\tchar[] letters = word.toCharArray();\n\t\tchar[] grid = new char[letters.length];\n\t\tfor(int i = 0; i < grid.length; i++){\n\t\t\tgrid[i] = '-';\n\t\t}\n\t\tboolean found = false;\n\t\tint guesses = 8;\n\t\twhile(!found && guesses > 0){\n\t\t\tSystem.out.println(\"You have \" + guesses + \" guesses left.\");\n\t\t\tSystem.out.println(\"Your grid: \" + String.valueOf(grid));\n\t\t\tSystem.out.println(\"Enter a letter: \");\n\t\t\tchar letter = (char)(System.in.read() - 32);\n\t\t\tfor(int i = 0; i < letters.length; i++){\n\t\t\t\tif(letter == letters[i]){\n\t\t\t\t\tgrid[i] = letter;\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!found){\n\t\t\t\tguesses--;\n\t\t\t}\n\t\t}\n\t\tif(guesses > 0){\n\t\t\tSystem.out.println(\"You win!\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"You lose!\");\n\t\t}\n\t\tSystem.out.println(\"The word was: \" + word);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] words = {\"apple\",\"banana\",\"orange\",\"coconut\",\"strawberry\",\"raspberry\",\"blackberry\",\"cherry\"};\n\t\tString word = words[(int) (Math.random()*words.length)];\n\t\tchar[] grid = new char[word.length()];\n\t\tfor(int i = 0; i < word.length(); i++){\n\t\t\tgrid[i] = '-';\n\t\t}\n\t\tboolean found = false;\n\t\twhile(!found){\n\t\t\tSystem.out.println(\"Guess the word: \");\n\t\t\tString guess = Keyboard.readString();\n\t\t\tif(guess.equals(word)){\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"Sorry, that's not it.\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"You guessed it!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString[] words = {\"apple\",\"banana\",\"orange\",\"coconut\",\"strawberry\",\"raspberry\",\"blackberry\",\"blueberry\",\"grapes\",\"mango\"};\n\t\tString word = words[(int) (Math.random()*words.length)];\n\t\tchar[] letters = word.toCharArray();\n\t\tchar[] grid = new char[letters.length];\n\t\tfor(int i = 0; i < grid.length; i++){\n\t\t\tgrid[i] = '-';\n\t\t}\n\t\tint guesss = 8;\n\t\twhile(guesss > 0){\n\t\t\tSystem.out.println(\"You have \" + guesss + \" guesses left.\");\n\t\t\tSystem.out.println(\"Available letters: \" + getAvailableLetters(letters, grid));\n\t\t\tSystem.out.println(\"Please guess a letter: \");\n\t\t\tchar guess = getGuess();\n\t\t\tif(!isLetterInWord(guess, letters)){\n\t\t\t\tSystem.out.println(\"Oops! That letter is not in my word: \" + getGrid(grid));\n\t\t\t\tguesss--;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"Good guess: \" + getGrid(grid));\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Sorry, you ran out of guesses. The word was \" + word + \".\");\n\t}\n\tpublic static String getAvailableLetters(char[] letters, char[] grid){\n\t\tString availableLetters = \"\";\n\t\tfor(int i = 0; i < letters.length; i++){\n\t\t\tif(!isLetterInGrid(letters[i], grid)){\n\t\t\t\tavailableLetters += letters[i];\n\t\t\t}\n\t\t}\n\t\treturn availableLetters;\n\t}\n\tpublic static boolean isLetterInGrid(char letter, char[] grid){\n\t\tfor(int i = 0; i < grid.length; i++){\n\t\t\tif(letter == grid\n"
    ],
    "results": 9
},{
    "id": "705",
    "source": "soSearches",
    "language": "java",
    "query": "how to cut file in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\";\n\t\tString newFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\";\n\t\tint size = 10;\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(fileName);\n\t\t\tFileOutputStream fos = new FileOutputStream(newFileName);\n\t\t\tbyte[] buffer = new byte[size];\n\t\t\tint count;\n\t\t\twhile((count = fis.read(buffer)) != -1){\n\t\t\t\tfos.write(buffer, 0, count);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\";\n\t\tString newFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test1.txt\";\n\t\tint size = 10;\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(fileName);\n\t\t\tFileOutputStream fos = new FileOutputStream(newFileName);\n\t\t\tint count = 0;\n\t\t\twhile((count = fis.read()) != -1){\n\t\t\t\tif(count == 10){\n\t\t\t\t\tfos.write(10);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test.txt\";\n\t\tString fileName2 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\";\n\t\tString fileName3 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test3.txt\";\n\t\tString fileName4 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test4.txt\";\n\t\tString fileName5 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test5.txt\";\n\t\tString fileName6 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test6.txt\";\n\t\tString fileName7 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test7.txt\";\n\t\tString fileName8 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test8.txt\";\n\t\tString fileName9 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test9.txt\";\n\t\tString fileName10 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test10.txt\";\n\t\tString fileName11 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test11.txt\";\n\t\tString fileName12 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test12.txt\";\n\t\tString fileName13 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test13.txt\";\n\t\tString fileName14 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test14.txt\";\n\t\tString fileName15 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test15.txt\";\n\t\tString fileName16 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test16.txt\";\n\t\tString fileName17 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test17.txt\";\n\t\tString fileName18 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test18.txt\";\n\t\tString fileName19 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test19.txt\";\n\t\tString fileName20 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test20.txt\";\n\t\tString fileName21 = \"C:\\\\Users\\\\User\\\\Desktop\\\\test21.txt\";\n\t\tString fileName22 = \"\n",
        "\tstatic void main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\";\n\t\tString newFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\test2.txt\";\n\t\tint start = 0;\n\t\tint end = 10;\n\t\tcutFile(fileName, newFileName, start, end);\n\t}\n\tpublic static void cutFile(String fileName, String newFileName, int start, int end){\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(fileName);\n\t\t\tFileOutputStream fos = new FileOutputStream(newFileName);\n\t\t\tint len = (end - start) + 1;\n\t\t\tbyte[] buffer = new byte[len];\n\t\t\tfis.skip(start);\n\t\t\tfis.read(buffer);\n\t\t\tfos.write(buffer);\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\";\n\t\tString fileName2 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test2.txt\";\n\t\tString fileName3 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test3.txt\";\n\t\tString fileName4 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test4.txt\";\n\t\tString fileName5 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test5.txt\";\n\t\tString fileName6 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test6.txt\";\n\t\tString fileName7 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test7.txt\";\n\t\tString fileName8 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test8.txt\";\n\t\tString fileName9 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test9.txt\";\n\t\tString fileName10 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test10.txt\";\n\t\tString fileName11 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test11.txt\";\n\t\tString fileName12 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test12.txt\";\n\t\tString fileName13 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test13.txt\";\n\t\tString fileName14 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test14.txt\";\n\t\tString fileName15 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test15.txt\";\n\t\tString fileName16 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test16.txt\";\n\t\tString fileName17 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test17.txt\";\n\t\tString fileName18 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test18.txt\";\n\t\tString fileName19 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test19.txt\";\n\t\tString fileName20 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test20.txt\";\n\t\tString fileName21 = \"C:\\\\Users\\\\user\\\\Desktop\\\\test21.txt\";\n\t\tString fileName22 = \"\n",
        "\tstatic void main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\";\n\t\tString newFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\test2.txt\";\n\t\tint start = 0;\n\t\tint end = 10;\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(fileName);\n\t\t\tFileOutputStream fos = new FileOutputStream(newFileName);\n\t\t\tint len = (int)fis.available();\n\t\t\tbyte[] b = new byte[len];\n\t\t\tfis.read(b);\n\t\t\tfos.write(b, start, end);\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile file = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\");\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tFileOutputStream fos = new FileOutputStream(\"C:\\\\Users\\\\user\\\\Desktop\\\\test2.txt\");\n\t\t\tint data;\n\t\t\twhile((data = fis.read()) != -1){\n\t\t\t\tfos.write(data);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.txt\";\n\t\tString path2 = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test2.txt\";\n\t\tFile file = new File(path);\n\t\tFile file2 = new File(path2);\n\t\ttry{\n\t\t\tFileInputStream fis = new FileInputStream(file);\n\t\t\tFileOutputStream fos = new FileOutputStream(file2);\n\t\t\tint len = 0;\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\twhile((len = fis.read(buf)) != -1){\n\t\t\t\tfos.write(buf, 0, len);\n\t\t\t}\n\t\t\tfis.close();\n\t\t\tfos.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"This is a string\";\n\t\tString[] words = str.split(\" \");\n\t\tfor(String word : words){\n\t\t\tSystem.out.println(word);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "706",
    "source": "soSearches",
    "language": "java",
    "query": "how to verify and print the application is logged in successfully in java selenium",
    "snippets": [
        "\tvoid method1(){\n\t\tSystem.out.println(\"method1\");\n\t}\n\tpublic\n\tvoid method2(){\n\t\tSystem.out.println(\"method2\");\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(String[] args) {\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "707",
    "source": "soSearches",
    "language": "java",
    "query": "how to create ajax [java]",
    "snippets": [
        "\tvoid method(){\n\t\ttry{\n\t\t\tString url = \"http://www.google.com\";\n\t\t\tURL obj = new URL(url);\n\t\t\tHttpURLConnection con = (HttpURLConnection) obj.openConnection();\n\t\t\tcon.setRequestMethod(\"GET\");\n\t\t\tcon.setRequestProperty(\"User-Agent\", \"Mozilla/5.0\");\n\t\t\tint responseCode = con.getResponseCode();\n\t\t\tSystem.out.println(\"\\nSending 'GET' request to URL : \" + url);\n\t\t\tSystem.out.println(\"Response Code : \" + responseCode);\n\t\t\tBufferedReader in = new BufferedReader(\n\t\t\t\t\tnew InputStreamReader(con.getInputStream()));\n\t\t\tString inputLine;\n\t\t\tStringBuffer response = new StringBuffer();\n\t\t\twhile ((inputLine = in.readLine()) != null) {\n\t\t\t\tresponse.append(inputLine);\n\t\t\t}\n\t\t\tin.close();\n\t\t\t//print result\n\t\t\tSystem.out.println(response.toString());\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\t//create ajax\n\t\tAjax ajax = new Ajax();\n\t\t//set the url\n\t\tajax.setUrl(\"http://www.google.com\");\n\t\t//set the callback\n\t\tajax.setCallback(new AjaxCallback(){\n\t\t\tpublic void onSuccess(String response){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//send the request\n\t\tajax.send();\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry{\n\t\t\t//create ajax object\n\t\t\tAjax ajax = new Ajax();\n\t\t\t//create ajax request\n\t\t\tAjaxRequest request = new AjaxRequest();\n\t\t\t//set request url\n\t\t\trequest.setUrl(\"http://www.google.com\");\n\t\t\t//set request method\n\t\t\trequest.setMethod(AjaxRequest.METHOD_GET);\n\t\t\t//set request data\n\t\t\trequest.setData(\"key1=value1&key2=value2\");\n\t\t\t//set request timeout\n\t\t\trequest.setTimeout(5000);\n\t\t\t//set request headers\n\t\t\trequest.setHeaders(\"key1:value1\\nkey2:value2\");\n\t\t\t//set request encoding\n\t\t\trequest.setEncoding(\"UTF-8\");\n\t\t\t//set request charset\n\t\t\trequest.setCharset(\"UTF-8\");\n\t\t\t//set request callback\n\t\t\trequest.setCallback(\"callback\");\n\t\t\t//set request callback data\n\t\t\trequest.setCallbackData(\"callbackData\");\n\t\t\t//set request callback encoding\n\t\t\trequest.setCallbackEncoding(\"UTF-8\");\n\t\t\t//set request callback charset\n\t\t\trequest.setCallbackCharset(\"UTF-8\");\n\t\t\t//set request callback type\n\t\t\trequest.setCallbackType(\"text/javascript\");\n\t\t\t//set request callback event\n\t\t\trequest.setCallbackEvent(\"callbackEvent\");\n\t\t\t//set request callback event data\n\t\t\trequest.setCallbackEventData(\"callbackEventData\");\n\t\t\t//set request callback event encoding\n\t\t\trequest.setCallbackEventEncoding(\"UTF-8\");\n\t\t\t//set request callback event charset\n\t\t\trequest.setCallbackEventCharset(\"UTF-8\");\n\t\t\t//set request callback event type\n\t\t\trequest.setCallbackEventType(\"text/javascript\");\n\t\t\t//set request callback event type\n\t\t\trequest.setCallbackEventType(\"text/javascript\");\n",
        "\tvoid doSomething(){\n\t\tString url = \"http://www.google.com\";\n\t\tString data = \"\";\n\t\tString method = \"GET\";\n\t\tString response = \"\";\n\t\ttry{\n\t\t\tresponse = new HttpRequest(url, data, method).send();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\t//create ajax\n\t\tAjax ajax = new Ajax();\n\t\t//create ajax request\n\t\tAjaxRequest ajaxRequest = new AjaxRequest();\n\t\t//set url\n\t\tajaxRequest.setUrl(\"http://www.google.com\");\n\t\t//set method\n\t\tajaxRequest.setMethod(\"GET\");\n\t\t//set callback\n\t\tajaxRequest.setCallback(new AjaxCallback(){\n\t\t\tpublic void onSuccess(AjaxResponse response){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//send ajax request\n\t\tajax.send(ajaxRequest);\n\t}\n}\n",
        "\tvoid method(){\n\t\t//create ajax\n\t\tAjax ajax = new Ajax();\n\t\t//create ajax\n\t\tajax.setUrl(\"http://www.google.com\");\n\t\t//create ajax\n\t\tajax.setMethod(\"GET\");\n\t\t//create ajax\n\t\tajax.setOnSuccess(new Function(){\n\t\t\tpublic void function(){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//create ajax\n\t\tajax.setOnFailure(new Function(){\n\t\t\tpublic void function(){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//create ajax\n\t\tajax.setOnComplete(new Function(){\n\t\t\tpublic void function(){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//create ajax\n\t\tajax.setOnStart(new Function(){\n\t\t\tpublic void function(){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//create ajax\n\t\tajax.setOnProgress(new Function(){\n\t\t\tpublic void function(){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//create ajax\n\t\tajax.setOnTimeout(new Function(){\n\t\t\tpublic void function(){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//create ajax\n\t\tajax.setTimeout(10000);\n\t\t//create ajax\n\t\tajax.setAsync(true);\n\t\t//create ajax\n\t\tajax.setCache(false);\n\t\t//create ajax\n\t\tajax.setData(\"param1=value1&param2=value2\");\n\t\t//create ajax\n\t\tajax.setDataType(\"json\");\n\t\t//create ajax\n\t\tajax.setHeader(\"header1\", \"value1\");\n\t\t//create ajax\n\t\tajax.setHeader(\"header\n",
        "\tvoid doSomething(){\n\t\t//create ajax\n\t\tAjax ajax = new Ajax();\n\t\t//set the url\n\t\tajax.setUrl(\"http://www.google.com\");\n\t\t//set the callback\n\t\tajax.setCallback(new AjaxCallback(){\n\t\t\tpublic void onComplete(String response){\n\t\t\t\t//do something\n\t\t\t}\n\t\t});\n\t\t//send the request\n\t\tajax.send();\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry{\n\t\t\t//create an instance of the class\n\t\t\tClass clazz = Class.forName(\"Clazz\");\n\t\t\t//create an instance of the class\n\t\t\tObject obj = clazz.newInstance();\n\t\t\t//invoke the method\n\t\t\tMethod method = clazz.getMethod(\"method\");\n\t\t\tmethod.invoke(obj);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 8
},{
    "id": "708",
    "source": "soSearches",
    "language": "java",
    "query": "how to add list java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add\n",
        "\tvoid add(List<String> list, String s){\n\t\tlist.add(s);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"hello\");\n\t\tlist.add(\"world\");\n\t\tlist.add(\"java\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"Hello\");\n\t\tlist.add(\"World\");\n\t\tlist.add(\"!\");\n\t\tSystem.out.println(list);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add(\"AA\");\n\t\tlist.add(\"BB\");\n\t\tlist.add(\"CC\");\n\t\tlist.add(\"DD\");\n\t\tlist.add(\"EE\");\n\t\tlist.add(\"FF\");\n\t\tlist.add(\"GG\");\n\t\tlist.add(\"HH\");\n\t\tlist.add(\"II\");\n\t\tlist.add(\"JJ\");\n\t\tlist.add(\"KK\");\n\t\tlist.add(\"LL\");\n\t\tlist.add(\"MM\");\n\t\tlist.add(\"NN\");\n\t\tlist.add(\"OO\");\n\t\tlist.add(\"PP\");\n\t\tlist.add(\"QQ\");\n\t\tlist.add(\"RR\");\n\t\tlist.add(\"SS\");\n\t\tlist.add(\"TT\");\n\t\tlist.add(\"UU\");\n\t\tlist.add(\"VV\");\n\t\tlist.add(\"WW\");\n\t\tlist.add(\"XX\");\n\t\tlist.add(\"YY\");\n\t\tlist.add(\"ZZ\");\n\t\tlist\n",
        "\tvoid add(List<String> list, String str){\n\t\tlist.add(str);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "709",
    "source": "soSearches",
    "language": "java",
    "query": "how to access sharepoint using java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString url = \"http://localhost:8080/sharepoint/\";\n\t\tString user = \"admin\";\n\t\tString password = \"admin\";\n\t\tString fileName = \"test.txt\";\n\t\tString fileContent = \"Hello World\";\n\t\tString fileType = \"text/plain\";\n\t\tString filePath = \"C:\\\\Users\\\\Public\\\\Documents\\\\test.txt\";\n\t\tString filePath2 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test2.txt\";\n\t\tString filePath3 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test3.txt\";\n\t\tString filePath4 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test4.txt\";\n\t\tString filePath5 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test5.txt\";\n\t\tString filePath6 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test6.txt\";\n\t\tString filePath7 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test7.txt\";\n\t\tString filePath8 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test8.txt\";\n\t\tString filePath9 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test9.txt\";\n\t\tString filePath10 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test10.txt\";\n\t\tString filePath11 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test11.txt\";\n\t\tString filePath12 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test12.txt\";\n\t\tString filePath13 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test13.txt\";\n\t\tString filePath14 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test14.txt\";\n\t\tString filePath15 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test15.txt\";\n\t\tString filePath16 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test16.txt\";\n\t\tString filePath17 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test17.txt\";\n\t\tString filePath18 = \"C:\\\\Users\\\\Public\\\\Documents\\\\test18.txt\";\n\t\tString filePath19\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"http://localhost:8080/sharepoint/\";\n\t\tString user = \"admin\";\n\t\tString password = \"admin\";\n\t\tString fileName = \"test.txt\";\n\t\tString fileContent = \"Hello World\";\n\t\tString fileType = \"text/plain\";\n\t\tString filePath = \"C:\\\\Users\\\\Public\\\\test.txt\";\n\t\tString filePath2 = \"C:\\\\Users\\\\Public\\\\test2.txt\";\n\t\tString filePath3 = \"C:\\\\Users\\\\Public\\\\test3.txt\";\n\t\tString filePath4 = \"C:\\\\Users\\\\Public\\\\test4.txt\";\n\t\tString filePath5 = \"C:\\\\Users\\\\Public\\\\test5.txt\";\n\t\tString filePath6 = \"C:\\\\Users\\\\Public\\\\test6.txt\";\n\t\tString filePath7 = \"C:\\\\Users\\\\Public\\\\test7.txt\";\n\t\tString filePath8 = \"C:\\\\Users\\\\Public\\\\test8.txt\";\n\t\tString filePath9 = \"C:\\\\Users\\\\Public\\\\test9.txt\";\n\t\tString filePath10 = \"C:\\\\Users\\\\Public\\\\test10.txt\";\n\t\tString filePath11 = \"C:\\\\Users\\\\Public\\\\test11.txt\";\n\t\tString filePath12 = \"C:\\\\Users\\\\Public\\\\test12.txt\";\n\t\tString filePath13 = \"C:\\\\Users\\\\Public\\\\test13.txt\";\n\t\tString filePath14 = \"C:\\\\Users\\\\Public\\\\test14.txt\";\n\t\tString filePath15 = \"C:\\\\Users\\\\Public\\\\test15.txt\";\n\t\tString filePath16 = \"C:\\\\Users\\\\Public\\\\test16.txt\";\n\t\tString filePath17 = \"C:\\\\Users\\\\Public\\\\test17.txt\";\n\t\tString filePath18 = \"C:\\\\Users\\\\Public\\\\test18.txt\";\n\t\tString filePath19 = \"C:\\\\Users\\\\Public\\\\test19.txt\";\n\t\tString filePath20 = \"C:\\\\Users\\\\Public\\\\test20.txt\";\n",
        "\tstatic void main(String[] args){\n\t\tString url = \"https://login.microsoftonline.com/common/oauth2/token\";\n\t\tString clientId = \"\";\n\t\tString clientSecret = \"\";\n\t\tString username = \"\";\n\t\tString password = \"\";\n\t\tString grantType = \"password\";\n\t\tString scope = \"openid\";\n\t\tString resource = \"https://graph.microsoft.com/\";\n\t\tString tokenType = \"Bearer\";\n\t\tString expiresIn = \"3600\";\n\t\tString expiresOn = \"\";\n\t\tString refreshToken = \"\";\n\t\tString refreshTokenExpiresOn = \"\";\n\t\tString refreshTokenExpiresIn = \"\";\n\t\tString accessToken = \"\";\n\t\tString accessTokenExpiresOn = \"\";\n\t\tString accessTokenExpiresIn = \"\";\n\t\tString tokenEndpoint = \"https://login.microsoftonline.com/common/oauth2/token\";\n\t\tString clientId1 = \"\";\n\t\tString clientSecret1 = \"\";\n\t\tString username1 = \"\";\n\t\tString password1 = \"\";\n\t\tString grantType1 = \"password\";\n\t\tString scope1 = \"openid\";\n\t\tString resource1 = \"https://graph.microsoft.com/\";\n\t\tString tokenType1 = \"Bearer\";\n\t\tString expiresIn1 = \"3600\";\n\t\tString expiresOn1 = \"\";\n\t\tString refreshToken1 = \"\";\n\t\tString refreshTokenExpiresOn1 = \"\";\n\t\tString refreshTokenExpiresIn1 = \"\";\n\t\tString accessToken1 = \"\";\n\t\tString accessTokenExpiresOn1 = \"\";\n\t\tString accessTokenExpiresIn1 = \"\";\n\t\tString tokenEndpoint1 = \"https://login.microsoftonline.com/common/oauth2/token\";\n\t\tString clientId2 = \"\";\n\t\tString clientSecret2 = \"\";\n\t\tString username2 = \"\";\n\t\tString password2 = \"\";\n\t\tString grantType2 = \"password\";\n\t\tString scope2 = \"openid\";\n",
        "\tvoid main(String[] args){\n\t\tString url = \"http://localhost:8080/sharepoint/\";\n\t\tString user = \"admin\";\n\t\tString password = \"admin\";\n\t\tString listName = \"Employee\";\n\t\tString fieldName = \"Name\";\n\t\tString fieldValue = \"John\";\n\t\tString fieldName2 = \"Age\";\n\t\tString fieldValue2 = \"30\";\n\t\tString fieldName3 = \"Salary\";\n\t\tString fieldValue3 = \"10000\";\n\t\tString fieldName4 = \"Designation\";\n\t\tString fieldValue4 = \"Manager\";\n\t\tString fieldName5 = \"Department\";\n\t\tString fieldValue5 = \"IT\";\n\t\tString fieldName6 = \"Location\";\n\t\tString fieldValue6 = \"Bangalore\";\n\t\tString fieldName7 = \"Email\";\n\t\tString fieldValue7 = \"\n",
        "\tvoid main(String[] args){\n\t\tString url = \"http://localhost:8080/sharepoint/\";\n\t\tString user = \"admin\";\n\t\tString password = \"admin\";\n\t\tString fileName = \"test.txt\";\n\t\tString fileContent = \"Hello World\";\n\t\tString fileType = \"text/plain\";\n\t\tString filePath = \"C:\\\\Users\\\\Public\\\\Documents\\\\test.txt\";\n\t\tString fileUrl = url + fileName;\n\t\tString fileUrl2 = url + \"test.txt\";\n\t\tString fileUrl3 = url + \"test.txt\";\n\t\tString fileUrl4 = url + \"test.txt\";\n\t\tString fileUrl5 = url + \"test.txt\";\n\t\tString fileUrl6 = url + \"test.txt\";\n\t\tString fileUrl7 = url + \"test.txt\";\n\t\tString fileUrl8 = url + \"test.txt\";\n\t\tString fileUrl9 = url + \"test.txt\";\n\t\tString fileUrl10 = url + \"test.txt\";\n\t\tString fileUrl11 = url + \"test.txt\";\n\t\tString fileUrl12 = url + \"test.txt\";\n\t\tString fileUrl13 = url + \"test.txt\";\n\t\tString fileUrl14 = url + \"test.txt\";\n\t\tString fileUrl15 = url + \"test.txt\";\n\t\tString fileUrl16 = url + \"test.txt\";\n\t\tString fileUrl17 = url + \"test.txt\";\n\t\tString fileUrl18 = url + \"test.txt\";\n\t\tString fileUrl19 = url + \"test.txt\";\n\t\tString fileUrl20 = url + \"test.txt\";\n\t\tString fileUrl21 = url + \"test.txt\";\n\t\tString fileUrl22 = url + \"test.txt\";\n\t\tString fileUrl23 = url + \"test.txt\";\n\t\tString fileUrl24 = url + \"test.txt\";\n\t\tString fileUrl25 = url + \"test.txt\";\n\t\tString fileUrl26 = url + \"test.txt\";\n\t\tString fileUrl27 = url + \"test\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tString url=\"http://localhost:8080/sharepoint/\";\n\t\t\tString username=\"admin\";\n\t\t\tString password=\"admin\";\n\t\t\tString fileName=\"test.txt\";\n\t\t\tString fileContent=\"Hello World\";\n\t\t\tString fileType=\"text/plain\";\n\t\t\tString filePath=\"C:\\\\Users\\\\Public\\\\test.txt\";\n\t\t\tString filePath2=\"C:\\\\Users\\\\Public\\\\test2.txt\";\n\t\t\tString filePath3=\"C:\\\\Users\\\\Public\\\\test3.txt\";\n\t\t\tString filePath4=\"C:\\\\Users\\\\Public\\\\test4.txt\";\n\t\t\tString filePath5=\"C:\\\\Users\\\\Public\\\\test5.txt\";\n\t\t\tString filePath6=\"C:\\\\Users\\\\Public\\\\test6.txt\";\n\t\t\tString filePath7=\"C:\\\\Users\\\\Public\\\\test7.txt\";\n\t\t\tString filePath8=\"C:\\\\Users\\\\Public\\\\test8.txt\";\n\t\t\tString filePath9=\"C:\\\\Users\\\\Public\\\\test9.txt\";\n\t\t\tString filePath10=\"C:\\\\Users\\\\Public\\\\test10.txt\";\n\t\t\tString filePath11=\"C:\\\\Users\\\\Public\\\\test11.txt\";\n\t\t\tString filePath12=\"C:\\\\Users\\\\Public\\\\test12.txt\";\n\t\t\tString filePath13=\"C:\\\\Users\\\\Public\\\\test13.txt\";\n\t\t\tString filePath14=\"C:\\\\Users\\\\Public\\\\test14.txt\";\n\t\t\tString filePath15=\"C:\\\\Users\\\\Public\\\\test15.txt\";\n\t\t\tString filePath16=\"C:\\\\Users\\\\Public\\\\test16.txt\";\n\t\t\tString filePath17=\"C:\\\\Users\\\\Public\\\\test17.txt\";\n\t\t\tString filePath18=\"C:\\\\Users\\\\Public\\\\test18.txt\";\n\t\t\tString filePath19=\"C:\\\\Users\\\\Public\\\\test19.txt\";\n\t\t\tString filePath20=\"C:\\\\Users\\\\Public\\\\test\n",
        "\tstatic void main(String[] args){\n\t\t//create a client object\n\t\tClient client = new Client();\n\t\t//create a list object\n\t\tList list = new List();\n\t\t//create a list item object\n\t\tListItem listItem = new ListItem();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection1 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection2 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection3 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection4 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection5 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection6 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection7 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection8 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection9 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection10 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection11 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection12 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection13 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection14 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection15 = new ListItemCollection();\n\t\t//create a list item collection object\n\t\tListItemCollection listItemCollection16\n",
        "\tvoid main(String[] args){\n\t\tString url=\"http://localhost:8080/sharepoint/\";\n\t\tString user=\"admin\";\n\t\tString password=\"admin\";\n\t\tString fileName=\"test.txt\";\n\t\tString fileContent=\"hello world\";\n\t\tString fileType=\"text/plain\";\n\t\tString filePath=\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\";\n\t\tString fileName2=\"test2.txt\";\n\t\tString fileContent2=\"hello world2\";\n\t\tString fileType2=\"text/plain\";\n\t\tString filePath2=\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\";\n\t\tString fileName3=\"test3.txt\";\n\t\tString fileContent3=\"hello world3\";\n\t\tString fileType3=\"text/plain\";\n\t\tString filePath3=\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\";\n\t\tString fileName4=\"test4.txt\";\n\t\tString fileContent4=\"hello world4\";\n\t\tString fileType4=\"text/plain\";\n\t\tString filePath4=\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\";\n\t\tString fileName5=\"test5.txt\";\n\t\tString fileContent5=\"hello world5\";\n\t\tString fileType5=\"text/plain\";\n\t\tString filePath5=\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\";\n\t\tString fileName6=\"test6.txt\";\n\t\tString fileContent6=\"hello world6\";\n\t\tString fileType6=\"text/plain\";\n\t\tString filePath6=\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\";\n\t\tString fileName7=\"test7.txt\";\n\t\tString fileContent7=\"hello world7\";\n\t\tString fileType7=\"text/plain\";\n\t\tString filePath7=\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\";\n\t\tString fileName8=\"test8.txt\";\n\t\tString fileContent8=\"hello world8\";\n\t\tString fileType8=\"text/plain\";\n\t\tString filePath8=\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\";\n\t\tString fileName9=\"test9.txt\";\n"
    ],
    "results": 9
},{
    "id": "710",
    "source": "soSearches",
    "language": "java",
    "query": "how to display quadrate number in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint i=1;\n\t\twhile(i<=5){\n\t\t\tint j=1;\n\t\t\twhile(j<=5){\n\t\t\t\tSystem.out.print(i*j+\" \");\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i,j,k;\n\t\tfor(i=1;i<=5;i++){\n\t\t\tfor(j=1;j<=5;j++){\n\t\t\t\tfor(k=1;k<=5;k++){\n\t\t\t\t\tSystem.out.print(i);\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i=1;\n\t\twhile(i<=5){\n\t\t\tint j=1;\n\t\t\twhile(j<=i){\n\t\t\t\tSystem.out.print(i);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tvoid display(int n){\n\t\tint i,j;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tfor(j=1;j<=n;j++){\n\t\t\t\tSystem.out.print(i*j+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "711",
    "source": "soSearches",
    "language": "java",
    "query": "how to send a request to connect in a chat in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s = new Socket(\"localhost\",8080);\n\t\t\tPrintWriter pw = new PrintWriter(s.getOutputStream());\n\t\t\tpw.println(\"connect\");\n\t\t\tpw.flush();\n\t\t\ts.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",8080);\n\t\t\tPrintWriter pw=new PrintWriter(s.getOutputStream());\n\t\t\tpw.println(\"connect\");\n\t\t\tpw.flush();\n\t\t\ts.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tSocket s=new Socket(\"localhost\",8080);\n\t\t\tPrintWriter pw=new PrintWriter(s.getOutputStream());\n\t\t\tpw.println(\"connect\");\n\t\t\tpw.flush();\n\t\t\tpw.close();\n\t\t\ts.close();\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid connect(String host, int port){\n\t\ttry{\n\t\t\tSocket socket = new Socket(host, port);\n\t\t\tPrintWriter out = new PrintWriter(socket.getOutputStream(), true);\n\t\t\tout.println(\"Hello\");\n\t\t\tsocket.close();\n\t\t}\n\t\tcatch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid connect(String name){\n\t\tSystem.out.println(\"connecting to \"+name);\n\t}\n}\n",
        "\tvoid connect(String name){\n\t\tSystem.out.println(\"Connecting to \" + name);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "712",
    "source": "soSearches",
    "language": "java",
    "query": "how to make a java pokemon game from the ground up",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"I am a class\");\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "713",
    "source": "soSearches",
    "language": "java",
    "query": "how to find drop down using java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tWebElement element = driver.findElement(By.name(\"q\"));\n\t\tSelect select = new Select(element);\n\t\tselect.selectByValue(\"en\");\n\t\tdriver.quit();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tWebElement element = driver.findElement(By.name(\"q\"));\n\t\tSelect select = new Select(element);\n\t\tselect.selectByVisibleText(\"Java\");\n\t\tdriver.close();\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tWebElement element = driver.findElement(By.name(\"q\"));\n\t\tSelect select = new Select(element);\n\t\tselect.selectByIndex(2);\n\t\tdriver.close();\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.facebook.com\");\n\t\tWebElement element = driver.findElement(By.id(\"month\"));\n\t\tSelect select = new Select(element);\n\t\tselect.selectByValue(\"10\");\n\t\tdriver.close();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.seleniumhq.org/\");\n\t\tWebElement dropdown = driver.findElement(By.id(\"dropdown\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByVisibleText(\"Selenium\");\n\t\tdriver.close();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.toolsqa.com/automation-practice-form/\");\n\t\t\n\t\t//find drop down using java\n\t\tWebElement dropdown = driver.findElement(By.id(\"continents\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"Europe\");\n\t\t\n\t\t//find drop down using java\n\t\tWebElement dropdown = driver.findElement(By.id(\"continents\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"Europe\");\n\t\t\n\t\t//find drop down using java\n\t\tWebElement dropdown = driver.findElement(By.id(\"continents\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"Europe\");\n\t\t\n\t\t//find drop down using java\n\t\tWebElement dropdown = driver.findElement(By.id(\"continents\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"Europe\");\n\t\t\n\t\t//find drop down using java\n\t\tWebElement dropdown = driver.findElement(By.id(\"continents\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"Europe\");\n\t\t\n\t\t//find drop down using java\n\t\tWebElement dropdown = driver.findElement(By.id(\"continents\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"Europe\");\n\t\t\n\t\t//find drop down using java\n\t\tWebElement dropdown = driver.findElement(By.id(\"continents\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"Europe\");\n\t\t\n\t\t//find drop down using java\n\t\tWebElement dropdown = driver.findElement(By.id(\"continents\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"Europe\");\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.seleniumhq.org/download/\");\n\t\tWebElement dropdown = driver.findElement(By.id(\"seleniumVersion\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"2.53.0\");\n\t\tdriver.quit();\n\t}\n}\n",
        "\tstatic void main(String[] args) {\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.seleniumhq.org/download/\");\n\t\tWebElement dropdown = driver.findElement(By.id(\"seleniumVersion\"));\n\t\tSelect select = new Select(dropdown);\n\t\tselect.selectByValue(\"2.53.0\");\n\t\tdriver.close();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tWebDriver driver = new FirefoxDriver();\n\t\tdriver.get(\"http://www.google.com\");\n\t\tdriver.manage().window().maximize();\n\t\tWebElement element = driver.findElement(By.name(\"q\"));\n\t\tSelect select = new Select(element);\n\t\tselect.selectByVisibleText(\"Java\");\n\t\tdriver.close();\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "714",
    "source": "soSearches",
    "language": "java",
    "query": "how to declare tab 2d java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[][] a = new int[2][3];\n\t\ta[0][0] = 1;\n\t\ta[0][1] = 2;\n\t\ta[0][2] = 3;\n\t\ta[1][0] = 4;\n\t\ta[1][1] = 5;\n\t\ta[1][2] = 6;\n\t\tSystem.out.println(a[0][0]);\n\t\tSystem.out.println(a[0][1]);\n\t\tSystem.out.println(a[0][2]);\n\t\tSystem.out.println(a[1][0]);\n\t\tSystem.out.println(a[1][1]);\n\t\tSystem.out.println(a[1][2]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] a = {{1,2,3},{4,5,6},{7,8,9}};\n\t\tint[][] b = {{1,2,3},{4,5,6},{7,8,9}};\n\t\tint[][] c = new int[3][3];\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tc[i][j] = a[i][j] + b[i][j];\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int j=0;j<3;j++){\n\t\t\t\tSystem.out.print(c[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] a = new int[3][3];\n\t\ta[0][0] = 1;\n\t\ta[0][1] = 2;\n\t\ta[0][2] = 3;\n\t\ta[1][0] = 4;\n\t\ta[1][1] = 5;\n\t\ta[1][2] = 6;\n\t\ta[2][0] = 7;\n\t\ta[2][1] = 8;\n\t\ta[2][2] = 9;\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tSystem.out.print(a[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] a = new int[3][4];\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tfor(int j = 0; j < 4; j++){\n\t\t\t\ta[i][j] = i + j;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tfor(int j = 0; j < 4; j++){\n\t\t\t\tSystem.out.print(a[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[][] a = new int[3][3];\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\ta[i][j] = i+j;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tfor(int j = 0; j < 3; j++){\n\t\t\t\tSystem.out.print(a[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "715",
    "source": "soSearches",
    "language": "java",
    "query": "how to calculate inclusive and exclusive tax using java script",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tdouble price=Double.parseDouble(args[0]);\n\t\tdouble tax=Double.parseDouble(args[1]);\n\t\tdouble tax_inclusive=price+(price*tax/100);\n\t\tdouble tax_exclusive=price+(price*tax/100);\n\t\tSystem.out.println(\"Tax inclusive: \"+tax_inclusive);\n\t\tSystem.out.println(\"Tax exclusive: \"+tax_exclusive);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble price=Double.parseDouble(args[0]);\n\t\tdouble tax=Double.parseDouble(args[1]);\n\t\tdouble taxInclusive=price+(price*tax/100);\n\t\tdouble taxExclusive=price+(price*tax/100);\n\t\tSystem.out.println(\"The price is \"+price);\n\t\tSystem.out.println(\"The tax is \"+tax);\n\t\tSystem.out.println(\"The tax inclusive is \"+taxInclusive);\n\t\tSystem.out.println(\"The tax exclusive is \"+taxExclusive);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble price=Double.parseDouble(args[0]);\n\t\tdouble tax=Double.parseDouble(args[1]);\n\t\tdouble taxInclusive=price+(price*tax/100);\n\t\tdouble taxExclusive=price+(price*tax/100);\n\t\tSystem.out.println(\"Tax Inclusive:\"+taxInclusive);\n\t\tSystem.out.println(\"Tax Exclusive:\"+taxExclusive);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble price = 100;\n\t\tdouble tax = 0.05;\n\t\tdouble taxPrice = price + (price * tax);\n\t\tdouble taxPrice2 = price + (price * tax);\n\t\tSystem.out.println(\"The price of the item is \" + taxPrice);\n\t\tSystem.out.println(\"The price of the item is \" + taxPrice2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble price=Double.parseDouble(args[0]);\n\t\tdouble tax=Double.parseDouble(args[1]);\n\t\tdouble taxInc=price+(price*tax/100);\n\t\tdouble taxExc=price+(price*tax/100);\n\t\tSystem.out.println(\"Inclusive tax is \"+taxInc);\n\t\tSystem.out.println(\"Exclusive tax is \"+taxExc);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble price=Double.parseDouble(args[0]);\n\t\tdouble tax=Double.parseDouble(args[1]);\n\t\tdouble taxInc=price+(price*tax/100);\n\t\tdouble taxExc=price+(price*tax/100);\n\t\tSystem.out.println(\"The price is \"+price);\n\t\tSystem.out.println(\"The tax is \"+tax);\n\t\tSystem.out.println(\"The tax inclusive is \"+taxInc);\n\t\tSystem.out.println(\"The tax exclusive is \"+taxExc);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble price = 100;\n\t\tdouble tax = 0.05;\n\t\tdouble taxPrice = price + (price * tax);\n\t\tdouble taxPriceEx = price + (price * tax);\n\t\tSystem.out.println(\"Inclusive tax price is: \" + taxPrice);\n\t\tSystem.out.println(\"Exclusive tax price is: \" + taxPriceEx);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble tax = 0.0;\n\t\tdouble total = 0.0;\n\t\tdouble tax_rate = 0.0;\n\t\tdouble tax_amount = 0.0;\n\t\tdouble total_amount = 0.0;\n\t\tdouble total_tax = 0.0;\n\t\tdouble total_tax_amount = 0.0;\n\t\tdouble total_tax_inclusive = 0.0;\n\t\tdouble total_tax_exclusive = 0.0;\n\t\tdouble total_tax_inclusive_amount = 0.0;\n\t\tdouble total_tax_exclusive_amount = 0.0;\n\t\tdouble total_tax_inclusive_tax_amount = 0.0;\n\t\tdouble total_tax_exclusive_tax_amount = 0.0;\n\t\tdouble total_tax_inclusive_tax_amount_exclusive = 0.0;\n\t\tdouble total_tax_exclusive_tax_amount_exclusive = 0.0;\n\t\tdouble total_tax_inclusive_tax_amount_inclusive = 0.0;\n\t\tdouble total_tax_exclusive_tax_amount_inclusive = 0.0;\n\t\tdouble total_tax_inclusive_tax_amount_inclusive_exclusive = 0.0;\n\t\tdouble total_tax_exclusive_tax_amount_inclusive_exclusive = 0.0;\n\t\tdouble total_tax_inclusive_tax_amount_inclusive_exclusive = 0.0;\n\t\tdouble total_tax_exclusive_tax_amount_inclusive_exclusive = 0.0;\n\t\tdouble total_tax_inclusive_tax_amount_inclusive_exclusive_exclusive = 0.0;\n\t\tdouble total_tax_exclusive_tax_amount_inclusive_exclusive_exclusive = 0.0;\n\t\tdouble total_tax_inclusive_tax_amount_inclusive_exclusive_exclusive_exclusive = 0.0;\n\t\tdouble total_tax_exclusive_tax_amount_inclusive_exclusive_exclusive_exclusive = 0.0;\n\t\tdouble total_tax_inclusive_tax_amount_inclusive_exclusive_exclusive_exclusive_exclusive\n",
        "\tstatic void main(String[] args){\n\t\tdouble tax = 0.05;\n\t\tdouble price = 100;\n\t\tdouble taxPrice = price + (price * tax);\n\t\tdouble taxPriceEx = price + (price * tax);\n\t\tSystem.out.println(\"Tax price is \" + taxPrice);\n\t\tSystem.out.println(\"Tax price exclusive is \" + taxPriceEx);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tdouble price=100;\n\t\tdouble tax=0.18;\n\t\tdouble inclusiveTax=price*(1+tax);\n\t\tdouble exclusiveTax=price*tax;\n\t\tSystem.out.println(\"Inclusive tax is \"+inclusiveTax);\n\t\tSystem.out.println(\"Exclusive tax is \"+exclusiveTax);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "716",
    "source": "soSearches",
    "language": "java",
    "query": "ireport 5.6.0 in java netbeans 8.2 (how to call report from java appl?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tResultSet rs=stmt.executeQuery(\"select * from student\");\n\t\t\tReportGenerator r=new ReportGenerator();\n\t\t\tr.generateReport(rs,\"Student.jrxml\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tResultSet rs=stmt.executeQuery(\"select * from student\");\n\t\t\tReportGenerator r=new ReportGenerator();\n\t\t\tr.generateReport(rs,\"StudentReport.jrxml\");\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt=con.createStatement();\n\t\t\tResultSet rs=stmt.executeQuery(\"select * from student\");\n\t\t\tReportGenerator rg=new ReportGenerator();\n\t\t\trg.generateReport(rs,\"student.jrxml\");\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "717",
    "source": "soSearches",
    "language": "java",
    "query": "how to change color to a button pushing another java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Color\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJButton button = new JButton(\"Click me\");\n\t\tframe.add(button);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tbutton.setBackground(Color.red);\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tvoid changeColor(JButton button, Color color){\n\t\tbutton.setBackground(color);\n\t}\n}\n",
        "\tvoid changeColor(JButton button){\n\t\tbutton.setBackground(Color.RED);\n\t}\n}\n",
        "\tvoid changeColor(JButton button){\n\t\tbutton.setBackground(Color.red);\n\t}\n}\n",
        "\tvoid changeColor(JButton button){\n\t\tbutton.setBackground(Color.BLUE);\n\t}\n}\n",
        "\tvoid changeColor(Button b){\n\t\tb.setBackground(Color.red);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "718",
    "source": "soSearches",
    "language": "java",
    "query": "how to jump to a spatial line num in a file java",
    "snippets": [
        "\tvoid method(){\n\t\tint a = 1;\n\t\tint b = 2;\n\t\tint c = 3;\n\t\tint d = 4;\n\t\tint e = 5;\n\t\tint f = 6;\n\t\tint g = 7;\n\t\tint h = 8;\n\t\tint i = 9;\n\t\tint j = 10;\n\t\tint k = 11;\n\t\tint l = 12;\n\t\tint m = 13;\n\t\tint n = 14;\n\t\tint o = 15;\n\t\tint p = 16;\n\t\tint q = 17;\n\t\tint r = 18;\n\t\tint s = 19;\n\t\tint t = 20;\n\t\tint u = 21;\n\t\tint v = 22;\n\t\tint w = 23;\n\t\tint x = 24;\n\t\tint y = 25;\n\t\tint z = 26;\n\t\tint aa = 27;\n\t\tint bb = 28;\n\t\tint cc = 29;\n\t\tint dd = 30;\n\t\tint ee = 31;\n\t\tint ff = 32;\n\t\tint gg = 33;\n\t\tint hh = 34;\n\t\tint ii = 35;\n\t\tint jj = 36;\n\t\tint kk = 37;\n\t\tint ll = 38;\n\t\tint mm = 39;\n\t\tint nn = 40;\n\t\tint oo = 41;\n\t\tint pp = 42;\n\t\tint qq = 43;\n\t\tint rr = 44;\n\t\tint ss = 45;\n\t\tint tt = 46;\n\t\tint uu = 47;\n\t\tint vv = 48;\n\t\tint ww = 49;\n\t\tint xx = 50;\n\t\tint yy = 51;\n\t\tint zz = 52;\n\t\tint aaa = 53;\n\t\tint bbb = 54;\n\t\tint ccc = 55;\n\t\tint ddd = 56;\n\t\tint eee = 57;\n\t\tint fff = 58;\n\t\tint ggg = 59\n",
        "\tstatic void main(String[] args){\n\t\tint i = 0;\n\t\twhile(i < 10){\n\t\t\tSystem.out.println(i);\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tint i = 0;\n\t\twhile(i < 10){\n\t\t\tSystem.out.println(i);\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint lineNumber = Integer.parseInt(args[0]);\n\t\tString fileName = args[1];\n\t\tFile file = new File(fileName);\n\t\tFileReader fr = null;\n\t\ttry{\n\t\t\tfr = new FileReader(file);\n\t\t}catch(FileNotFoundException e){\n\t\t\tSystem.out.println(\"File not found\");\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tLineNumberReader lnr = new LineNumberReader(fr);\n\t\tString line = null;\n\t\ttry{\n\t\t\tline = lnr.readLine();\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(\"IOException\");\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tint lineCount = 1;\n\t\twhile(line != null){\n\t\t\tif(lineCount == lineNumber){\n\t\t\t\tSystem.out.println(line);\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t\ttry{\n\t\t\t\tline = lnr.readLine();\n\t\t\t}catch(IOException e){\n\t\t\t\tSystem.out.println(\"IOException\");\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t\tlineCount++;\n\t\t}\n\t\tSystem.out.println(\"Line number not found\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString fileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test.txt\";\n\t\tint lineNum = 3;\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(fileName);\n\t\t\tLineNumberReader lnr = new LineNumberReader(fr);\n\t\t\tString line = lnr.readLine();\n\t\t\tint i = 1;\n\t\t\twhile(line != null){\n\t\t\t\tif(i == lineNum){\n\t\t\t\t\tSystem.out.println(line);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tline = lnr.readLine();\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tlnr.close();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tint lineNumber = Integer.parseInt(args[0]);\n\t\tString fileName = args[1];\n\t\tFile file = new File(fileName);\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(file);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = br.readLine();\n\t\t\tint lineCount = 1;\n\t\t\twhile(line != null){\n\t\t\t\tif(lineCount == lineNumber){\n\t\t\t\t\tSystem.out.println(line);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tline = br.readLine();\n\t\t\t\tlineCount++;\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(\"IOException\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint lineNum = Integer.parseInt(args[0]);\n\t\tString fileName = args[1];\n\t\tint lineNumInFile = 0;\n\t\ttry{\n\t\t\tFileReader fr = new FileReader(fileName);\n\t\t\tBufferedReader br = new BufferedReader(fr);\n\t\t\tString line = null;\n\t\t\twhile((line = br.readLine()) != null){\n\t\t\t\tlineNumInFile++;\n\t\t\t\tif(lineNumInFile == lineNum){\n\t\t\t\t\tSystem.out.println(line);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbr.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "719",
    "source": "soSearches",
    "language": "java",
    "query": "how to get all enum values from java class",
    "snippets": [
        "\tenum MyEnum{\n\t\tA,B,C\n\t}\n\tpublic static void main(String[] args){\n\t\tMyEnum[] values = MyEnum.values();\n\t\tfor(MyEnum e:values){\n\t\t\tSystem.out.println(e);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "720",
    "source": "soSearches",
    "language": "java",
    "query": "how to get rgb values of an image in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tBufferedImage img = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g = img.createGraphics();\n\t\tg.setColor(Color.BLUE);\n\t\tg.fillRect(0, 0, 100, 100);\n\t\tg.setColor(Color.RED);\n\t\tg.fillRect(50, 50, 50, 50);\n\t\tg.dispose();\n\t\tint[] rgb = new int[img.getWidth() * img.getHeight()];\n\t\timg.getRGB(0, 0, img.getWidth(), img.getHeight(), rgb, 0, img.getWidth());\n\t\tfor(int i = 0; i < rgb.length; i++){\n\t\t\tSystem.out.println(rgb[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage img = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g = img.createGraphics();\n\t\tg.setColor(Color.RED);\n\t\tg.fillRect(0, 0, 100, 100);\n\t\tg.dispose();\n\t\tint width = img.getWidth();\n\t\tint height = img.getHeight();\n\t\tint[] pixels = new int[width * height];\n\t\tPixelGrabber pg = new PixelGrabber(img, 0, 0, width, height, pixels, 0, width);\n\t\ttry{\n\t\t\tpg.grabPixels();\n\t\t}\n\t\tcatch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfor(int i = 0; i < pixels.length; i++){\n\t\t\tint rgb = pixels[i];\n\t\t\tint r = (rgb >> 16) & 0xff;\n\t\t\tint g = (rgb >> 8) & 0xff;\n\t\t\tint b = rgb & 0xff;\n\t\t\tSystem.out.println(r + \" \" + g + \" \" + b);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics2D g = image.createGraphics();\n\t\tg.setColor(Color.RED);\n\t\tg.fillRect(0, 0, 100, 100);\n\t\tg.setColor(Color.BLUE);\n\t\tg.fillRect(50, 50, 100, 100);\n\t\tg.setColor(Color.GREEN);\n\t\tg.fillRect(25, 25, 100, 100);\n\t\tg.setColor(Color.YELLOW);\n\t\tg.fillRect(75, 75, 100, 100);\n\t\tg.dispose();\n\t\tfor(int i = 0; i < image.getWidth(); i++){\n\t\t\tfor(int j = 0; j < image.getHeight(); j++){\n\t\t\t\tint rgb = image.getRGB(i, j);\n\t\t\t\tSystem.out.println(rgb);\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage img = null;\n\t\ttry{\n\t\t\timg = ImageIO.read(new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\image.png\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tint width = img.getWidth();\n\t\tint height = img.getHeight();\n\t\tint[] pixels = new int[width*height];\n\t\tPixelGrabber pg = new PixelGrabber(img, 0, 0, width, height, pixels, 0, width);\n\t\ttry{\n\t\t\tpg.grabPixels();\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfor(int i = 0; i < pixels.length; i++){\n\t\t\tint rgb = pixels[i];\n\t\t\tint r = (rgb >> 16) & 0xff;\n\t\t\tint g = (rgb >> 8) & 0xff;\n\t\t\tint b = rgb & 0xff;\n\t\t\tSystem.out.println(r + \" \" + g + \" \" + b);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage img = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n\t\tGraphics g = img.getGraphics();\n\t\tg.setColor(Color.RED);\n\t\tg.fillRect(0, 0, 100, 100);\n\t\tg.setColor(Color.BLUE);\n\t\tg.fillRect(50, 50, 50, 50);\n\t\tg.setColor(Color.GREEN);\n\t\tg.fillRect(25, 25, 25, 25);\n\t\tg.setColor(Color.YELLOW);\n\t\tg.fillRect(75, 75, 25, 25);\n\t\tg.setColor(Color.BLACK);\n\t\tg.drawRect(0, 0, 99, 99);\n\t\tg.setColor(Color.WHITE);\n\t\tg.drawRect(50, 50, 49, 49);\n\t\tg.setColor(Color.MAGENTA);\n\t\tg.drawRect(25, 25, 24, 24);\n\t\tg.setColor(Color.CYAN);\n\t\tg.drawRect(75, 75, 24, 24);\n\t\tg.setColor(Color.DARK_GRAY);\n\t\tg.drawRect(0, 0, 99, 99);\n\t\tg.setColor(Color.LIGHT_GRAY);\n\t\tg.drawRect(50, 50, 49, 49);\n\t\tg.setColor(Color.GRAY);\n\t\tg.drawRect(25, 25, 24, 24);\n\t\tg.setColor(Color.DARK_GRAY);\n\t\tg.drawRect(75, 75, 24, 24);\n\t\tg.setColor(Color.BLACK);\n\t\tg.drawRect(0, 0, 99, 99);\n\t\tg.setColor(Color.WHITE);\n\t\tg.drawRect(50, 50, 49, 49);\n\t\tg.setColor(Color.MAGENTA);\n\t\tg.drawRect(25, 25, 24, 24);\n\t\tg.set\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage image = null;\n\t\ttry{\n\t\t\timage = ImageIO.read(new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\image.jpg\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tint width = image.getWidth();\n\t\tint height = image.getHeight();\n\t\tint[] pixels = new int[width*height];\n\t\timage.getRGB(0, 0, width, height, pixels, 0, width);\n\t\tfor(int i = 0; i < pixels.length; i++){\n\t\t\tint pixel = pixels[i];\n\t\t\tint red = (pixel >> 16) & 0xff;\n\t\t\tint green = (pixel >> 8) & 0xff;\n\t\t\tint blue = pixel & 0xff;\n\t\t\tSystem.out.println(red + \" \" + green + \" \" + blue);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage img = null;\n\t\ttry{\n\t\t\timg = ImageIO.read(new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\image.png\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tint width = img.getWidth();\n\t\tint height = img.getHeight();\n\t\tint[] pixels = new int[width*height];\n\t\tPixelGrabber pg = new PixelGrabber(img, 0, 0, width, height, pixels, 0, width);\n\t\ttry{\n\t\t\tpg.grabPixels();\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfor(int i = 0; i < pixels.length; i++){\n\t\t\tint pixel = pixels[i];\n\t\t\tint r = (pixel >> 16) & 0xff;\n\t\t\tint g = (pixel >> 8) & 0xff;\n\t\t\tint b = pixel & 0xff;\n\t\t\tSystem.out.println(r + \" \" + g + \" \" + b);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tBufferedImage img = ImageIO.read(new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\image.jpg\"));\n\t\t\tint width = img.getWidth();\n\t\t\tint height = img.getHeight();\n\t\t\tint[] pixels = new int[width*height];\n\t\t\timg.getRGB(0, 0, width, height, pixels, 0, width);\n\t\t\tfor(int i = 0; i < pixels.length; i++){\n\t\t\t\tint p = pixels[i];\n\t\t\t\tint r = (p & 0x00ff0000) >> 16;\n\t\t\t\tint g = (p & 0x0000ff00) >> 8;\n\t\t\t\tint b = p & 0x000000ff;\n\t\t\t\tSystem.out.println(r + \" \" + g + \" \" + b);\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tBufferedImage img = ImageIO.read(new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test.jpg\"));\n\t\t\tint width = img.getWidth();\n\t\t\tint height = img.getHeight();\n\t\t\tint[] pixels = new int[width*height];\n\t\t\timg.getRGB(0, 0, width, height, pixels, 0, width);\n\t\t\tfor(int i=0; i<pixels.length; i++){\n\t\t\t\tint p = pixels[i];\n\t\t\t\tint r = (p & 0x00ff0000) >> 16;\n\t\t\t\tint g = (p & 0x0000ff00) >> 8;\n\t\t\t\tint b = p & 0x000000ff;\n\t\t\t\tSystem.out.println(r+\" \"+g+\" \"+b);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tBufferedImage img = null;\n\t\ttry{\n\t\t\timg = ImageIO.read(new File(\"/Users/james/Desktop/test.png\"));\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tint width = img.getWidth();\n\t\tint height = img.getHeight();\n\t\tint[] pixels = new int[width*height];\n\t\tPixelGrabber pg = new PixelGrabber(img, 0, 0, width, height, pixels, 0, width);\n\t\ttry{\n\t\t\tpg.grabPixels();\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\tfor(int i = 0; i < pixels.length; i++){\n\t\t\tint rgb = pixels[i];\n\t\t\tint r = (rgb >> 16) & 0xff;\n\t\t\tint g = (rgb >> 8) & 0xff;\n\t\t\tint b = rgb & 0xff;\n\t\t\tSystem.out.println(r+\" \"+g+\" \"+b);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "721",
    "source": "soSearches",
    "language": "java",
    "query": "how to make a countdown timer java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint seconds = 60;\n\t\twhile(seconds > 0){\n\t\t\tSystem.out.println(seconds);\n\t\t\tseconds--;\n\t\t}\n\t\tSystem.out.println(\"Blast Off!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint seconds = 60;\n\t\twhile(seconds > 0){\n\t\t\tSystem.out.println(seconds);\n\t\t\tseconds--;\n\t\t\ttry{\n\t\t\t\tThread.sleep(1000);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\tSystem.out.println(\"Interrupted\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Blastoff!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint seconds = 60;\n\t\twhile(seconds > 0){\n\t\t\tSystem.out.println(seconds);\n\t\t\tseconds--;\n\t\t\ttry{\n\t\t\t\tThread.sleep(1000);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\tSystem.out.println(\"Sleep interrupted\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Blastoff!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint seconds = 10;\n\t\twhile(seconds > 0){\n\t\t\tSystem.out.println(seconds);\n\t\t\tseconds--;\n\t\t\ttry{\n\t\t\t\tThread.sleep(1000);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Blastoff!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint seconds = 60;\n\t\tint minutes = seconds/60;\n\t\tint hours = minutes/60;\n\t\tint days = hours/24;\n\t\tint weeks = days/7;\n\t\tint months = weeks/30;\n\t\tint years = months/12;\n\t\tSystem.out.println(\"There are \" + years + \" years, \" + months + \" months, \" + weeks + \" weeks, \" + days + \" days, \" + hours + \" hours, \" + minutes + \" minutes, and \" + seconds + \" seconds.\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint seconds = 10;\n\t\twhile(seconds > 0){\n\t\t\tSystem.out.println(seconds);\n\t\t\tseconds--;\n\t\t\ttry{\n\t\t\t\tThread.sleep(1000);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\tSystem.out.println(\"Interrupted\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Blastoff!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint seconds = 60;\n\t\twhile(seconds > 0){\n\t\t\tSystem.out.println(seconds);\n\t\t\tseconds--;\n\t\t\ttry{\n\t\t\t\tThread.sleep(1000);\n\t\t\t}\n\t\t\tcatch(InterruptedException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Blastoff!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint count = 10;\n\t\twhile(count>0){\n\t\t\tSystem.out.println(count);\n\t\t\tcount--;\n\t\t}\n\t\tSystem.out.println(\"Blastoff!\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint time = 10;\n\t\twhile(time > 0){\n\t\t\tSystem.out.println(time);\n\t\t\ttime--;\n\t\t}\n\t\tSystem.out.println(\"Blast Off!\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "722",
    "source": "soSearches",
    "language": "java",
    "query": "how to extract data from line in java?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString line = \"Hello World\";\n\t\tString[] words = line.split(\" \");\n\t\tSystem.out.println(words[0]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString line = \"This is a line\";\n\t\tString[] words = line.split(\" \");\n\t\tfor(String word: words){\n\t\t\tSystem.out.println(word);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "723",
    "source": "soSearches",
    "language": "java",
    "query": "how to protect branch git java api",
    "snippets": [
        "\tvoid method(){\n\t\tSystem.out.println(\"method\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "724",
    "source": "soSearches",
    "language": "java",
    "query": "how to write a constructor in java",
    "snippets": [
        "\tClazz(){\n\t\tSystem.out.println(\"I am a constructor\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Constructor\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "725",
    "source": "soSearches",
    "language": "java",
    "query": "how to stop soap in java",
    "snippets": [
        "\tvoid method(){\n\t\ttry{\n\t\t\tThread.sleep(1000);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid m1(){\n\t\tSystem.out.println(\"m1\");\n\t}\n\tpublic\n\tvoid m2(){\n\t\tSystem.out.println(\"m2\");\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry{\n\t\t\tthrow new Exception();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"method\");\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry{\n\t\t\tthrow new Exception();\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"Exception caught\");\n\t\t\tthrow e;\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "726",
    "source": "soSearches",
    "language": "java",
    "query": "how to avoid repeating number randomized in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[10];\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tarr[i] = (int)(Math.random()*100);\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tfor(int j = i+1; j < arr.length; j++){\n\t\t\t\tif(arr[i] == arr[j]){\n\t\t\t\t\tarr[j] = (int)(Math.random()*100);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[10];\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tarr[i] = (int)(Math.random()*100);\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tfor(int j = 0; j < arr.length; j++){\n\t\t\t\tif(arr[i] == arr[j]){\n\t\t\t\t\tarr[j] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] != -1){\n\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[10];\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tarr[i] = (int)(Math.random()*10);\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tfor(int j = i+1; j < arr.length; j++){\n\t\t\t\tif(arr[i] == arr[j]){\n\t\t\t\t\tarr[j] = (int)(Math.random()*10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[10];\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\tarr[i] = (int)(Math.random()*10);\n\t\t}\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\tfor(int j = i+1; j < 10; j++){\n\t\t\t\tif(arr[i] == arr[j]){\n\t\t\t\t\tarr[j] = (int)(Math.random()*10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[10];\n\t\tfor(int i=0;i<10;i++){\n\t\t\tarr[i] = (int)(Math.random()*100);\n\t\t}\n\t\tfor(int i=0;i<10;i++){\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<10;i++){\n\t\t\tfor(int j=i+1;j<10;j++){\n\t\t\t\tif(arr[i]==arr[j]){\n\t\t\t\t\tarr[j] = (int)(Math.random()*100);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<10;i++){\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = new int[10];\n\t\tRandom r = new Random();\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tarr[i] = r.nextInt(100);\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tfor(int j = i + 1; j < arr.length; j++){\n\t\t\t\tif(arr[i] == arr[j]){\n\t\t\t\t\tarr[j] = r.nextInt(100);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "727",
    "source": "soSearches",
    "language": "java",
    "query": "how to generate a random long with 2 digits in java?",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tlong l = (long)(Math.random()*100);\n\t\tSystem.out.println(l);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong random = (long)(Math.random()*100);\n\t\tSystem.out.println(random);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tlong l = r.nextLong();\n\t\tSystem.out.println(l);\n\t\tlong l1 = r.nextLong();\n\t\tSystem.out.println(l1);\n\t\tlong l2 = r.nextLong();\n\t\tSystem.out.println(l2);\n\t\tlong l3 = r.nextLong();\n\t\tSystem.out.println(l3);\n\t\tlong l4 = r.nextLong();\n\t\tSystem.out.println(l4);\n\t\tlong l5 = r.nextLong();\n\t\tSystem.out.println(l5);\n\t\tlong l6 = r.nextLong();\n\t\tSystem.out.println(l6);\n\t\tlong l7 = r.nextLong();\n\t\tSystem.out.println(l7);\n\t\tlong l8 = r.nextLong();\n\t\tSystem.out.println(l8);\n\t\tlong l9 = r.nextLong();\n\t\tSystem.out.println(l9);\n\t\tlong l10 = r.nextLong();\n\t\tSystem.out.println(l10);\n\t\tlong l11 = r.nextLong();\n\t\tSystem.out.println(l11);\n\t\tlong l12 = r.nextLong();\n\t\tSystem.out.println(l12);\n\t\tlong l13 = r.nextLong();\n\t\tSystem.out.println(l13);\n\t\tlong l14 = r.nextLong();\n\t\tSystem.out.println(l14);\n\t\tlong l15 = r.nextLong();\n\t\tSystem.out.println(l15);\n\t\tlong l16 = r.nextLong();\n\t\tSystem.out.println(l16);\n\t\tlong l17 = r.nextLong();\n\t\tSystem.out.println(l17);\n\t\tlong l18 = r.nextLong();\n\t\tSystem.out.println(l18);\n\t\tlong l19 = r.nextLong();\n\t\tSystem.out.println(l19);\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Math.random()*100);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong num = (long)(Math.random()*99);\n\t\tSystem.out.println(num);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "728",
    "source": "soSearches",
    "language": "java",
    "query": "java how to detect empy",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"\";\n\t\tif(s.isEmpty()){\n\t\t\tSystem.out.println(\"empty\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"not empty\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"\";\n\t\tif(str.isEmpty()){\n\t\t\tSystem.out.println(\"empty\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"not empty\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"\";\n\t\tif(str.isEmpty()){\n\t\t\tSystem.out.println(\"str is empty\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"str is not empty\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tString s = \"\";\n\t\tif(s.isEmpty()){\n\t\t\tSystem.out.println(\"empty\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"not empty\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "729",
    "source": "soSearches",
    "language": "java",
    "query": "how to find certificates in java key store",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"C:\\\\Users\\\\Public\\\\keystore.jks\"), \"password\".toCharArray());\n\t\t\tEnumeration<String> aliases = ks.aliases();\n\t\t\twhile(aliases.hasMoreElements()){\n\t\t\t\tString alias = aliases.nextElement();\n\t\t\t\tSystem.out.println(alias);\n\t\t\t\tSystem.out.println(ks.getCertificate(alias));\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"C:\\\\Users\\\\suresh\\\\Desktop\\\\keystore.jks\"), \"password\".toCharArray());\n\t\t\tEnumeration<String> aliases = ks.aliases();\n\t\t\twhile(aliases.hasMoreElements()){\n\t\t\t\tString alias = aliases.nextElement();\n\t\t\t\tSystem.out.println(alias);\n\t\t\t\tif(ks.isCertificateEntry(alias)){\n\t\t\t\t\tCertificate c = ks.getCertificate(alias);\n\t\t\t\t\tSystem.out.println(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"C:\\\\Users\\\\user\\\\.keystore\"), \"password\".toCharArray());\n\t\t\tEnumeration<String> aliases = ks.aliases();\n\t\t\twhile(aliases.hasMoreElements()){\n\t\t\t\tString alias = aliases.nextElement();\n\t\t\t\tSystem.out.println(alias);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"C:\\\\Users\\\\user\\\\.ssh\\\\id_rsa\"), \"password\".toCharArray());\n\t\t\tEnumeration<String> aliases = ks.aliases();\n\t\t\twhile(aliases.hasMoreElements()){\n\t\t\t\tString alias = aliases.nextElement();\n\t\t\t\tSystem.out.println(alias);\n\t\t\t\tCertificate cert = ks.getCertificate(alias);\n\t\t\t\tSystem.out.println(cert);\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\keystore.jks\"), \"123456\".toCharArray());\n\t\t\tEnumeration<String> aliases = ks.aliases();\n\t\t\twhile(aliases.hasMoreElements()){\n\t\t\t\tString alias = aliases.nextElement();\n\t\t\t\tSystem.out.println(alias);\n\t\t\t\tSystem.out.println(ks.getCertificate(alias).getPublicKey());\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"C:\\\\Users\\\\sachin\\\\Desktop\\\\keystore.jks\"), \"123456\".toCharArray());\n\t\t\tEnumeration<String> aliases = ks.aliases();\n\t\t\twhile(aliases.hasMoreElements()){\n\t\t\t\tString alias = aliases.nextElement();\n\t\t\t\tSystem.out.println(alias);\n\t\t\t\tCertificate c = ks.getCertificate(alias);\n\t\t\t\tSystem.out.println(c);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\tks.load(new FileInputStream(\"my.jks\"), \"password\".toCharArray());\n\t\tEnumeration<String> aliases = ks.aliases();\n\t\twhile(aliases.hasMoreElements()){\n\t\t\tString alias = aliases.nextElement();\n\t\t\tSystem.out.println(alias);\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry{\n\t\t\tKeyStore ks = KeyStore.getInstance(\"JKS\");\n\t\t\tks.load(new FileInputStream(\"mykeystore.jks\"), \"password\".toCharArray());\n\t\t\tEnumeration<String> aliases = ks.aliases();\n\t\t\twhile(aliases.hasMoreElements()){\n\t\t\t\tString alias = aliases.nextElement();\n\t\t\t\tSystem.out.println(alias);\n\t\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args) throws Exception{\n\t\tKeyStore keyStore = KeyStore.getInstance(\"JKS\");\n\t\tkeyStore.load(new FileInputStream(\"C:\\\\Users\\\\user\\\\.keystore\"), \"123456\".toCharArray());\n\t\tEnumeration<String> aliases = keyStore.aliases();\n\t\twhile(aliases.hasMoreElements()){\n\t\t\tString alias = aliases.nextElement();\n\t\t\tSystem.out.println(alias);\n\t\t\tCertificate certificate = keyStore.getCertificate(alias);\n\t\t\tSystem.out.println(certificate);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "730",
    "source": "soSearches",
    "language": "java",
    "query": "how to keep only letters in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString str2 = \"\";\n\t\tfor(int i = 0; i < str.length(); i++){\n\t\t\tif(Character.isLetter(str.charAt(i))){\n\t\t\t\tstr2 += str.charAt(i);\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(str2);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"Hello World\";\n\t\tString str1=\"\";\n\t\tfor(int i=0;i<str.length();i++){\n\t\t\tif(str.charAt(i)>='a'&&str.charAt(i)<='z'||str.charAt(i)>='A'&&str.charAt(i)<='Z'){\n\t\t\t\tstr1+=str.charAt(i);\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(str1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello World\";\n\t\tString s1 = \"\";\n\t\tfor(int i = 0; i < s.length(); i++){\n\t\t\tif(Character.isLetter(s.charAt(i))){\n\t\t\t\ts1 += s.charAt(i);\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(s1);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tString str1 = str.replaceAll(\"[^a-zA-Z]\",\"\");\n\t\tSystem.out.println(str1);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "731",
    "source": "soSearches",
    "language": "java",
    "query": "how to use hikaricp in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\",\"root\",\"\");\n\t\t\tStatement stmt = con.createStatement();\n\t\t\tResultSet rs = stmt.executeQuery(\"select * from test\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getString(1)+\" \"+rs.getString(2));\n\t\t\t}\n\t\t\tcon.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\ttry{\n\t\t\tClass.forName(\"org.h2.Driver\");\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:h2:tcp://localhost/~/test\", \"sa\", \"\");\n\t\t\tStatement stmt = con.createStatement();\n\t\t\tstmt.execute(\"CREATE TABLE IF NOT EXISTS TEST(ID INTEGER, NAME VARCHAR(255))\");\n\t\t\tstmt.execute(\"INSERT INTO TEST VALUES(1, 'Hello')\");\n\t\t\tstmt.execute(\"INSERT INTO TEST VALUES(2, 'World')\");\n\t\t\tResultSet rs = stmt.executeQuery(\"SELECT * FROM TEST\");\n\t\t\twhile(rs.next()){\n\t\t\t\tSystem.out.println(rs.getInt(\"ID\") + \" \" + rs.getString(\"NAME\"));\n\t\t\t}\n\t\t\trs.close();\n\t\t\tstmt.close();\n\t\t\tcon.close();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry(Connection conn = DriverManager.getConnection(\"jdbc:h2:mem:test\", \"sa\", \"\")){\n\t\t\tconn.createStatement().execute(\"create table test(id int)\");\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry(Connection conn = DriverManager.getConnection(\"jdbc:h2:mem:test\", \"sa\", \"\")){\n\t\t\tconn.createStatement().execute(\"create table test(id int)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(1)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(2)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(3)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(4)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(5)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(6)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(7)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(8)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(9)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(10)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(11)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(12)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(13)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(14)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(15)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(16)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(17)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(18)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(19)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(20)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(21)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(22)\");\n\t\t\tconn.createStatement().execute(\"insert into test values(23)\");\n\t\t\tconn.createStatement\n",
        "\tvoid test(){\n\t\ttry(Connection conn = DriverManager.getConnection(\"jdbc:h2:mem:test\", \"sa\", \"\")){\n\t\t\tconn.createStatement().execute(\"create table test(id int, name varchar(100))\");\n\t\t\tconn.createStatement().execute(\"insert into test values(1, 'test')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(2, 'test2')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(3, 'test3')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(4, 'test4')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(5, 'test5')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(6, 'test6')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(7, 'test7')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(8, 'test8')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(9, 'test9')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(10, 'test10')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(11, 'test11')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(12, 'test12')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(13, 'test13')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(14, 'test14')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(15, 'test15')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(16, 'test16')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(17, 'test17')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(18, 'test18')\");\n\t\t\tconn.createStatement().execute(\"insert into test values(19, 'test19')\");\n",
        "\tvoid test(){\n\t\tConnection conn = null;\n\t\ttry{\n\t\t\tconn = DriverManager.getConnection(\"jdbc:hikaricp:test\");\n\t\t\tconn.createStatement().execute(\"select * from test\");\n\t\t}catch(SQLException e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\tif(conn != null){\n\t\t\t\ttry{\n\t\t\t\t\tconn.close();\n\t\t\t\t}catch(SQLException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\ttry(Connection conn = DriverManager.getConnection(\"jdbc:hikaricp:mydb\", \"user\", \"password\")){\n\t\t\t//do something\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "732",
    "source": "soSearches",
    "language": "java",
    "query": "how to get time java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.currentTimeMillis());\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tlong time = System.currentTimeMillis();\n\t\tSystem.out.println(time);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "733",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert string to jsonobject in java using org.json.simple",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString jsonString = \"{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"cars\\\":[\\\"Ford\\\",\\\"BMW\\\",\\\"Fiat\\\"]}\";\n\t\tJSONObject jsonObject = new JSONObject(jsonString);\n\t\tSystem.out.println(jsonObject);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString jsonString = \"{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"city\\\":\\\"New York\\\"}\";\n\t\tJSONObject jsonObject = new JSONObject(jsonString);\n\t\tSystem.out.println(jsonObject);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"{\\\"name\\\":\\\"abc\\\",\\\"age\\\":\\\"20\\\"}\";\n\t\tJSONObject json=new JSONObject(str);\n\t\tSystem.out.println(json.get(\"name\"));\n\t\tSystem.out.println(json.get(\"age\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"{\\\"name\\\":\\\"abc\\\",\\\"age\\\":\\\"20\\\"}\";\n\t\tJSONObject obj=new JSONObject();\n\t\tobj.put(\"name\",\"abc\");\n\t\tobj.put(\"age\",\"20\");\n\t\tSystem.out.println(obj);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"{\\\"name\\\":\\\"John\\\",\\\"age\\\":30,\\\"city\\\":\\\"New York\\\"}\";\n\t\tJSONObject json=new JSONObject(str);\n\t\tSystem.out.println(json.get(\"name\"));\n\t\tSystem.out.println(json.get(\"age\"));\n\t\tSystem.out.println(json.get(\"city\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"{\\\"name\\\":\\\"abc\\\",\\\"age\\\":\\\"20\\\"}\";\n\t\tJSONObject jsonObject=new JSONObject();\n\t\tjsonObject.put(\"name\",\"abc\");\n\t\tjsonObject.put(\"age\",\"20\");\n\t\tSystem.out.println(jsonObject);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"{\\\"name\\\":\\\"suresh\\\",\\\"age\\\":\\\"25\\\"}\";\n\t\tJSONObject json=new JSONObject(str);\n\t\tSystem.out.println(json.get(\"name\"));\n\t\tSystem.out.println(json.get(\"age\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"{\\\"name\\\":\\\"Raj\\\",\\\"age\\\":\\\"30\\\"}\";\n\t\tJSONObject jsonObject = new JSONObject(str);\n\t\tSystem.out.println(jsonObject.get(\"name\"));\n\t\tSystem.out.println(jsonObject.get(\"age\"));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "734",
    "source": "soSearches",
    "language": "java",
    "query": "how to check uniform in java scrpt",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] a = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] b = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] c = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] d = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] e = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] f = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] g = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] h = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] i = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] j = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] k = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] l = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] m = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] n = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] o = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] p = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] q = {1,2,3,4,5,6,7,8,9,10};\n\t\tint[] r = {1,2,3,\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint count = 0;\n\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\tif(arr[i] == arr[0]){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count == arr.length){\n\t\t\tSystem.out.println(\"Uniform\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Not Uniform\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "735",
    "source": "soSearches",
    "language": "java",
    "query": "java how to print weight and cost of products",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint weight = 10;\n\t\tint cost = 20;\n\t\tSystem.out.println(\"Weight: \"+weight+\" Cost: \"+cost);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"Apple\", 10, 20);\n\t\tProduct p2 = new Product(\"Orange\", 20, 30);\n\t\tProduct p3 = new Product(\"Grape\", 30, 40);\n\t\tProduct p4 = new Product(\"Banana\", 40, 50);\n\t\tProduct p5 = new Product(\"Mango\", 50, 60);\n\t\tProduct p6 = new Product(\"Pineapple\", 60, 70);\n\t\tProduct p7 = new Product(\"Strawberry\", 70, 80);\n\t\tProduct p8 = new Product(\"Watermelon\", 80, 90);\n\t\tProduct p9 = new Product(\"Cherry\", 90, 100);\n\t\tProduct p10 = new Product(\"Papaya\", 100, 110);\n\t\tProduct p11 = new Product(\"Coconut\", 110, 120);\n\t\tProduct p12 = new Product(\"Pomegranate\", 120, 130);\n\t\tProduct p13 = new Product(\"Kumquat\", 130, 140);\n\t\tProduct p14 = new Product(\"Papaya\", 140, 150);\n\t\tProduct p15 = new Product(\"Coconut\", 150, 160);\n\t\tProduct p16 = new Product(\"Pomegranate\", 160, 170);\n\t\tProduct p17 = new Product(\"Kumquat\", 170, 180);\n\t\tProduct p18 = new Product(\"Papaya\", 180, 190);\n\t\tProduct p19 = new Product(\"Coconut\", 190, 200);\n\t\tProduct p20 = new Product(\"Pomegranate\", 200, 210);\n\t\tProduct p21 = new Product(\"Kumquat\", 210, 220);\n\t\tProduct p22 = new Product(\"Papaya\", 220, 230);\n\t\tProduct p23 = new Product(\"Coconut\", 230, 240);\n\t\tProduct p24 = new Product(\"Pomegranate\", 240, 250);\n\t\tProduct p25 = new Product(\"Kumquat\", 250, 260);\n\t\tProduct p26 = new Product(\"Papaya\", 260, 270);\n\t\tProduct p27 = new Product(\"Coconut\", 270, 280);\n\t\tProduct p\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"Apple\", 10, 20);\n\t\tProduct p2 = new Product(\"Orange\", 20, 30);\n\t\tProduct p3 = new Product(\"Grape\", 30, 40);\n\t\tProduct p4 = new Product(\"Banana\", 40, 50);\n\t\tProduct p5 = new Product(\"Mango\", 50, 60);\n\t\tProduct p6 = new Product(\"Pineapple\", 60, 70);\n\t\tProduct p7 = new Product(\"Strawberry\", 70, 80);\n\t\tProduct p8 = new Product(\"Watermelon\", 80, 90);\n\t\tProduct p9 = new Product(\"Papaya\", 90, 100);\n\t\tProduct p10 = new Product(\"Coconut\", 100, 110);\n\t\tProduct p11 = new Product(\"Pomegranate\", 110, 120);\n\t\tProduct p12 = new Product(\"Guava\", 120, 130);\n\t\tProduct p13 = new Product(\"Kumquat\", 130, 140);\n\t\tProduct p14 = new Product(\"Passionfruit\", 140, 150);\n\t\tProduct p15 = new Product(\"Clementine\", 150, 160);\n\t\tProduct p16 = new Product(\"Cucumber\", 160, 170);\n\t\tProduct p17 = new Product(\"Tomato\", 170, 180);\n\t\tProduct p18 = new Product(\"Carrot\", 180, 190);\n\t\tProduct p19 = new Product(\"Potato\", 190, 200);\n\t\tProduct p20 = new Product(\"Onion\", 200, 210);\n\t\tProduct p21 = new Product(\"Celery\", 210, 220);\n\t\tProduct p22 = new Product(\"Garlic\", 220, 230);\n\t\tProduct p23 = new Product(\"Parsley\", 230, 240);\n\t\tProduct p24 = new Product(\"Cilantro\", 240, 250);\n\t\tProduct p25 = new Product(\"Chilipepper\", 250, 260);\n\t\tProduct p26 = new Product(\"Cilantro\", 260, 270);\n\t\tProduct p27 = new Product(\"Cilantro\", 270, 280);\n\t\tProduct p28 = new Product(\"Cilantro\", 280, 290);\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"Apple\", 10, 20);\n\t\tProduct p2 = new Product(\"Orange\", 20, 30);\n\t\tProduct p3 = new Product(\"Grape\", 30, 40);\n\t\tProduct p4 = new Product(\"Banana\", 40, 50);\n\t\tProduct p5 = new Product(\"Mango\", 50, 60);\n\t\tProduct p6 = new Product(\"Pineapple\", 60, 70);\n\t\tProduct p7 = new Product(\"Watermelon\", 70, 80);\n\t\tProduct p8 = new Product(\"Papaya\", 80, 90);\n\t\tProduct p9 = new Product(\"Coconut\", 90, 100);\n\t\tProduct p10 = new Product(\"Pomegranate\", 100, 110);\n\t\tProduct p11 = new Product(\"Pineapple\", 110, 120);\n\t\tProduct p12 = new Product(\"Watermelon\", 120, 130);\n\t\tProduct p13 = new Product(\"Papaya\", 130, 140);\n\t\tProduct p14 = new Product(\"Coconut\", 140, 150);\n\t\tProduct p15 = new Product(\"Pomegranate\", 150, 160);\n\t\tProduct p16 = new Product(\"Pineapple\", 160, 170);\n\t\tProduct p17 = new Product(\"Watermelon\", 170, 180);\n\t\tProduct p18 = new Product(\"Papaya\", 180, 190);\n\t\tProduct p19 = new Product(\"Coconut\", 190, 200);\n\t\tProduct p20 = new Product(\"Pomegranate\", 200, 210);\n\t\tProduct p21 = new Product(\"Pineapple\", 210, 220);\n\t\tProduct p22 = new Product(\"Watermelon\", 220, 230);\n\t\tProduct p23 = new Product(\"Papaya\", 230, 240);\n\t\tProduct p24 = new Product(\"Coconut\", 240, 250);\n\t\tProduct p25 = new Product(\"Pomegranate\", 250, 260);\n\t\tProduct p26 = new Product(\"Pineapple\", 260, 270);\n\t\tProduct p27 = new Product(\"Watermelon\", 270, 280);\n\t\tProduct p28 = new Product(\"Pap\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"apple\",10,20);\n\t\tProduct p2 = new Product(\"orange\",20,30);\n\t\tProduct p3 = new Product(\"banana\",30,40);\n\t\tProduct p4 = new Product(\"grapes\",40,50);\n\t\tProduct p5 = new Product(\"mango\",50,60);\n\t\tProduct p6 = new Product(\"watermelon\",60,70);\n\t\tProduct p7 = new Product(\"pineapple\",70,80);\n\t\tProduct p8 = new Product(\"strawberry\",80,90);\n\t\tProduct p9 = new Product(\"peach\",90,100);\n\t\tProduct p10 = new Product(\"kiwi\",100,110);\n\t\tProduct p11 = new Product(\"coconut\",110,120);\n\t\tProduct p12 = new Product(\"papaya\",120,130);\n\t\tProduct p13 = new Product(\"pear\",130,140);\n\t\tProduct p14 = new Product(\"cherry\",140,150);\n\t\tProduct p15 = new Product(\"apple\",150,160);\n\t\tProduct p16 = new Product(\"orange\",160,170);\n\t\tProduct p17 = new Product(\"banana\",170,180);\n\t\tProduct p18 = new Product(\"grapes\",180,190);\n\t\tProduct p19 = new Product(\"mango\",190,200);\n\t\tProduct p20 = new Product(\"watermelon\",200,210);\n\t\tProduct p21 = new Product(\"pineapple\",210,220);\n\t\tProduct p22 = new Product(\"strawberry\",220,230);\n\t\tProduct p23 = new Product(\"peach\",230,240);\n\t\tProduct p24 = new Product(\"kiwi\",240,250);\n\t\tProduct p25 = new Product(\"coconut\",250,260);\n\t\tProduct p26 = new Product(\"papaya\",260,270);\n\t\tProduct p27 = new Product(\"pear\",270,280);\n\t\tProduct p28 = new Product(\"cherry\",280,290);\n\t\tProduct p29 = new Product(\"\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"Milk\", 1.50, 2.50);\n\t\tProduct p2 = new Product(\"Bread\", 1.00, 2.50);\n\t\tProduct p3 = new Product(\"Eggs\", 1.00, 2.50);\n\t\tProduct p4 = new Product(\"Butter\", 1.00, 2.50);\n\t\tProduct p5 = new Product(\"Cheese\", 1.00, 2.50);\n\t\tProduct p6 = new Product(\"Apples\", 1.00, 2.50);\n\t\tProduct p7 = new Product(\"Oranges\", 1.00, 2.50);\n\t\tProduct p8 = new Product(\"Bananas\", 1.00, 2.50);\n\t\tProduct p9 = new Product(\"Cherries\", 1.00, 2.50);\n\t\tProduct p10 = new Product(\"Grapes\", 1.00, 2.50);\n\t\tProduct p11 = new Product(\"Strawberries\", 1.00, 2.50);\n\t\tProduct p12 = new Product(\"Watermelon\", 1.00, 2.50);\n\t\tProduct p13 = new Product(\"Pineapple\", 1.00, 2.50);\n\t\tProduct p14 = new Product(\"Coconut\", 1.00, 2.50);\n\t\tProduct p15 = new Product(\"Papaya\", 1.00, 2.50);\n\t\tProduct p16 = new Product(\"Mango\", 1.00, 2.50);\n\t\tProduct p17 = new Product(\"Pomegranate\", 1.00, 2.50);\n\t\tProduct p18 = new Product(\"Pineapple\", 1.00, 2.50);\n\t\tProduct p19 = new Product(\"Coconut\", 1.00, 2.50);\n\t\tProduct p20 = new Product(\"Papaya\", 1.00, 2.50);\n\t\tProduct p21 = new Product(\"Mango\", 1.00, 2.50);\n\t\tProduct p22 = new Product(\"Pomegranate\", 1.00, 2.50);\n\t\tProduct p23 = new Product(\"Pineapple\",\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"Milk\", 10, 20);\n\t\tProduct p2 = new Product(\"Bread\", 20, 30);\n\t\tProduct p3 = new Product(\"Butter\", 30, 40);\n\t\tProduct p4 = new Product(\"Cheese\", 40, 50);\n\t\tProduct p5 = new Product(\"Coffee\", 50, 60);\n\t\tProduct p6 = new Product(\"Tea\", 60, 70);\n\t\tProduct p7 = new Product(\"Water\", 70, 80);\n\t\tProduct p8 = new Product(\"Coke\", 80, 90);\n\t\tProduct p9 = new Product(\"Chips\", 90, 100);\n\t\tProduct p10 = new Product(\"Soda\", 100, 110);\n\t\tProduct p11 = new Product(\"Juice\", 110, 120);\n\t\tProduct p12 = new Product(\"Milk\", 120, 130);\n\t\tProduct p13 = new Product(\"Bread\", 130, 140);\n\t\tProduct p14 = new Product(\"Butter\", 140, 150);\n\t\tProduct p15 = new Product(\"Cheese\", 150, 160);\n\t\tProduct p16 = new Product(\"Coffee\", 160, 170);\n\t\tProduct p17 = new Product(\"Tea\", 170, 180);\n\t\tProduct p18 = new Product(\"Water\", 180, 190);\n\t\tProduct p19 = new Product(\"Coke\", 190, 200);\n\t\tProduct p20 = new Product(\"Chips\", 200, 210);\n\t\tProduct p21 = new Product(\"Soda\", 210, 220);\n\t\tProduct p22 = new Product(\"Juice\", 220, 230);\n\t\tProduct p23 = new Product(\"Milk\", 230, 240);\n\t\tProduct p24 = new Product(\"Bread\", 240, 250);\n\t\tProduct p25 = new Product(\"Butter\", 250, 260);\n\t\tProduct p26 = new Product(\"Cheese\", 260, 270);\n\t\tProduct p27 = new Product(\"Coffee\", 270, 280);\n\t\tProduct p28 = new Product(\"Tea\", 280, 290);\n\t\tProduct p29 = new Product(\"Water\", 290, 300);\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"Milk\", 1.50, 2.00);\n\t\tProduct p2 = new Product(\"Bread\", 1.00, 1.50);\n\t\tProduct p3 = new Product(\"Butter\", 1.00, 1.00);\n\t\tProduct p4 = new Product(\"Coffee\", 1.00, 1.50);\n\t\tProduct p5 = new Product(\"Tea\", 1.00, 1.50);\n\t\tProduct p6 = new Product(\"Cake\", 1.00, 1.50);\n\t\tProduct p7 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p8 = new Product(\"Candy\", 1.00, 1.50);\n\t\tProduct p9 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p10 = new Product(\"Candy\", 1.00, 1.50);\n\t\tProduct p11 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p12 = new Product(\"Candy\", 1.00, 1.50);\n\t\tProduct p13 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p14 = new Product(\"Candy\", 1.00, 1.50);\n\t\tProduct p15 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p16 = new Product(\"Candy\", 1.00, 1.50);\n\t\tProduct p17 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p18 = new Product(\"Candy\", 1.00, 1.50);\n\t\tProduct p19 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p20 = new Product(\"Candy\", 1.00, 1.50);\n\t\tProduct p21 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p22 = new Product(\"Candy\", 1.00, 1.50);\n\t\tProduct p23 = new Product(\"Chips\", 1.00, 1.50);\n\t\tProduct p24 =\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"apple\", 1.0, 0.5);\n\t\tProduct p2 = new Product(\"banana\", 2.0, 0.3);\n\t\tProduct p3 = new Product(\"orange\", 3.0, 0.2);\n\t\tProduct p4 = new Product(\"grape\", 4.0, 0.1);\n\t\tProduct p5 = new Product(\"pear\", 5.0, 0.4);\n\t\tProduct p6 = new Product(\"watermelon\", 6.0, 0.3);\n\t\tProduct p7 = new Product(\"strawberry\", 7.0, 0.2);\n\t\tProduct p8 = new Product(\"kiwi\", 8.0, 0.1);\n\t\tProduct p9 = new Product(\"mango\", 9.0, 0.4);\n\t\tProduct p10 = new Product(\"pineapple\", 10.0, 0.3);\n\t\tProduct p11 = new Product(\"coconut\", 11.0, 0.2);\n\t\tProduct p12 = new Product(\"avocado\", 12.0, 0.1);\n\t\tProduct p13 = new Product(\"peach\", 13.0, 0.4);\n\t\tProduct p14 = new Product(\"plum\", 14.0, 0.3);\n\t\tProduct p15 = new Product(\"pomegranate\", 15.0, 0.2);\n\t\tProduct p16 = new Product(\"lemon\", 16.0, 0.1);\n\t\tProduct p17 = new Product(\"lime\", 17.0, 0.4);\n\t\tProduct p18 = new Product(\"cucumber\", 18.0, 0.3);\n\t\tProduct p19 = new Product(\"tomato\", 19.0, 0.2);\n\t\tProduct p20 = new Product(\"carrot\", 20.0, 0.1);\n\t\tProduct p21 = new Product(\"potato\", 21.0, 0.4);\n\t\tProduct p22 = new Product(\"onion\", 22.0, 0.3);\n\t\tProduct p23 = new Product(\"garlic\", 23.0, 0.2);\n\t\tProduct p\n",
        "\tstatic void main(String[] args){\n\t\tProduct p1 = new Product(\"Milk\", 2.50, 2.00);\n\t\tProduct p2 = new Product(\"Bread\", 1.50, 1.00);\n\t\tProduct p3 = new Product(\"Eggs\", 3.00, 3.00);\n\t\tProduct p4 = new Product(\"Cheese\", 4.00, 4.00);\n\t\tProduct p5 = new Product(\"Butter\", 5.00, 5.00);\n\t\tProduct p6 = new Product(\"Coffee\", 6.00, 6.00);\n\t\tProduct p7 = new Product(\"Tea\", 7.00, 7.00);\n\t\tProduct p8 = new Product(\"Cake\", 8.00, 8.00);\n\t\tProduct p9 = new Product(\"Chips\", 9.00, 9.00);\n\t\tProduct p10 = new Product(\"Soda\", 10.00, 10.00);\n\t\tProduct p11 = new Product(\"Candy\", 11.00, 11.00);\n\t\tProduct p12 = new Product(\"Milk\", 12.00, 12.00);\n\t\tProduct p13 = new Product(\"Bread\", 13.00, 13.00);\n\t\tProduct p14 = new Product(\"Eggs\", 14.00, 14.00);\n\t\tProduct p15 = new Product(\"Cheese\", 15.00, 15.00);\n\t\tProduct p16 = new Product(\"Butter\", 16.00, 16.00);\n\t\tProduct p17 = new Product(\"Coffee\", 17.00, 17.00);\n\t\tProduct p18 = new Product(\"Tea\", 18.00, 18.00);\n\t\tProduct p19 = new Product(\"Cake\", 19.00, 19.00);\n\t\tProduct p20 = new Product(\"Chips\", 20.00, 20.00);\n\t\tProduct p21 = new Product(\"Soda\", 21.00, 21.00);\n\t\tProduct p22 = new Product(\"Candy\", 22.00, 22.00);\n\t\tProduct p23 = new Product(\"Milk\", 23.00, 23.00);\n\t\tProduct p\n"
    ],
    "results": 10
},{
    "id": "736",
    "source": "soSearches",
    "language": "java",
    "query": "how to add string to the array of arguments in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString[] args1 = new String[args.length+1];\n\t\tfor(int i=0;i<args.length;i++){\n\t\t\targs1[i] = args[i];\n\t\t}\n\t\targs1[args.length] = \"new\";\n\t\tSystem.out.println(args1[0]);\n\t\tSystem.out.println(args1[1]);\n\t\tSystem.out.println(args1[2]);\n\t\tSystem.out.println(args1[3]);\n\t\tSystem.out.println(args1[4]);\n\t\tSystem.out.println(args1[5]);\n\t\tSystem.out.println(args1[6]);\n\t\tSystem.out.println(args1[7]);\n\t\tSystem.out.println(args1[8]);\n\t\tSystem.out.println(args1[9]);\n\t\tSystem.out.println(args1[10]);\n\t\tSystem.out.println(args1[11]);\n\t\tSystem.out.println(args1[12]);\n\t\tSystem.out.println(args1[13]);\n\t\tSystem.out.println(args1[14]);\n\t\tSystem.out.println(args1[15]);\n\t\tSystem.out.println(args1[16]);\n\t\tSystem.out.println(args1[17]);\n\t\tSystem.out.println(args1[18]);\n\t\tSystem.out.println(args1[19]);\n\t\tSystem.out.println(args1[20]);\n\t\tSystem.out.println(args1[21]);\n\t\tSystem.out.println(args1[22]);\n\t\tSystem.out.println(args1[23]);\n\t\tSystem.out.println(args1[24]);\n\t\tSystem.out.println(args1[25]);\n\t\tSystem.out.println(args1[26]);\n\t\tSystem.out.println(args1[27]);\n\t\tSystem.out.println(args1[28]);\n\t\tSystem.out.println(args1[29]);\n",
        "\tstatic void main(String[] args){\n\t\tString[] args1 = new String[args.length+1];\n\t\tfor(int i=0;i<args.length;i++){\n\t\t\targs1[i]=args[i];\n\t\t}\n\t\targs1[args.length]=\"new\";\n\t\tSystem.out.println(args1[0]);\n\t\tSystem.out.println(args1[1]);\n\t\tSystem.out.println(args1[2]);\n\t\tSystem.out.println(args1[3]);\n\t\tSystem.out.println(args1[4]);\n\t\tSystem.out.println(args1[5]);\n\t\tSystem.out.println(args1[6]);\n\t\tSystem.out.println(args1[7]);\n\t\tSystem.out.println(args1[8]);\n\t\tSystem.out.println(args1[9]);\n\t\tSystem.out.println(args1[10]);\n\t\tSystem.out.println(args1[11]);\n\t\tSystem.out.println(args1[12]);\n\t\tSystem.out.println(args1[13]);\n\t\tSystem.out.println(args1[14]);\n\t\tSystem.out.println(args1[15]);\n\t\tSystem.out.println(args1[16]);\n\t\tSystem.out.println(args1[17]);\n\t\tSystem.out.println(args1[18]);\n\t\tSystem.out.println(args1[19]);\n\t\tSystem.out.println(args1[20]);\n\t\tSystem.out.println(args1[21]);\n\t\tSystem.out.println(args1[22]);\n\t\tSystem.out.println(args1[23]);\n\t\tSystem.out.println(args1[24]);\n\t\tSystem.out.println(args1[25]);\n\t\tSystem.out.println(args1[26]);\n\t\tSystem.out.println(args1[27]);\n\t\tSystem.out.println(args1[28]);\n\t\tSystem.out.println(args1[29]);\n\t\tSystem\n",
        "\tstatic void main(String[] args){\n\t\tString[] args1 = new String[args.length+1];\n\t\tfor(int i=0;i<args.length;i++){\n\t\t\targs1[i] = args[i];\n\t\t}\n\t\targs1[args.length] = \"hello\";\n\t\tSystem.out.println(args1[0]);\n\t\tSystem.out.println(args1[1]);\n\t\tSystem.out.println(args1[2]);\n\t\tSystem.out.println(args1[3]);\n\t\tSystem.out.println(args1[4]);\n\t\tSystem.out.println(args1[5]);\n\t\tSystem.out.println(args1[6]);\n\t\tSystem.out.println(args1[7]);\n\t\tSystem.out.println(args1[8]);\n\t\tSystem.out.println(args1[9]);\n\t\tSystem.out.println(args1[10]);\n\t\tSystem.out.println(args1[11]);\n\t\tSystem.out.println(args1[12]);\n\t\tSystem.out.println(args1[13]);\n\t\tSystem.out.println(args1[14]);\n\t\tSystem.out.println(args1[15]);\n\t\tSystem.out.println(args1[16]);\n\t\tSystem.out.println(args1[17]);\n\t\tSystem.out.println(args1[18]);\n\t\tSystem.out.println(args1[19]);\n\t\tSystem.out.println(args1[20]);\n\t\tSystem.out.println(args1[21]);\n\t\tSystem.out.println(args1[22]);\n\t\tSystem.out.println(args1[23]);\n\t\tSystem.out.println(args1[24]);\n\t\tSystem.out.println(args1[25]);\n\t\tSystem.out.println(args1[26]);\n\t\tSystem.out.println(args1[27]);\n\t\tSystem.out.println(args1[28]);\n\t\tSystem.out.println(args1[29]);\n",
        "\tstatic void main(String[] args){\n\t\tString[] args2 = new String[args.length+1];\n\t\tfor(int i=0;i<args.length;i++){\n\t\t\targs2[i]=args[i];\n\t\t}\n\t\targs2[args.length]=\"new\";\n\t\tSystem.out.println(args2[0]);\n\t\tSystem.out.println(args2[1]);\n\t\tSystem.out.println(args2[2]);\n\t\tSystem.out.println(args2[3]);\n\t\tSystem.out.println(args2[4]);\n\t\tSystem.out.println(args2[5]);\n\t\tSystem.out.println(args2[6]);\n\t\tSystem.out.println(args2[7]);\n\t\tSystem.out.println(args2[8]);\n\t\tSystem.out.println(args2[9]);\n\t\tSystem.out.println(args2[10]);\n\t\tSystem.out.println(args2[11]);\n\t\tSystem.out.println(args2[12]);\n\t\tSystem.out.println(args2[13]);\n\t\tSystem.out.println(args2[14]);\n\t\tSystem.out.println(args2[15]);\n\t\tSystem.out.println(args2[16]);\n\t\tSystem.out.println(args2[17]);\n\t\tSystem.out.println(args2[18]);\n\t\tSystem.out.println(args2[19]);\n\t\tSystem.out.println(args2[20]);\n\t\tSystem.out.println(args2[21]);\n\t\tSystem.out.println(args2[22]);\n\t\tSystem.out.println(args2[23]);\n\t\tSystem.out.println(args2[24]);\n\t\tSystem.out.println(args2[25]);\n\t\tSystem.out.println(args2[26]);\n\t\tSystem.out.println(args2[27]);\n\t\tSystem.out.println(args2[28]);\n\t\tSystem.out.println(args2[29]);\n\t\tSystem\n",
        "\tstatic void main(String[] args){\n\t\tString[] args2 = new String[args.length+1];\n\t\tfor(int i=0;i<args.length;i++){\n\t\t\targs2[i] = args[i];\n\t\t}\n\t\targs2[args.length] = \"new\";\n\t\tSystem.out.println(args2[0]);\n\t\tSystem.out.println(args2[1]);\n\t\tSystem.out.println(args2[2]);\n\t\tSystem.out.println(args2[3]);\n\t\tSystem.out.println(args2[4]);\n\t\tSystem.out.println(args2[5]);\n\t\tSystem.out.println(args2[6]);\n\t\tSystem.out.println(args2[7]);\n\t\tSystem.out.println(args2[8]);\n\t\tSystem.out.println(args2[9]);\n\t\tSystem.out.println(args2[10]);\n\t\tSystem.out.println(args2[11]);\n\t\tSystem.out.println(args2[12]);\n\t\tSystem.out.println(args2[13]);\n\t\tSystem.out.println(args2[14]);\n\t\tSystem.out.println(args2[15]);\n\t\tSystem.out.println(args2[16]);\n\t\tSystem.out.println(args2[17]);\n\t\tSystem.out.println(args2[18]);\n\t\tSystem.out.println(args2[19]);\n\t\tSystem.out.println(args2[20]);\n\t\tSystem.out.println(args2[21]);\n\t\tSystem.out.println(args2[22]);\n\t\tSystem.out.println(args2[23]);\n\t\tSystem.out.println(args2[24]);\n\t\tSystem.out.println(args2[25]);\n\t\tSystem.out.println(args2[26]);\n\t\tSystem.out.println(args2[27]);\n\t\tSystem.out.println(args2[28]);\n\t\tSystem.out.println(args2[29]);\n",
        "\tstatic void main(String[] args){\n\t\tString[] args1 = new String[args.length+1];\n\t\tfor(int i = 0; i < args.length; i++){\n\t\t\targs1[i] = args[i];\n\t\t}\n\t\targs1[args.length] = \"Hello\";\n\t\tSystem.out.println(args1[0]);\n\t\tSystem.out.println(args1[1]);\n\t\tSystem.out.println(args1[2]);\n\t\tSystem.out.println(args1[3]);\n\t\tSystem.out.println(args1[4]);\n\t\tSystem.out.println(args1[5]);\n\t\tSystem.out.println(args1[6]);\n\t\tSystem.out.println(args1[7]);\n\t\tSystem.out.println(args1[8]);\n\t\tSystem.out.println(args1[9]);\n\t\tSystem.out.println(args1[10]);\n\t\tSystem.out.println(args1[11]);\n\t\tSystem.out.println(args1[12]);\n\t\tSystem.out.println(args1[13]);\n\t\tSystem.out.println(args1[14]);\n\t\tSystem.out.println(args1[15]);\n\t\tSystem.out.println(args1[16]);\n\t\tSystem.out.println(args1[17]);\n\t\tSystem.out.println(args1[18]);\n\t\tSystem.out.println(args1[19]);\n\t\tSystem.out.println(args1[20]);\n\t\tSystem.out.println(args1[21]);\n\t\tSystem.out.println(args1[22]);\n\t\tSystem.out.println(args1[23]);\n\t\tSystem.out.println(args1[24]);\n\t\tSystem.out.println(args1[25]);\n\t\tSystem.out.println(args1[26]);\n\t\tSystem.out.println(args1[27]);\n\t\tSystem.out.println(args1[28]);\n\t\tSystem.out.println(args1[29]);\n"
    ],
    "results": 10
},{
    "id": "737",
    "source": "soSearches",
    "language": "java",
    "query": "how to read and operate the \\\"+\\\",\\\"-\\\",... symbols from a string chain in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString str=\"+-*/\";\n\t\tchar[] ch=str.toCharArray();\n\t\tfor(int i=0;i<ch.length;i++){\n\t\t\tSystem.out.println(ch[i]);\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"123+456-789\";\n\t\tint i = 0;\n\t\twhile(i < s.length()){\n\t\t\tchar c = s.charAt(i);\n\t\t\tif(c == '+' || c == '-' || c == '*' || c == '/'){\n\t\t\t\tSystem.out.println(c);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str=\"+-*/\";\n\t\tchar ch=str.charAt(0);\n\t\tSystem.out.println(ch);\n\t\tch=str.charAt(1);\n\t\tSystem.out.println(ch);\n\t\tch=str.charAt(2);\n\t\tSystem.out.println(ch);\n\t\tch=str.charAt(3);\n\t\tSystem.out.println(ch);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"abc+def-ghi\";\n\t\tint i = 0;\n\t\twhile(i < s.length()){\n\t\t\tchar c = s.charAt(i);\n\t\t\tif(c == '+' || c == '-' || c == '*' || c == '/'){\n\t\t\t\tSystem.out.println(c);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"+-*/\";\n\t\tchar[] c=s.toCharArray();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.print(c[i]);\n\t\t}\n\t\tSystem.out.println();\n\t\tfor(int i\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"+-*/\";\n\t\tchar[] c=s.toCharArray();\n\t\tfor(int i=0;i<c.length;i++){\n\t\t\tSystem.out.println(c[i]);\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "738",
    "source": "soSearches",
    "language": "java",
    "query": "how to make a character flash in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tchar c = 'a';\n\t\tSystem.out.println(c);\n\t\tc = 'b';\n\t\tSystem.out.println(c);\n\t\tc = 'c';\n\t\tSystem.out.println(c);\n\t\tc = 'd';\n\t\tSystem.out.println(c);\n\t\tc = 'e';\n\t\tSystem.out.println(c);\n\t\tc = 'f';\n\t\tSystem.out.println(c);\n\t\tc = 'g';\n\t\tSystem.out.println(c);\n\t\tc = 'h';\n\t\tSystem.out.println(c);\n\t\tc = 'i';\n\t\tSystem.out.println(c);\n\t\tc = 'j';\n\t\tSystem.out.println(c);\n\t\tc = 'k';\n\t\tSystem.out.println(c);\n\t\tc = 'l';\n\t\tSystem.out.println(c);\n\t\tc = 'm';\n\t\tSystem.out.println(c);\n\t\tc = 'n';\n\t\tSystem.out.println(c);\n\t\tc = 'o';\n\t\tSystem.out.println(c);\n\t\tc = 'p';\n\t\tSystem.out.println(c);\n\t\tc = 'q';\n\t\tSystem.out.println(c);\n\t\tc = 'r';\n\t\tSystem.out.println(c);\n\t\tc = 's';\n\t\tSystem.out.println(c);\n\t\tc = 't';\n\t\tSystem.out.println(c);\n\t\tc = 'u';\n\t\tSystem.out.println(c);\n\t\tc = 'v';\n\t\tSystem.out.println(c);\n\t\tc = 'w';\n\t\tSystem.out.println(c);\n\t\tc = 'x';\n\t\tSystem.out.println(c);\n\t\tc = 'y';\n\t\tSystem.out.println(c);\n\t\tc = 'z';\n\t\tSystem.out\n",
        "\tstatic void main(String[] args){\n\t\tchar c = 'A';\n\t\tSystem.out.println(c);\n\t\tc = 'B';\n\t\tSystem.out.println(c);\n\t\tc = 'C';\n\t\tSystem.out.println(c);\n\t\tc = 'D';\n\t\tSystem.out.println(c);\n\t\tc = 'E';\n\t\tSystem.out.println(c);\n\t\tc = 'F';\n\t\tSystem.out.println(c);\n\t\tc = 'G';\n\t\tSystem.out.println(c);\n\t\tc = 'H';\n\t\tSystem.out.println(c);\n\t\tc = 'I';\n\t\tSystem.out.println(c);\n\t\tc = 'J';\n\t\tSystem.out.println(c);\n\t\tc = 'K';\n\t\tSystem.out.println(c);\n\t\tc = 'L';\n\t\tSystem.out.println(c);\n\t\tc = 'M';\n\t\tSystem.out.println(c);\n\t\tc = 'N';\n\t\tSystem.out.println(c);\n\t\tc = 'O';\n\t\tSystem.out.println(c);\n\t\tc = 'P';\n\t\tSystem.out.println(c);\n\t\tc = 'Q';\n\t\tSystem.out.println(c);\n\t\tc = 'R';\n\t\tSystem.out.println(c);\n\t\tc = 'S';\n\t\tSystem.out.println(c);\n\t\tc = 'T';\n\t\tSystem.out.println(c);\n\t\tc = 'U';\n\t\tSystem.out.println(c);\n\t\tc = 'V';\n\t\tSystem.out.println(c);\n\t\tc = 'W';\n\t\tSystem.out.println(c);\n\t\tc = 'X';\n\t\tSystem.out.println(c);\n\t\tc = 'Y';\n\t\tSystem.out.println(c);\n\t\tc = 'Z';\n\t\tSystem.out\n",
        "\tstatic void main(String[] args){\n\t\tchar c = 'a';\n\t\tfor(int i = 0; i < 10; i++){\n\t\t\tSystem.out.print(c);\n\t\t\tc = (c == 'a') ? 'b' : 'a';\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tchar c = 'a';\n\t\tfor(int i = 0; i < 5; i++){\n\t\t\tSystem.out.print(c);\n\t\t\tc = (c == 'a') ? 'b' : 'a';\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "739",
    "source": "soSearches",
    "language": "java",
    "query": "how to reference to a class field java",
    "snippets": [
        "\tint a;\n\tpublic\n\tint b;\n\tpublic\n\tint c;\n\tpublic\n\tint d;\n\tpublic\n\tint e;\n\tpublic\n\tint f;\n\tpublic\n\tint g;\n\tpublic\n\tint h;\n\tpublic\n\tint i;\n\tpublic\n\tint j;\n\tpublic\n\tint k;\n\tpublic\n\tint l;\n\tpublic\n\tint m;\n\tpublic\n\tint n;\n\tpublic\n\tint o;\n\tpublic\n\tint p;\n\tpublic\n\tint q;\n\tpublic\n\tint r;\n\tpublic\n\tint s;\n\tpublic\n\tint t;\n\tpublic\n\tint u;\n\tpublic\n\tint v;\n\tpublic\n\tint w;\n\tpublic\n\tint x;\n\tpublic\n\tint y;\n\tpublic\n\tint z;\n\tpublic\n\tint aa;\n\tpublic\n\tint bb;\n\tpublic\n\tint cc;\n\tpublic\n\tint dd;\n\tpublic\n\tint ee;\n\tpublic\n\tint ff;\n\tpublic\n\tint gg;\n\tpublic\n\tint hh;\n\tpublic\n\tint ii;\n\tpublic\n\tint jj;\n\tpublic\n\tint kk;\n\tpublic\n\tint ll;\n\tpublic\n\tint mm;\n\tpublic\n\tint nn;\n\tpublic\n\tint oo;\n\tpublic\n\tint pp;\n\tpublic\n\tint qq;\n\tpublic\n\tint rr;\n\tpublic\n\tint ss;\n\tpublic\n\tint tt;\n\tpublic\n\tint uu;\n\tpublic\n\tint vv;\n\tpublic\n\tint ww;\n\tpublic\n\tint xx;\n\tpublic\n\tint yy;\n\tpublic\n\tint zz;\n\tpublic\n\tint aaa;\n\tpublic\n\tint bbb;\n\tpublic\n\tint ccc;\n\tpublic\n\tint ddd;\n\tpublic\n\tint eee;\n\tpublic\n\tint fff;\n\tpublic\n\tint ggg;\n\tpublic\n\tint h\n",
        "\tint a = 1;\n\tpublic\n\tint b = 2;\n\tpublic\n\tint c = 3;\n\tpublic\n\tint d = 4;\n\tpublic\n\tint e = 5;\n\tpublic\n\tint f = 6;\n\tpublic\n\tint g = 7;\n\tpublic\n\tint h = 8;\n\tpublic\n\tint i = 9;\n\tpublic\n\tint j = 10;\n\tpublic\n\tint k = 11;\n\tpublic\n\tint l = 12;\n\tpublic\n\tint m = 13;\n\tpublic\n\tint n = 14;\n\tpublic\n\tint o = 15;\n\tpublic\n\tint p = 16;\n\tpublic\n\tint q = 17;\n\tpublic\n\tint r = 18;\n\tpublic\n\tint s = 19;\n\tpublic\n\tint t = 20;\n\tpublic\n\tint u = 21;\n\tpublic\n\tint v = 22;\n\tpublic\n\tint w = 23;\n\tpublic\n\tint x = 24;\n\tpublic\n\tint y = 25;\n\tpublic\n\tint z = 26;\n\tpublic\n\tint aa = 27;\n\tpublic\n\tint bb = 28;\n\tpublic\n\tint cc = 29;\n\tpublic\n\tint dd = 30;\n\tpublic\n\tint ee = 31;\n\tpublic\n\tint ff = 32;\n\tpublic\n\tint gg = 33;\n\tpublic\n\tint hh = 34;\n\tpublic\n\tint ii = 35;\n\tpublic\n\tint jj = 36;\n\tpublic\n\tint kk = 37;\n\tpublic\n\tint ll = 38;\n\tpublic\n\tint mm = 39;\n\tpublic\n\tint nn = 40;\n\tpublic\n\tint oo = 41;\n\tpublic\n\tint pp = 42;\n\tpublic\n\tint qq = 43;\n\tpublic\n\tint rr = 44;\n\tpublic\n\tint ss = 45;\n\tpublic\n\tint tt = 46;\n\tpublic\n\tint uu = 47;\n\tpublic\n\tint vv = 48;\n\tpublic\n\tint ww =\n",
        "\tint a = 1;\n\tint b = 2;\n\tint c = 3;\n\tint d = 4;\n\tint e = 5;\n\tint f = 6;\n\tint g = 7;\n\tint h = 8;\n\tint i = 9;\n\tint j = 10;\n\tint k = 11;\n\tint l = 12;\n\tint m = 13;\n\tint n = 14;\n\tint o = 15;\n\tint p = 16;\n\tint q = 17;\n\tint r = 18;\n\tint s = 19;\n\tint t = 20;\n\tint u = 21;\n\tint v = 22;\n\tint w = 23;\n\tint x = 24;\n\tint y = 25;\n\tint z = 26;\n\tint aa = 27;\n\tint bb = 28;\n\tint cc = 29;\n\tint dd = 30;\n\tint ee = 31;\n\tint ff = 32;\n\tint gg = 33;\n\tint hh = 34;\n\tint ii = 35;\n\tint jj = 36;\n\tint kk = 37;\n\tint ll = 38;\n\tint mm = 39;\n\tint nn = 40;\n\tint oo = 41;\n\tint pp = 42;\n\tint qq = 43;\n\tint rr = 44;\n\tint ss = 45;\n\tint tt = 46;\n\tint uu = 47;\n\tint vv = 48;\n\tint ww = 49;\n\tint xx = 50;\n\tint yy = 51;\n\tint zz = 52;\n\tint aaa = 53;\n\tint bbb = 54;\n\tint ccc = 55;\n\tint ddd = 56;\n\tint eee = 57;\n\tint fff = 58;\n\tint ggg = 59;\n\tint hhh = 60;\n\tint iii = 61;\n\tint jjj = 62;\n\tint k\n",
        "\tint a = 10;\n\tpublic\n\tint b = 20;\n\tpublic\n\tint c = 30;\n\tpublic\n\tint d = 40;\n\tpublic\n\tint e = 50;\n\tpublic\n\tint f = 60;\n\tpublic\n\tint g = 70;\n\tpublic\n\tint h = 80;\n\tpublic\n\tint i = 90;\n\tpublic\n\tint j = 100;\n\tpublic\n\tint k = 110;\n\tpublic\n\tint l = 120;\n\tpublic\n\tint m = 130;\n\tpublic\n\tint n = 140;\n\tpublic\n\tint o = 150;\n\tpublic\n\tint p = 160;\n\tpublic\n\tint q = 170;\n\tpublic\n\tint r = 180;\n\tpublic\n\tint s = 190;\n\tpublic\n\tint t = 200;\n\tpublic\n\tint u = 210;\n\tpublic\n\tint v = 220;\n\tpublic\n\tint w = 230;\n\tpublic\n\tint x = 240;\n\tpublic\n\tint y = 250;\n\tpublic\n\tint z = 260;\n\tpublic\n\tint aa = 270;\n\tpublic\n\tint bb = 280;\n\tpublic\n\tint cc = 290;\n\tpublic\n\tint dd = 300;\n\tpublic\n\tint ee = 310;\n\tpublic\n\tint ff = 320;\n\tpublic\n\tint gg = 330;\n\tpublic\n\tint hh = 340;\n\tpublic\n\tint ii = 350;\n\tpublic\n\tint jj = 360;\n\tpublic\n\tint kk = 370;\n\tpublic\n\tint ll = 380;\n\tpublic\n\tint mm = 390;\n\tpublic\n\tint nn = 400;\n\tpublic\n\tint oo = 410;\n\tpublic\n\tint pp = 420;\n\tpublic\n\tint qq = 430;\n\tpublic\n\tint rr = 440;\n\tpublic\n\tint ss = 450;\n\tpublic\n\tint tt = 460;\n\tpublic\n\tint uu = 470;\n\tpublic\n\tint vv = 480;\n\tpublic\n\tint ww =\n",
        "\tint a;\n\tint b;\n\tint c;\n\tpublic Clazz(int a, int b, int c){\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t}\n\tpublic void print(){\n\t\tSystem.out.println(a+\" \"+b+\" \"+c);\n\t}\n}\n",
        "\tint x = 10;\n\tpublic\n\tint y = 20;\n\tpublic\n\tint z = 30;\n\tpublic\n\tint getX(){\n\t\treturn x;\n\t}\n\tpublic\n\tint getY(){\n\t\treturn y;\n\t}\n\tpublic\n\tint getZ(){\n\t\treturn z;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "740",
    "source": "soSearches",
    "language": "java",
    "query": "how to read .docs and .xsls files in a folder in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tFile folder = new File(\"C:\\\\Users\\\\User\\\\Desktop\\\\test\");\n\t\tFile[] listOfFiles = folder.listFiles();\n\t\tfor(File file : listOfFiles){\n\t\t\tif(file.isFile()){\n\t\t\t\tSystem.out.println(file.getName());\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile folder = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test\");\n\t\tFile[] listOfFiles = folder.listFiles();\n\t\tfor(File file : listOfFiles){\n\t\t\tif(file.isFile()){\n\t\t\t\tSystem.out.println(file.getName());\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile folder = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\docs\");\n\t\tFile[] listOfFiles = folder.listFiles();\n\t\tfor(File file: listOfFiles){\n\t\t\tif(file.isFile()){\n\t\t\t\tSystem.out.println(file.getName());\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tFile folder = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\java\");\n\t\tFile[] listOfFiles = folder.listFiles();\n\t\tfor(File file: listOfFiles){\n\t\t\tif(file.isFile()){\n\t\t\t\tSystem.out.println(file.getName());\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tFile folder = new File(\"C:\\\\Users\\\\user\\\\Desktop\\\\test\");\n\t\tFile[] listOfFiles = folder.listFiles();\n\t\tfor(File file : listOfFiles){\n\t\t\tif(file.isFile()){\n\t\t\t\tSystem.out.println(file.getName());\n\t\t\t}\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "741",
    "source": "soSearches",
    "language": "java",
    "query": "mongodb how to pivot fields java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tMongoClient mongoClient = new MongoClient(\"localhost\", 27017);\n\t\tDB db = mongoClient.getDB(\"test\");\n\t\tDBCollection collection = db.getCollection(\"test\");\n\t\tDBCollection collection2 = db.getCollection(\"test2\");\n\t\tDBCollection collection3 = db.getCollection(\"test3\");\n\t\tDBCollection collection4 = db.getCollection(\"test4\");\n\t\tDBCollection collection5 = db.getCollection(\"test5\");\n\t\tDBCollection collection6 = db.getCollection(\"test6\");\n\t\tDBCollection collection7 = db.getCollection(\"test7\");\n\t\tDBCollection collection8 = db.getCollection(\"test8\");\n\t\tDBCollection collection9 = db.getCollection(\"test9\");\n\t\tDBCollection collection10 = db.getCollection(\"test10\");\n\t\tDBCollection collection11 = db.getCollection(\"test11\");\n\t\tDBCollection collection12 = db.getCollection(\"test12\");\n\t\tDBCollection collection13 = db.getCollection(\"test13\");\n\t\tDBCollection collection14 = db.getCollection(\"test14\");\n\t\tDBCollection collection15 = db.getCollection(\"test15\");\n\t\tDBCollection collection16 = db.getCollection(\"test16\");\n\t\tDBCollection collection17 = db.getCollection(\"test17\");\n\t\tDBCollection collection18 = db.getCollection(\"test18\");\n\t\tDBCollection collection19 = db.getCollection(\"test19\");\n\t\tDBCollection collection20 = db.getCollection(\"test20\");\n\t\tDBCollection collection21 = db.getCollection(\"test21\");\n\t\tDBCollection collection22 = db.getCollection(\"test22\");\n\t\tDBCollection collection23 = db.getCollection(\"test23\");\n\t\tDBCollection collection24 = db.getCollection(\"test24\");\n\t\tDBCollection collection25 = db.getCollection(\"test25\");\n\t\tDBCollection collection\n",
        "\tstatic void main(String[] args){\n\t\tMongoClient mongoClient = new MongoClient(\"localhost\", 27017);\n\t\tDB db = mongoClient.getDB(\"test\");\n\t\tDBCollection collection = db.getCollection(\"test\");\n\t\tDBCursor cursor = collection.find();\n\t\tDBObject dbObject = cursor.next();\n\t\tBasicDBList basicDBList = (BasicDBList) dbObject.get(\"tags\");\n\t\tList<String> list = new ArrayList<String>();\n\t\tfor(int i = 0; i < basicDBList.size(); i++){\n\t\t\tlist.add(basicDBList.get(i).toString());\n\t\t}\n\t\tMap<String, Integer> map = new HashMap<String, Integer>();\n\t\tfor(String str : list){\n\t\t\tif(map.containsKey(str)){\n\t\t\t\tmap.put(str, map.get(str) + 1);\n\t\t\t}else{\n\t\t\t\tmap.put(str, 1);\n\t\t\t}\n\t\t}\n\t\tSet<String> keySet = map.keySet();\n\t\tfor(String key : keySet){\n\t\t\tSystem.out.println(key + \" \" + map.get(key));\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tMongoClient mongoClient = new MongoClient(\"localhost\", 27017);\n\t\tDB db = mongoClient.getDB(\"test\");\n\t\tDBCollection collection = db.getCollection(\"test\");\n\t\tDBCursor cursor = collection.find();\n\t\twhile(cursor.hasNext()){\n\t\t\tDBObject obj = cursor.next();\n\t\t\tSystem.out.println(obj.get(\"name\"));\n\t\t}\n\t\tDBCollection collection2 = db.getCollection(\"test2\");\n\t\tDBCursor cursor2 = collection2.find();\n\t\twhile(cursor2.hasNext()){\n\t\t\tDBObject obj = cursor2.next();\n\t\t\tSystem.out.println(obj.get(\"name\"));\n\t\t}\n\t\tDBCollection collection3 = db.getCollection(\"test3\");\n\t\tDBCursor cursor3 = collection3.find();\n\t\twhile(cursor3.hasNext()){\n\t\t\tDBObject obj = cursor3.next();\n\t\t\tSystem.out.println(obj.get(\"name\"));\n\t\t}\n\t\tDBCollection collection4 = db.getCollection(\"test4\");\n\t\tDBCursor cursor4 = collection4.find();\n\t\twhile(cursor4.hasNext()){\n\t\t\tDBObject obj = cursor4.next();\n\t\t\tSystem.out.println(obj.get(\"name\"));\n\t\t}\n\t\tDBCollection collection5 = db.getCollection(\"test5\");\n\t\tDBCursor cursor5 = collection5.find();\n\t\twhile(cursor5.hasNext()){\n\t\t\tDBObject obj = cursor5.next();\n\t\t\tSystem.out.println(obj.get(\"name\"));\n\t\t}\n\t\tDBCollection collection6 = db.getCollection(\"test6\");\n\t\tDBCursor cursor6 = collection6.find();\n\t\twhile(cursor6.hasNext()){\n\t\t\tDBObject obj = cursor6.next();\n\t\t\tSystem.out.println\n",
        "\tstatic void main(String[] args){\n\t\tMongoClient mongoClient = new MongoClient(\"localhost\", 27017);\n\t\tDB db = mongoClient.getDB(\"test\");\n\t\tDBCollection collection = db.getCollection(\"test\");\n\t\tDBCursor cursor = collection.find();\n\t\tDBObject dbObject = cursor.next();\n\t\tBasicDBList basicDBList = (BasicDBList)dbObject.get(\"tags\");\n\t\tList<String> list = new ArrayList<String>();\n\t\tfor(int i = 0; i < basicDBList.size(); i++){\n\t\t\tlist.add(basicDBList.get(i).toString());\n\t\t}\n\t\tMap<String, Integer> map = new HashMap<String, Integer>();\n\t\tfor(String str : list){\n\t\t\tif(map.containsKey(str)){\n\t\t\t\tmap.put(str, map.get(str) + 1);\n\t\t\t}else{\n\t\t\t\tmap.put(str, 1);\n\t\t\t}\n\t\t}\n\t\tSet<String> set = map.keySet();\n\t\tfor(String str : set){\n\t\t\tSystem.out.println(str + \":\" + map.get(str));\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tMongoClient mongoClient = new MongoClient(\"localhost\", 27017);\n\t\tDB db = mongoClient.getDB(\"test\");\n\t\tDBCollection collection = db.getCollection(\"test\");\n\t\tDBCursor cursor = collection.find();\n\t\tDBObject dbObject = cursor.next();\n\t\tBasicDBList basicDBList = (BasicDBList)dbObject.get(\"tags\");\n\t\tfor(int i=0;i<basicDBList.size();i++){\n\t\t\tSystem.out.println(basicDBList.get(i));\n\t\t}\n\t\tBasicDBList basicDBList1 = (BasicDBList)dbObject.get(\"tags\");\n\t\tfor(int i=0;i<basicDBList1.size();i++){\n\t\t\tSystem.out.println(basicDBList1.get(i));\n\t\t}\n\t\tBasicDBList basicDBList2 = (BasicDBList)dbObject.get(\"tags\");\n\t\tfor(int i=0;i<basicDBList2.size();i++){\n\t\t\tSystem.out.println(basicDBList2.get(i));\n\t\t}\n\t\tBasicDBList basicDBList3 = (BasicDBList)dbObject.get(\"tags\");\n\t\tfor(int i=0;i<basicDBList3.size();i++){\n\t\t\tSystem.out.println(basicDBList3.get(i));\n\t\t}\n\t\tBasicDBList basicDBList4 = (BasicDBList)dbObject.get(\"tags\");\n\t\tfor(int i=0;i<basicDBList4.size();i++){\n\t\t\tSystem.out.println(basicDBList4.get(i));\n\t\t}\n\t\tBasicDBList basicDBList5 = (BasicDBList)dbObject.get(\"tags\");\n\t\tfor(int i=0;i<basicDBList5.size();i++){\n\t\t\tSystem.out.println(basicDBList5.get(i));\n\t\t}\n\t\tBasicDBList basicDBList6 =\n",
        "\tstatic void main(String[] args){\n\t\tMongoClient mongoClient = new MongoClient(\"localhost\", 27017);\n\t\tDB db = mongoClient.getDB(\"test\");\n\t\tDBCollection collection = db.getCollection(\"test\");\n\t\tDBCursor cursor = collection.find();\n\t\tDBObject dbObject = cursor.next();\n\t\tDBObject dbObject2 = cursor.next();\n\t\tDBObject dbObject3 = cursor.next();\n\t\tDBObject dbObject4 = cursor.next();\n\t\tDBObject dbObject5 = cursor.next();\n\t\tDBObject dbObject6 = cursor.next();\n\t\tDBObject dbObject7 = cursor.next();\n\t\tDBObject dbObject8 = cursor.next();\n\t\tDBObject dbObject9 = cursor.next();\n\t\tDBObject dbObject10 = cursor.next();\n\t\tDBObject dbObject11 = cursor.next();\n\t\tDBObject dbObject12 = cursor.next();\n\t\tDBObject dbObject13 = cursor.next();\n\t\tDBObject dbObject14 = cursor.next();\n\t\tDBObject dbObject15 = cursor.next();\n\t\tDBObject dbObject16 = cursor.next();\n\t\tDBObject dbObject17 = cursor.next();\n\t\tDBObject dbObject18 = cursor.next();\n\t\tDBObject dbObject19 = cursor.next();\n\t\tDBObject dbObject20 = cursor.next();\n\t\tDBObject dbObject21 = cursor.next();\n\t\tDBObject dbObject22 = cursor.next();\n\t\tDBObject dbObject23 = cursor.next();\n\t\tDBObject dbObject24 = cursor.next();\n\t\tDBObject dbObject25 = cursor.next();\n\t\tDBObject dbObject26 = cursor.next();\n\t\tDBObject dbObject27 = cursor.next();\n\t\tDBObject dbObject28 = cursor.next();\n\t\tDBObject dbObject29 = cursor.next();\n\t\tDBObject dbObject30 = cursor.next();\n\t\tDBObject dbObject31 = cursor.next();\n\t\tDBObject dbObject32 = cursor.next();\n\t\tDBObject dbObject33 = cursor.next();\n",
        "\tstatic void main(String[] args){\n\t\tMongoClient mongoClient = new MongoClient(\"localhost\", 27017);\n\t\tDB db = mongoClient.getDB(\"test\");\n\t\tDBCollection collection = db.getCollection(\"test\");\n\t\tDBCursor cursor = collection.find();\n\t\twhile(cursor.hasNext()){\n\t\t\tDBObject obj = cursor.next();\n\t\t\tSystem.out.println(obj);\n\t\t}\n\t\tmongoClient.close();\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tMongoClient mongoClient = new MongoClient(\"localhost\", 27017);\n\t\tDB db = mongoClient.getDB(\"test\");\n\t\tDBCollection collection = db.getCollection(\"test\");\n\t\tDBCursor cursor = collection.find();\n\t\tDBObject dbObject = cursor.next();\n\t\tBasicDBList basicDBList = (BasicDBList)dbObject.get(\"tags\");\n\t\tList<String> tags = new ArrayList<String>();\n\t\tfor(int i=0;i<basicDBList.size();i++){\n\t\t\ttags.add(basicDBList.get(i).toString());\n\t\t}\n\t\tMap<String,Integer> map = new HashMap<String,Integer>();\n\t\tfor(String tag:tags){\n\t\t\tif(map.containsKey(tag)){\n\t\t\t\tmap.put(tag, map.get(tag)+1);\n\t\t\t}else{\n\t\t\t\tmap.put(tag, 1);\n\t\t\t}\n\t\t}\n\t\tSet<String> keys = map.keySet();\n\t\tfor(String key:keys){\n\t\t\tSystem.out.println(key+\":\"+map.get(key));\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tMongoClient client = new MongoClient(\"localhost\", 27017);\n\t\tMongoDatabase db = client.getDatabase(\"test\");\n\t\tMongoCollection<Document> collection = db.getCollection(\"test\");\n\t\tDocument doc = new Document(\"name\", \"MongoDB\")\n\t\t\t.append(\"type\", \"database\")\n\t\t\t.append(\"count\", 1)\n\t\t\t.append(\"versions\", asList(\"v3.2\", \"v3.0\", \"v2.6\"))\n\t\t\t.append(\"info\", new Document(\"x\", 203).append(\"y\", 102));\n\t\tcollection.insertOne(doc);\n\t\tDocument doc2 = new Document(\"name\", \"MongoDB\")\n\t\t\t.append(\"type\", \"database\")\n\t\t\t.append(\"count\", 1)\n\t\t\t.append(\"versions\", asList(\"v3.2\", \"v3.0\", \"v2.6\"))\n\t\t\t.append(\"info\", new Document(\"x\", 203).append(\"y\", 102));\n\t\tcollection.insertOne(doc2);\n\t\tDocument doc3 = new Document(\"name\", \"MongoDB\")\n\t\t\t.append(\"type\", \"database\")\n\t\t\t.append(\"count\", 1)\n\t\t\t.append(\"versions\", asList(\"v3.2\", \"v3.0\", \"v2.6\"))\n\t\t\t.append(\"info\", new Document(\"x\", 203).append(\"y\", 102));\n\t\tcollection.insertOne(doc3);\n\t\tDocument doc4 = new Document(\"name\", \"MongoDB\")\n\t\t\t.append(\"type\", \"database\")\n\t\t\t.append(\"count\", 1)\n\t\t\t.append(\"versions\", asList(\"v3.2\", \"v3.0\", \"v2.6\"))\n\t\t\t.append(\"info\", new Document(\"x\", 203).append(\"y\", 102));\n\t\tcollection.insertOne(doc4);\n\t\tDocument doc5 = new Document(\"name\", \"MongoDB\")\n\t\t\t.append(\"type\", \"database\")\n\t\t\t.\n"
    ],
    "results": 10
},{
    "id": "742",
    "source": "soSearches",
    "language": "java",
    "query": "how to make progress bar java netbeans",
    "snippets": [
        "\tvoid main(String[] args){\n\t\tint i=0;\n\t\twhile(i<100){\n\t\t\tSystem.out.println(i);\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i=0;\n\t\twhile(i<10){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tvoid main(String[] args){\n\t\tint i = 0;\n\t\twhile(i<100){\n\t\t\tSystem.out.println(\"i = \" + i);\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 5
},{
    "id": "743",
    "source": "soSearches",
    "language": "java",
    "query": "how to turn a string into an integer in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"123\";\n\t\tint i = Integer.parseInt(s);\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"123\";\n\t\tint num = Integer.parseInt(str);\n\t\tSystem.out.println(num);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "744",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert little endian stream in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tbyte[] b = new byte[4];\n\t\tb[0] = (byte)0xFF;\n\t\tb[1] = (byte)0xFF;\n\t\tb[2] = (byte)0xFF;\n\t\tb[3] = (byte)0xFF;\n\t\tint i = ByteBuffer.wrap(b).getInt();\n\t\tSystem.out.println(i);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 0x12345678;\n\t\tbyte[] b = new byte[4];\n\t\tb[0] = (byte) (a & 0xff);\n\t\tb[1] = (byte) ((a >> 8) & 0xff);\n\t\tb[2] = (byte) ((a >> 16) & 0xff);\n\t\tb[3] = (byte) ((a >> 24) & 0xff);\n\t\tSystem.out.println(b[0] + \" \" + b[1] + \" \" + b[2] + \" \" + b[3]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=0x12345678;\n\t\tbyte[] b=new byte[4];\n\t\tb[0]=(byte)a;\n\t\tb[1]=(byte)(a>>8);\n\t\tb[2]=(byte)(a>>16);\n\t\tb[3]=(byte)(a>>24);\n\t\tSystem.out.println(b[0]+\" \"+b[1]+\" \"+b[2]+\" \"+b[3]);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a = 0x12345678;\n\t\tbyte[] b = new byte[4];\n\t\tb[0] = (byte) (a & 0xFF);\n\t\tb[1] = (byte) ((a >> 8) & 0xFF);\n\t\tb[2] = (byte) ((a >> 16) & 0xFF);\n\t\tb[3] = (byte) ((a >> 24) & 0xFF);\n\t\tSystem.out.println(b[0] + \" \" + b[1] + \" \" + b[2] + \" \" + b[3]);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "745",
    "source": "soSearches",
    "language": "java",
    "query": "how to check html using java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString html = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tif(html.contains(\"<html>\")){\n\t\t\tSystem.out.println(\"html\");\n\t\t}\n\t\tif(html.contains(\"<body>\")){\n\t\t\tSystem.out.println(\"body\");\n\t\t}\n\t\tif(html.contains(\"<h1>\")){\n\t\t\tSystem.out.println(\"h1\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString html = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tif(html.contains(\"<html>\")){\n\t\t\tSystem.out.println(\"HTML\");\n\t\t}\n\t\tif(html.contains(\"<body>\")){\n\t\t\tSystem.out.println(\"Body\");\n\t\t}\n\t\tif(html.contains(\"<h1>\")){\n\t\t\tSystem.out.println(\"H1\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString html = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tSystem.out.println(html.matches(\"<.*>\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString html = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tSystem.out.println(html.contains(\"<h1>\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString html = \"<html><body><h1>Hello World</h1></body></html>\";\n\t\tSystem.out.println(html.contains(\"<html>\"));\n\t\tSystem.out.println(html.contains(\"<body>\"));\n\t\tSystem.out.println(html.contains(\"<h1>\"));\n\t\tSystem.out.println(html.contains(\"</h1>\"));\n\t\tSystem.out.println(html.contains(\"</body>\"));\n\t\tSystem.out.println(html.contains(\"</html>\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString html = \"<html><head><title>Hello World</title></head><body><h1>Hello World</h1></body></html>\";\n\t\tif(html.contains(\"<html>\")){\n\t\t\tSystem.out.println(\"html\");\n\t\t}\n\t\tif(html.contains(\"<head>\")){\n\t\t\tSystem.out.println(\"head\");\n\t\t}\n\t\tif(html.contains(\"<title>\")){\n\t\t\tSystem.out.println(\"title\");\n\t\t}\n\t\tif(html.contains(\"<body>\")){\n\t\t\tSystem.out.println(\"body\");\n\t\t}\n\t\tif(html.contains(\"<h1>\")){\n\t\t\tSystem.out.println(\"h1\");\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString html = \"<html><head><title>Hello World</title></head><body><h1>Hello World</h1></body></html>\";\n\t\tif(html.matches(\"<.*>\")){\n\t\t\tSystem.out.println(\"Valid HTML\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Invalid HTML\");\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "746",
    "source": "soSearches",
    "language": "java",
    "query": "javax how to validate a list of long for non empty elements",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tList<Long> list = new ArrayList<Long>();\n\t\tlist.add(1L);\n\t\tlist.add(2L);\n\t\tlist.add(3L);\n\t\tlist.add(4L);\n\t\tlist.add(5L);\n\t\tlist.add(6L);\n\t\tlist.add(7L);\n\t\tlist.add(8L);\n\t\tlist.add(9L);\n\t\tlist.add(10L);\n\t\tlist.add(11L);\n\t\tlist.add(12L);\n\t\tlist.add(13L);\n\t\tlist.add(14L);\n\t\tlist.add(15L);\n\t\tlist.add(16L);\n\t\tlist.add(17L);\n\t\tlist.add(18L);\n\t\tlist.add(19L);\n\t\tlist.add(20L);\n\t\tlist.add(21L);\n\t\tlist.add(22L);\n\t\tlist.add(23L);\n\t\tlist.add(24L);\n\t\tlist.add(25L);\n\t\tlist.add(26L);\n\t\tlist.add(27L);\n\t\tlist.add(28L);\n\t\tlist.add(29L);\n\t\tlist.add(30L);\n\t\tlist.add(31L);\n\t\tlist.add(32L);\n\t\tlist.add(33L);\n\t\tlist.add(34L);\n\t\tlist.add(35L);\n\t\tlist.add(36L);\n\t\tlist.add(37L);\n\t\tlist.add(38L);\n\t\tlist.add(39L);\n\t\tlist.add(40L);\n\t\tlist.add(41L);\n\t\tlist.add(42L);\n\t\tlist.add(43L);\n\t\tlist.add(44L);\n\t\tlist.add(45L);\n\t\tlist.add(46L);\n\t\tlist.add(47L);\n\t\tlist\n"
    ],
    "results": 10
},{
    "id": "747",
    "source": "soSearches",
    "language": "java",
    "query": "how to calculate in textbox and the price to show in textbox java windowbuilder",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJTextField text = new JTextField(20);\n\t\tJButton button = new JButton(\"Calculate\");\n\t\tJButton button2 = new JButton(\"Clear\");\n\t\tJButton button3 = new JButton(\"Exit\");\n\t\tframe.add(text);\n\t\tframe.add(button);\n\t\tframe.add(button2);\n\t\tframe.add(button3);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tString s = text.getText();\n\t\t\t\tString[] words = s.split(\" \");\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int i = 0; i < words.length; i++){\n\t\t\t\t\tif(words[i].equals(\"+\")){\n\t\t\t\t\t\tsum += Integer.parseInt(words[i+1]);\n\t\t\t\t\t}\n\t\t\t\t\tif(words[i].equals(\"-\")){\n\t\t\t\t\t\tsum -= Integer.parseInt(words[i+1]);\n\t\t\t\t\t}\n\t\t\t\t\tif(words[i].equals(\"*\")){\n\t\t\t\t\t\tsum *= Integer.parseInt(words[i+1]);\n\t\t\t\t\t}\n\t\t\t\t\tif(words[i].equals(\"/\")){\n\t\t\t\t\t\tsum /= Integer.parseInt(words[i+1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttext.setText(Integer.toString(sum));\n\t\t\t}\n\t\t});\n\t\tbutton2.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJTextField text = new JTextField(20);\n\t\tframe.add(text);\n\t\tJButton button = new JButton(\"Calculate\");\n\t\tframe.add(button);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tString s = text.getText();\n\t\t\t\tString[] parts = s.split(\" \");\n\t\t\t\tdouble result = 0;\n\t\t\t\tfor(int i = 0; i < parts.length; i++){\n\t\t\t\t\tif(parts[i].equals(\"+\")){\n\t\t\t\t\t\tresult += Double.parseDouble(parts[i+1]);\n\t\t\t\t\t}\n\t\t\t\t\telse if(parts[i].equals(\"-\")){\n\t\t\t\t\t\tresult -= Double.parseDouble(parts[i+1]);\n\t\t\t\t\t}\n\t\t\t\t\telse if(parts[i].equals(\"*\")){\n\t\t\t\t\t\tresult *= Double.parseDouble(parts[i+1]);\n\t\t\t\t\t}\n\t\t\t\t\telse if(parts[i].equals(\"/\")){\n\t\t\t\t\t\tresult /= Double.parseDouble(parts[i+1]);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tresult = Double.parseDouble(parts[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttext.setText(Double.toString(result));\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,1));\n\t\tJTextField text = new JTextField(\"0\");\n\t\ttext.setEditable(false);\n\t\tframe.add(text);\n\t\tJButton button1 = new JButton(\"1\");\n\t\tJButton button2 = new JButton(\"2\");\n\t\tJButton button3 = new JButton(\"3\");\n\t\tJButton button4 = new JButton(\"4\");\n\t\tJButton button5 = new JButton(\"5\");\n\t\tJButton button6 = new JButton(\"6\");\n\t\tJButton button7 = new JButton(\"7\");\n\t\tJButton button8 = new JButton(\"8\");\n\t\tJButton button9 = new JButton(\"9\");\n\t\tJButton button0 = new JButton(\"0\");\n\t\tJButton buttonadd = new JButton(\"+\");\n\t\tJButton buttonsub = new JButton(\"-\");\n\t\tJButton buttonmul = new JButton(\"*\");\n\t\tJButton buttondiv = new JButton(\"/\");\n\t\tJButton buttonequal = new JButton(\"=\");\n\t\tJButton buttonclear = new JButton(\"C\");\n\t\tframe.add(button1);\n\t\tframe.add(button2);\n\t\tframe.add(button3);\n\t\tframe.add(button4);\n\t\tframe.add(button5);\n\t\tframe.add(button6);\n\t\tframe.add(button7);\n\t\tframe.add(button8);\n\t\tframe.add(button9);\n\t\tframe.add(button0);\n\t\tframe.add(buttonadd);\n\t\tframe.add(buttonsub);\n\t\tframe.add(buttonmul);\n\t\tframe.add(buttondiv);\n\t\tframe.add(buttonequal);\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJTextField text = new JTextField(10);\n\t\tJButton button = new JButton(\"Calculate\");\n\t\tframe.add(text);\n\t\tframe.add(button);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tString s = text.getText();\n\t\t\t\tdouble d = Double.parseDouble(s);\n\t\t\t\tdouble result = d*d;\n\t\t\t\ttext.setText(Double.toString(result));\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJLabel label = new JLabel(\"Enter the price\");\n\t\tJTextField text = new JTextField(10);\n\t\tJButton button = new JButton(\"Calculate\");\n\t\tframe.add(label);\n\t\tframe.add(text);\n\t\tframe.add(button);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tdouble price = Double.parseDouble(text.getText());\n\t\t\t\tdouble tax = price * 0.08;\n\t\t\t\tdouble total = price + tax;\n\t\t\t\tJOptionPane.showMessageDialog(null, \"The total is \" + total);\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJTextField text = new JTextField(10);\n\t\tJButton button = new JButton(\"Calculate\");\n\t\tJButton button2 = new JButton(\"Clear\");\n\t\tJButton button3 = new JButton(\"Exit\");\n\t\tframe.add(text);\n\t\tframe.add(button);\n\t\tframe.add(button2);\n\t\tframe.add(button3);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tString text1 = text.getText();\n\t\t\t\tdouble num1 = Double.parseDouble(text1);\n\t\t\t\tdouble num2 = num1 * 0.9;\n\t\t\t\tString text2 = Double.toString(num2);\n\t\t\t\ttext.setText(text2);\n\t\t\t}\n\t\t});\n\t\tbutton2.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\ttext.setText(\"\");\n\t\t\t}\n\t\t});\n\t\tbutton3.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJTextField text = new JTextField(10);\n\t\tJButton button = new JButton(\"Calculate\");\n\t\tJButton button2 = new JButton(\"Clear\");\n\t\tJButton button3 = new JButton(\"Exit\");\n\t\tframe.add(text);\n\t\tframe.add(button);\n\t\tframe.add(button2);\n\t\tframe.add(button3);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tString text1 = text.getText();\n\t\t\t\tString text2 = text1.replaceAll(\"[^0-9]\", \"\");\n\t\t\t\tint num = Integer.parseInt(text2);\n\t\t\t\tint num2 = num * 2;\n\t\t\t\ttext.setText(Integer.toString(num2));\n\t\t\t}\n\t\t});\n\t\tbutton2.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\ttext.setText(\"\");\n\t\t\t}\n\t\t});\n\t\tbutton3.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJTextField text = new JTextField(10);\n\t\tJButton button = new JButton(\"Calculate\");\n\t\tframe.add(text);\n\t\tframe.add(button);\n\t\tbutton.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e){\n\t\t\t\tString text1 = text.getText();\n\t\t\t\tString[] text2 = text1.split(\" \");\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int i = 0; i < text2.length; i++){\n\t\t\t\t\tsum += Integer.parseInt(text2[i]);\n\t\t\t\t}\n\t\t\t\ttext.setText(Integer.toString(sum));\n\t\t\t}\n\t\t});\n\t}\n}\n",
        "\tvoid calculate(JTextField txt1,JTextField txt2,JTextField txt3){\n\t\tdouble a=Double.parseDouble(txt1.getText());\n\t\tdouble b=Double.parseDouble(txt2.getText());\n\t\tdouble c=a*b;\n\t\ttxt3.setText(String.valueOf(c));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "748",
    "source": "soSearches",
    "language": "java",
    "query": "how to run java jar file in maven",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "749",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert hashcode to jpg in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString s = \"hello\";\n\t\tSystem.out.println(s.hashCode());\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).length());\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(0,2));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(2,4));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(4,6));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(6,8));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(8,10));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(10,12));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(12,14));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(14,16));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(16,18));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(18,20));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(20,22));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(22,24));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(24,26));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(26,28));\n\t\tSystem.out.println(Integer.toHexString\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"hello\";\n\t\tSystem.out.println(s.hashCode());\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).toUpperCase());\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).toUpperCase().substring(0,8));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).toUpperCase().substring(0,8).replace(\" \",\"0\"));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).toUpperCase().substring(0,8).replace(\" \",\"0\").replace(\"A\",\"1\").replace(\"B\",\"2\").replace(\"C\",\"3\").replace(\"D\",\"4\").replace(\"E\",\"5\").replace(\"F\",\"6\"));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).toUpperCase().substring(0,8).replace(\" \",\"0\").replace(\"A\",\"1\").replace(\"B\",\"2\").replace(\"C\",\"3\").replace(\"D\",\"4\").replace(\"E\",\"5\").replace(\"F\",\"6\"));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).toUpperCase().substring(0,8).replace(\" \",\"0\").replace(\"A\",\"1\").replace(\"B\",\"2\").replace(\"C\",\"3\").replace(\"D\",\"4\").replace(\"E\",\"5\").replace(\"F\",\"6\"));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).toUpperCase().substring(0,8).replace(\" \",\"0\").replace(\"A\",\"1\").replace(\"B\",\"2\").replace(\"C\",\"3\").replace(\"D\",\"4\").replace(\"E\",\"5\").replace(\"F\",\"6\"));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).toUpperCase().substring(0,8).replace\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello World\";\n\t\tSystem.out.println(s.hashCode());\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).length());\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(0,2));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(2,4));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(4,6));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(6,8));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(8,10));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(10,12));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(12,14));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(14,16));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(16,18));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(18,20));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(20,22));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(22,24));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(24,26));\n\t\tSystem.out.println(Integer.toHexString(s.hashCode()).substring(26,28));\n\t\tSystem.out.println(Integer.toHex\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello World\";\n\t\tSystem.out.println(s.hashCode());\n\t\tSystem.out.println(s.hashCode()+\".jpg\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString s=\"Hello\";\n\t\tSystem.out.println(s.hashCode());\n\t\tString s1=\"Hello\";\n\t\tSystem.out.println(s1.hashCode());\n\t\tString s2=\"Hello\";\n\t\tSystem.out.println(s2.hashCode());\n\t\tString s3=\"Hello\";\n\t\tSystem.out.println(s3.hashCode());\n\t\tString s4=\"Hello\";\n\t\tSystem.out.println(s4.hashCode());\n\t\tString s5=\"Hello\";\n\t\tSystem.out.println(s5.hashCode());\n\t\tString s6=\"Hello\";\n\t\tSystem.out.println(s6.hashCode());\n\t\tString s7=\"Hello\";\n\t\tSystem.out.println(s7.hashCode());\n\t\tString s8=\"Hello\";\n\t\tSystem.out.println(s8.hashCode());\n\t\tString s9=\"Hello\";\n\t\tSystem.out.println(s9.hashCode());\n\t\tString s10=\"Hello\";\n\t\tSystem.out.println(s10.hashCode());\n\t\tString s11=\"Hello\";\n\t\tSystem.out.println(s11.hashCode());\n\t\tString s12=\"Hello\";\n\t\tSystem.out.println(s12.hashCode());\n\t\tString s13=\"Hello\";\n\t\tSystem.out.println(s13.hashCode());\n\t\tString s14=\"Hello\";\n\t\tSystem.out.println(s14.hashCode());\n\t\tString s15=\"Hello\";\n\t\tSystem.out.println(s15.hashCode());\n\t\tString s16=\"Hello\";\n\t\tSystem.out.println(s16.hashCode());\n\t\tString s17=\"Hello\";\n\t\tSystem.out.println(s17.hashCode());\n\t\tString s18=\"Hello\";\n\t\tSystem.out.println(s18.hashCode());\n\t\tString s19=\"Hello\";\n\t\tSystem.out.println(s19.hashCode());\n\t\tString s20=\"Hello\";\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tint hashCode = str.hashCode();\n\t\tSystem.out.println(hashCode);\n\t\tString str2 = \"Hello World\";\n\t\tint hashCode2 = str2.hashCode();\n\t\tSystem.out.println(hashCode2);\n\t\tString str3 = \"Hello World\";\n\t\tint hashCode3 = str3.hashCode();\n\t\tSystem.out.println(hashCode3);\n\t\tString str4 = \"Hello World\";\n\t\tint hashCode4 = str4.hashCode();\n\t\tSystem.out.println(hashCode4);\n\t\tString str5 = \"Hello World\";\n\t\tint hashCode5 = str5.hashCode();\n\t\tSystem.out.println(hashCode5);\n\t\tString str6 = \"Hello World\";\n\t\tint hashCode6 = str6.hashCode();\n\t\tSystem.out.println(hashCode6);\n\t\tString str7 = \"Hello World\";\n\t\tint hashCode7 = str7.hashCode();\n\t\tSystem.out.println(hashCode7);\n\t\tString str8 = \"Hello World\";\n\t\tint hashCode8 = str8.hashCode();\n\t\tSystem.out.println(hashCode8);\n\t\tString str9 = \"Hello World\";\n\t\tint hashCode9 = str9.hashCode();\n\t\tSystem.out.println(hashCode9);\n\t\tString str10 = \"Hello World\";\n\t\tint hashCode10 = str10.hashCode();\n\t\tSystem.out.println(hashCode10);\n\t\tString str11 = \"Hello World\";\n\t\tint hashCode11 = str11.hashCode();\n\t\tSystem.out.println(hashCode11);\n\t\tString str12 = \"Hello World\";\n\t\tint hashCode12 = str12.hashCode();\n\t\tSystem.out.println(hashCode12);\n\t\tString str13 = \"Hello World\";\n\t\tint hashCode13 = str13.hashCode();\n\t\tSystem.out.println(hashCode13);\n",
        "\tstatic void main(String[] args){\n\t\tString s = \"Hello\";\n\t\tSystem.out.println(s.hashCode());\n\t\tSystem.out.println(s.hashCode()+\".jpg\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "750",
    "source": "soSearches",
    "language": "java",
    "query": "java how to print a class",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid print(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "751",
    "source": "soSearches",
    "language": "java",
    "query": "how to convert svn perspective to java perspective",
    "snippets": [
        "\tvoid method(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid method(){\n\t\tSystem.out.println(\"hello\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "752",
    "source": "soSearches",
    "language": "java",
    "query": "how to make checkerboard java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint i,j;\n\t\tfor(i=0;i<8;i++){\n\t\t\tfor(j=0;j<8;j++){\n\t\t\t\tif((i+j)%2==0){\n\t\t\t\t\tSystem.out.print(\"#\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tSystem.out.print(\" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i,j;\n\t\tfor(i=0;i<8;i++){\n\t\t\tfor(j=0;j<8;j++){\n\t\t\t\tif((i+j)%2==0){\n\t\t\t\t\tSystem.out.print(\" \");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tSystem.out.print(\"#\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i,j;\n\t\tfor(i=1;i<=5;i++){\n\t\t\tfor(j=1;j<=5;j++){\n\t\t\t\tif(i%2==0){\n\t\t\t\t\tif(j%2==0){\n\t\t\t\t\t\tSystem.out.print(\"*\");\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tSystem.out.print(\"#\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(j%2==0){\n\t\t\t\t\t\tSystem.out.print(\"#\");\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tSystem.out.print(\"*\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint i,j;\n\t\tfor(i=0;i<=7;i++){\n\t\t\tfor(j=0;j<=7;j++){\n\t\t\t\tif((i+j)%2==0){\n\t\t\t\t\tSystem.out.print(\"*\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tSystem.out.print(\" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "753",
    "source": "soSearches",
    "language": "java",
    "query": "how to get word under cursor javafx",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(getWordUnderCursor());\n\t}\n\tpublic static String getWordUnderCursor(){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(MouseInfo.getPointerInfo().getLocation());\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(Point p){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(p.x, p.y);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int x, int y){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(new Robot().createScreenCapture(new Rectangle(x, y, 1, 1)));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(BufferedImage img){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(img.getRGB(0, 0));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int rgb){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(rgb, new Robot().createScreenCapture(new Rectangle(0, 0, 1, 1)));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int rgb, BufferedImage img){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = get\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(getWordUnderCursor());\n\t}\n\tpublic static String getWordUnderCursor(){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(MouseInfo.getPointerInfo().getLocation());\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(Point p){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(p.x, p.y);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int x, int y){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(new Robot().createScreenCapture(new Rectangle(x, y, 1, 1)));\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(BufferedImage img){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(img.getRGB(0, 0));\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int rgb){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(rgb);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(String word){\n\t\tString word2 = \"\";\n\t\ttry{\n\t\t\tword2 = getWordUnderCursor(word.get\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(getWordUnderCursor());\n\t}\n\tpublic static String getWordUnderCursor(){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(MouseInfo.getPointerInfo().getLocation());\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(Point p){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(p.x, p.y);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int x, int y){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(new Robot().createScreenCapture(new Rectangle(x, y, 1, 1)));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(BufferedImage img){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(img, new Point(0, 0));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(BufferedImage img, Point p){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(img, p.x, p.y);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(BufferedImage img, int x, int y){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(getWordUnderCursor());\n\t}\n\tpublic static String getWordUnderCursor(){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(MouseInfo.getPointerInfo().getLocation());\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(Point p){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tRobot robot = new Robot();\n\t\t\trobot.mouseMove(p.x, p.y);\n\t\t\trobot.delay(100);\n\t\t\trobot.mousePress(InputEvent.BUTTON1_MASK);\n\t\t\trobot.delay(100);\n\t\t\trobot.mouseRelease(InputEvent.BUTTON1_MASK);\n\t\t\trobot.delay(100);\n\t\t\tword = getWordUnderCursor(p);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(Point p){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tRobot robot = new Robot();\n\t\t\trobot.mouseMove(p.x, p.y);\n\t\t\trobot.delay(100);\n\t\t\trobot.mousePress(InputEvent.BUTTON1_MASK);\n\t\t\trobot.delay(100);\n\t\t\trobot.mouseRelease(InputEvent.BUTTON1_MASK);\n\t\t\trobot.delay(100);\n\t\t\tword = getWordUnderCursor(p);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(Point p){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tRobot robot = new Robot();\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(Clazz.getWordUnderCursor());\n\t}\n\tpublic static String getWordUnderCursor(){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(MouseInfo.getPointerInfo().getLocation());\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(Point p){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(p.x, p.y);\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int x, int y){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(x, y, new Robot());\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int x, int y, Robot r) throws AWTException, IOException{\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordUnderCursor(x, y, r, new BufferedImage(Toolkit.getDefaultToolkit().getScreenSize().width, Toolkit.getDefaultToolkit().getScreenSize().height, BufferedImage.TYPE_INT_RGB));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordUnderCursor(int x, int y, Robot r, BufferedImage img) throws AWTException, IOException{\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tr.createScreenCapture(img);\n\t\t\tword = getWordUnderCursor(x, y, img);\n\t\t}catch(Exception e){\n\t\t\te.print\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(getWordAtCursor());\n\t}\n\tpublic static String getWordAtCursor(){\n\t\tString word = \"\";\n\t\ttry{\n\t\t\tword = getWordAtCursor(new Robot());\n\t\t}catch(AWTException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn word;\n\t}\n\tpublic static String getWordAtCursor(Robot robot) throws AWTException{\n\t\tString word = \"\";\n\t\tint x = MouseInfo.getPointerInfo().getLocation().x;\n\t\tint y = MouseInfo.getPointerInfo().getLocation().y;\n\t\tRectangle rectangle = new Rectangle(x,y,1,1);\n\t\tBufferedImage image = robot.createScreenCapture(rectangle);\n\t\tint pixel = image.getRGB(0,0);\n\t\tColor color = new Color(pixel);\n\t\tword = color.getRed()+\",\"+color.getGreen()+\",\"+color.getBlue();\n\t\treturn word;\n\t}\n}\n",
        "\tvoid getWordUnderCursor(){\n\t\tString word = \"\";\n\t\tint pos = 0;\n\t\tint start = 0;\n\t\tint end = 0;\n\t\tint len = 0;\n\t\tint i = 0;\n\t\tint j = 0;\n\t\tint k = 0;\n\t\tint l = 0;\n\t\tint m = 0;\n\t\tint n = 0;\n\t\tint o = 0;\n\t\tint p = 0;\n\t\tint q = 0;\n\t\tint r = 0;\n\t\tint s = 0;\n\t\tint t = 0;\n\t\tint u = 0;\n\t\tint v = 0;\n\t\tint w = 0;\n\t\tint x = 0;\n\t\tint y = 0;\n\t\tint z = 0;\n\t\tint aa = 0;\n\t\tint bb = 0;\n\t\tint cc = 0;\n\t\tint dd = 0;\n\t\tint ee = 0;\n\t\tint ff = 0;\n\t\tint gg = 0;\n\t\tint hh = 0;\n\t\tint ii = 0;\n\t\tint jj = 0;\n\t\tint kk = 0;\n\t\tint ll = 0;\n\t\tint mm = 0;\n\t\tint nn = 0;\n\t\tint oo = 0;\n\t\tint pp = 0;\n\t\tint qq = 0;\n\t\tint rr = 0;\n\t\tint ss = 0;\n\t\tint tt = 0;\n\t\tint uu = 0;\n\t\tint vv = 0;\n\t\tint ww = 0;\n\t\tint xx = 0;\n\t\tint yy = 0;\n\t\tint zz = 0;\n\t\tint aaa = 0;\n\t\tint bbb = 0;\n\t\tint ccc = 0;\n\t\tint ddd = 0;\n\t\tint eee = 0;\n\t\tint fff = 0;\n\t\tint ggg = 0;\n\t\tint hhh = 0;\n\t\tint iii = 0;\n",
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString str = \"Hello World\";\n\t\tint index = str.indexOf(\"World\");\n\t\tSystem.out.println(str.substring(index));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "754",
    "source": "soSearches",
    "language": "java",
    "query": "how to take intput for any object in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the name of the class\");\n\t\tString name=sc.nextLine();\n\t\tSystem.out.println(\"Enter the number of students\");\n\t\tint no=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint no1=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of subjects\");\n\t\tint no2=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of classes\");\n\t\tint no3=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of students in each class\");\n\t\tint no4=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers in each class\");\n\t\tint no5=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of subjects in each class\");\n\t\tint no6=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of classes in each subject\");\n\t\tint no7=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of students in each subject\");\n\t\tint no8=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers in each subject\");\n\t\tint no9=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of students in each class in each subject\");\n\t\tint no10=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers in each class in each subject\");\n\t\tint no11=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of students in each class in each subject\");\n\t\tint no12=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers in each class in each subject\");\n\t\tint no13=sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of students in each class in each subject\");\n\t\tint no14=sc\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the name of the class\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter the number of students\");\n\t\tint num = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num1 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of subjects\");\n\t\tint num2 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of classes\");\n\t\tint num3 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of students in each class\");\n\t\tint num4 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers in each class\");\n\t\tint num5 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of subjects in each class\");\n\t\tint num6 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of classes in each class\");\n\t\tint num7 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of students in each class\");\n\t\tint num8 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers in each class\");\n\t\tint num9 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of subjects in each class\");\n\t\tint num10 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of classes in each class\");\n\t\tint num11 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of students in each class\");\n\t\tint num12 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers in each class\");\n\t\tint num13 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of subjects in each class\");\n\t\tint num14 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the name of the class\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter the number of students\");\n\t\tint num = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num1 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of parents\");\n\t\tint num2 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of admins\");\n\t\tint num3 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num4 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num5 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num6 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num7 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num8 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num9 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num10 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num11 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num12 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num13 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num14 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n\t\tint num15 = sc.nextInt();\n\t\tSystem.out.println(\"Enter the number of teachers\");\n",
        "\tstatic void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"Enter your name\");\n\t\tString name = sc.nextLine();\n\t\tSystem.out.println(\"Enter your age\");\n\t\tint age = sc.nextInt();\n\t\tSystem.out.println(\"Enter your address\");\n\t\tString address = sc.nextLine();\n\t\tSystem.out.println(\"Enter your phone number\");\n\t\tlong phone = sc.nextLong();\n\t\tSystem.out.println(\"Enter your email\");\n\t\tString email = sc.next();\n\t\tSystem.out.println(\"Enter your password\");\n\t\tString password = sc.next();\n\t\tSystem.out.println(\"Enter your username\");\n\t\tString username = sc.next();\n\t\tSystem.out.println(\"Enter your dob\");\n\t\tString dob = sc.next();\n\t\tSystem.out.println(\"Enter your blood group\");\n\t\tString bloodgroup = sc.next();\n\t\tSystem.out.println\n",
        "\tvoid method(){\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the name\");\n\t\tString name=sc.nextLine();\n\t\tSystem.out.println(\"Enter the age\");\n\t\tint age=sc.nextInt();\n\t\tSystem.out.println(\"Enter the address\");\n\t\tString address=sc.nextLine();\n\t\tSystem.out.println(\"Enter the phone number\");\n\t\tlong phone=sc.nextLong();\n\t\tSystem.out.println(\"Enter the email\");\n\t\tString email=sc.next();\n\t\tSystem.out.println(\"Enter the password\");\n\t\tString password=sc.next();\n\t\tSystem.out.println\n",
        "\tvoid method(int i){\n\t\tSystem.out.println(\"int\");\n\t}\n\tpublic\n\tvoid method(String s){\n\t\tSystem.out.println(\"String\");\n\t}\n\tpublic\n\tvoid method(Object o){\n\t\tSystem.out.println(\"Object\");\n\t}\n\tpublic\n\tvoid method(Clazz c){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n",
        "\tvoid method(int i){\n\t\tSystem.out.println(\"int\");\n\t}\n\tpublic\n\tvoid method(String s){\n\t\tSystem.out.println(\"String\");\n\t}\n\tpublic\n\tvoid method(Object o){\n\t\tSystem.out.println(\"Object\");\n\t}\n}\n",
        "\tvoid method(int i){\n\t\tSystem.out.println(i);\n\t}\n}\n"
    ],
    "results": 9
},{
    "id": "755",
    "source": "soSearches",
    "language": "java",
    "query": "how to count frequency of element in array in java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10};\n\t\tint count = 0;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tif(arr[i]==1){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint count = 0;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tif(arr[i]==5){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"frequency of 5 is \"+count);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint[] arr = {1,2,3,4,5,6,7,8,9,10};\n\t\tint count = 0;\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tif(arr[i]==5){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "756",
    "source": "soSearches",
    "language": "java",
    "query": "how to call a function in java for finding simple interset of two users",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=findSimpleInterest(a,b);\n\t\tSystem.out.println(\"Simple interest is \"+c);\n\t}\n\tpublic static int findSimpleInterest(int a,int b){\n\t\tint c=a*b;\n\t\treturn c;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=findSimpleInterest(a,b);\n\t\tSystem.out.println(\"Simple interest is:\"+c);\n\t}\n\tpublic static int findSimpleInterest(int a,int b){\n\t\tint c=a*b;\n\t\treturn c;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=findSimpleInterest(a,b);\n\t\tSystem.out.println(\"Simple interest is \"+c);\n\t}\n\tpublic static int findSimpleInterest(int p,int t){\n\t\tint si=p*t;\n\t\treturn si;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=findSimpleInterest(a,b);\n\t\tSystem.out.println(\"Simple interest is:\"+c);\n\t}\n\tpublic static int findSimpleInterest(int p,int t){\n\t\tint si=p*t;\n\t\treturn si;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=interest(a,b);\n\t\tSystem.out.println(\"Simple interest is:\"+c);\n\t}\n\tpublic static int interest(int a,int b){\n\t\tint c=a*b;\n\t\treturn c;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=interest(a,b);\n\t\tSystem.out.println(\"Simple interest is \"+c);\n\t}\n\tpublic static int interest(int a,int b){\n\t\tint c=a*b;\n\t\treturn c;\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=interest(a,b);\n\t\tSystem.out.println(\"simple interest is\"+c);\n\t}\n\tpublic static int interest(int a,int b){\n\t\tint c=a*b;\n\t\treturn c;\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "757",
    "source": "soSearches",
    "language": "java",
    "query": "how to connect thread to javalabel player",
    "snippets": [
        "\tvoid main(String[] args){\n\t\tJavalabel player = new Javalabel();\n\t\tThread t = new Thread(player);\n\t\tt.start();\n\t}\n}\n",
        "\tvoid play(Javalabel player){\n\t\tplayer.setText(\"Hello World\");\n\t}\n}\n",
        "\tvoid play(String song){\n\t\tSystem.out.println(\"Playing \" + song);\n\t}\n}\n",
        "\tvoid play(String s){\n\t\tSystem.out.println(s);\n\t}\n}\n",
        "\tvoid play(Javalabel player){\n\t\tplayer.setText(\"Hello\");\n\t}\n}\n",
        "\tvoid play(){\n\t\tSystem.out.println(\"play\");\n\t}\n}\n",
        "\tvoid play(){\n\t\tSystem.out.println(\"Playing\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "758",
    "source": "soSearches",
    "language": "java",
    "query": "how to add background text in java to jtextfield",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Hello World\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJTextField textField = new JTextField(\"Hello World\");\n\t\ttextField.setBackground(Color.BLUE);\n\t\tframe.add(textField);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Background Text\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new FlowLayout());\n\t\tJTextField text = new JTextField(\"Enter your name\");\n\t\ttext.setBackground(Color.BLUE);\n\t\ttext.setForeground(Color.WHITE);\n\t\tframe.add(text);\n\t}\n}\n",
        "\tvoid addText(JTextField textField, String text){\n\t\ttextField.setText(text);\n\t}\n}\n",
        "\tvoid addText(JTextField jtf, String text){\n\t\tjtf.setText(text);\n\t}\n}\n",
        "\tvoid addText(JTextField jtf){\n\t\tjtf.setText(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "759",
    "source": "soSearches",
    "language": "java",
    "query": "how to find max , min in subject in java programm",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint a[]={1,2,3,4,5,6,7,8,9,10};\n\t\tint max=a[0];\n\t\tint min=a[0];\n\t\tfor(int i=0;i<a.length;i++){\n\t\t\tif(a[i]>max){\n\t\t\t\tmax=a[i];\n\t\t\t}\n\t\t\tif(a[i]<min){\n\t\t\t\tmin=a[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"max=\"+max);\n\t\tSystem.out.println(\"min=\"+min);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a[]={1,2,3,4,5,6,7,8,9,10};\n\t\tint max=a[0];\n\t\tint min=a[0];\n\t\tfor(int i=0;i<a.length;i++){\n\t\t\tif(a[i]>max){\n\t\t\t\tmax=a[i];\n\t\t\t}\n\t\t\tif(a[i]<min){\n\t\t\t\tmin=a[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"max is \"+max);\n\t\tSystem.out.println(\"min is \"+min);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint a=10;\n\t\tint b=20;\n\t\tint c=30;\n\t\tint d=40;\n\t\tint e=50;\n\t\tint f=60;\n\t\tint g=70;\n\t\tint h=80;\n\t\tint i=90;\n\t\tint j=100;\n\t\tint k=110;\n\t\tint l=120;\n\t\tint m=130;\n\t\tint n=140;\n\t\tint o=150;\n\t\tint p=160;\n\t\tint q=170;\n\t\tint r=180;\n\t\tint s=190;\n\t\tint t=200;\n\t\tint u=210;\n\t\tint v=220;\n\t\tint w=230;\n\t\tint x=240;\n\t\tint y=250;\n\t\tint z=260;\n\t\tint a1=270;\n\t\tint b1=280;\n\t\tint c1=290;\n\t\tint d1=300;\n\t\tint e1=310;\n\t\tint f1=320;\n\t\tint g1=330;\n\t\tint h1=340;\n\t\tint i1=350;\n\t\tint j1=360;\n\t\tint k1=370;\n\t\tint l1=380;\n\t\tint m1=390;\n\t\tint n1=400;\n\t\tint o1=410;\n\t\tint p1=420;\n\t\tint q1=430;\n\t\tint r1=440;\n\t\tint s1=450;\n\t\tint t1=460;\n\t\tint u1=470;\n\t\tint v1=480;\n\t\tint w1=490;\n\t\tint x1=500;\n\t\tint y1=510;\n\t\tint z1=520;\n\t\tint a2=530;\n\t\tint b2=540;\n\t\tint c2=550;\n\t\tint d2=560;\n\t\tint e2=570;\n"
    ],
    "results": 10
},{
    "id": "760",
    "source": "soSearches",
    "language": "java",
    "query": "how to get path of a file java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tString path = Clazz.class.getResource(\"\").getPath();\n\t\tSystem.out.println(path);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tString path = \"C:\\\\Users\\\\user\\\\Desktop\\\\test.txt\";\n\t\tSystem.out.println(path);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "761",
    "source": "soSearches",
    "language": "java",
    "query": "java:how to getfileencoding",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(System.getProperty(\"file.encoding\"));\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "762",
    "source": "soSearches",
    "language": "java",
    "query": "how to get factors of a number java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tint num=10;\n\t\tint i=1;\n\t\twhile(i<=num){\n\t\t\tif(num%i==0){\n\t\t\t\tSystem.out.println(i);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint n=10;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(n%i==0){\n\t\t\t\tSystem.out.println(i);\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint num=12;\n\t\tint i=1;\n\t\twhile(i<=num){\n\t\t\tif(num%i==0){\n\t\t\t\tSystem.out.println(i);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint num=Integer.parseInt(args[0]);\n\t\tint i=1;\n\t\twhile(i<=num){\n\t\t\tif(num%i==0){\n\t\t\t\tSystem.out.println(i);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint n=Integer.parseInt(args[0]);\n\t\tint i=1;\n\t\twhile(i<=n){\n\t\t\tif(n%i==0){\n\t\t\t\tSystem.out.println(i);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tint n = Integer.parseInt(args[0]);\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tif(n % i == 0){\n\t\t\t\tSystem.out.println(i);\n\t\t\t}\n\t\t}\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "763",
    "source": "soSearches",
    "language": "java",
    "query": "how to make a calculator using java swing",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,4));\n\t\tframe.add(new JButton(\"1\"));\n\t\tframe.add(new JButton(\"2\"));\n\t\tframe.add(new JButton(\"3\"));\n\t\tframe.add(new JButton(\"4\"));\n\t\tframe.add(new JButton(\"5\"));\n\t\tframe.add(new JButton(\"6\"));\n\t\tframe.add(new JButton(\"7\"));\n\t\tframe.add(new JButton(\"8\"));\n\t\tframe.add(new JButton(\"9\"));\n\t\tframe.add(new JButton(\"0\"));\n\t\tframe.add(new JButton(\"+\"));\n\t\tframe.add(new JButton(\"-\"));\n\t\tframe.add(new JButton(\"*\"));\n\t\tframe.add(new JButton(\"/\"));\n\t\tframe.add(new JButton(\"=\"));\n\t\tframe.add(new JButton(\"C\"));\n\t\tframe.add(new JButton(\".\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(400,400);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,4));\n\t\tframe.setResizable(false);\n\t\tJButton[] buttons = new JButton[16];\n\t\tfor(int i=0;i<16;i++){\n\t\t\tbuttons[i] = new JButton();\n\t\t\tframe.add(buttons[i]);\n\t\t}\n\t\tbuttons[0].setText(\"7\");\n\t\tbuttons[1].setText(\"8\");\n\t\tbuttons[2].setText(\"9\");\n\t\tbuttons[3].setText(\"/\");\n\t\tbuttons[4].setText(\"4\");\n\t\tbuttons[5].setText(\"5\");\n\t\tbuttons[6].setText(\"6\");\n\t\tbuttons[7].setText(\"*\");\n\t\tbuttons[8].setText(\"1\");\n\t\tbuttons[9].setText(\"2\");\n\t\tbuttons[10].setText(\"3\");\n\t\tbuttons[11].setText(\"-\");\n\t\tbuttons[12].setText(\"0\");\n\t\tbuttons[13].setText(\".\");\n\t\tbuttons[14].setText(\"=\");\n\t\tbuttons[15].setText(\"+\");\n\t\tJTextField text = new JTextField();\n\t\tframe.add(text);\n\t\ttext.setHorizontalAlignment(JTextField.RIGHT);\n\t\ttext.setEditable(false);\n\t\ttext.setFont(new Font(\"Arial\",Font.BOLD,20));\n\t\ttext.setText(\"0\");\n\t\tfor(int i=0;i<16;i++){\n\t\t\tbuttons[i].addActionListener(new ActionListener(){\n\t\t\t\tpublic void actionPerformed(ActionEvent e){\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,4));\n\t\tframe.add(new JButton(\"1\"));\n\t\tframe.add(new JButton(\"2\"));\n\t\tframe.add(new JButton(\"3\"));\n\t\tframe.add(new JButton(\"+\"));\n\t\tframe.add(new JButton(\"4\"));\n\t\tframe.add(new JButton(\"5\"));\n\t\tframe.add(new JButton(\"6\"));\n\t\tframe.add(new JButton(\"-\"));\n\t\tframe.add(new JButton(\"7\"));\n\t\tframe.add(new JButton(\"8\"));\n\t\tframe.add(new JButton(\"9\"));\n\t\tframe.add(new JButton(\"*\"));\n\t\tframe.add(new JButton(\"0\"));\n\t\tframe.add(new JButton(\"=\"));\n\t\tframe.add(new JButton(\"/\"));\n\t\tframe.add(new JButton(\"C\"));\n\t\tframe.add(new JButton(\".\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tJPanel panel = new JPanel();\n\t\tframe.add(panel);\n\t\tJTextField text = new JTextField(20);\n\t\tpanel.add(text);\n\t\tJButton button1 = new JButton(\"1\");\n\t\tpanel.add(button1);\n\t\tJButton button2 = new JButton(\"2\");\n\t\tpanel.add(button2);\n\t\tJButton button3 = new JButton(\"3\");\n\t\tpanel.add(button3);\n\t\tJButton button4 = new JButton(\"4\");\n\t\tpanel.add(button4);\n\t\tJButton button5 = new JButton(\"5\");\n\t\tpanel.add(button5);\n\t\tJButton button6 = new JButton(\"6\");\n\t\tpanel.add(button6);\n\t\tJButton button7 = new JButton(\"7\");\n\t\tpanel.add(button7);\n\t\tJButton button8 = new JButton(\"8\");\n\t\tpanel.add(button8);\n\t\tJButton button9 = new JButton(\"9\");\n\t\tpanel.add(button9);\n\t\tJButton button0 = new JButton(\"0\");\n\t\tpanel.add(button0);\n\t\tJButton buttonadd = new JButton(\"+\");\n\t\tpanel.add(buttonadd);\n\t\tJButton buttonsub = new JButton(\"-\");\n\t\tpanel.add(buttonsub);\n\t\tJButton buttonmul = new JButton(\"*\");\n\t\tpanel.add(buttonmul);\n\t\tJButton buttondiv = new JButton(\"/\");\n\t\tpanel.add(buttondiv);\n\t\tJButton buttonequals = new JButton(\"=\");\n\t\tpanel.add(buttonequals);\n\t\tJButton buttondot = new JButton(\".\");\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,4));\n\t\tJButton button1 = new JButton(\"1\");\n\t\tJButton button2 = new JButton(\"2\");\n\t\tJButton button3 = new JButton(\"3\");\n\t\tJButton button4 = new JButton(\"4\");\n\t\tJButton button5 = new JButton(\"5\");\n\t\tJButton button6 = new JButton(\"6\");\n\t\tJButton button7 = new JButton(\"7\");\n\t\tJButton button8 = new JButton(\"8\");\n\t\tJButton button9 = new JButton(\"9\");\n\t\tJButton button0 = new JButton(\"0\");\n\t\tJButton buttonadd = new JButton(\"+\");\n\t\tJButton buttonsub = new JButton(\"-\");\n\t\tJButton buttonmul = new JButton(\"*\");\n\t\tJButton buttondiv = new JButton(\"/\");\n\t\tJButton buttonequal = new JButton(\"=\");\n\t\tJButton buttondot = new JButton(\".\");\n\t\tJButton buttonexp = new JButton(\"^\");\n\t\tJButton buttonexp2 = new JButton(\"^2\");\n\t\tJButton buttonexp3 = new JButton(\"^3\");\n\t\tJButton buttonexp4 = new JButton(\"^4\");\n\t\tJButton buttonexp5 = new JButton(\"^5\");\n\t\tJButton buttonexp6 = new JButton(\"^6\");\n\t\tJButton buttonexp7 = new JButton(\"^7\");\n\t\tJButton buttonexp8 = new JButton(\"^8\");\n\t\tJButton buttonexp9 = new JButton(\"^9\");\n\t\tJButton buttonexp10 = new JButton(\"^10\");\n\t\tJButton buttonexp11 = new JButton(\"^11\");\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,4));\n\t\tframe.add(new JButton(\"1\"));\n\t\tframe.add(new JButton(\"2\"));\n\t\tframe.add(new JButton(\"3\"));\n\t\tframe.add(new JButton(\"+\"));\n\t\tframe.add(new JButton(\"4\"));\n\t\tframe.add(new JButton(\"5\"));\n\t\tframe.add(new JButton(\"6\"));\n\t\tframe.add(new JButton(\"-\"));\n\t\tframe.add(new JButton(\"7\"));\n\t\tframe.add(new JButton(\"8\"));\n\t\tframe.add(new JButton(\"9\"));\n\t\tframe.add(new JButton(\"*\"));\n\t\tframe.add(new JButton(\"0\"));\n\t\tframe.add(new JButton(\"=\"));\n\t\tframe.add(new JButton(\"/\"));\n\t\tframe.add(new JButton(\".\"));\n\t\tframe.add(new JButton(\"C\"));\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,4));\n\t\tframe.add(new JButton(\"1\"));\n\t\tframe.add(new JButton(\"2\"));\n\t\tframe.add(new JButton(\"3\"));\n\t\tframe.add(new JButton(\"+\"));\n\t\tframe.add(new JButton(\"4\"));\n\t\tframe.add(new JButton(\"5\"));\n\t\tframe.add(new JButton(\"6\"));\n\t\tframe.add(new JButton(\"-\"));\n\t\tframe.add(new JButton(\"7\"));\n\t\tframe.add(new JButton(\"8\"));\n\t\tframe.add(new JButton(\"9\"));\n\t\tframe.add(new JButton(\"*\"));\n\t\tframe.add(new JButton(\".\"));\n\t\tframe.add(new JButton(\"0\"));\n\t\tframe.add(new JButton(\"=\"));\n\t\tframe.add(new JButton(\"/\"));\n\t\tframe.add(new JButton(\"C\"));\n\t\tframe.add(new JButton(\"CE\"));\n\t\tframe.add(new JButton(\"<-\"));\n\t\tframe.add(new JButton(\"sqrt\"));\n\t\tframe.add(new JButton(\"%\"));\n\t\tframe.add(new JButton(\"1/x\"));\n\t\tframe.add(new JButton(\"x^2\"));\n\t\tframe.add(new JButton(\"x^3\"));\n\t\tframe.add(new JButton(\"x^y\"));\n\t\tframe.add(new JButton(\"x^(1/y)\"));\n\t\tframe.add(new JButton(\"log\"));\n\t\tframe.add(new JButton(\"ln\"));\n\t\tframe.add(new JButton\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,4));\n\t\tJButton b1 = new JButton(\"1\");\n\t\tJButton b2 = new JButton(\"2\");\n\t\tJButton b3 = new JButton(\"3\");\n\t\tJButton b4 = new JButton(\"4\");\n\t\tJButton b5 = new JButton(\"5\");\n\t\tJButton b6 = new JButton(\"6\");\n\t\tJButton b7 = new JButton(\"7\");\n\t\tJButton b8 = new JButton(\"8\");\n\t\tJButton b9 = new JButton(\"9\");\n\t\tJButton b0 = new JButton(\"0\");\n\t\tJButton bplus = new JButton(\"+\");\n\t\tJButton bminus = new JButton(\"-\");\n\t\tJButton btimes = new JButton(\"*\");\n\t\tJButton bdivide = new JButton(\"/\");\n\t\tJButton bequals = new JButton(\"=\");\n\t\tJButton bclear = new JButton(\"clear\");\n\t\tJButton bdot = new JButton(\".\");\n\t\tJTextField text = new JTextField();\n\t\tframe.add(text);\n\t\tframe.add(b1);\n\t\tframe.add(b2);\n\t\tframe.add(b3);\n\t\tframe.add(b4);\n\t\tframe.add(b5);\n\t\tframe.add(b6);\n\t\tframe.add(b7);\n\t\tframe.add(b8);\n\t\tframe.add(b9);\n\t\tframe.add(b0);\n\t\tframe.add(bplus);\n\t\tframe.add(bminus);\n\t\tframe.add(btimes);\n\t\tframe.add(bdivide);\n\t\tframe.add(bequals);\n",
        "\tstatic void main(String[] args){\n\t\tJFrame frame = new JFrame(\"Calculator\");\n\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tframe.setSize(300,300);\n\t\tframe.setVisible(true);\n\t\tframe.setLayout(new GridLayout(4,4));\n\t\tframe.add(new JButton(\"1\"));\n\t\tframe.add(new JButton(\"2\"));\n\t\tframe.add(new JButton(\"3\"));\n\t\tframe.add(new JButton(\"4\"));\n\t\tframe.add(new JButton(\"5\"));\n\t\tframe.add(new JButton(\"6\"));\n\t\tframe.add(new JButton(\"7\"));\n\t\tframe.add(new JButton(\"8\"));\n\t\tframe.add(new JButton(\"9\"));\n\t\tframe.add(new JButton(\"0\"));\n\t\tframe.add(new JButton(\"+\"));\n\t\tframe.add(new JButton(\"-\"));\n\t\tframe.add(new JButton(\"*\"));\n\t\tframe.add(new JButton(\"/\"));\n\t\tframe.add(new JButton(\"=\"));\n\t\tframe.add(new JButton(\"C\"));\n\t\tframe.add(new JButton(\".\"));\n\t\tframe.add(new JButton(\"<-\"));\n\t\tframe.add(new JButton(\"(\"));\n\t\tframe.add(new JButton(\")\"));\n\t\tframe.add(new JButton(\"%\"));\n\t\tframe.add(new JButton(\"^\"));\n\t\tframe.add(new JButton(\"!\"));\n\t\tframe.add(new JButton(\"sqrt\"));\n\t\tframe.add(new JButton(\"sin\"));\n\t\tframe.add(new JButton(\"cos\"));\n\t\tframe.add(new JButton(\"tan\"));\n\t\tframe.add(new JButton(\"log\"));\n\t\tframe.add(new JButton(\"ln\"));\n\t\tframe.add(new JButton(\"\n"
    ],
    "results": 10
},{
    "id": "764",
    "source": "soSearches",
    "language": "java",
    "query": "how to create a random number generator using java",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint randomNumber = r.nextInt(10);\n\t\tSystem.out.println(randomNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint randomNumber = r.nextInt(100);\n\t\tSystem.out.println(randomNumber);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint num = r.nextInt(100);\n\t\tSystem.out.println(num);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint num = r.nextInt(10);\n\t\tSystem.out.println(num);\n\t}\n}\n",
        "\tstatic void main(String[] args){\n\t\tRandom r = new Random();\n\t\tint randomNumber = r.nextInt(100);\n\t\tSystem.out.println(\"Random number is: \" + randomNumber);\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "765",
    "source": "soSearches",
    "language": "java",
    "query": "java how to know if an object is in a lis",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add\n",
        "\tvoid method(){\n\t\tList<String> list = new ArrayList<String>();\n\t\tlist.add(\"a\");\n\t\tlist.add(\"b\");\n\t\tlist.add(\"c\");\n\t\tlist.add(\"d\");\n\t\tlist.add(\"e\");\n\t\tlist.add(\"f\");\n\t\tlist.add(\"g\");\n\t\tlist.add(\"h\");\n\t\tlist.add(\"i\");\n\t\tlist.add(\"j\");\n\t\tlist.add(\"k\");\n\t\tlist.add(\"l\");\n\t\tlist.add(\"m\");\n\t\tlist.add(\"n\");\n\t\tlist.add(\"o\");\n\t\tlist.add(\"p\");\n\t\tlist.add(\"q\");\n\t\tlist.add(\"r\");\n\t\tlist.add(\"s\");\n\t\tlist.add(\"t\");\n\t\tlist.add(\"u\");\n\t\tlist.add(\"v\");\n\t\tlist.add(\"w\");\n\t\tlist.add(\"x\");\n\t\tlist.add(\"y\");\n\t\tlist.add(\"z\");\n\t\tlist.add(\"A\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"C\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"F\");\n\t\tlist.add(\"G\");\n\t\tlist.add(\"H\");\n\t\tlist.add(\"I\");\n\t\tlist.add(\"J\");\n\t\tlist.add(\"K\");\n\t\tlist.add(\"L\");\n\t\tlist.add(\"M\");\n\t\tlist.add(\"N\");\n\t\tlist.add(\"O\");\n\t\tlist.add(\"P\");\n\t\tlist.add(\"Q\");\n\t\tlist.add(\"R\");\n\t\tlist.add(\"S\");\n\t\tlist.add(\"T\");\n\t\tlist.add(\"U\");\n\t\tlist.add(\"V\");\n\t\tlist.add(\"W\");\n\t\tlist.add(\"X\");\n\t\tlist.add(\"Y\");\n\t\tlist.add(\"Z\");\n\t\tlist.add(\"0\");\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Clazz\");\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "766",
    "source": "soSearches",
    "language": "java",
    "query": "how to add a game in html from javascripot",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tClazz(){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n",
        "\tvoid addGame(String game){\n\t\tSystem.out.println(\"Adding game: \" + game);\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n\tpublic void addGame(String game){\n\t\t\n\t}\n}\n",
        "\tvoid addGame(String game){\n\t\tSystem.out.println(\"adding game: \" + game);\n\t}\n}\n",
        "\tvoid addGame(String name, String developer, String publisher, String releaseDate, String genre, String platform, String rating, String description){\n\t\tString sql = \"INSERT INTO games (name, developer, publisher, releaseDate, genre, platform, rating, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n\t\ttry{\n\t\t\tPreparedStatement pst = conn.prepareStatement(sql);\n\t\t\tpst.setString(1, name);\n\t\t\tpst.setString(2, developer);\n\t\t\tpst.setString(3, publisher);\n\t\t\tpst.setString(4, releaseDate);\n\t\t\tpst.setString(5, genre);\n\t\t\tpst.setString(6, platform);\n\t\t\tpst.setString(7, rating);\n\t\t\tpst.setString(8, description);\n\t\t\tpst.executeUpdate();\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n",
        "\tClazz(){\n\t\t\n\t}\n}\n"
    ],
    "results": 10
},{
    "id": "767",
    "source": "soSearches",
    "language": "java",
    "query": "how to uninstall java 11 in mac",
    "snippets": [
        "\tstatic void main(String[] args){\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n"
    ],
    "results": 10
}
]